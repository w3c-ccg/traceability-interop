{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "068ffc3a-371a-49ef-bf43-d871896df653",
        "name": "Clear Cache",
        "item": [
          {
            "id": "44f43ead-d246-461e-9008-b988eb119c26",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66dd0318-a5b2-4176-864e-d6932d11570d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f433448-3cf7-4a8b-ae34-0c705cd8e0ba"
                }
              }
            ]
          },
          {
            "id": "4e44708a-6197-41e6-aa83-e8eb033a5e42",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd00f46d-cf2a-4e12-9959-41bd39bf57a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc7b707d-1f2d-4644-83e4-fe562c0e0c07"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a6f6ba46-c90f-4950-89eb-46755aca9468",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "031a8473-acbd-4415-871e-4ca69e073862",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32521f1a-3239-4f5c-853e-d0b8ba3e6cb7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad8be3ae-2579-44cd-bbe2-9a5c6aeca659",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1fb8952-2f2a-46d1-b67a-9229000162a8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50590252-46bc-45cd-8428-cc3d84c7305a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56bed6db-1091-45b8-8030-92faafc12c29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00de5792-fbf5-4df1-85bc-cc4f8fc45556",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03dd4fd8-da28-46bd-82dd-2a2b36ba43e8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52502be2-e295-4b35-90c7-2ad65a7f904a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7524d867-d38c-4c0c-8a99-44ba3701336b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9318eda8-5e27-4ae8-ba47-1abaea140044",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d52f86d-6c14-451a-8f06-14b1fc611e47"
            }
          }
        ]
      },
      {
        "id": "77b1c51c-3366-4e15-a444-c05fd1630375",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2abcf9e9-da1c-49e0-aa5d-7edf746340dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da0c2697-46eb-4560-bf77-5752cbfe28eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "499f4823-6fc1-4a2b-bae7-dcdb3ea59d1f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c455e9-5b2c-4cda-838b-74755059e077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3f88d61-893e-41de-80e4-93f8f0220aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495a9d23-40ed-401f-9751-06c39fc1abcd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e4558-260f-455f-8161-4054adf39bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43e17d92-e1f1-48db-9166-b050dacb9c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12aa52d8-f990-44d1-832f-c07df4439a68",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1e2c4a-a63f-4f69-be0d-300e63415a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd61800c-c506-4673-908b-458e647254fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "554f0117-f3ba-4881-bf00-fd90dff735f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d43f2811-219d-4ba7-a56b-1952a33040b4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc280b3-9451-4b65-b752-ad5ce8f34d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45aecb61-d1eb-4664-b4fb-12c00b2ecc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab49dccc-289d-429b-b88d-348089ac5819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bb4679-ed4d-4958-b6a1-a1ace3add051"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ced226c6-636c-4f79-ab76-a88abe307c71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa60e485-901e-42f3-adf9-bc21ccd4e2f7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3009aa4c-6273-4c2f-b9a6-9f1b14f4e8bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3b8cf625-d7b4-4706-b86d-4ab65f050a1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13c48831-2f4d-43cf-bc83-887f982f886b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "044a22a8-6d89-4818-a9d9-e0d5be18d0dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93d986cc-bbe5-48a5-abc1-4a9f6a5d3a46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d98131e9-af36-4fc8-8849-a95a6a95c582"
            }
          }
        ]
      },
      {
        "id": "861e199c-7a7c-4399-b24b-8113e5b5450c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ddb444ed-e2b9-4f54-bbfd-ca637d0e4499",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ba011bd-2053-4302-aabe-8b302d1dba8b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fa362e8c-a29b-40af-9270-3f505fbc1cd8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7bf749-1dcf-4c2a-bc87-46475d373c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0741c9-a5df-46bd-8d88-b7c96e8c8e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d429c7d6-5f22-4226-ac44-726640e57ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56cf4299-2daa-43a0-a367-3cf195f01bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f1e12b-b724-4a7e-b837-daf4273afc9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f9b75c-0732-46e0-91c6-f7e7a8d0f760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf2d587-f1c3-4803-9668-c30e5586ede8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3046f6fe-657d-4a35-9a26-464ccc53c343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11ffcd1e-c9de-49fb-9927-eaddfcdd3d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216fd6b2-4fb3-4301-937a-c4968dd98a60",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baf40f3-5bbc-4e59-98b5-4a7d85063359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d0ff5f-576d-4584-8112-0bbc10241dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c7fd03-cf00-4e43-b844-72f78eab31a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cfff4e4-df24-48a9-9f41-cb5163ff5115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77ddab7-f535-4f6c-944d-26db35aa4804",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90610e4-8f35-4b27-b4a2-acd8b928b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4dc9f1-dbb0-4696-9705-0536465c556c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eacbbc-edc4-46ba-8fa1-c9837c906f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00196f62-b336-4fc2-b409-bcb247c8a955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253ae583-279c-462a-b5d4-8e76cc8b8bcd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee25dca6-f8b1-4912-a885-57aa4329ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c33111-6a59-4fdb-b157-275587ea4ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b9879-2067-4e6d-839d-1499d5e8ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecfd21ae-5f47-4aa2-b0bd-e4fdde27fb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a4e1cc-93bd-4c7b-8c66-d2f7228cbe5e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3201fc3-7e3e-457d-ad6f-be3d832b350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdfcb89-aee4-4e4e-a650-0abfba2713a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0c608d-f84f-4915-8bc6-b1a366bc43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39d0b9bc-46c8-4bef-b0a7-881f6b849e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a418d23-bbe0-48d5-8f84-44702ba874f7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df51b7c9-d88e-4673-ab74-42eb791a16c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3d67bc-f171-4b48-9952-af3633457b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc182b-edbb-4b26-a952-8c2a4d2024df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0fc19be-9525-46f4-ba48-094ba9ccc304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95b35f5-aaa7-4aa4-ba33-2aa39a477cba",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d3dd57-1313-4151-b7d6-e8bcc311fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5f2ea9-6c38-47ca-a99b-2d233e46130d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188db581-91a6-4076-be8e-b980906e34ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f16979a0-4343-4b33-8558-0d8c9ac4df6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc25220-8c1a-445f-9685-d4298e8ad8a6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62410bf-b538-4b88-8c5b-4ecc809cd0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d903f7d-00d6-400e-98ae-2dbeeb32f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b454f3-77d8-40e4-adbb-678c301f395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b32094e-3bbc-4690-bef9-9365c5e13631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9970ba-b460-4eed-9e59-e599bbc6d986",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7ed7a0-b1fa-455c-ae26-a6d36f5ffbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add7c4e5-acdf-4921-b405-52df45545c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4158e3d-743c-4ae7-852f-be341b34d9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aa2e62a-27c9-4046-a66f-d91bf22fa2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d0ae22-6261-4707-926b-05c840f23d68",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560a2e29-68e4-4b27-b26f-222931c47fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284cc52e-eb6f-441f-b364-9e4da39c928c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3807cd-197c-4bb3-8300-01b48badb71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4de20eff-d49e-4e5e-af19-83c60a812d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bce73d-5723-4d76-8512-a0df4d980e8a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4601833-28ed-482b-a8b8-0c10c52eb7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0434ebff-b449-4ff3-8b84-41ca9bb67bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb59ac2-42d4-4df9-ab60-c065ef82a252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "104662c7-51b6-4a87-9508-bdc110903358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6cf7e7-df6f-408c-9856-ef88e07e4272",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077b7376-9542-4d06-88f6-8045b7fafeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd5dbcd-98b6-4b72-b37b-54bd26affc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959a26fe-418e-4d9a-a7bb-6f5a7cfd59b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11426ed-d664-4b0b-8022-a20966c67ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5c03fd-bb28-4e47-809c-ed17398b87fc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c26f788-383d-49bb-ae2e-b011994c13af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f4b395-644b-49e4-864c-b5db93d85c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710813d3-f32b-4290-bff5-07760e82a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71fe1d1f-ead4-49c1-83ea-41a75f4bc963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f5994-6624-4671-a9ba-2e71ceb9d5ba",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6a9d1a-6a8d-48cd-809a-918d6a9eed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08758550-11c9-47a2-946f-a97935055ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60e1319-0e06-432f-8212-5be5f8e69ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b432c8f-ba2f-4ba8-91d3-c1817e9edfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bd23f7-df82-41ff-8685-4f988ebbd3c8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f4c388-13c6-42bb-b804-de4ed29dd66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846c3a38-c7e6-44f6-bec6-8562b38a87da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e31b15-27eb-4eac-ba6d-8b70a8aa1350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "041640df-0571-48bc-bc76-091ff6e0ea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cca272-681b-4882-9640-615c8e20020c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e5e701-f190-404a-8c8c-99d3809909c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c415ed-3e86-457e-82b2-b4f3ac38458f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdd53fd-1826-4d0f-b779-a8be3f1985da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce7b66fb-5781-423c-a6e2-1d573b67b5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b107116-7598-4642-944d-7e8ad0486919",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82745bd-694c-40c2-b1f8-9eb240cf0282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc01206b-4100-4d3f-8501-2e7941160a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce24517f-772e-44cb-aae1-860f8e4708c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f43dcb7d-ae9f-46dc-acba-4934a4f73aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71809062-0386-49da-a6d3-d8590c805eb3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df77709a-c371-4890-b0a0-85f43965a104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b85ac99-f7de-4e30-8235-ca5523f428ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3c51cb-f366-442e-98f6-1a945820f4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f5a64e-eed6-436a-a6e9-107b7d346450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e40c1c-a873-4fd9-94ee-4786daef8ca2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19064e24-7f3a-49bf-9a9d-73f66e9a9c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317f6b50-133f-4b01-a9b7-18157b32e18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f85bca-a137-4a48-a162-195d215a91c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05d14929-8715-4db2-8f93-4ad4cbad02fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebf68ec-f422-460f-b880-9c65ee3a3b0f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ebd1e1-d2cf-48d1-82fb-553a647dcd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ed0bf0-a9a4-4651-9d17-d9ee9bea7052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1999d0ff-9217-4b91-ba9f-95231f7e3581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f98547da-eb42-4334-a801-7883a59b5eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dddd1be-cafd-4536-895f-28c3816d1baf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db1fc86-fb7a-4426-ad89-132ffc914515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26955918-08b6-4cbc-8dee-75489e6c6032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea843ae-e1cc-4837-bc91-3e1c2e17fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33e57127-7a10-4464-8d9c-750c78bd16e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd224d6-6767-4099-8d1c-6b5f4919fe60",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f0b1db-348f-480c-8c06-b74d572868ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ec04ab-b167-4225-ac73-283daa547f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202bd70b-0e81-49fd-97cc-14df6e341a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b00c96-bca6-48cb-90be-b27b20c223fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf67b1a-3514-4cef-8e58-9c05966e9aa4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1554248-1f9a-492a-8325-9994d7d6ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff5881b-0653-4c16-9806-70da5e5efddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e45d54-9e7a-4148-a1a7-76be305c5667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "54cae972-2ece-4d12-88a1-d49f0d3b9c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8b5321-ddc9-4209-a22b-88d2bccb475e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80f1924-ba9b-47a2-90c9-0a41a3af5ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bd2a2d-6970-4143-98c4-97342514a7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533358d3-0f6b-46af-8352-f27e34a6e880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0813fa0e-af77-4b72-b871-b2a3109b1376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4453e72-6b83-4eea-9047-6cdbac408017",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0268723-5af6-4048-a070-7d8e71389775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82ea3f2-fdf8-4280-99ca-ca154b527e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732268ab-e43c-4e4c-b1f9-a7c74b41f367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c2a47e-0f23-4e7c-ab47-7888859f839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427515de-8287-4a41-bc86-d81d1962482a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd4fd5c-701f-441f-aad4-818816c1776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dd3004-10d7-4d5e-91cd-fb09706af0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8303e323-329a-43e1-b342-7dd0b1d6f081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c790182e-ba81-45b5-a9a7-0766f4855a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6703346-8e24-4bde-92cb-b046b916d2be",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fed7d6-d8b7-4e6b-ad3c-0c36dd16e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94547e4-1db1-4fe7-9653-907fa058f7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ef7d46-f922-428c-96a4-92672a2483d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34edc100-c78d-42ad-bccb-7616caec22ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1509faf2-1d63-4251-ace9-d24350d91279",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bfdce1-0485-4711-ab31-0f7f7397d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749c0ba2-af97-4b85-8159-07fb5748fb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475542f5-c0ed-4456-8b32-18d133e27269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "303e5c48-500e-44f5-99c4-b8124b0fcb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b289a4-019f-4001-9fd3-fd163e3a41a4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f235ee-8029-4c32-a288-f93d099c2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dce5a7-7f91-4e23-b789-7cf5154dcbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6024211f-18f3-401f-a3a1-d96c1e473cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3777d51d-76a3-4c71-9fc5-86e5c95a3109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5845ffbd-0535-4c07-9057-9b59c719d14c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc2f5c7-6d73-4eab-a3b8-83a22639fcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef52a3cc-eb9c-4407-ba8b-47b4b236d768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b5fc4b-59b8-494c-8646-d7373c5c7cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecf9312-869e-4763-b105-852c179c6d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca98ad9-f4bd-47ba-9411-3a499a8705c4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec00866-144b-4542-befd-8dff543d8401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857266fd-ada3-4afb-93d1-6002b637774a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a796c126-3ad7-490f-a9c8-b345a5df3636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef596634-5dfc-4dce-b5e2-320e2be6cf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ce18f5-f365-4bed-85df-b710f6cd660d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ab898f-40f1-4198-a772-5a908252906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312b3b07-8d5f-49f1-a82c-0cd1038b0732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0f41f5-ef67-48c0-abcd-ebedfef011d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de145286-d2c0-4e50-b0ef-29f3c1375a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18a897d-eeb3-4327-972e-084aa2d65cd4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09bec74-6f7d-4c9b-b42b-9607dff40635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b28a4c-d1ac-4e41-b8ba-300fce8d006f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab49f13-5bdc-49e6-b40e-f085ff3f5d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40563c22-cb72-4304-b08a-92ce95f32267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59202ec7-359e-47da-80c3-b0913d1cdec2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5913022-fd42-4b04-99e8-881ab1cc1b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b982063e-e7fb-403b-a93b-4bee67b3b86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7192dcf-1cb0-4ec9-af6f-0636ff72ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "715f4e6f-a60c-44f3-9f01-a30b296c41ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885f8900-254b-44e9-b093-f5bc3c3cef3d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df83292-e088-4fd8-91ee-af802a39a017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cc1a34c-b274-4afe-9c02-d7a53d0f02d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85a5c25-3161-40ec-97fc-cc8dd73f8ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c31afab-c651-4b55-b036-299d76f71428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e1db1b-2a88-4099-b64d-2618c5c428b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b243218c-2cf1-47b3-bda9-1a086efbc74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47a25e5-746d-4e89-981e-2173bae08efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b25e77-5161-446d-a1e8-584dbbce06c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4f70b1-93f8-4bdf-a61a-570f5cc674e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9677f8a-1186-4b50-8a9f-881db80e4e70",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3613786-199e-4429-af07-f21ff93f32a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c870a8-7243-4d49-bde9-74677c8f2743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30e3052-dfae-42a2-8fa2-082f3af53eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55c0df2-e467-41ea-aa44-5e73ed8ddf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe2971-4562-44cd-9608-24e65e34d159",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf12dff-330b-42ab-b944-170730359e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7af226-518c-40c2-b960-011e764306ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5e7dac-be17-4987-b507-c60f83f05ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2c197a-b39b-47d0-9d6d-b62a4a3f6417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86e9136-14e3-4ade-bc3b-20117ffd0787",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8512f34-bef3-4f3b-a6c3-fc90b711dc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc07450b-7028-418e-a186-7e8cb893f4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224510d3-9fbb-40b8-8d9b-fc1070682e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21a114bc-f011-462c-825e-b76bca7b272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da59b8b-6608-4b45-a04e-92f1685ff18b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b20c7-1c04-42cd-ac3b-19daa764d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e0f376-964e-4cfc-addc-1ddf2efeb0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f281156a-22f1-4c8e-aa89-85830bfbe17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6971c81c-cd26-4dd8-90f7-283181e13eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe09448-b8c3-4f47-8f63-d5c926c569bb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd3c553-bf86-4fd4-8fae-483e66b8a8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf83cf2-6a93-48f8-8d71-f9510cf9d963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2f6775-7024-4154-a973-f8ea5584e6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "036ce0b5-de13-4d2c-a797-0802548bc4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f39ec8a-ea23-4f09-bedb-eb670ce12e84",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8258f13-29d3-43fa-8a10-711ba53f8b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f65de28-faff-428b-93c1-c330349247a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d14efc1-22c5-4300-b656-a61bbf7a3857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8335a76e-38cc-4938-b04c-fb32aa733fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ea43c6-c57f-45c6-a676-2bde733023ec",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a52edd-8db5-498b-8376-007f6d99c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73d7992-5866-471e-8b03-c7ccd5ef73c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c6ddaa-59c0-4d1c-bb6d-4adab97e307a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f455575-d0db-452c-8041-a4c7fe2fce5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9b88c8-a3b8-4018-8d52-8a15c34b3042",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f27352-5416-447d-b0ad-5bbc3c92f397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbb2bae-0dfd-4ca6-8220-69cf7a9ce508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9992d2cc-f4ae-42d3-b173-e698becd4609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6c3b20-0896-4f9c-94c9-21356a7cc5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49ac0f3-8ce7-44b2-b0ff-8f823504482f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9e2d18-a081-4f75-99cf-00d367d3b65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a401fe5-fb0f-4890-98bb-14faa1904c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76650846-de35-4e15-aad5-eb4b5802c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a39405-546e-43bc-9a2e-7fa8ef2a505f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f99c97-bfe4-4f4d-9e51-2174e8ecadd5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e01b38d-3535-46b5-8d68-4055ac31e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7175def1-6035-44f0-9b24-66cb530a739c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6eac54-a58f-4778-af57-aa740f900898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5051540-1dbb-4f2b-9ade-a1c58ad7bbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144dc8b2-6507-4cba-808f-3a9f51885b18",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f2f97-9b9b-456e-a258-22fddb8590e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206fa9ac-1249-49cf-814e-f31c82f53170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358dacf0-2038-4b61-9375-764a091e433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b98d615-1244-4ab3-b2df-cd6829c8987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453db036-966e-4125-9895-ef9fd0fb492b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadd94d5-196d-4a97-89ae-4a6c2068d117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51f2dee-5ad0-49d1-9586-2acc2edd82dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cac52c-9d79-4d4d-878a-e56c6b2cdba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e830825-fa4a-471f-bb6d-3ee2ddd4337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deed6b4b-ea26-4b34-a5d1-6b4c0106444e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c005c6ea-66da-4c61-abba-65714a401490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f4b658-dc6e-4b06-9e71-fedf69a66513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a525797a-5cab-4af8-8ac1-b1a1ab89af20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "822a1efe-4588-4174-84a7-04990c4d630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd1e0ad-d647-4722-a7b6-b788af040361",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a72ea0a-09ae-40c8-8cfa-5354240785ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dcb792-51f4-471c-abb8-8bea34b1a44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cec2714-11f8-4fb8-80e7-e283e73e4d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab86eb1-1ef0-4385-a066-1993970f1105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67618861-a8b3-4f41-b7a1-171dcc0b11d8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80df9ef-2937-4934-a939-9ca60e2e7d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df52f5c-1923-4c8a-b9cf-237af924514a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cc5c58-c265-4066-9860-9ed7ee7cb6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45fc3840-ad93-48f8-ac75-d8adc215d400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd297f2-c913-41c5-aaf4-fb7a41801f06",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b30079-9dc2-4dfc-81e4-4e34c3fd519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848852cc-230d-4790-8f0d-664d36630386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddc3f4b-fc9a-475e-b04c-895591628d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f41899-672b-409e-867d-8433c0d37a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf2f467-f81d-4e13-b1e3-603c2c0e585b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1e20e4-8317-4ace-9018-2923e13231b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d109a0-db9e-47f7-978c-3140010f6315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4de489a-752a-4345-bb69-7be8253e820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a178f64a-fcd4-4ce7-aa71-eee8b6c6bad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6b8186-f563-4753-9382-d4622ac5cf0d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba89d3d-022b-4214-9727-e4b97add13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fca694-faec-4d26-ab96-13cdbcdcca90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9469ea33-65f2-41e8-bfde-d75753de2bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db38073-8aa3-460a-ae9f-770a5fa01967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14702aee-e2be-46c1-aa4f-bbb7792bd716",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0781a5cc-4a4c-4cf8-be4f-80ab0b44a012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96c8b4c-d3d2-4aab-a026-25b04b9bf294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24052624-7db1-4b15-9c53-d164be97878d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea907f2-9fe0-42b1-a899-0a3d34065506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab3655c-c325-4420-ad12-b72826dbe96d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edab04be-6847-4d8b-a6af-9b2e138373c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cddcff-ff8a-48ce-8ec0-1ca5d571aba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78a3b8b-da13-4a7e-b867-7deab1eb8e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eadecaea-5d6a-4fb5-ad2d-31dcd5d2ee97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d00610-bbb3-4ec5-93fd-bc5c62f25bc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50197242-7c15-43bc-9164-ce4943aad19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5cf4d0-7ae2-47e6-9b27-82022389fe86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4d74c9-ac1d-4960-9830-a79044088548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0a994f-8ec6-4c56-a220-9e0ef5e04571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c1b971-7fe5-46bf-a765-e72c48073c66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbfec25-9e9b-4b9f-aec1-6e7832eed395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac0c5dd-33eb-4b80-9a7f-73dd64642a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226fe96d-309d-4bb8-a617-af6608c5e485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "968dcd80-56d0-4690-87b6-69b2ef7513c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccc8c49-4f29-4677-ad70-05519907f2d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cdffbf-e6a0-4f59-8081-7024257217be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2308c3f3-e920-42ab-83bb-294eb74a8874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc05a4-c946-4923-af11-3c521b9e52e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76e33cfe-8502-478e-bcf1-90d144b6d167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01d50f6-4e2e-4a86-a77c-260c88b4bb08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a71974-0159-4f64-85f2-8e51bf92bc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ad968c-0ebd-4ddd-af8d-fe4c7b5d0dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645083c4-337d-4d2a-911c-15f1f39fe585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c95f0e-6c44-4f98-a4f0-6c0827d8b935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951fca47-b5c5-4802-a63a-5e1e1173d4b1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97b3448-e3fc-463e-84d5-fc7c98d3036e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cd9b25-81b4-46b6-94eb-77671aff1fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656cc490-cbc7-4496-8c03-a5a72f85af46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0f5aca-2714-4fe2-99ee-6f539749e8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7c5416-b54d-4134-b6f6-e6f3f319c96e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429f2a85-fdf9-4a0d-ae02-b84a94bdc463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dfe8a5-6b2d-4d6b-baba-166c1b533ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2e1a04-067b-4322-9097-4f69bf66c814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "975b5df0-f517-48c9-8dce-d24c0f2e6dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735fd5ac-6199-42af-97a9-531e417aa2db",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27dee9a-cb8f-4a90-98dc-7c5a95487cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febdda68-4dc9-4209-9fb7-9e344b167b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e80ab9-8e2b-4929-80c0-7297d2d0a492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80efb5f8-2da1-4bd4-bbeb-9f9503256500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67d67b0-11e1-4588-a2b9-7d93701d0472",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fb338d-be7d-4e01-babd-6f204d114fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1a807c-c51c-4a5f-b03d-1ce32e41d7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1286c31d-f252-4ec5-9803-fd5f650c57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6057a0-27d2-4682-a0ad-75c279bce95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d6d0c3-34bd-42ad-a20c-3f0bc059842b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8051c40f-9d3a-4a04-941f-a48a8e1cf806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f8dd29-d7ad-49dc-b1d9-8992097278a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb973e3e-87bd-4529-9d3f-06a81fc0c83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d92476c-024b-4292-8a57-bd89522b2fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133f536d-6071-475c-ba9c-605e4ad0f204",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7536d914-1fbb-4824-b596-928e5f61bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e556d0-4c79-40dc-91a3-946ebe74cc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a448d6-d0b3-4da3-aa2b-412b0923ff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3363e49-359c-4cfe-8c37-fe59a3e9b59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14889deb-68b7-46f6-ba95-144291cce508",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36108b2-6ff7-487e-861b-e667e53032e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04707692-e5b5-47e7-93ac-1bb307a45cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f7c9d3-3519-4805-b66f-a7975003e95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aae187-a4cd-4098-9ee6-5179148cbbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1344cbb-df58-4935-bd46-9ab0739cbac0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f930b36-2d16-4f1c-b054-9fed05ddbc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1cdcef-9d94-44dc-80e4-101abc363c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aedd46-48b4-4c50-addc-c60c96ba1617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e02303-ebc6-4cd2-8de4-3561fa14c479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23e9ea8-cb9f-4549-8dcd-acbcf77a23db",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761feaa1-41af-4f7a-9937-74fea043c6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937baf87-d3b7-4f51-8a0c-e978122adb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959be677-9e77-43e9-bcba-f3b95006dd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40a20ca-002b-47d3-91b4-278272420e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc008ccb-2c5d-48cb-b7f6-9591ca330009",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9666811c-75d6-4260-8775-84794f24fbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7a287a-868c-40bd-bf35-e3cb4d2c8d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbe3159-80e2-4683-bd0d-b944cdccc987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae1587d-409b-4aa4-a219-aedd9f46b1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ca9956-f7b5-438d-9f77-6997b478bde0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad96b91-9422-4150-b20d-0fdd6b2eabd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7032b096-d495-4c29-8c90-55d8d9968525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3e7f93-5fd8-4e9c-a475-fc2efe84ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6150a01e-0de6-49c6-af90-237524ca6408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9dd880-32fe-49d5-93d1-ed2a8f0ed71f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0071cac2-475d-4c24-ad5c-62eb62381a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dea13d-8a92-496f-830a-59e32866c05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f77d448-7365-4cf2-938c-7abd26b1c67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2091d0f-ef6a-4ec9-a3ca-daacc859be4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751369a8-e9fe-444d-8a1e-31fdd642a114",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae102651-bf3b-4303-92ee-1d064172c927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cacca3-b67b-4dd9-b682-5935418036a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b161ccae-3bd2-493a-a2e0-92d4ff611a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f67e0bae-415a-487d-8680-fa7780a05f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7c86e0-c67d-4750-9ab6-d0761061d579",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4983b1-0a72-4509-9057-e99ac1422791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fa64d5-68c5-4ea6-a69e-b01ff7994343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fccbe41-03fd-4f27-a3df-3de932ba7b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d084ab3-80f1-497e-afd0-f030540c2cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9e66bf-08e6-424e-a580-330e5e726782",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4decb56e-81d7-46de-baa0-9638b69aea23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd84695f-712d-45ab-b5ce-04bfbe75710b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3cecf6-ac06-4980-98bd-a0b2890383a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87abbee7-4ccc-47eb-b469-78df975e2d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20df985d-51be-404a-af3d-411d0fc7c353",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1190a22b-28fe-4d38-867d-2faff2d9c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd059bf4-5e06-46e3-ad4a-63f671ca9616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867e514f-3a48-47d4-979d-fc0131ec5738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fffa66c-104f-4bc5-b5af-7b103b5ce8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cffa647-61d7-4a75-9ee6-032eaaa5ee5f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6340fe-f7bb-4425-b399-504c2f4798aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0647d889-30c5-45b9-acec-127fa3105fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb235bd-221b-40f7-bd37-546f3eb3ab44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5287068-985e-455a-8dba-42504893927e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f233595-43c9-48cf-8613-a696da418853",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6ef23c-ba46-4ee8-91f4-96b1bdeb0ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac16895-d219-4cd0-8a8f-2b1a4c031a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a19a417-628b-4fb5-b206-5ccecf825e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb4cdf0-cf87-4e67-bdc9-ca6ef986fc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff545241-7a2c-429f-9fd9-d6f5550b5004",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49c8712-110e-4bf3-bb31-ac939ba8da2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afedad9-4dee-49ec-836f-6d5564991756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb83aac-038f-4bec-9b3f-567bd96428d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc349bb8-7692-477f-9cfb-dcd692c4d19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e466d685-90cb-4be5-a5c6-4879595cc0a5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9599b701-621b-4377-aeee-cb6cfbd49f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f33fa8-57cf-4e9a-a67a-f4a9a6863ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6031adf-3492-425f-9c82-81286200aa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5bff5b-2b7c-48f1-a626-cccde6c3756c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4904d2-9912-4507-a906-6d983b3c1f51",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27de19-1d71-4659-8853-7080fa94b14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0662f6-e240-4cf4-a91c-4ccc7ab4cabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171acc2-55d4-4dcc-8174-0239b5be908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee90d816-8f87-4954-9ac4-e15da99dab35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63158fa2-7fa0-4b78-9f7e-5aace8656cfc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383abb0a-0cba-402c-9439-e5ae1c131d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c237332-ac5a-48ab-9233-d6366c1a43f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6149e8dd-1b47-4ebf-95b5-0c3133ffa845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dba6f73-59dc-4b3e-acb9-a60a74d984cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8355d9-39a4-43a2-bfe4-9c2c43379651",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4f099-d6bf-4873-af5d-0faad69066c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e699850-9035-4d5f-9985-c5fdfaf0fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb7d54-f5e2-43f3-93e9-e677920f4230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db0db5c-d756-4268-92ca-bb52ca1e2a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f48aa9-9dfd-4539-bfc7-81c65615a82c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045a9a65-1410-4431-97b5-9eed2f1cfc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0751eddc-86ce-4f33-8163-2220306c95cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aa0242-047a-411f-834b-596f16b16c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5165f71d-a1a1-46c1-b234-06a996021487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ab3981-deff-4a2e-bb79-c6a94a8e1e8f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566d5513-f166-4b86-b1a9-6238306525c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8b9778-2983-4d0c-a809-535d79ad8df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee05e7b9-948e-45b2-9d35-45e86fbb0b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82843479-5c66-4595-ad59-039d3fd6fb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bc47f9-f097-4559-8f62-a4be02ee90c2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69b6ddb-5853-4a72-ba81-4fd9d465a35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73539fa-6352-434c-bac2-0b402efc3a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d1ab56-66ed-4bdf-b280-465aeab321f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56c4540b-5a93-42a0-abd0-00cee74a9dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792b4ba2-926b-4125-b337-14b9a58d3692",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e59e0bb-cbd8-41a1-973f-8db9d5328103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048d7b8a-bce7-431f-818a-7161afb319af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e70c8a6-ef3f-46ac-8b00-4486b803e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4513404-b935-42f0-856d-b264bd7ea7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeb363a-b018-44bf-aa4f-695c02b2aea9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ca5e59-3124-4c75-9f2b-1b24fc2ac85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9ae2f3-2a79-4b94-b9fa-ee6f8f2b1333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f515897d-dc6e-46e6-b915-f05cc3fd1c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "add99469-3f06-4bd5-831f-9b96dffec884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fed4d7-5afb-49be-ae78-1d20bbf20ef4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39afd973-5e1a-4b54-828a-9c52b94d1244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac1daf5-1a52-4a17-8932-028e8fac02af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3569734-f39f-4996-88e0-d74cad12ae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcb3a36-f744-476c-a44b-7abbf752081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108923a7-41a6-4654-9c2a-61773f63d1b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7a3ab0-b7f9-4145-b71d-7f4c707dd707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b0453b-18c4-410c-9fe6-3266151b634a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a281b1-0748-4f81-98d3-30835773506d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee73a4ce-2437-4deb-be62-8a32c43a548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b5ca4c-76f8-454a-ad0b-a538a0b661f4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6833aa7-8195-462d-a85a-9ebed6c10908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3d10be7f-c343-4a00-948d-eb07a7b22c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cffb484-596e-473a-a76e-b25239c6d471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c847dd46-5644-4838-a76a-cb40ecaa398a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccf00d11-af50-4e59-be54-59bbc29570e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "243d0adb-a210-49dd-acfe-c5f7f662aea6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5a3fa1-64b5-4863-a811-d10d7c6777b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc3d9aad-9476-478d-8126-2b0ad1caa96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14d86aa-74a8-4837-b4f9-dc151d8e7a59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9443a67-cfdf-4f1a-9099-8947c28fe59c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb11c281-b5e1-4c27-9714-ec901db66453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1b1b918-c867-4819-9333-a1481f01501f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61a7853d-0cf6-4d19-8122-08955c25518f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fdfb8d9-a61c-4c4d-9e4c-3b19efea35ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05b90e5b-6245-478c-9413-7698394f16e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ca13fe0-1383-4bb7-989a-4e49628d6621"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25cf866e-8def-4fc7-91b3-11136cf37e20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28a6f207-abde-4a69-be44-1c3ea4f525f7"
                }
              }
            ]
          },
          {
            "id": "a2b6ec4a-b42a-4ded-9088-3d1e86393902",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34e5b2fe-8459-456e-94d3-98bf634f5943",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c4a50362-08db-4bbf-b699-92567b7d0460",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7949e41-88e2-4b0b-8eb1-2f0f49a4e4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd58d279-cd69-4673-881c-6663795123bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149667a0-e043-4c85-94f8-b9f6fcaf8bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf2946c-867e-4e35-84e1-b13b87b97dc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e04f11a-6e34-4809-a5c4-44294f6df506",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "720d639c-755c-48c6-968a-eed9b15cd639",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5edbc82-b942-40e2-a41b-366c23bdfbe2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eef5669f-20e7-4dd1-badc-bd6275e485a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "002c18c5-b840-4417-9f6d-91a6ac5a2efc"
                    }
                  }
                ]
              },
              {
                "id": "ee32c654-e8ab-4f70-b247-32f4d4e34d91",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dec4920b-09db-4c0e-9516-302dcb9585fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bbefe26-f8d0-4538-80b8-eb929e4f2aa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d2add98-b395-4569-b24e-9e7d20a894dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96eaca08-dfa1-423e-bee6-4e7089c665cd"
                    }
                  }
                ]
              },
              {
                "id": "31bb395b-82e7-4318-9a17-04add396cfc9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "795aaac3-f436-4d10-957e-c3cce908e849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d6753b4-9f62-45e4-89eb-7054f6bb51d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2209eafd-7b1c-4a2e-9718-5aaa4ad1fd1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3928d8d-e949-40ed-b51d-da58fc95e925"
                    }
                  }
                ]
              },
              {
                "id": "ce088504-004f-4cb0-83b8-6ec72750b720",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b158ca6-bd05-434b-a98a-2625510e9aed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ec119fa-f377-4fae-8361-247bc61ebb12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d51a4bce-a926-4ba4-ad7c-5fbea5733888",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5673f8f9-14ab-48b3-a916-f2e4d62454f6"
                    }
                  }
                ]
              },
              {
                "id": "953ae3bb-7d9f-43e3-8eee-e92abded6b61",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "453b8496-1fa2-43d4-bf8a-6c9ceb501cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e20d4e8b-0f32-4015-88df-dacd3b75c663"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e22da7c-aab9-4dfe-917a-21b329c01c41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "720e50c1-2a15-483a-9169-0056f4cb72eb"
                    }
                  }
                ]
              },
              {
                "id": "892738ec-6c52-4ee9-bcde-93bfba0eb482",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb9f3275-62b6-486e-894f-75e9533ee9e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f6fc5b5-1aeb-4109-849b-df635e384146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f4a2dcf-23c7-4520-8762-c270170f6d0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18d759c7-a715-4107-98fb-f0113924463b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85337272-56c5-4fbc-8625-a5db9659ed8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61fa9ef2-4bdc-4942-92fc-d80666e78f9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff29d37c-70a4-4d72-9fac-e51d0389303b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ca03d32-df35-4382-8f38-5759c5f1f777"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12c1b1eb-21c5-4002-8474-57501e0345b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1b619357-df2c-4fd7-abb5-9983c326fc01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e5e9a62-60fd-4493-abc9-9cbed74fb514",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd524fdb-aa5f-46fc-862c-af16366d4710"
            }
          }
        ]
      },
      {
        "id": "99ff48ea-6956-425f-acbe-e9945c156621",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3761aa68-1bd8-4d6d-8719-6ddf8a005b6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38081bf0-8693-4fe8-a41f-df3c20b485bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "008ed0c9-cb70-49d2-875e-1cb3db4bf5df",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b7fde2-357a-471e-ad1f-bd3955054cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d04df4-ff43-4658-8a8e-2e25d9cfa468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6eb614-266b-476a-92cd-76c916e9b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ff7dda-4c8a-468b-94fc-85e97cd5d93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039e58e6-00f8-42c2-ac09-36cb14ef0109",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2449db29-87df-46bf-a59e-6a57def8b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c0b54b-84fe-47c6-a31c-408cd199bf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecc731b-803d-40b1-b1d4-a42c8445ff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99d9836-8570-435d-8a84-d6b75894cca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197b9f58-a5fd-481b-840a-388e7f8242a2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d57f78c-caaf-45f0-abb3-dddf5cfbb4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea230298-6fd7-4971-ad86-dc40caa77ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3b4f3b-285c-4993-8202-a0ca7bbfbda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f022a6e-87f4-4bd5-9828-988acc374097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a124f8b0-f5ee-4d1d-a3aa-c3e18b97e661",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6fa53d-d8f9-42f5-881f-cbda63f0053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d429d6ac-0f53-431b-8330-6b5e11273aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2111228e-baa8-4717-abdc-a3cc790074a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3007c7d7-3e09-4e6f-8b37-4f922934cf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ff72c-af9b-4561-a68e-9234b0e27e38",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d919e08-e0d9-409c-a29a-475783de9348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecfdb2c-c945-4512-80d4-aa3768aa963e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3332e6a3-cc01-40f8-a66c-66d437bd8285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7eb4d3-56d3-4bf1-bf70-fdf2219a6d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6383a1-80d1-4e04-bc6f-94343a1efdba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d02391f-b217-4195-8def-9ecaa030efe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554ead2b-2df8-424d-903e-e0c121f0c3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268d5a8c-6073-4b6a-b4a9-c97519b01a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "807bd935-4637-49c8-a0ab-3f10da230750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6e03bd-cee9-4623-8769-c8bb5ad63342",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d25ce29-2631-4410-b447-8f92bb91e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ad6e5d-e3ad-46ae-8b20-048faf13887a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685a44b1-ee5e-42f4-b50c-28214c5123e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b5eadf-4989-4c3d-a43b-dea96d523f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df119ce-c822-47e8-bc41-79f620abefa3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934d1b33-1870-45f5-8a87-e38fa073f371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640e222f-ea14-4f36-a9b7-62b7c95cf75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8365f274-4ad1-4cf9-bdd6-a446bf4a082d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b9e70c-d691-4548-874f-07351d259a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1863e39f-902c-43fa-bfc7-b7aca8d600e7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad97dee-9d4e-444e-8b48-31b468d31834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef07f52-c64b-4d98-a8a1-09f6372df477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907cc861-63e3-4962-89f0-13dca8e445ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66cd12e4-6c04-4114-9c5c-5cb2729603c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18091b23-7780-424f-ab63-6f1276fda96d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46252b43-a262-421f-818c-0216920898f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40c027b-edf8-40f4-8ecd-3710fc40176c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba877348-464a-4dba-b59e-63080fe5fff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a41739b9-0586-49f8-b247-a9b09217e356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6545ea-4f33-41e1-a33f-de427006d54e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1318822-a6f5-4b38-b473-1c2aa69f6bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb3988d-4328-4489-a304-36aa670abe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cad49d-5c34-4ad9-98db-dd1f8f1be71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f64a0661-cfef-47a6-a016-9404a952e0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a907e-c004-46b5-9fd3-9962eee49096",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ddd10d-2538-4e9f-a243-d9288e397e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1344db74-673d-420b-a204-9c03e9df7e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33051cb-f678-47e9-8ec2-1b3dfe879ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2cc2a3-c1ef-477a-9421-cb352bde7427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bf85d3-4e6d-4057-b348-3397cb974a09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24854aa-4c23-4fa5-a787-9791ae9260d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b40fd7e-07bc-46aa-938d-3fef489be0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9f745c-8190-4fd4-9841-ed7cf406c082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f58ef3c-bc43-4ab5-8460-c412ff3ed2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019aaaac-0b48-4e76-aa48-2e26a1359d3b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde94b16-1440-4d75-aa7c-5e3514cb5743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5c75e4-25fb-4866-9ff8-622911c697b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93947460-ce0f-4ad5-93af-11aef75c426c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe34f7c-2570-465a-81cc-2733d2c874ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd304b4f-5476-4f39-92c2-863c638b0dc7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df04a19-63ed-422f-bdad-b525941ed258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f51a96-3af6-475c-8308-3a94057ed42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6df5566-afe7-41fe-9d99-3eed4aa35625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1d30c3-0046-43a6-83af-db4af779b67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce56f70-05d0-4a8e-8c0b-7abc7cb1ebbd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e41652-d9a4-451d-ad8f-99fb23953cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d15e76f-ee9a-42cc-badd-2f181a52e0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9658ef-44b9-4e7f-9f9f-84cc74ac651b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8189f7-4313-4f47-b64f-6609297c5e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe949d6-7491-45e2-a90f-60345152eb71",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7358dcf6-53dc-4ac7-9569-4d500473ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d0e106-3253-43ca-9b2d-94f492ecc209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d9c2f1-7ebc-48d9-be84-339325468053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "442a9f84-077c-4acc-a18b-5029d220e94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531907a0-9bba-428b-8e2b-eeaff37c5dbb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004cf855-adda-434d-9274-421a95bbe469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ecabfa-98e6-4185-9049-ee1d9fb31ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7d70bc-80ed-45c4-8fb8-f1464c3d3185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2753a70-9316-4850-8f2a-8eea99b61ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6e6125-f125-4d9b-a148-d4a84873ebcf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff6060f-9be5-41eb-851b-0ebdebca8067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eb1ca6-65e9-46a7-a379-eef1dcd7c4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667ff85a-361f-495e-a20c-a3984e378fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e92a72-ce28-49c6-acf7-440e42361ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2473d8bb-f3b6-41af-b545-b10258c2fe02",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f956bf9c-8d68-4f66-9d49-3f6c273c6ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0072650-c5c6-486e-9940-0f666eb27a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8044ce75-8383-4621-aa1c-42dd684eed79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d84d88d3-56c6-4029-9d12-00e0b026037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8ee814-9433-4fa7-9ae8-9f3a087cfe50",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00de42d-9f89-4283-8999-dbbe3f6e318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfab61ea-5049-4f71-9e1c-a8c71fe8a233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61ff4b4-9949-40be-8bd7-bed48bf8154e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e361260-e6c0-4070-943a-6d7651b74a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7688881d-d1aa-4bbd-ad14-6e18d27636e3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05ecdd-7ff4-4105-8bbc-e40051ab91f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9870be04-ad5e-4a9a-8952-4f057a409333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbde35f-ce9e-4a53-b4a6-3d9566a939fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c22078-d75a-49c7-83cd-d7d8c0790c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f7e259-192d-45f8-bf9b-4af992beb5ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4849d82-3a85-4c95-9e96-c2b56042d3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5246160d-2a19-41f3-9a18-7f3181c77dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c74a5-6bc7-4329-9254-ead3ac8a5b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf10c1d4-7b97-49d1-b656-6f74eb703ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e21b82-680f-426a-9c61-e2ca84ca4fb7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb72e0-51a1-4ea5-88b2-6cf0d272dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca393c3-d490-4554-a79c-abd5780f789d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4eaeb7-4816-4565-ac4a-7d44c5aa0609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b124d95a-c93c-4319-ba2c-f5ca68f8d1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a688a976-5090-4698-bc4e-aa6c527dff2a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba3f7cf-5105-4351-933e-bc55f6fe2c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f435cb3b-967f-47de-b514-1dcc41fd3b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88145ef4-87f4-4f04-b2d3-cdedfc8db38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20af69d7-5908-402c-9617-1af3f9231e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bc7401-6d8f-4108-904d-23c9f6dc12c9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff0b260-0535-40fb-8624-c0e111fc3af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821ee7a1-21a7-4215-b24a-0b57ca02af75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a68ce2-eaba-407f-aa66-d8cf91441b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50719dae-5cba-482f-aad2-02ec7dc56b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db863c0b-30d1-4766-85fe-e660f6b83b16",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a81a19f-b48a-45b4-b678-7c9bba879212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429e6468-19dc-4bf5-b166-d81524330676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29822a1-e199-4d03-a678-18917a659a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25212eab-45fb-4e4a-9a20-f14e351865ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5659337-c4c1-4e9e-93ef-41cce03213d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d25074-b2c9-46bd-ae4a-3da324268b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451486ad-201c-4398-8be2-5807bbae5f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ba3714-bbbe-4359-9b99-f78346842ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fa498d-69fd-4940-a5a7-7de99755c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358abc9a-665f-4450-ae01-1143b12d6b3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e572e2-5d10-45b2-a71b-482616d9dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585eb9fc-648e-4db4-830b-82359e33b99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d49ed0-03e5-4337-b253-74b70a0ecda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36f0a2d-abf1-4b95-bed8-b4293578ad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373ad0a1-f97b-46d1-a4c6-6122e5954675",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd788656-ad0d-4917-9f96-b8f133294bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5988670-545e-4707-abc8-06e408df271c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ad55dc-b228-4015-8374-d7119700c1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99fa0de-33f5-4a73-b896-1f25a57e07e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a6be5-451b-42c0-8663-63011fe04ca7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b95767f-91f4-4fae-a6b7-9b0319473f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bee9ed4-765e-4011-9920-ff7d763964cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6546fbdc-f04c-4837-9b5d-bcbb5f5f0da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6faff0-5343-4421-ad19-02657f6b1cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274cb6b9-1d1b-409d-a12f-1c68f0554a8b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757124f9-1730-4693-8ca5-033f24426cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba55d6c-11c0-4765-a3fd-347268799a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da8745e-6179-4293-8eb3-8cadf1529b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12d444e-d6f7-4446-8dd2-96735f1fd5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d70bf01-8a05-452e-b961-7fe8c04de146",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7f61e7-fb4b-408e-af2b-fcfbe47e2bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1332d0-f4a4-4c82-b286-a0bffa4d5b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38adf54-968a-44f4-9bf7-866f54739235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20300c29-ec6b-4293-b7af-b7eded091191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3825eab3-796a-410c-8219-627b29ee1054",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9245229d-bc76-40e8-91dd-4f1eea092cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04e3e02-ad28-4f33-960a-3e8b45e949e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5949dc8-f075-4dc7-851f-18c144cc997d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8664a5-36b4-41f2-a441-87c5df6f7d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1730b03-fca3-4463-9eab-01edcd572364",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef72ee6-6f63-45d1-aae8-aadc078889ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcd0778-0d9c-43d4-83e7-9eb19146d320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c975905-8c7d-4ec3-a652-9618a55293c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef2b77f-be9e-45c6-a197-e166d5c6697e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6985350c-cef0-4081-b9ec-ccb620b1d6a4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357b4f9c-a14e-4f18-8f0f-c1b788559e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb6f3bc-19a5-4f8b-b0e3-9c7144e7a9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf70442c-a3cc-4f8f-9e8a-cefe74d40c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da89f396-eb53-4bfc-8b38-cc6a7c37313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02133f9d-3506-4a57-8146-372bbc6fb684",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee143d99-9adc-4146-8e38-8f553a6e1672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a09158-198d-49a3-8144-3590ddd7c505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293e63d9-0989-488a-87c5-36c39f712af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f7200f-d932-43d7-a3f3-3b0c1dbcea68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d792c183-eada-4594-9664-85204f4e6f25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ea93e04-12ca-40d6-b419-f988f2410a39",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7db780-053e-4666-96a6-e9d277b1eced",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76984e9a-9d8b-448c-bcb2-70dc46b0b3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346ef49a-8a12-4465-90ed-7ff4d299356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a88395a3-a928-485a-9efb-51eacd1b63b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be2ecfa3-7713-4a43-809f-497445af3948",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d3899ac-dab7-46c1-8063-d11d6c568e1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0efad5c3-3d2e-48b4-baf2-9a83ee1278d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c921fa9-e524-4626-be3e-836142b500bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6833709e-b328-4052-a4a4-aeeadaf4292b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39c7def1-7cfe-45d3-a78a-843171c3cf55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e76fb66-095d-4241-84e7-854799ae199d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bab4665-fe50-4ce5-ab96-390d857cfad1"
            }
          }
        ]
      },
      {
        "id": "33a20fce-7961-446f-92b4-ba34641d0988",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6877823b-d2e5-47af-8a8e-8dd2f0f6c268",
            "name": "Negative Testing",
            "item": [
              {
                "id": "636a77bd-1b73-417d-9166-f7632db5f8d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb742847-ddea-4111-9884-cb45044b5cf1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0858fa-cdc9-46ae-aae9-b37c56591516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4749929a-3e95-4896-aa32-4408e3fa98b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb83bb08-480a-4727-b978-c71cf1d2eab8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9143ea3-1c9d-4bbf-b7f1-963c293cfad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc35bc1d-1699-4018-8eb5-6f4994c994dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24e945d-8b7b-417a-8f3f-e47025fc7996",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80928d3b-ea95-49a9-809c-7aebe05ce951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655cc87e-4808-4b66-812b-008ccde37733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f658497-baae-48de-a7dd-82896915f201",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389c9753-64ba-48d2-9feb-2308be6ddf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e2a7aa-9e58-4bcd-a005-88583696b17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac10c99-ed8d-46cc-b7de-dd9d928581c1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ac157-7c81-45b8-853f-1d5ded232649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9c50ab-dbc3-4b50-a653-733daf6b2d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e814c68-9327-4846-98d1-cfb2b72d7bf2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30330556-a70c-482b-82e8-b78667bff072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e317c8-c221-4367-b09f-511b44ef8704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f238542b-4025-4274-a156-7c05b71bbbb3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384eaef2-c945-41fb-adf6-93a7c4f73be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b66b924-5e46-4620-a358-27128d82a457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23dd9c7-2d87-4713-814d-4c6ae67083ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f18d40-1030-41d0-ba7a-a1d8ab03c484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd50b330-00e2-400e-b3e5-ae98af5cbe58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f9d58b-3d81-4ecc-a8fb-21c0788c1839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38f931c-bff2-48e0-a952-86be0665cc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eafd8b5-4849-4594-b056-b3b8da24a361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b18ce3-01ef-424e-9c38-0a793011d1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2ac7ef-c17a-48a4-9994-a8ed167c5da7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0def35d2-b8c6-4b9f-a434-0b1de3ff6de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00dc8a9d-92a0-4851-bfc7-02b2dc336a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0801f708-3656-44eb-b83f-99979e088e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd8f000-5179-4941-866e-23dd9f972e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2149e0c5-cc15-4876-a76a-c0489798256e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2ea80a-77b1-4f68-9112-1661db625403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70540141-80f2-4afb-ae6b-7a802491669d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc557f0-bcfa-427a-8881-6715933704ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b38508-cf07-43ca-9076-207dba577b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fad4f2-ff0f-4072-8527-c2412a0a938e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093fd703-5031-4946-aa8c-0eb138c91f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f734c832-2e94-40cd-bdf3-763db209fd21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de38760-f5b3-4e79-944e-a1f568a0bd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc8053-20b2-49b3-ba98-44b6eaded07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d9a3e5-b5bb-45b2-ae6c-decb29fd16b0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d07a05-4d39-4604-9661-5cbea1ad9216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08619a3d-3ec7-4022-aae8-71dc2a936404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b7ce9-b950-4d98-863b-0cd51fa8a5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0fe1ae-d6db-4d23-a0a0-85fb0b679afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da3197d-4f18-429b-8891-b9f8ef6210f2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3104a331-33c9-4acd-ad5b-9cfc149dbf01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c98e1e-aafa-45f2-8a11-6a57c3a4d8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4114f6a4-6b7f-4ba4-8d42-ab180263724b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fae7c43-c589-484a-9d2d-7b8374b3597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2a7e00-43aa-4a99-82bd-10b8b8a6d694",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e142b7d-3638-4ac4-b952-d193b8204fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94740f74-5da7-4f71-a01d-b20fd249db37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aac5db-a160-4da1-8c79-e4963defcf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4972628-b072-4437-8f5c-38716050cece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ac798e-7c5a-4911-98a4-41f9791db8af",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043670f2-2644-42c0-b5c8-7f4c02308b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db716240-1fc3-4906-809f-66d720f9a99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dab1e8-28c2-49dc-9612-8ab21ecbb269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a0e687-bc53-4ed9-bce4-9ad5fc93c1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd17693-7a85-421e-a89a-b4fc839db88d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4ce74f-57c9-45a7-865c-c7b7c9b13e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82d74b1-b720-4cd6-ae92-d1f7c44d132c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82241b5a-6885-493f-86a2-7cec87bb7952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4e5161-9344-4674-b79b-01dbac71b8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b92db2f-9435-4bf9-80c4-d733895316cf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e578bb7-bdb6-4ec7-b403-90c9f1dbc5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafbc88f-1206-448d-9731-5586e0035d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1049fce4-a2b0-4a84-b539-2cfe9b17450a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018971b6-4793-45e9-a826-c0eea269535b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a2f760-0084-49b4-989d-3a5d3658ec70",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67979ff-5926-4622-805f-046e9360c661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5c00d8-820a-4b4d-bb3a-80d9d66fad2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3be0c0-2c22-4dc0-8879-1d81aa06f62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e719a0c-9e0f-474e-9326-ff5390bd98c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dfa7c7-7ae1-4db5-b7f9-808d4f42f6ca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d537f1d1-cf1b-44bc-95f3-32a1b3fc8e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97907484-a8ff-4f38-82a2-d5681d9e1724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b93df8d-e137-4691-9e8b-0afd9af5ee76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0373858f-7e3d-4a91-aefe-900192306f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29fdb21-7ef0-40b5-a48b-1166ca9bad2f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0259bd06-eec4-4e24-91c5-8c3c47fe8768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f4daa6-9939-4a51-9cf7-ece40889a9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7619e251-c278-4a5a-b7d7-301ad1a5c11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbe372c-60bf-4855-b37e-3fb20644b486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951882a6-27b4-4a40-a070-a22f65251a12",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5e3917-ccbf-4d10-9d63-273da85bad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc51ce17-36e6-4aa1-8e9f-40b07cc34850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648beda8-8e85-4845-b986-d110f4d14959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d687dbfc-88dd-4353-a07f-20086a2dfc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e462fc6-264a-48df-b1d1-d617c5e25db8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb816e-c9fd-467f-bcd2-8ebdaad8a2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ab89c2-14a7-4b85-a92e-19202ce518e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442c82c0-382d-4719-a78a-1a7d15a196e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ad4573-03da-4f5c-b208-c75c755e6d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1549f8fd-70b0-40c5-94dd-b6dcb5d5ea81",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e119407-5a5f-459c-b08e-e03fb5ea71bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696bcb0c-f433-469c-9b6a-5ed785e4fdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca00f12b-752b-4512-9282-ca59b9768e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ae02ad-5983-4919-9b39-50160cae20f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d07b04-4e28-4cd5-9439-d4b29a09ac12",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ddac8-b74d-4f60-80d8-bc2b5c0a6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4e731e-2a8e-48e6-9542-95c2d2452d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a16a0b-ff2f-4073-96e9-38df9a01cbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77ccb3d-80ec-4613-821f-3ec887d190fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b137895e-fb20-420a-889b-54053919ecb2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa54faa-21a6-4092-8663-62689f928e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad504ae-02fc-4456-8e7c-a0996ecd1dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69932be8-344d-47bf-98a8-9425a52b0e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7452b582-0e28-414b-80e4-6e44ed041a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82ede6a-9062-45a9-8140-a6e23315ccfe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f3764a-54f1-4f78-8b8b-49ebed5a4c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe1e6f6-3daf-4261-90e8-a7ab42d7eb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa9b94-4966-4704-8d97-c09b414e4a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79807b60-ae99-48a6-b839-0e228fcad073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43103bbb-6456-4b50-b9ff-87eda4c05d51",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef494fab-60d8-4414-b732-688a0839a0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00778db8-f7f1-41cf-8d03-5802461cf3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecbb59c-5155-4613-aaaa-c53ece02b969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e7c265-62d9-4b75-86d3-cbbc2988ede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d20cf9-f90f-4041-abd5-e80d31e6d635",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd8709-9d6c-4637-8057-eb3efbc1354e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fce5064-482a-492b-a0ef-d4cb6264d472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ee713b-6bf9-4678-a964-18d8388b6fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071cae50-a2ef-468a-a943-d1e0895ce05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc38d5ff-251f-4990-adc8-8c65d0a3d854",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09730cdc-6785-41c5-a072-81a315eaff86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039d818e-65dc-4a5d-8a9c-702ea76faf6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899e52f-ba23-4ffd-ba6c-1c0a3887081a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aabbdad-5582-4f96-8450-94e5cc98fe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98de62ad-0b3d-4adf-bee2-6b632a7560b2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b84b34e-2ade-4c37-bd22-531833342d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b057914f-a7d8-47f1-887f-12f32b740d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a51c5-f4ad-4870-bca1-a1efe3451b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b628ca-10e3-43d7-9bb0-584e56f020d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bde72b9-a39a-4188-8705-be18e3c94ed8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245f4649-7738-4dd6-bad1-6d809692189f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01761daa-a55b-4582-82be-7240cef94280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdc01b3-1053-4487-843b-7645446626f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00769a9a-ce62-4abd-bbd7-3e473ca5e6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756a8c92-8f46-45c7-992a-6428e1269683",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448e8547-13a2-49ff-ad2b-d5a63955aa07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d890614a-a04b-426b-9752-f27f35216376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f997eb-da07-4c07-b119-a7d3f214012f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419a02aa-cc10-4ade-a1c2-8bccb4eff335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f12d70f-6495-4242-bbe3-381e31c7fb2a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17908374-2aa3-45d5-a78a-df5b8c7fde3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca042cd-08f6-4540-b2c4-6893e7f44124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdc8085-7fce-47c9-b89d-f60fc545f644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baa97b5-32e3-4ca4-8fc7-9c5aa4f9a312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3ba2cd-fa24-486c-8e64-227b6424163e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b8e8b1-ccff-4be2-bc7f-3bd3413668f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed00347a-47ce-42ca-a885-359d7ea3091b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa19e114-6106-4aec-a5e0-25d9d995804d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2196dd-f409-4884-b939-0db6ceaf4c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c0789-d48b-4845-a7c2-867f51433f98",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc73cce-7085-4c3b-b0c3-c7a47415fe32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b198c9f-e260-4b39-903a-a84a6b210ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e76222-4573-44aa-a1a5-61af5a02d042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bb037a-d65b-4bfc-b4b3-9ae2560aa4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d1b9b1-4ebe-42ff-892e-d177e5b49317",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3360f22c-f79d-42ea-ae4e-7f3b90a7c6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef3278f-cfb4-4379-84cc-1686f47ff956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88bb199-0564-4b60-956e-844ebc039e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351e3132-8581-461d-9c7e-59e12dd093db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae271676-d6b2-48cc-98d9-b433d98ef1e1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b295be-5c4a-4a66-8a2e-90709aa04549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7877944d-5ba6-467b-bafb-8dfe8a475b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d66985-e350-4fb8-8b2f-e1f439d5bc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadd1bd5-0362-4d0b-8239-356200b32d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5623d681-a791-4c4f-ad65-71b859af2e3d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9393646c-c69b-43f8-a066-102ced2a283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33292f9b-efe3-4753-9cf3-11eff0880e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeec1ff0-17fc-42a0-b8b1-5e8f02e097e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d9692f-63bd-4264-b0e8-ba1861c2fec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c81903-55f7-44b9-ad4a-c6766662934c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad61c23-848d-46da-a0b8-a88121e414f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4915597-78cf-4118-a58c-4309ab071afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d25e1-d4ef-43c6-8aff-daf1cae2db70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b9cf02-3aa2-49f3-a8fb-aa553d4140ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6ef3c9-f5f2-4217-815e-18cfef074146",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49a4f32-eb6a-44d4-97eb-0781af560051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f0f674-062e-4c9b-86de-03640d7a19e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9730be-ac8c-4289-91a3-9b7c9d453005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478b2409-7d3a-4051-ac1f-ca565ea533dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfe5b78-35d1-4778-ab70-5f3e83db8f2b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6319f3-3839-4da5-8827-257544e99ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60155763-684b-49b7-aec9-49a5d09760c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39766828-a447-4113-aef9-6fdb7ba060f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3024d886-7638-4998-b8f6-f44757f0f6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71df532d-ffa1-47d8-b899-af23a962e1f8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3ad8b3-1961-48c9-b7ac-fc410828c372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f914643f-2f58-46de-8a3d-569a3e539d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d23d3c-15cb-40aa-a31a-d0ec9bd3db66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a0f235-cf51-4c97-952f-d1cc05349ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cee8689-a8f0-45c4-b03e-e964a61c130d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc03707d-7fed-4458-bd05-765173689d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101173b4-8d54-449a-b4c4-d5fb94cc4e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b235c7f-d9e1-42a8-af94-e5f75be8254f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5530811e-69c9-4eb7-8ed4-80e1f6c6e874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd17b16b-7786-416d-8806-df894c3dddd6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555bfc3a-73a1-483a-b0c5-719bc30eef6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb504f72-8e86-4c92-b3eb-2b1ef9418274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7507aa1c-7fb1-46be-b6d2-52d5c48adf45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1182fc53-b80f-4d62-94aa-7150dbc35b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec517a1-f711-4529-8a64-396889466e03",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3259abd-1239-47ab-be1e-53c1e1197523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea928eb-962c-4837-92a7-29878c05cbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f035d42-7b4a-4124-9019-ddac84cee81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99f129e-6259-49d0-8506-03a228f9ed4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5131e64c-ed77-4f37-9a82-7181d85057f0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35db71a1-f4ab-47d8-8e57-3ac002f1a807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6043a344-fff0-462b-872a-2ae835b999af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fbc162-80cf-4313-94bb-53698fc52487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3482c77b-bf72-4bf2-bc54-8bf0925afa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b385b8e1-4c4c-4601-bfd1-d2adb07abe65",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6add4a-ec1c-4300-9b1d-26305ac42b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b90046-8702-4c7f-be1e-129f73b077c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979d448c-f1c5-4510-9475-08bca2687d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca3d0fb-5925-443f-8950-919dcb0ada8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de59983-33ff-4b5e-b4dd-90a2b80ba65f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0924ebd-798a-4c96-a5f5-0fb233e199d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393bcb66-1683-42c8-87d0-0a30eed59af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71557e3a-de28-4b75-a7bf-ee75eaa529bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a13f91c-8c72-431c-ae11-9a82316ca170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8805f6-8e3a-497c-bc8a-0e0ee318df0a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc05b03-6382-4a92-8a42-8c5b0057b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a02bef-41bd-4ede-bc20-63bf68cad497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b5c92-2193-4168-bdf2-8cf7da54eb53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e190cf99-822d-4e35-afab-c384422956d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae1bed-2d87-47ec-967e-f24b17c835d7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de49fa69-6c9a-4fd9-817a-ff8f61bc6163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c9d5bc-9e58-4b71-9c3b-1bc0ce2658c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97246f64-af85-4fdd-9ae5-91bc9ad8df5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e72c88-249b-43e5-9fc7-e6c2871e77c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5358e9-4429-47d5-ad4e-7f70baeec346",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a235083e-038f-4edd-8bfd-de86ae4c5e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f71438-8797-433a-bce4-877a7489711a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a744eff8-c212-4b56-9509-e25ae0b68a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb9ac89-5c8b-4bf4-b1fc-7f8393e38138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5aaf78-7ad0-4d76-8037-21085301c270",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc5a8e7-d425-4779-a0de-1c31963333d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc004d8d-2658-4736-9fa1-57145d86482a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c2f9ae-32c8-45b8-9bff-dd94b80096d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8ed0b1-0a6d-45ab-a45b-df7722805cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e248a1a-7084-4279-8978-6de15935ba0d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa399e-ce4c-49a4-8701-0e6869a7b15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72746e47-41c9-448e-9919-24af5da6b3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0275c077-5fa5-4e0b-a3a8-7adfa72f48c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2154ee59-b386-4fd9-bfbb-65b0bb294842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525d4a2f-8c82-4e96-95e3-6464090f01d0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766790fe-4a2c-4db5-8fac-17c1d69b5c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8660fe4f-2aa6-45e1-b5de-9adbe53addfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f844c59-4c7e-469b-809d-262b23f882a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06c1ab8-c544-4169-816e-2b80229af304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d5aaf-997d-434b-b254-1431c75d3225",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d5cf3f-954e-4eb1-b857-9ef1601a565d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7915c6d7-3fd2-46a9-af23-23fd62a6bc1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5f06f8-1dda-4da1-be67-097708865a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acc70b7-7c3d-48b1-b881-dba33bc1a6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c9d11d-304c-4550-8571-e8bdb4bbb9bf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164fcc5d-4431-446b-a795-205b6a6d1d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4bad09-b081-4bf3-9122-be1445450f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efddd0e-a802-43ff-8032-d6cafe1d88e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb76b6e0-35b7-47bf-9f98-73186d70ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9538fcb-3689-4078-8396-2e9b308c5d36",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53681bcb-43f0-42d6-aaa1-81aa0a2409d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d8144e-d525-471d-a505-9c088b5f3a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8381141-b2a8-4b72-bc43-a48328df327e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8387a9-e9b9-4df8-9741-0fb2f7074702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b121a-41da-487b-855f-1ebab246a404",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dd2551-d9f9-44bf-8950-fd49ac417eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcc3f68-08a8-4c4d-89ee-1d9110f97830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60bfeea-b070-4284-b92b-db65b546f4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e56f5d4-9b26-4fc7-a908-9f389539a58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039b6e34-fc7e-40cc-82e3-34f34e51f237",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd762656-2e02-4820-814d-99f63b7b8daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ca9e33-6937-4d93-bfc1-69e999795ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be572f1f-4041-4816-8b6b-dc09f514e7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17324ad-f48e-48c0-932a-46c56d39de3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9714509e-27d0-437d-a985-6a2d6aa1ec7b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9600be4e-76e1-482a-b044-9adf83bac415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2862d7d-9c3a-4ed7-84ca-a8072715c06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9192da1-ec27-4ea5-80d9-1233cc375d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb7892c-ee6d-48c5-9d4d-a5f21c213f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed8f2f9-bf5f-4dcf-9072-85567c9b4709",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc9839a-85c9-4268-9774-2473d9b00e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af9ce06-d17c-4a44-b7f1-057584c576c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff206e28-7e8a-4bb8-8826-3fb3441b3acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfce4025-23e9-455a-8442-ce0b2c29fabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5177b1fe-9373-43d3-89fd-9372ecb9d49b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ba3711-0bbc-4c6f-ad61-2edf597cdb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad21607-3fe7-49fd-9a1f-544be442dbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f31132-b849-43d4-a92f-879dfbd61bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea67fa0-c31c-453c-b150-67d15557147d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af78d4b8-2daa-4474-9fc4-e2790b495d7c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f4fd71-1d0c-4faa-9731-27d24a156a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9993ebf2-e310-4c1d-99bc-cfba02e4b0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b0ea83-d7a0-4792-a9e2-32fff9f62f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247b28e3-e38d-4720-9bd4-209840b36871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770ccaa6-1d9e-4bae-8b8a-3d9dc122a65d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae0417a-c70a-4de5-ba38-e33441c34f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838e4f22-9f3e-4921-8475-970679f26e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fbec92-cf3a-4fbe-bb76-6f661b0863f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a47c04-43db-43d2-8593-44f0083c32f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b6f932-33de-4c0d-9989-4129af6a4b2d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea27772-6622-492a-9083-de736ef20159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30fd9d19-b6dd-471a-bf81-644c3200aedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feea0aa-3b50-4d61-8b08-27354e27e6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62245546-8dcd-4c32-91ae-411315d19384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c5547b-8860-48e8-a5d0-6fb25153f375",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdea8693-52cc-48d5-85dc-83a2e26c38d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640f41dc-e07d-41e6-a64a-b4a1d81ab968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab357d26-6a69-4a56-8777-fcf1ed346fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2269ca-a1fe-42b3-b042-a774f51915e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a6167a-fd9e-43a1-b18b-4c8501817eb0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f71d0c-96e5-46ec-84e9-19b12db887e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1864583f-3146-480b-acf7-c352aa0153e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356d98d5-6bb1-44cc-bd50-4b0fc0eaa587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b3e91b-1684-4812-b938-4b83a007db8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c255fb-3ae6-4eb8-85c0-8649abce482b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c4329e-92ac-4793-8972-fe24b1933ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b052b19-0476-473f-91cc-94c9d1ee4a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d0343-f1c2-4727-85e4-ff3d873e13b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca84d028-7a8b-48c5-b2ce-44c13ebabcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88483780-c2b9-4b51-a69f-e6bd3baa534c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a369be70-e6d7-4aa6-81da-09c62b85253f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44fcd7d4-4450-4738-985e-a8bf86a6b0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d7d0f2-33f5-41e7-8350-8f6fcf3f3819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df0a9b3-cbdc-49ee-87dd-8b42c36d3794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd6075c-88f2-440d-9b1b-8630936bfee2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0853c-68ce-4301-ad61-8f13630b0e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d0e78f-57cf-41d5-833d-d58cd266bdb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27838166-f808-40e4-b651-84034a467e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59370d4e-45ff-4e26-aba2-30712c301de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08aaebd-7e5f-4892-8822-fe61b6ef6f53",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b68459a-42f5-43fe-89f5-73bef6535239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c97d26f-efd4-417f-8283-f3f12b4cad98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79826a13-4b61-45f6-9b98-80074e7a5ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c030ec-a1b0-4d84-b72b-09152c5a6180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1650a35-44aa-4915-83e5-ffe4d73bb630",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d36d58-fd2a-4505-a912-03fcca6fa067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1a45f0-4ec4-40a4-86db-c6a54c9a6df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ff3871-9c4e-4b3e-8537-8b8241ebf132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f6472e-611e-439c-b2bf-0a08d448ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886f0341-602f-47df-953b-c1d3093a3534",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b50eaa-e2ba-4bd5-8526-71be9418ad4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadae1a7-3ce6-45dc-b9a3-d237d3b0692e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1cfae7-802e-4873-9abe-92f6f1f50464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353a3ed5-b424-48e2-b725-1f8d6ca4ba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0360caa-4db9-4cf0-b18a-c758ec90c3b5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89164a97-7d4f-400e-9ecd-a3a81c19a512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5908ef5-ba3f-41ce-88a4-72218c6dd9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f042a993-63c8-4fee-810f-32b106c25733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e000c9bc-cfdd-4283-9f77-71ac8dff2e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae50bb78-2e9f-47d8-892f-810443b83f0b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bdfb82-46e4-4e29-a661-f846969e3675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7cb7af-dae9-45fc-863e-4eed249c8c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a7716-1eda-40c1-a4de-07aa3c60abe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e313b7ad-a920-4f8a-91c9-44320c3a2b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca8f6b2-40f1-4734-b625-6f794094ad38",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5535c885-25d3-4828-9bbb-a39e9c0eb0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95cb703c-e14d-43d4-ba6c-7298d1a5ae90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f98481f-6ec7-46fc-9faf-34d9ce7deaf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842aed54-ab1a-47e8-9f5b-ea227c20d8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10cf576-697e-4f23-821f-c81c503caa3a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f403b4e2-671a-425b-a2ed-be3a18194b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786c6707-7f63-4fdb-8c38-be916c2c7a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b88a03-ec4e-47be-a0b8-b2b439fe2f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb6e452-b04f-4804-a7a2-7b2a52ee81d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9dbe96-effc-41ee-93f5-ff1f751ce8fe",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e946b066-163a-4f16-b0d5-133105fb2283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7344ce-f35c-4289-9b54-e842286a2c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dddafc-9a56-4b8a-9aa6-b698e4439838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e589be72-ffa9-42a8-97fc-5aab1789715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b708dc42-ba9c-41b1-b7ee-ad080deda675",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ab44c7-88ae-4822-a32e-edcd58b66d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563805aa-0a1a-4dbe-9804-01619ef7036b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70ec5f8-027c-45f8-b7a9-394164dee829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624ad5c3-f0cd-41b4-be85-d56b5a494f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19084df4-1eb3-4932-9387-ddbf2dda86be",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f68514-43db-425c-b559-a46a37f9ba32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "811bcf4c-38b2-4aad-bda1-21508090fd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c766661-16df-43e0-84df-6338c44fccf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31635bcb-4550-444c-9f1d-624229dd859a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050fc3ca-20fa-4f50-9774-0a6cd381bfaf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63097d7f-d76b-49af-b0dc-b61607a4d11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07601ab7-9aed-4604-b887-2f6d44aae5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bfe3e6-1ef5-448c-8c41-d3a1b863465f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be9c54e-fa4f-4a52-b102-21f3d8f1e391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c31a815-8ee8-41c8-8ef6-40fb2cc3dec3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc182b3-ce4b-44b2-8a45-36ad55c3ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518725a9-95d5-4646-9f68-57189dcc0e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f400ba-bebe-44d1-8361-5bf56ac71796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0302ca4-4dfb-40e9-9cb1-e785cc07ca54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457812f2-1746-45c9-aa85-99a2b2888eb8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c908f329-a5de-49a4-ad8a-e061006f47dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed93721-0432-4f6d-bd8b-89a30b10f0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88918e6a-78ca-4ce0-9a94-c079b5537fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8bbc3f-11c6-4489-bcce-25eaacffd164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88068e2a-14c7-43c1-813c-ff215ab5f8c9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e244a2fd-4c3c-4807-a625-d4cc8dd838b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f6e1cd-d55a-495b-ad00-c3f77f150591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706819fa-2a0a-4446-9add-b02eca4fefc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac87c5aa-b20f-47fc-b625-80ee31c2c6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bdc3b0-eb92-4ea6-9b8a-cad16e70790f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911c0fb0-1e42-4355-8b8e-c903f9ed74fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d573af-b2ff-41a7-8908-469a0aa42c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a9ad20-14d0-45d0-803b-4c6bf1b4577a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8514df0f-a6e7-4745-96cb-8a80c9cdd390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c25909d-8565-40f9-a11f-ca5b15ca918b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49dfc5e-37af-48b4-8e2f-8d8d922d506a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0418eea0-adff-4a89-9f2e-1b4d73dd4f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff56794-72f6-40ad-9d66-fe7fb131c4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7f0424-68ac-4cfc-a18b-b00a0be49e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9806a2-7d37-4412-8e32-fba30bbda20e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6257ed5-6c7b-4439-8858-97bbb789bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9955e2-2dc0-40ac-b7a2-b731ccd21456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c84ac75-3490-481f-869a-cfa78e3b8701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9364c88-aa4c-4326-9f1c-5e699816005a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d507c3-ecd0-4838-8d66-25b1739c0db0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b96c30-0dbe-437e-b74e-64f07ec5776b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a4ed0f-8cbf-4121-aad7-232f089f259c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67a794a-9f7c-4ea7-a62c-616229e4de02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04d2bc7-d3e6-4ad4-9a6f-81ae2b6cecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420c90ee-8e95-488f-be3e-8f4e40c76278",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0450b3-7914-4faa-a499-a9fe70e641dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1062b5ec-ae28-4a08-b615-a6306f1a0cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fb63bd-8a88-4429-8f10-55fc0e1bc4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7c4ca9-f1dc-4835-bb97-25093a9724ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a83820-7230-47a2-8e28-fb609427b623",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3374c983-c4c4-474d-a930-cd2a15c21f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a34b4f8-6d2c-49af-aa3b-2bb3303bc4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b04327a-9c18-4181-afb9-c7bb6b3bbef4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef15e64-23cb-4b4c-be3b-e282a52d180a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d22911-2f27-480a-bbb0-9c2ea6fa50fa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958d1829-876a-49f9-be27-fd8994e22b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639f0d4d-d3ab-44d3-a7fb-c09c4d1afee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c1283b-81bd-4144-8c1e-da5cc504908c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43eddc18-092a-4c76-ba2a-21b9467a7672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f478d0-8797-4b52-8b85-a41bba41d332",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb130876-7c0c-431f-a446-7243471912bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc11532-05f1-483f-b0e9-3764805ece54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa95822-4c47-470d-b03b-300675c65ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef7d183-c3f4-4230-9076-9e57a4063c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19be63e-ed51-40e4-8b87-bcdec0eab7a7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76381b3c-55a5-434b-8cfd-4bba224fa37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a49a69a7-fc51-4ec0-a662-3d1aa50e0abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a15285-e931-4fb4-8fc6-e40b6b803b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6589526e-e4a1-497e-a5a1-caddef86a24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e24552e-ff7e-461e-a8c6-ed3d0b90f717",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e094e6dd-4a40-4d65-bd71-e0f07ee01005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f678b2-5bc3-4f7c-8c99-890d351ee92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea62252-e106-45db-a545-959944b5eaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068c8ba9-2154-4faf-88cc-600b74033864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b749b949-9598-45b1-97d1-4ebc1b12a8ea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49090fd-58e8-400f-adb3-5fb09629d654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80b9674-ef4d-4a6d-ade9-9b569c1e8330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83b0dce-292b-4700-ba47-508b47b51118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e73b45c-60a4-4c23-bbb9-180bee4c29ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7d404a-6e2c-4eaa-8e36-232e0720d6e1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ae8c5e-cea7-458c-93ef-53401e4e6499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a481e7-3f12-4742-b4ca-b8652637dc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a127c5-b24e-4133-a592-7377bef2c16d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9c997e-3b40-4061-929d-80e600d4324f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb28c146-0246-4f69-9b18-9e8607720dab",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7494f11b-0c0b-4107-9039-6ef93a95fc17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97f308fc-0358-42c3-ba5f-c13c04df3070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edafefe4-aee1-4e67-b932-5d7307ddf3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f21b93-32f3-4920-8cdd-3820011cf4ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da9dabeb-7269-428a-b30a-f46f2b4118b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f030d23-9076-4693-85ff-006a984fc400"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98f8fd55-3d29-479c-8f32-e6034b569330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea924bee-7bea-4586-ac1b-01edac657bbb"
                    }
                  }
                ]
              },
              {
                "id": "a76442f2-8d92-443e-8076-1a3189656af6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d528f3d0-c6be-4be9-876e-ce747031450d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac427a5f-1b6b-4a9a-8e75-14787c7cad19",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f55e333a-05b7-4cb1-b219-a21eefde2e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e62c5b-d14c-4079-98be-fd2d9e731afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51dad4a7-ac89-4be5-ac65-c7875c8d74df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48ea809e-d831-4f96-a91e-490f1e345637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2768d5f-d544-493d-9a64-c28cbb735734"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d00e99f7-ab54-45e4-937d-ebec12d0e40c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e2b6f59-e9da-4ca5-99d3-4499211e15cd"
                    }
                  }
                ]
              },
              {
                "id": "eb217029-2e7d-4233-80e7-7f9d2f08a2c1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2f0c8221-102d-4f59-a113-943f8b6a3169",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84bd93e-dfe0-4ac2-9827-7188fbc7b275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "377f1c6c-e8d4-4a59-8c18-d6dbd4a4be7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db93ca54-b5b8-4581-b76e-c69d88a780a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f3f84e-bc53-406b-ba7c-34a1e8dd8aa8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3f6f6368-350e-4cb8-9d9f-3a016bb43f05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70cb08be-08c2-4aca-92a5-9e827c93e7b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c01fa018-1d75-449f-a30f-1c85e08bfd37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "adff4f48-8e8a-4bc0-8ab4-2cec50eda2f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79099c76-e95c-4885-a3d7-e1d9b945c29f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60003fe-c3b4-443d-b18e-b30306eeb094"
                    }
                  }
                ]
              },
              {
                "id": "1aacb611-fc45-4093-8386-b3f542193b47",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d4aecb7-e978-45cb-84c7-9ab36082c2cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d7832ccb-6a34-4704-bf83-307e150ccf66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e61c86e0-375c-4a71-a01e-18241e359675",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e2247b-540b-411d-87e3-6aed521ee650"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5c22088-12a9-4944-811d-e8d55a15f0a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bbb680b1-adc0-460c-9cd3-defcdcd8e5f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d641475-e46a-4426-b47d-44056ad10383",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08e439bc-043c-4077-88f0-a04ab0641a1d"
            }
          }
        ]
      },
      {
        "id": "d25c4203-956f-4ed7-94c8-5c62c82f016f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2549a2cf-c20a-47ff-8a22-a1c9ce13bf27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65ee5dcb-633a-4bd8-bd15-63dd27913cb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7872d98c-4d1c-432b-811f-b7d7cd9b3a1f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a407bc97-7af1-4f49-bdae-7736b6c90012",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a201b427-d626-4ae4-a378-0f3c81404cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c169c9c-a98e-4285-92cd-76f30fcc147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1a8197f-b4ab-4a90-8a07-760bf7a6207f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f478725b-7261-48e8-96a1-b52e1281fe15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16154e8c-c2ff-4dfa-829e-8a1d1bee94a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c4665e1-d436-4280-b022-5e45a67f6fc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a324efad-f551-4889-9452-32d14ea13607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75c11320-2576-485f-951f-6eff5d28a4d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a309a432-5eeb-4ba8-8db8-c62782bcc9da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2629df4-5744-4483-b6e4-98a83c7447c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e109418b-f5bc-4448-ae33-ee563089de6d"
            }
          }
        ]
      },
      {
        "id": "9f98aba4-873c-4a36-b1fb-1d385c8bfe7a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fb20fbba-fbe1-4daa-8fca-26868b20552a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0afb624a-9570-4abb-beb4-00beedc7f4f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "045aa1dd-924d-46b3-82e6-639bdaf4aaeb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07e127e-bf01-493c-a24d-d72a4e929b70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553c927b-5971-4e1b-a915-32646836b148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89e6164-8ec0-483e-9dd5-078d1331aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787beaba-56fc-4ee2-8e67-056f075e2c3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9776665-6cb7-45fe-b310-e3735f99ba0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c395dd5-5332-4c0a-ade8-79f0defc5fb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d482e0f-e365-4b7e-a76e-189c36ce645c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acb2e484-7708-4372-bb17-bbdd6d38196f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "553c59c9-c96b-42f8-99fa-57a957fcc039",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49631e1c-145c-4230-aa54-7aeea2149d8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6b43319-3b59-4a77-aab3-cb113ad4feb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5548dc4d-22cf-4843-8356-32f543a48416"
            }
          }
        ]
      },
      {
        "id": "34fe148a-cfe9-429f-a4f1-336641f46e78",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7ba68b1-7d17-498d-9e10-b783e650e81e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68909972-9bb9-43fd-ab0d-aadfd7dbed56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ee728c8-6c95-4a38-b512-51573869dbce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b22eaa-8733-4f76-b39d-ec88e354e582",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd275ff8-a978-4cd1-8228-91a2159b3fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b89de1-4896-443a-bbb4-1f30b44a4710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0930a8cf-258f-4ad3-b84e-9d65fff79a0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec610aad-88a8-46b0-8e70-3e17ffd05e91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "187da192-22d1-4b8a-8e39-a936305bce8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74e24c2f-26b0-440e-9ce6-7e83db6e04e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72b624ad-73e0-4f22-9c39-486700d3b3d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e2d9b2-4ae0-4552-87e8-ad451c3d5d96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94906e72-59fe-4b98-9e6a-2e2f00abd895"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "362fd1c4-fc04-4d52-b6f1-d749fa192346",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32ff9912-799f-40e0-afee-d24983078819"
            }
          }
        ]
      },
      {
        "id": "5363c87b-ad62-40fd-86f1-5c2d7315df41",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2267c4a6-bbc5-439b-8353-e325c1eb2aa3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "451283cd-df63-4b76-bbd0-c549e408534e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a7308987-44db-41a7-84fb-38e73fef2bc3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b54a2ce9-93e6-4106-a7c8-b61a41388748",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24eefd88-7e26-4a62-b1e8-e221f4204c0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 152.17460317460316,
      "responseMin": 21,
      "responseMax": 11484,
      "responseSd": 763.0778120817755,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716079189055,
      "completed": 1716079235536
    },
    "executions": [
      {
        "id": "44f43ead-d246-461e-9008-b988eb119c26",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5ba1a609-09ce-4879-859e-3d3f341845fb",
          "httpRequestId": "3732ec86-d872-44d4-a729-5631b699a76f"
        },
        "item": {
          "id": "44f43ead-d246-461e-9008-b988eb119c26",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2634aef4-1aca-4268-b3d6-d017f616c9a2",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 0
        }
      },
      {
        "id": "4e44708a-6197-41e6-aa83-e8eb033a5e42",
        "cursor": {
          "ref": "5dc8cb3f-0d37-4394-affa-2608d0420630",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8a337841-5840-4a28-9646-96be20e1cfe8"
        },
        "item": {
          "id": "4e44708a-6197-41e6-aa83-e8eb033a5e42",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c08fa472-0035-41c9-a949-7d62b45f9d4c",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "32521f1a-3239-4f5c-853e-d0b8ba3e6cb7",
        "cursor": {
          "ref": "5fb4ff5d-4bc1-4af0-9eeb-87832965dd23",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "544fa863-a2a6-4f07-8e2c-42f4441824d4"
        },
        "item": {
          "id": "32521f1a-3239-4f5c-853e-d0b8ba3e6cb7",
          "name": "did_json"
        },
        "response": {
          "id": "651942b8-069e-4202-9f5f-24785d94ff64",
          "status": "OK",
          "code": 200,
          "responseTime": 495,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499f4823-6fc1-4a2b-bae7-dcdb3ea59d1f",
        "cursor": {
          "ref": "b144a820-a63c-4bd7-9621-6ebb7019a1dd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b36c1bb7-99f0-410a-a69c-84ce102222e5"
        },
        "item": {
          "id": "499f4823-6fc1-4a2b-bae7-dcdb3ea59d1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b4b65b9-4aba-4819-ae02-ad938f41b351",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499f4823-6fc1-4a2b-bae7-dcdb3ea59d1f",
        "cursor": {
          "ref": "b144a820-a63c-4bd7-9621-6ebb7019a1dd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b36c1bb7-99f0-410a-a69c-84ce102222e5"
        },
        "item": {
          "id": "499f4823-6fc1-4a2b-bae7-dcdb3ea59d1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b4b65b9-4aba-4819-ae02-ad938f41b351",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495a9d23-40ed-401f-9751-06c39fc1abcd",
        "cursor": {
          "ref": "8d5e2ec2-048d-4f68-b0f4-1de07839ea22",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfc8e430-6179-4030-928a-ab6bc62606ac"
        },
        "item": {
          "id": "495a9d23-40ed-401f-9751-06c39fc1abcd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "340005a0-a090-451b-9831-9b94b7afb906",
          "status": "Not Found",
          "code": 404,
          "responseTime": 191,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12aa52d8-f990-44d1-832f-c07df4439a68",
        "cursor": {
          "ref": "57c4fb1e-bdf6-48c3-9457-04be3e382df3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4844c819-550b-4653-a17d-2c59ec700a13"
        },
        "item": {
          "id": "12aa52d8-f990-44d1-832f-c07df4439a68",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d7c1ca96-2807-4bcc-9e08-7a6440d4a9f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43f2811-219d-4ba7-a56b-1952a33040b4",
        "cursor": {
          "ref": "7c87cae3-1bf1-4ea3-82c7-4aa02492f5e6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d885d34e-acce-4246-837f-9e5ffc904cca"
        },
        "item": {
          "id": "d43f2811-219d-4ba7-a56b-1952a33040b4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cd3ccf23-aede-4f2e-b075-18b49f9dab70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa60e485-901e-42f3-adf9-bc21ccd4e2f7",
        "cursor": {
          "ref": "424036ab-d944-4edc-86c8-89560def142c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "928b03e5-d8b8-419c-880b-689896ec5487"
        },
        "item": {
          "id": "aa60e485-901e-42f3-adf9-bc21ccd4e2f7",
          "name": "identifiers"
        },
        "response": {
          "id": "0ff45044-a767-4cb7-a1e0-ef39571b0534",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa362e8c-a29b-40af-9270-3f505fbc1cd8",
        "cursor": {
          "ref": "2d871bd8-a378-4235-99e5-030d78a35729",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "751dcbbb-9994-4553-b9c1-94d798717c63"
        },
        "item": {
          "id": "fa362e8c-a29b-40af-9270-3f505fbc1cd8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "df228704-8697-4de5-8097-b99bf3278049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f1e12b-b724-4a7e-b837-daf4273afc9f",
        "cursor": {
          "ref": "788285dc-aa69-4cd2-823d-5115bb645af9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8d169d95-f0cd-40b8-97d5-850ae8422b43"
        },
        "item": {
          "id": "a6f1e12b-b724-4a7e-b837-daf4273afc9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2671b9f-78dc-488b-bd8d-250c43b73be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216fd6b2-4fb3-4301-937a-c4968dd98a60",
        "cursor": {
          "ref": "02a63cae-2b56-4592-bdb1-b8cd82788a9f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "56eaedf1-a87b-475d-9223-532c757ffe9a"
        },
        "item": {
          "id": "216fd6b2-4fb3-4301-937a-c4968dd98a60",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9e65f8e0-f4c1-4c6e-8a5c-18928e48843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ddab7-f535-4f6c-944d-26db35aa4804",
        "cursor": {
          "ref": "bfb1b49a-8305-449f-942a-fac53ebd07c7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7283a695-8511-4fe8-835c-a7650b9328ee"
        },
        "item": {
          "id": "a77ddab7-f535-4f6c-944d-26db35aa4804",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1b77d3c8-fef7-4967-a651-b7c872b489e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253ae583-279c-462a-b5d4-8e76cc8b8bcd",
        "cursor": {
          "ref": "0ba66e81-ab70-4b75-8302-ea01f817e5ed",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ec207b6e-eadb-447e-bb0a-fe67ff73a67f"
        },
        "item": {
          "id": "253ae583-279c-462a-b5d4-8e76cc8b8bcd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a817c656-e85b-40c7-adca-f774575860e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a4e1cc-93bd-4c7b-8c66-d2f7228cbe5e",
        "cursor": {
          "ref": "be4ff467-9b27-40d5-a3bf-1a3d7280b3e9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e1ef197c-6890-444b-9ab1-6b35c9b234a0"
        },
        "item": {
          "id": "a1a4e1cc-93bd-4c7b-8c66-d2f7228cbe5e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "822364ad-9a97-4eaa-95cd-bbd4f504afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a418d23-bbe0-48d5-8f84-44702ba874f7",
        "cursor": {
          "ref": "bdd9705d-0b2b-4165-90f3-a48c6dd760fe",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ab212c5a-c842-4c99-8322-a6460f689af7"
        },
        "item": {
          "id": "2a418d23-bbe0-48d5-8f84-44702ba874f7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8ad2a042-1f00-41c5-b6c2-ec1b933266b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95b35f5-aaa7-4aa4-ba33-2aa39a477cba",
        "cursor": {
          "ref": "01744523-9559-4a27-9df8-92a66bee4504",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "29a693c0-fdca-4ee1-9ad0-6d271534d3b5"
        },
        "item": {
          "id": "c95b35f5-aaa7-4aa4-ba33-2aa39a477cba",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "605a588e-d954-49b9-8aa8-5f616943f2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc25220-8c1a-445f-9685-d4298e8ad8a6",
        "cursor": {
          "ref": "01347de1-d8c0-47fe-848d-6a25fc2a1d09",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "654327c5-49bd-4a26-b6e0-6b07bd7549e8"
        },
        "item": {
          "id": "0bc25220-8c1a-445f-9685-d4298e8ad8a6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4857e5de-9e1e-417f-b270-8be8eb673eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9970ba-b460-4eed-9e59-e599bbc6d986",
        "cursor": {
          "ref": "c48cd07f-0c94-440c-a38b-ff9ffc311813",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2f7e542c-40a1-4514-a8e6-98688cceda5d"
        },
        "item": {
          "id": "9f9970ba-b460-4eed-9e59-e599bbc6d986",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3b3bbbb0-e449-411d-a4aa-bc9c1bcaba1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d0ae22-6261-4707-926b-05c840f23d68",
        "cursor": {
          "ref": "d1e32c6d-99ab-444a-9392-f29631b8378f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9857af2b-b0a1-40d7-b6aa-429d1f508530"
        },
        "item": {
          "id": "b6d0ae22-6261-4707-926b-05c840f23d68",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c70b306e-156d-4cfe-a7f9-045dc3dde5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bce73d-5723-4d76-8512-a0df4d980e8a",
        "cursor": {
          "ref": "392f0df2-6739-47bf-a2aa-71238dc09e40",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e6cf55e-b325-462d-a8b3-8584cd272b2c"
        },
        "item": {
          "id": "f7bce73d-5723-4d76-8512-a0df4d980e8a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "49cd4c95-1fc3-40f8-90c2-a2d8cb4f6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6cf7e7-df6f-408c-9856-ef88e07e4272",
        "cursor": {
          "ref": "d51c2f86-1dc8-4ac2-ba70-232dab098775",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8973e5e-1ea1-42a4-8852-1452b89c46c0"
        },
        "item": {
          "id": "8e6cf7e7-df6f-408c-9856-ef88e07e4272",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "57e67d46-930a-4a11-ad6c-54b73341522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5c03fd-bb28-4e47-809c-ed17398b87fc",
        "cursor": {
          "ref": "6675ff23-853e-4b27-8878-41fa96f59159",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8fd02ac1-f4bd-4997-89f3-faddb331aecc"
        },
        "item": {
          "id": "2e5c03fd-bb28-4e47-809c-ed17398b87fc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "434fc1c1-cfd0-4929-8424-c170546560ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56f5994-6624-4671-a9ba-2e71ceb9d5ba",
        "cursor": {
          "ref": "6c99b6e1-827b-48e0-928c-3b1ff6a8a3d0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e730ddb7-bf8b-451b-8e67-200ae23cd976"
        },
        "item": {
          "id": "f56f5994-6624-4671-a9ba-2e71ceb9d5ba",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "58441a94-369d-4db2-b0df-64746e3b8993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bd23f7-df82-41ff-8685-4f988ebbd3c8",
        "cursor": {
          "ref": "fb01fe8a-106b-41ee-b8e3-f8ff375cfb29",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "770c647b-a9b2-4daa-aabd-e22adc50eade"
        },
        "item": {
          "id": "68bd23f7-df82-41ff-8685-4f988ebbd3c8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4b982918-9734-449f-b275-b5a53061b5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cca272-681b-4882-9640-615c8e20020c",
        "cursor": {
          "ref": "414899f7-f8b8-4ca3-9852-d039ec7f239b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7c73859d-204b-44ba-88f3-576cb7730c4c"
        },
        "item": {
          "id": "60cca272-681b-4882-9640-615c8e20020c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac547767-591c-4098-a0dd-7b6d0b9cb90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b107116-7598-4642-944d-7e8ad0486919",
        "cursor": {
          "ref": "1cc21dee-00e2-474f-af13-dbedc0c87e48",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "14c1ac16-d7a6-418c-b59b-a9c5d000e5c9"
        },
        "item": {
          "id": "2b107116-7598-4642-944d-7e8ad0486919",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b9faaa7a-c389-4453-84b3-f9f5ec2a3a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71809062-0386-49da-a6d3-d8590c805eb3",
        "cursor": {
          "ref": "832f3473-c543-4ae9-90d2-d0485d93e4db",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "05ebc1eb-37f9-467b-9959-7ef675e65856"
        },
        "item": {
          "id": "71809062-0386-49da-a6d3-d8590c805eb3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "39393329-7066-4963-83dd-34cb844e8d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e40c1c-a873-4fd9-94ee-4786daef8ca2",
        "cursor": {
          "ref": "ab6ec309-a9d3-45db-8e7a-9d8b2a14cb2c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f6e0ba23-55ae-4e54-8ea3-7e7d52f56dc8"
        },
        "item": {
          "id": "b5e40c1c-a873-4fd9-94ee-4786daef8ca2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7cde54e-4281-4761-af35-b5455983d7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebf68ec-f422-460f-b880-9c65ee3a3b0f",
        "cursor": {
          "ref": "767b9195-4eb7-41a1-a95f-04ec3492e5b3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "81d8c96e-d4e4-4971-94ff-fdd0c2c23d0d"
        },
        "item": {
          "id": "cebf68ec-f422-460f-b880-9c65ee3a3b0f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e1db741-de90-426c-a640-98afc448994a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dddd1be-cafd-4536-895f-28c3816d1baf",
        "cursor": {
          "ref": "8a650436-2a86-4ec7-a88e-b6ad2b6d5e34",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2abff9d9-86e3-4397-8a27-de4fc6e6e0de"
        },
        "item": {
          "id": "5dddd1be-cafd-4536-895f-28c3816d1baf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d9732ebb-01b4-423c-ab9a-a9b8717bb3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd224d6-6767-4099-8d1c-6b5f4919fe60",
        "cursor": {
          "ref": "973731c0-11a1-4b8d-980b-ca973d02d26f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "58fadbd4-6fa3-41c3-a583-52d2700b8110"
        },
        "item": {
          "id": "4fd224d6-6767-4099-8d1c-6b5f4919fe60",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cc67255e-ec75-440b-ba74-b259423308c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf67b1a-3514-4cef-8e58-9c05966e9aa4",
        "cursor": {
          "ref": "512c07ed-a147-4be5-8b9a-060c2c7931c9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f7f4eb72-0fcf-4851-917d-785c98063812"
        },
        "item": {
          "id": "bbf67b1a-3514-4cef-8e58-9c05966e9aa4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7ed55fc-561f-4adc-8866-2a5935bacad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8b5321-ddc9-4209-a22b-88d2bccb475e",
        "cursor": {
          "ref": "02b688e6-e193-4d55-a885-7cf19c8f9d49",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c3ece473-83e3-4d1a-85c5-f963e90bcf26"
        },
        "item": {
          "id": "9f8b5321-ddc9-4209-a22b-88d2bccb475e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dd240172-c166-4847-8181-d1e6fcdcdf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4453e72-6b83-4eea-9047-6cdbac408017",
        "cursor": {
          "ref": "e8d1d1ba-58bc-49ce-b8bd-4b5a1fc2ed5a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0f073acc-a28c-4a17-981b-059cbf91a6ef"
        },
        "item": {
          "id": "b4453e72-6b83-4eea-9047-6cdbac408017",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cb3039e8-4cda-404c-a05b-4ae49b7e3160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427515de-8287-4a41-bc86-d81d1962482a",
        "cursor": {
          "ref": "dfe81d56-2099-4fcd-a4eb-a43905e519e0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d39d1fb-35d7-4a3a-90e4-b67303d8c2b0"
        },
        "item": {
          "id": "427515de-8287-4a41-bc86-d81d1962482a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f839c513-a052-4ed0-a6e2-1f31ef6a95fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6703346-8e24-4bde-92cb-b046b916d2be",
        "cursor": {
          "ref": "73d93477-6fde-41f4-8fe9-c3a81f3eb48b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c64e31f2-96be-4cd6-b7d8-823b97e93b6d"
        },
        "item": {
          "id": "a6703346-8e24-4bde-92cb-b046b916d2be",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5a97c15c-11d9-4455-b860-b5411deb4ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1509faf2-1d63-4251-ace9-d24350d91279",
        "cursor": {
          "ref": "e6a3f544-d6b8-4284-a49b-b4288a53e313",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e04f521a-5266-477b-afcf-7e0c69f15cf6"
        },
        "item": {
          "id": "1509faf2-1d63-4251-ace9-d24350d91279",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "df915285-3069-445a-bc15-d073ca728325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b289a4-019f-4001-9fd3-fd163e3a41a4",
        "cursor": {
          "ref": "c6b33ea5-1eb3-4db5-bfae-c38ede78a451",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae1896d6-acef-4066-9095-fba0379667a0"
        },
        "item": {
          "id": "09b289a4-019f-4001-9fd3-fd163e3a41a4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1497dca4-9963-4d87-afe3-b6841787a115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5845ffbd-0535-4c07-9057-9b59c719d14c",
        "cursor": {
          "ref": "4f03051e-c668-4b46-98a4-6387cfb5d1ff",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "554bf353-f698-4510-8c19-6db519dae97e"
        },
        "item": {
          "id": "5845ffbd-0535-4c07-9057-9b59c719d14c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7ca27e9b-71cc-4bb8-9b64-d43c7b539049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca98ad9-f4bd-47ba-9411-3a499a8705c4",
        "cursor": {
          "ref": "ff971f9f-2b15-4c59-aad7-fb4ffc415b89",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28fb8c11-afda-45ca-bb42-1c43b244b694"
        },
        "item": {
          "id": "8ca98ad9-f4bd-47ba-9411-3a499a8705c4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e43ec2f5-cb5b-41d6-8895-92877fcfe2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ce18f5-f365-4bed-85df-b710f6cd660d",
        "cursor": {
          "ref": "a3f3ccaf-661d-4926-acb2-94a6f86e6b7e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "908a37d2-ffa2-4a20-a8f3-1653f2708704"
        },
        "item": {
          "id": "b3ce18f5-f365-4bed-85df-b710f6cd660d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a74a108f-9e51-4c46-bc5a-ac170ea9f12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18a897d-eeb3-4327-972e-084aa2d65cd4",
        "cursor": {
          "ref": "fda6acb4-72fd-44d7-8477-a5b5b783a8d0",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b406d305-9727-4160-b00f-58c488d71265"
        },
        "item": {
          "id": "c18a897d-eeb3-4327-972e-084aa2d65cd4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c3901fc2-dc04-4745-b794-62a540325f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59202ec7-359e-47da-80c3-b0913d1cdec2",
        "cursor": {
          "ref": "7088e088-9eb4-4f71-88ca-16d7f40e122b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "32fe9b5c-32d9-41b0-9545-2f6615c67a23"
        },
        "item": {
          "id": "59202ec7-359e-47da-80c3-b0913d1cdec2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0a862d1a-61a3-453d-9fed-1aa4f5d9e4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885f8900-254b-44e9-b093-f5bc3c3cef3d",
        "cursor": {
          "ref": "2c23918c-540d-4b4c-8a09-8d4d927f2a9e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "438fda1b-d730-4533-b4f4-5130005c17ca"
        },
        "item": {
          "id": "885f8900-254b-44e9-b093-f5bc3c3cef3d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d30e4903-631c-4792-aa79-37bdc7157c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e1db1b-2a88-4099-b64d-2618c5c428b9",
        "cursor": {
          "ref": "d3d0314c-0603-4d92-bc57-5bd8fe43c26c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "66638ce5-a045-4124-9b00-aed0c1f995c3"
        },
        "item": {
          "id": "07e1db1b-2a88-4099-b64d-2618c5c428b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1c6f73ef-7a75-4c49-b620-9d62889de5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9677f8a-1186-4b50-8a9f-881db80e4e70",
        "cursor": {
          "ref": "6565ecd7-0d08-473a-a54a-9d47982d9164",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dfa83e3a-3d88-4273-9ec5-215adadcfee0"
        },
        "item": {
          "id": "e9677f8a-1186-4b50-8a9f-881db80e4e70",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a723237d-f426-460f-a302-a071727adc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe2971-4562-44cd-9608-24e65e34d159",
        "cursor": {
          "ref": "13f0e13c-249a-434c-bf25-bb7bb348bcb6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "26aa5413-c82f-4ce9-b191-4bf8302aed2e"
        },
        "item": {
          "id": "4efe2971-4562-44cd-9608-24e65e34d159",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d9f8b5dc-6a99-4777-a4d7-bd9a4b975c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86e9136-14e3-4ade-bc3b-20117ffd0787",
        "cursor": {
          "ref": "2ee6b171-3f6c-4c53-8ce9-41f06a20b2a1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e51610ed-3c1f-4610-b012-beda43b6d3dc"
        },
        "item": {
          "id": "e86e9136-14e3-4ade-bc3b-20117ffd0787",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3418524f-0099-4473-8b06-39c39bf81c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da59b8b-6608-4b45-a04e-92f1685ff18b",
        "cursor": {
          "ref": "5a27c018-6beb-4cdb-9c67-2b6fdb7f7637",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "469b87c8-6378-4c23-8bd3-d86dc8085871"
        },
        "item": {
          "id": "1da59b8b-6608-4b45-a04e-92f1685ff18b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06a74bd9-a233-46f5-85da-49793603f066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe09448-b8c3-4f47-8f63-d5c926c569bb",
        "cursor": {
          "ref": "1849b17a-f3f9-4521-af66-1da090d4ad39",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7a588c35-5ee4-46b1-8830-c18337ed7c1b"
        },
        "item": {
          "id": "dbe09448-b8c3-4f47-8f63-d5c926c569bb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "03d9756d-b258-4e73-a7bb-dadc826e34a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f39ec8a-ea23-4f09-bedb-eb670ce12e84",
        "cursor": {
          "ref": "fda1b702-3670-42c1-89bb-7b5c43c367c4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9cbe0180-4b8d-4b46-9661-8d28889b8600"
        },
        "item": {
          "id": "9f39ec8a-ea23-4f09-bedb-eb670ce12e84",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "65bb5fc6-fcd5-4ffb-a656-853371be96c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ea43c6-c57f-45c6-a676-2bde733023ec",
        "cursor": {
          "ref": "36d8122d-bb81-419b-878b-a5069c081eff",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bfc0734f-2f07-4c76-9c9f-adfffa42f3b8"
        },
        "item": {
          "id": "91ea43c6-c57f-45c6-a676-2bde733023ec",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ad043fd0-f765-4e84-9990-c2f35fdf9ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9b88c8-a3b8-4018-8d52-8a15c34b3042",
        "cursor": {
          "ref": "d03c1e4d-6b9c-4950-bb64-16c5c37e6dce",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "80e2259d-5d8d-4183-9f08-5213c4262459"
        },
        "item": {
          "id": "7a9b88c8-a3b8-4018-8d52-8a15c34b3042",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4574a52b-4cda-44c1-8e60-bdb106310ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49ac0f3-8ce7-44b2-b0ff-8f823504482f",
        "cursor": {
          "ref": "dfb8b4bb-cfd5-428b-9116-bdf3cd3134e7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5d04f6a7-abd3-4f7c-b54a-93c05a7f54a7"
        },
        "item": {
          "id": "a49ac0f3-8ce7-44b2-b0ff-8f823504482f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a03d7261-1d51-4813-b227-3b23a454009e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f99c97-bfe4-4f4d-9e51-2174e8ecadd5",
        "cursor": {
          "ref": "41f47deb-f96d-4124-83d6-041bf38e78c9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f037f9b4-5bea-43e2-b9dc-eaa276308b02"
        },
        "item": {
          "id": "e2f99c97-bfe4-4f4d-9e51-2174e8ecadd5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "757c4a39-3449-420e-ad98-4068f8174073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144dc8b2-6507-4cba-808f-3a9f51885b18",
        "cursor": {
          "ref": "b431326a-9244-43c5-9106-99c6eed607b6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "424c040d-4011-4e5c-8bc3-7b49189c99d8"
        },
        "item": {
          "id": "144dc8b2-6507-4cba-808f-3a9f51885b18",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "faf89feb-7e16-4181-a4c3-8737e477e5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453db036-966e-4125-9895-ef9fd0fb492b",
        "cursor": {
          "ref": "ec301144-0fdb-4a39-a240-1e3438d6461c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f2222da3-023c-41d4-b2d7-57ba68ff0138"
        },
        "item": {
          "id": "453db036-966e-4125-9895-ef9fd0fb492b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6d6530ae-facb-4ab3-a910-46c6b3b93329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deed6b4b-ea26-4b34-a5d1-6b4c0106444e",
        "cursor": {
          "ref": "293962a8-239e-4e22-ab18-5905bf9c3537",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1fa7a088-9f04-425a-8dd5-c2a7e5624055"
        },
        "item": {
          "id": "deed6b4b-ea26-4b34-a5d1-6b4c0106444e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7523d843-3161-40fc-970f-809a32b01920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd1e0ad-d647-4722-a7b6-b788af040361",
        "cursor": {
          "ref": "4f1604df-1748-4fa2-8721-ef77579a9baa",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3277c9bd-7033-42da-b763-1ac41697a1ac"
        },
        "item": {
          "id": "9bd1e0ad-d647-4722-a7b6-b788af040361",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1f8b7af2-1e31-4701-b56c-52f75ec8be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67618861-a8b3-4f41-b7a1-171dcc0b11d8",
        "cursor": {
          "ref": "5ab632e6-feaa-44c5-9044-9470d33d7cfa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d9bda196-dc97-4911-8283-df269f4eb120"
        },
        "item": {
          "id": "67618861-a8b3-4f41-b7a1-171dcc0b11d8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0517daa3-3deb-4d78-905a-43cb3cde79a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd297f2-c913-41c5-aaf4-fb7a41801f06",
        "cursor": {
          "ref": "fade71d7-d017-4997-827e-e577780658a1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e95c5827-13f0-4f64-9781-944a67205939"
        },
        "item": {
          "id": "ddd297f2-c913-41c5-aaf4-fb7a41801f06",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2654362e-416e-4718-8ee3-3cc7dfa26f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf2f467-f81d-4e13-b1e3-603c2c0e585b",
        "cursor": {
          "ref": "0ff81e3d-38e6-4732-9a38-152d51b6df5a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "39e8205a-cef6-49e4-ba09-90bad806b80d"
        },
        "item": {
          "id": "7cf2f467-f81d-4e13-b1e3-603c2c0e585b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fa48f4da-73c9-4b7b-937f-bd3151d87e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6b8186-f563-4753-9382-d4622ac5cf0d",
        "cursor": {
          "ref": "01947618-33ae-4cca-a89d-5d559c407cc0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "533b2715-ac7f-473a-a0f0-410553a0a564"
        },
        "item": {
          "id": "3f6b8186-f563-4753-9382-d4622ac5cf0d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "55b1afaa-a174-4b59-a2f5-6691ec4b61c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14702aee-e2be-46c1-aa4f-bbb7792bd716",
        "cursor": {
          "ref": "721b2e23-5d62-4ed9-9e0d-3fbe717577e6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "33aaa7df-8a6f-4e75-84fb-6658ddbf9191"
        },
        "item": {
          "id": "14702aee-e2be-46c1-aa4f-bbb7792bd716",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "859570ac-b32b-42dd-b120-c3efe65b5adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3655c-c325-4420-ad12-b72826dbe96d",
        "cursor": {
          "ref": "c3753ade-94fb-4f8e-9976-8f4d2e2600d0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dd6ad843-be74-4a41-8679-c65f1abdb008"
        },
        "item": {
          "id": "3ab3655c-c325-4420-ad12-b72826dbe96d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9c61e540-db4f-4a9f-8d93-623a7c77fd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d00610-bbb3-4ec5-93fd-bc5c62f25bc0",
        "cursor": {
          "ref": "6b7e7990-92f4-4241-a5b4-4ff8abd681ee",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c0fefa8-7cfb-4144-8548-24d275e065c3"
        },
        "item": {
          "id": "89d00610-bbb3-4ec5-93fd-bc5c62f25bc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6faeaac5-671b-4d0f-b322-3820b8426be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c1b971-7fe5-46bf-a765-e72c48073c66",
        "cursor": {
          "ref": "aea09688-3ce6-491d-9b64-8767256bb05b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2b1c105c-725a-42f9-bbe2-f560bc76d65c"
        },
        "item": {
          "id": "30c1b971-7fe5-46bf-a765-e72c48073c66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "717f61cf-0bde-4fe3-a020-3e444e67f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccc8c49-4f29-4677-ad70-05519907f2d6",
        "cursor": {
          "ref": "e18f48f9-809e-4d02-9016-9273dda50a29",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a75badbf-6176-476f-a51c-141a854a3e8b"
        },
        "item": {
          "id": "9ccc8c49-4f29-4677-ad70-05519907f2d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96d083cc-26c1-4513-9c28-c42bb5f475bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01d50f6-4e2e-4a86-a77c-260c88b4bb08",
        "cursor": {
          "ref": "ed106c9e-7d13-4376-9755-1c5a483c79a9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9b942970-707e-4e6f-9bd8-06c868b91a04"
        },
        "item": {
          "id": "b01d50f6-4e2e-4a86-a77c-260c88b4bb08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c8ac5a3b-4c4d-414c-b2f4-a18f5f7d0452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951fca47-b5c5-4802-a63a-5e1e1173d4b1",
        "cursor": {
          "ref": "0c5bb8ee-6081-464e-ab68-a99c649b97e9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f078a84a-0342-4c39-9512-d369c1133940"
        },
        "item": {
          "id": "951fca47-b5c5-4802-a63a-5e1e1173d4b1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d31db7a-29ca-4303-b50c-db49a1a2a07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7c5416-b54d-4134-b6f6-e6f3f319c96e",
        "cursor": {
          "ref": "653181f9-b948-457f-8ed5-152c66de8cf4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "63127acc-d10d-4948-928f-c1b4824841df"
        },
        "item": {
          "id": "8e7c5416-b54d-4134-b6f6-e6f3f319c96e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dc2225aa-7c68-4dfe-8eb2-ddc881025384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735fd5ac-6199-42af-97a9-531e417aa2db",
        "cursor": {
          "ref": "32d2d46f-5567-4fec-a795-4f4fd61b678a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "71efccb7-adb6-47c4-a186-93cc957f9674"
        },
        "item": {
          "id": "735fd5ac-6199-42af-97a9-531e417aa2db",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f89c1b96-2343-4097-b455-57569098322c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67d67b0-11e1-4588-a2b9-7d93701d0472",
        "cursor": {
          "ref": "8effddc6-fc4f-488f-940a-43275aa99caf",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a52a7997-9294-45eb-a2a6-6b61e9d35d63"
        },
        "item": {
          "id": "e67d67b0-11e1-4588-a2b9-7d93701d0472",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "36882394-4f08-4c02-9808-5efce8e6802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d6d0c3-34bd-42ad-a20c-3f0bc059842b",
        "cursor": {
          "ref": "8ace19a9-1f12-4d2b-ab88-e6f30d7a7d21",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "85e24936-46f8-433b-917d-5450258af527"
        },
        "item": {
          "id": "71d6d0c3-34bd-42ad-a20c-3f0bc059842b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a359c4d6-8d48-4f42-86a2-937a3e9648bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133f536d-6071-475c-ba9c-605e4ad0f204",
        "cursor": {
          "ref": "c09968ca-ae43-4ca2-84f8-031c6ee73848",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2281523-ae10-4e8a-a90d-96a7cb02be8f"
        },
        "item": {
          "id": "133f536d-6071-475c-ba9c-605e4ad0f204",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2f19cec5-1bf1-480e-a48d-27e8cb77590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14889deb-68b7-46f6-ba95-144291cce508",
        "cursor": {
          "ref": "d3f911fb-933e-4cf7-b326-429090304cd0",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c5f93434-ca5d-4969-bfa5-64f0e01c62e8"
        },
        "item": {
          "id": "14889deb-68b7-46f6-ba95-144291cce508",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fbce9ecc-48c2-4d8c-afe9-4452766bdc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1344cbb-df58-4935-bd46-9ab0739cbac0",
        "cursor": {
          "ref": "14426475-2084-4af4-9cf1-5003f3384726",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c6342814-46ea-46d1-8d77-d6c08cd9a671"
        },
        "item": {
          "id": "d1344cbb-df58-4935-bd46-9ab0739cbac0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "48d63817-d863-4ee8-843f-af52b8639816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23e9ea8-cb9f-4549-8dcd-acbcf77a23db",
        "cursor": {
          "ref": "941f0c50-e6aa-436e-818a-ae0eb50c26fa",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3ea96661-b996-440e-adc7-5509294ab29f"
        },
        "item": {
          "id": "d23e9ea8-cb9f-4549-8dcd-acbcf77a23db",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e502b0f3-a83d-4e8d-b11f-dbfa2ea7918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc008ccb-2c5d-48cb-b7f6-9591ca330009",
        "cursor": {
          "ref": "83cc3c7c-ceda-4d8a-b9e3-ae22ed44355c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "35f8812f-b7a9-4700-b91e-39481c76df2e"
        },
        "item": {
          "id": "fc008ccb-2c5d-48cb-b7f6-9591ca330009",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4030c56f-f6f2-4123-958d-f2af7d1767cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ca9956-f7b5-438d-9f77-6997b478bde0",
        "cursor": {
          "ref": "5834a2ab-844b-43cc-b578-3bd7b0e670aa",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b96341e9-5439-4bae-97f7-eb915e054276"
        },
        "item": {
          "id": "f7ca9956-f7b5-438d-9f77-6997b478bde0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a2645eb8-25ae-4bd8-b3aa-d22e62191ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9dd880-32fe-49d5-93d1-ed2a8f0ed71f",
        "cursor": {
          "ref": "1d2e2620-3b49-4041-890d-14a533d25202",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2277f451-d907-4f47-bb2a-b8a49f8b0bc8"
        },
        "item": {
          "id": "1b9dd880-32fe-49d5-93d1-ed2a8f0ed71f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "acdf3e11-846b-4395-ad5d-3bf230e18f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751369a8-e9fe-444d-8a1e-31fdd642a114",
        "cursor": {
          "ref": "ad8d0b85-719b-4759-8cef-00cf23561d02",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "986a6a46-6eec-4599-844c-69a9400ebcf2"
        },
        "item": {
          "id": "751369a8-e9fe-444d-8a1e-31fdd642a114",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c02bb829-41ad-4d02-b24b-c4c771581bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7c86e0-c67d-4750-9ab6-d0761061d579",
        "cursor": {
          "ref": "f63385cd-713c-4754-9c1a-6abcadb06f93",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "462720dd-996e-46ab-8464-7ceffd293c3b"
        },
        "item": {
          "id": "bd7c86e0-c67d-4750-9ab6-d0761061d579",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ebdd5aae-7ec1-4b70-b92a-40e6fc41f5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9e66bf-08e6-424e-a580-330e5e726782",
        "cursor": {
          "ref": "87b70cd5-c4ce-4d0a-9aaf-f125a09f46e5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "74b46985-c145-4824-ba41-2768dbae9056"
        },
        "item": {
          "id": "9d9e66bf-08e6-424e-a580-330e5e726782",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c5acf62-4a98-4d1e-8dcd-66e44163c6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20df985d-51be-404a-af3d-411d0fc7c353",
        "cursor": {
          "ref": "bf297004-d88f-4c67-9cfb-662ae3df922d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5a14f896-c11f-441f-9e8c-b8f4a609cfc7"
        },
        "item": {
          "id": "20df985d-51be-404a-af3d-411d0fc7c353",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54460b9c-a927-43e0-885d-0dce2b71b9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cffa647-61d7-4a75-9ee6-032eaaa5ee5f",
        "cursor": {
          "ref": "b4806527-86f9-4ab3-9092-b2c9edebc7cb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1d9a3dc9-4533-47f8-828e-dbc18a804442"
        },
        "item": {
          "id": "9cffa647-61d7-4a75-9ee6-032eaaa5ee5f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "19585493-f803-4fd1-b042-305a23c6cc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f233595-43c9-48cf-8613-a696da418853",
        "cursor": {
          "ref": "438bdfa0-92bc-4b71-9df9-053d79be4d62",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "974b9e74-731d-4717-b4ca-28d089e6496a"
        },
        "item": {
          "id": "0f233595-43c9-48cf-8613-a696da418853",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ac2118d5-0b64-45e4-8b32-f04e8df5619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff545241-7a2c-429f-9fd9-d6f5550b5004",
        "cursor": {
          "ref": "fad285e1-9348-4f45-8450-d60420bde6b0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "88c2e067-036e-4739-9476-589effe8b99c"
        },
        "item": {
          "id": "ff545241-7a2c-429f-9fd9-d6f5550b5004",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4b7d3633-0797-4bfd-8911-f38d14812e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e466d685-90cb-4be5-a5c6-4879595cc0a5",
        "cursor": {
          "ref": "c1e1ff13-1d91-4deb-8c46-91f54d1f0e58",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5ec1f0ab-099d-456a-abc0-8f2874dd5ab7"
        },
        "item": {
          "id": "e466d685-90cb-4be5-a5c6-4879595cc0a5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "62624cbb-dc9b-4186-b817-92269d92ec9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4904d2-9912-4507-a906-6d983b3c1f51",
        "cursor": {
          "ref": "88a04461-2c42-49ee-878c-3f1e57f56b9b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2a8bc627-374e-430d-8755-6f423279ae85"
        },
        "item": {
          "id": "4a4904d2-9912-4507-a906-6d983b3c1f51",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "31aeecc4-8345-49bb-be6d-546f04eebfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63158fa2-7fa0-4b78-9f7e-5aace8656cfc",
        "cursor": {
          "ref": "201d9268-fb27-49f2-994a-7e791786bf8e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3f19270e-f0c6-450f-b62c-f2b1d2c0cba6"
        },
        "item": {
          "id": "63158fa2-7fa0-4b78-9f7e-5aace8656cfc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7525c51f-b3f3-4fb0-b413-779d61e5bf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8355d9-39a4-43a2-bfe4-9c2c43379651",
        "cursor": {
          "ref": "b6f0e0ce-1c54-4561-90a9-13149f8dd078",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "26a1a288-8ad5-4bed-86cc-b981c55fc8ad"
        },
        "item": {
          "id": "8f8355d9-39a4-43a2-bfe4-9c2c43379651",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee41bbc6-baaf-4bef-ab6a-2a9af9138d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f48aa9-9dfd-4539-bfc7-81c65615a82c",
        "cursor": {
          "ref": "b4b7c203-1bff-4a84-9002-371cab50ffeb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6372960c-2043-4b98-93a2-a911f8a41f6a"
        },
        "item": {
          "id": "d0f48aa9-9dfd-4539-bfc7-81c65615a82c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a47260de-cec4-46d0-b244-2dec130a6d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab3981-deff-4a2e-bb79-c6a94a8e1e8f",
        "cursor": {
          "ref": "fa48c6ba-b320-4bc8-80bd-29de86d17bdc",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d5e0092b-2eea-485e-9e55-5e312758aaa8"
        },
        "item": {
          "id": "f6ab3981-deff-4a2e-bb79-c6a94a8e1e8f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1ae75619-5609-4579-80f7-668c67bb5bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bc47f9-f097-4559-8f62-a4be02ee90c2",
        "cursor": {
          "ref": "ed9bee3a-06fc-435a-8e53-b256a5bd685c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0fb5208a-d10e-49d1-b417-09336516bf26"
        },
        "item": {
          "id": "d5bc47f9-f097-4559-8f62-a4be02ee90c2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a08fdc39-5462-4940-bd0f-49ad69156f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792b4ba2-926b-4125-b337-14b9a58d3692",
        "cursor": {
          "ref": "256144e7-ace2-4c23-a67a-b5bfe311d4d2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0591052b-0d66-4e43-b3bb-7054e9a16e31"
        },
        "item": {
          "id": "792b4ba2-926b-4125-b337-14b9a58d3692",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "870e65db-cd26-4e0d-8b91-eee802d4041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeb363a-b018-44bf-aa4f-695c02b2aea9",
        "cursor": {
          "ref": "0a924d99-5268-4a0b-b9b8-5067d112f1e9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "33ef271c-6171-43d6-9192-e45db93854d9"
        },
        "item": {
          "id": "aaeb363a-b018-44bf-aa4f-695c02b2aea9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6686817-046f-4fd9-a594-184adf6f7c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fed4d7-5afb-49be-ae78-1d20bbf20ef4",
        "cursor": {
          "ref": "e5bf8473-8583-44cd-b6f1-62b607c52f17",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a3277745-4910-403e-9c9c-ccb5a389cb7f"
        },
        "item": {
          "id": "b4fed4d7-5afb-49be-ae78-1d20bbf20ef4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "31dfe9a3-753e-4323-a142-22eb9b5c4949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108923a7-41a6-4654-9c2a-61773f63d1b9",
        "cursor": {
          "ref": "dbb3963b-6dd3-429f-8ddc-e154fb88d044",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ff9e64cf-481e-43d2-b134-e800b90fcbec"
        },
        "item": {
          "id": "108923a7-41a6-4654-9c2a-61773f63d1b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1606ca21-cdd4-4c21-85c2-a4fb79245b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b5ca4c-76f8-454a-ad0b-a538a0b661f4",
        "cursor": {
          "ref": "e069898a-5065-4e57-82fa-79a0028b9775",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "40a0eaf8-907b-46eb-a1f9-ddda138b8e99"
        },
        "item": {
          "id": "d6b5ca4c-76f8-454a-ad0b-a538a0b661f4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "58377106-24ab-4e6d-94b8-f7e0168e8d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243d0adb-a210-49dd-acfe-c5f7f662aea6",
        "cursor": {
          "ref": "7ddad083-78ed-412c-9166-8fae365f5a8d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c54b25f7-ff5c-4517-9448-ee82e23b9185"
        },
        "item": {
          "id": "243d0adb-a210-49dd-acfe-c5f7f662aea6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f2277725-18cd-4d8a-b23e-a78196396b95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a50362-08db-4bbf-b699-92567b7d0460",
        "cursor": {
          "ref": "45370120-ddaf-4b77-957d-870a9c106280",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d43d7d00-2edc-493d-8592-ded1f1c5390f"
        },
        "item": {
          "id": "c4a50362-08db-4bbf-b699-92567b7d0460",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6f11b3a4-1bc7-487a-a30b-6537552df1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8e04f11a-6e34-4809-a5c4-44294f6df506",
        "cursor": {
          "ref": "e9acd95e-b5da-4a84-ad1b-0222bf9824d1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "93fefd4a-668e-49f7-b4ab-ee6a01805b02"
        },
        "item": {
          "id": "8e04f11a-6e34-4809-a5c4-44294f6df506",
          "name": "credentials_issue"
        },
        "response": {
          "id": "19cac19f-a2ab-4537-a049-c0da1858dd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ee32c654-e8ab-4f70-b247-32f4d4e34d91",
        "cursor": {
          "ref": "3197b84a-61ce-45c0-91dd-1c98827b96e5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7791b6fd-e463-46b9-bb42-cf021dff3ba9"
        },
        "item": {
          "id": "ee32c654-e8ab-4f70-b247-32f4d4e34d91",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d8ec036c-ec9b-4fd8-990c-45b15af18a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "31bb395b-82e7-4318-9a17-04add396cfc9",
        "cursor": {
          "ref": "f88a3657-8ec5-49a7-88b6-3f90c86b2840",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "621b20cb-4ed3-4f89-9bcf-9f4cdd844313"
        },
        "item": {
          "id": "31bb395b-82e7-4318-9a17-04add396cfc9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0fe9045b-56c2-4229-a8ae-4e37faaffbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ce088504-004f-4cb0-83b8-6ec72750b720",
        "cursor": {
          "ref": "56177cb2-eac4-41bb-9198-635ce61f1b9d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2513e203-e9d7-4e1e-9e6d-c89fd9ade1ec"
        },
        "item": {
          "id": "ce088504-004f-4cb0-83b8-6ec72750b720",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ef046ed-97d0-4c74-bb8e-7052ca0a7885",
          "status": "Created",
          "code": 201,
          "responseTime": 11484,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "953ae3bb-7d9f-43e3-8eee-e92abded6b61",
        "cursor": {
          "ref": "e64ac551-fb68-46f7-a0ec-0544aad867b8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "63fb60ed-c93e-4df9-91ac-d22d58c9367c"
        },
        "item": {
          "id": "953ae3bb-7d9f-43e3-8eee-e92abded6b61",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1c17dc72-a925-4387-a0a9-4e0cedd492f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "892738ec-6c52-4ee9-bcde-93bfba0eb482",
        "cursor": {
          "ref": "6b94f316-3971-4a23-9327-985272809edb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ae122d26-7530-42a5-a47b-2a819b2d6d74"
        },
        "item": {
          "id": "892738ec-6c52-4ee9-bcde-93bfba0eb482",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "64bfec5b-0163-4f7e-8c9d-174de65ff22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "008ed0c9-cb70-49d2-875e-1cb3db4bf5df",
        "cursor": {
          "ref": "40af172e-0553-49f2-8da8-9b320a76b137",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "415e51f1-ad0c-4112-bea7-788b5d1975bf"
        },
        "item": {
          "id": "008ed0c9-cb70-49d2-875e-1cb3db4bf5df",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a2f725d8-fa41-4313-af91-9eb56f02c280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039e58e6-00f8-42c2-ac09-36cb14ef0109",
        "cursor": {
          "ref": "3bc830c0-ec54-4126-a875-3e759574a7ec",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4f81766-2a06-42bd-9faa-0ef6089c1375"
        },
        "item": {
          "id": "039e58e6-00f8-42c2-ac09-36cb14ef0109",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ad27cc6-90fb-45be-9c7d-8fc069dd6917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197b9f58-a5fd-481b-840a-388e7f8242a2",
        "cursor": {
          "ref": "a3475990-81ce-487d-abea-551aeb9ad6a3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "14ec6c2f-54c6-45b2-91c5-1ea2de9b5263"
        },
        "item": {
          "id": "197b9f58-a5fd-481b-840a-388e7f8242a2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e29bd1e4-f0b8-40aa-99ec-bef53588cfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a124f8b0-f5ee-4d1d-a3aa-c3e18b97e661",
        "cursor": {
          "ref": "c497c04d-e21d-4945-9504-9d820502b864",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00d72296-65ba-4f6c-ac53-140b4f7e32de"
        },
        "item": {
          "id": "a124f8b0-f5ee-4d1d-a3aa-c3e18b97e661",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "398e6524-0979-44b3-8d93-480558d608b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ff72c-af9b-4561-a68e-9234b0e27e38",
        "cursor": {
          "ref": "d9f1b332-1335-40f3-9ba0-144bab7e5744",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a7b8f4da-91b2-4c2b-874f-dae9db022352"
        },
        "item": {
          "id": "ac6ff72c-af9b-4561-a68e-9234b0e27e38",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e6e25bc0-7be0-48d5-938d-94bb95f763c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6383a1-80d1-4e04-bc6f-94343a1efdba",
        "cursor": {
          "ref": "2f9b2d9b-e036-49f0-8ede-20d6f71d4ad4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cfde4bc6-c63e-4324-8c76-71cb7464d35c"
        },
        "item": {
          "id": "7f6383a1-80d1-4e04-bc6f-94343a1efdba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "870e81ca-0816-4474-b089-a6d834492ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6e03bd-cee9-4623-8769-c8bb5ad63342",
        "cursor": {
          "ref": "5d085c69-6fa1-4576-9ccb-a38813090bd3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "da6bae1f-855f-4f29-835c-ec1db68f5d7c"
        },
        "item": {
          "id": "6b6e03bd-cee9-4623-8769-c8bb5ad63342",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5dc3ab20-a26d-4b7d-baa4-7576a6d5f285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df119ce-c822-47e8-bc41-79f620abefa3",
        "cursor": {
          "ref": "074b80fc-4da3-4493-abff-c6069d352720",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "48b0495d-f25e-4fba-8980-72feb954ea55"
        },
        "item": {
          "id": "8df119ce-c822-47e8-bc41-79f620abefa3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cca6bd25-fb15-488b-bf22-cdb56ffb3339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1863e39f-902c-43fa-bfc7-b7aca8d600e7",
        "cursor": {
          "ref": "5fe1319a-5364-4a3f-84e1-1efc047d7f3b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c07eb836-5d58-42d1-8912-6c71013cc295"
        },
        "item": {
          "id": "1863e39f-902c-43fa-bfc7-b7aca8d600e7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7fb781fb-4fcc-4003-8c59-fa22b1c4f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18091b23-7780-424f-ab63-6f1276fda96d",
        "cursor": {
          "ref": "72568a8f-d5cc-454c-baae-b676366e0979",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "39d485e4-1123-4254-b10d-7bf1c7406b07"
        },
        "item": {
          "id": "18091b23-7780-424f-ab63-6f1276fda96d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3c7210b5-58d7-4758-ab66-6dddf79ff5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6545ea-4f33-41e1-a33f-de427006d54e",
        "cursor": {
          "ref": "b4f0e51e-1d03-4630-9399-6c0cf595627b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f8afdcc2-7434-4271-93f1-439b3973c62e"
        },
        "item": {
          "id": "cc6545ea-4f33-41e1-a33f-de427006d54e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b3541975-fd29-4050-9e79-9706f787dba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a907e-c004-46b5-9fd3-9962eee49096",
        "cursor": {
          "ref": "bee84ebf-afb5-490a-b1c4-6224e5a5a9a8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5b68e837-cf90-41c9-99e6-807229e80b4d"
        },
        "item": {
          "id": "9e6a907e-c004-46b5-9fd3-9962eee49096",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "40e30df1-30b2-4e1c-924b-26e03026ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bf85d3-4e6d-4057-b348-3397cb974a09",
        "cursor": {
          "ref": "f1e10eb3-d7e2-4e1f-a3eb-1da76aedfcad",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8f9fb550-ecac-4f50-bb25-942a2c36036c"
        },
        "item": {
          "id": "f4bf85d3-4e6d-4057-b348-3397cb974a09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b645a125-5eeb-46dc-a7d7-33769ec348d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019aaaac-0b48-4e76-aa48-2e26a1359d3b",
        "cursor": {
          "ref": "f3829123-0b6e-4090-b30c-54118bb639d7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fb3e7db3-462b-4b08-ba8e-719606862e43"
        },
        "item": {
          "id": "019aaaac-0b48-4e76-aa48-2e26a1359d3b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a482262-bc43-499f-ad3e-4c9b20fd7dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd304b4f-5476-4f39-92c2-863c638b0dc7",
        "cursor": {
          "ref": "a07b3d9b-20d7-4021-9eed-d50651fa4782",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b25655ea-b21d-470b-9c40-494929a2e82e"
        },
        "item": {
          "id": "dd304b4f-5476-4f39-92c2-863c638b0dc7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "24fb3fcb-e20d-424a-a068-27df096008e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce56f70-05d0-4a8e-8c0b-7abc7cb1ebbd",
        "cursor": {
          "ref": "7965a740-eba6-4c45-b1d5-33e32792711f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "207060fc-cfe1-4629-885e-763c70e17cae"
        },
        "item": {
          "id": "6ce56f70-05d0-4a8e-8c0b-7abc7cb1ebbd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "027ce975-3942-4f3c-bab9-8cce60788151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe949d6-7491-45e2-a90f-60345152eb71",
        "cursor": {
          "ref": "3ff1345f-9a7f-4960-9103-47ddf745224e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7a43896b-2525-4152-8e7a-8662998261cd"
        },
        "item": {
          "id": "bbe949d6-7491-45e2-a90f-60345152eb71",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8b1e2995-8338-43fa-9e7d-1707df4a9653",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "531907a0-9bba-428b-8e2b-eeaff37c5dbb",
        "cursor": {
          "ref": "075cfc2d-73a9-42a6-9843-75fd1472a061",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "22b54a8a-6ddf-4823-b140-20b059a229ff"
        },
        "item": {
          "id": "531907a0-9bba-428b-8e2b-eeaff37c5dbb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d1053db4-c1f1-42c3-a8e7-312a1c81f4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6e6125-f125-4d9b-a148-d4a84873ebcf",
        "cursor": {
          "ref": "98ed0838-dd44-472f-980c-4880d79b125a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "739d9a0f-826f-485a-921e-8615058e3b13"
        },
        "item": {
          "id": "de6e6125-f125-4d9b-a148-d4a84873ebcf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1cb9f4b3-7c80-4c17-98d7-56d01c8effec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2473d8bb-f3b6-41af-b545-b10258c2fe02",
        "cursor": {
          "ref": "2c6aad87-af6d-403b-81a0-b1f401e11ed0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "46d38618-341b-4d80-98a8-cb5eb78b1b16"
        },
        "item": {
          "id": "2473d8bb-f3b6-41af-b545-b10258c2fe02",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e9b4f53d-7061-40d9-a3f9-90e4310f6947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8ee814-9433-4fa7-9ae8-9f3a087cfe50",
        "cursor": {
          "ref": "d39d94a3-185c-42de-a49e-4e00c6461c99",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "57fe3df5-12e0-4bad-8950-88b9ddad5d33"
        },
        "item": {
          "id": "fa8ee814-9433-4fa7-9ae8-9f3a087cfe50",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3dba53e1-5c19-4d4a-b855-86903b5dac40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7688881d-d1aa-4bbd-ad14-6e18d27636e3",
        "cursor": {
          "ref": "031cadce-09dd-4b44-930a-a28b53b5ae63",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "15cb0c72-b214-4958-9a0a-2db0a094c0a1"
        },
        "item": {
          "id": "7688881d-d1aa-4bbd-ad14-6e18d27636e3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "208342af-b15f-4bdf-82aa-9964af523269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f7e259-192d-45f8-bf9b-4af992beb5ae",
        "cursor": {
          "ref": "946cd9e1-7dfa-4a96-bdd9-df08f8f220ed",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "602a3ea3-d914-4925-872b-651046af74bc"
        },
        "item": {
          "id": "e2f7e259-192d-45f8-bf9b-4af992beb5ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5ec73962-b56b-400e-b454-fce564d70885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e21b82-680f-426a-9c61-e2ca84ca4fb7",
        "cursor": {
          "ref": "48f1cca6-d0e8-49a7-956d-0882bf7c283d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0cfbab18-4b39-4311-86d7-79cfb6940c0d"
        },
        "item": {
          "id": "d3e21b82-680f-426a-9c61-e2ca84ca4fb7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d8073196-d851-4eaf-9661-55f83c823006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a688a976-5090-4698-bc4e-aa6c527dff2a",
        "cursor": {
          "ref": "4493d769-b5e5-473d-b1e9-15e3afdf78ee",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1ce5ee32-2373-4ec3-90fa-438071590036"
        },
        "item": {
          "id": "a688a976-5090-4698-bc4e-aa6c527dff2a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eca0a7a2-cc10-4135-b7df-f98d8444e1d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "25bc7401-6d8f-4108-904d-23c9f6dc12c9",
        "cursor": {
          "ref": "1daafbd6-9164-4e32-a767-3cfbb0fee7d9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b92be9dc-3132-4c1c-b2ef-872f3c97540d"
        },
        "item": {
          "id": "25bc7401-6d8f-4108-904d-23c9f6dc12c9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "512cc9db-88e2-4106-8916-811c013a9487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db863c0b-30d1-4766-85fe-e660f6b83b16",
        "cursor": {
          "ref": "975261e8-5839-46ce-b2a1-0cd312f93dbe",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a701707b-e3f0-43d7-a242-f20cc349639c"
        },
        "item": {
          "id": "db863c0b-30d1-4766-85fe-e660f6b83b16",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "590660f5-c34d-485a-8b1d-e1bb6a17c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5659337-c4c1-4e9e-93ef-41cce03213d5",
        "cursor": {
          "ref": "f8c1a275-5b1c-409d-847e-bfa8b46b7447",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4b0d2390-0f4f-42a4-a5c5-5fccb37e3a3e"
        },
        "item": {
          "id": "d5659337-c4c1-4e9e-93ef-41cce03213d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f0a827d-a4ef-48b4-961e-7d3305ad903c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358abc9a-665f-4450-ae01-1143b12d6b3c",
        "cursor": {
          "ref": "748994cc-e8a5-4889-a0fa-e342142dabb6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "965117dd-932d-4172-a388-b57cf5a9368f"
        },
        "item": {
          "id": "358abc9a-665f-4450-ae01-1143b12d6b3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ae7ff192-32e1-4900-b493-98cd4a584fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373ad0a1-f97b-46d1-a4c6-6122e5954675",
        "cursor": {
          "ref": "2292e3c0-9bf5-4ae2-a186-62d17ef512e1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "430409f2-c3b6-4412-8b25-1f7e2b12dfaf"
        },
        "item": {
          "id": "373ad0a1-f97b-46d1-a4c6-6122e5954675",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a4f62620-2990-47b1-914d-8c8becd299d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a6be5-451b-42c0-8663-63011fe04ca7",
        "cursor": {
          "ref": "0de07c6e-887e-4db9-9f35-44c58844fbed",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2e90c668-e448-48a9-ba7f-43f93e41b674"
        },
        "item": {
          "id": "988a6be5-451b-42c0-8663-63011fe04ca7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0e7b3d4a-d06f-49b3-93b1-29dfc40be468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274cb6b9-1d1b-409d-a12f-1c68f0554a8b",
        "cursor": {
          "ref": "c2c79902-6f97-4c85-9e41-0c9971ab3db8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d22c0f33-7f8d-4a0d-9870-ace1c7987590"
        },
        "item": {
          "id": "274cb6b9-1d1b-409d-a12f-1c68f0554a8b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4ad347d5-83ec-42f5-9f80-3cdb4307407d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9d70bf01-8a05-452e-b961-7fe8c04de146",
        "cursor": {
          "ref": "1632bf24-de12-4552-8b68-44b6d910084b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "250da3bf-14b7-4ffe-9bf6-248a90ba8dc4"
        },
        "item": {
          "id": "9d70bf01-8a05-452e-b961-7fe8c04de146",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8705808f-a003-4780-bf9e-207ca61bfb76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3825eab3-796a-410c-8219-627b29ee1054",
        "cursor": {
          "ref": "bd127f78-df48-4d23-b053-7c7d56a4bc31",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "07767644-b458-42e4-8739-ef7093905415"
        },
        "item": {
          "id": "3825eab3-796a-410c-8219-627b29ee1054",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0e909b72-e058-4fef-b774-f44958e5caa4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f1730b03-fca3-4463-9eab-01edcd572364",
        "cursor": {
          "ref": "f842d904-3666-4d99-9a68-6411c549a89f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f0391b25-866f-44f3-aa21-2492b75ed323"
        },
        "item": {
          "id": "f1730b03-fca3-4463-9eab-01edcd572364",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "daddca23-b496-49fb-bea5-fe65f9522ad9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "6985350c-cef0-4081-b9ec-ccb620b1d6a4",
        "cursor": {
          "ref": "17396491-63c5-42fb-a260-7f96b3bc3cd5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ace49283-48de-4b9d-bcdd-8eee0d3a0f68"
        },
        "item": {
          "id": "6985350c-cef0-4081-b9ec-ccb620b1d6a4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "15b3cf1f-4a82-4618-b345-42954ec7d13a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "02133f9d-3506-4a57-8146-372bbc6fb684",
        "cursor": {
          "ref": "e23fb252-7524-4871-9074-cee96f7b26bc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3451efb6-f7b6-4a7b-bf29-d34caf43b86d"
        },
        "item": {
          "id": "02133f9d-3506-4a57-8146-372bbc6fb684",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "71db5f9d-0720-4b0c-82b6-a1ed46c9f307",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5ea93e04-12ca-40d6-b419-f988f2410a39",
        "cursor": {
          "ref": "011fa52e-62eb-4ee2-944c-1c22aebd585e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b9e2c269-0266-4c3a-ac1b-5bd41d304497"
        },
        "item": {
          "id": "5ea93e04-12ca-40d6-b419-f988f2410a39",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f429bca7-365a-4631-b607-57363ad0d6c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb742847-ddea-4111-9884-cb45044b5cf1",
        "cursor": {
          "ref": "776ef3f6-086e-49f5-96d2-a0f14f69ac75",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "12fed019-8590-471a-ad8c-f9c3ae2dca05"
        },
        "item": {
          "id": "fb742847-ddea-4111-9884-cb45044b5cf1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c8d275f9-e21e-49ae-81fd-9f707aa4062b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb83bb08-480a-4727-b978-c71cf1d2eab8",
        "cursor": {
          "ref": "e6ecbe51-8023-4ba6-9882-c4485eeac7aa",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f6e6d5c8-f9df-4849-97f0-a266bfba0529"
        },
        "item": {
          "id": "cb83bb08-480a-4727-b978-c71cf1d2eab8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "278e8e7f-df95-4111-80ea-b174b460bcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24e945d-8b7b-417a-8f3f-e47025fc7996",
        "cursor": {
          "ref": "266871b5-b203-4553-8a11-011e1e2fbab9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3230a778-6200-41a2-abea-eb9af37aaf55"
        },
        "item": {
          "id": "a24e945d-8b7b-417a-8f3f-e47025fc7996",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4737a010-dd18-46f5-b823-b1affb41bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f658497-baae-48de-a7dd-82896915f201",
        "cursor": {
          "ref": "0dac942f-310f-40b6-9566-5776d27989de",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "47b28d1b-6c68-4f42-ab78-26d373bb66f3"
        },
        "item": {
          "id": "5f658497-baae-48de-a7dd-82896915f201",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e79597b-4505-4df5-bbe6-358cef6c43fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac10c99-ed8d-46cc-b7de-dd9d928581c1",
        "cursor": {
          "ref": "ac3dba66-7904-4c2b-b129-07df065d6148",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "361df4f9-c925-4193-b17a-3527b4080ba3"
        },
        "item": {
          "id": "9ac10c99-ed8d-46cc-b7de-dd9d928581c1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "91c242af-2473-40a2-aa85-b2b4af7750cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e814c68-9327-4846-98d1-cfb2b72d7bf2",
        "cursor": {
          "ref": "37157702-c867-460f-8546-a39bc9d5d0c4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "91f8b964-0a47-4e70-bfde-809af207d271"
        },
        "item": {
          "id": "0e814c68-9327-4846-98d1-cfb2b72d7bf2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f08c3018-0c8b-4838-9df8-01d429903a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f238542b-4025-4274-a156-7c05b71bbbb3",
        "cursor": {
          "ref": "16f39b61-4fa9-4685-9759-767d0174675d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c38cdc03-12f2-41c5-87f0-8fe1e30e32dc"
        },
        "item": {
          "id": "f238542b-4025-4274-a156-7c05b71bbbb3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7c177ca0-7033-4b0e-87eb-0a6b3767eb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd50b330-00e2-400e-b3e5-ae98af5cbe58",
        "cursor": {
          "ref": "e2b981ab-28d4-490e-bc22-72ecaef7b000",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "26d5f25f-880b-4121-92ba-2ed4a3f64856"
        },
        "item": {
          "id": "bd50b330-00e2-400e-b3e5-ae98af5cbe58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9d4a368-bce0-47ee-a345-ed1bbfcf2051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2ac7ef-c17a-48a4-9994-a8ed167c5da7",
        "cursor": {
          "ref": "b65699ae-6f63-47e3-bc72-9c1f14e71bdc",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d22c6d62-411f-4b7e-96c3-c4d928f71bb8"
        },
        "item": {
          "id": "eb2ac7ef-c17a-48a4-9994-a8ed167c5da7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ec3e66c6-42f3-42e8-b56b-a57cc7df1880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2149e0c5-cc15-4876-a76a-c0489798256e",
        "cursor": {
          "ref": "986e42b4-dc4e-4ef9-a876-3d3230e7d90c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1e52892f-1575-438f-b6d8-5be28cc01842"
        },
        "item": {
          "id": "2149e0c5-cc15-4876-a76a-c0489798256e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d39219fe-7c6a-42eb-a405-140270e72b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fad4f2-ff0f-4072-8527-c2412a0a938e",
        "cursor": {
          "ref": "098a41c5-3c78-4b54-8098-106ae4a5908e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b7ab528a-452d-480e-9b5a-ef5f7bc49cd0"
        },
        "item": {
          "id": "14fad4f2-ff0f-4072-8527-c2412a0a938e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "65e61f6f-648d-4098-98de-7664d63e25c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d9a3e5-b5bb-45b2-ae6c-decb29fd16b0",
        "cursor": {
          "ref": "44169278-ec8d-453c-85b0-5661644d0d0f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "12e17f99-98bc-4d08-9989-86b6c2fb42b4"
        },
        "item": {
          "id": "63d9a3e5-b5bb-45b2-ae6c-decb29fd16b0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "83befbac-33ea-49af-95b8-5d40abc13f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da3197d-4f18-429b-8891-b9f8ef6210f2",
        "cursor": {
          "ref": "ff79a138-085f-473b-a4c3-ff50eb907dd9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8141570d-049b-442f-ad55-6d2d45cd82c7"
        },
        "item": {
          "id": "6da3197d-4f18-429b-8891-b9f8ef6210f2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d4295594-faf3-4ed0-ab69-577eed14c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2a7e00-43aa-4a99-82bd-10b8b8a6d694",
        "cursor": {
          "ref": "4c6aab46-f76a-4105-90dc-84113f3d344d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1c2d4a02-d4bf-4001-aaac-f32718f38ee9"
        },
        "item": {
          "id": "aa2a7e00-43aa-4a99-82bd-10b8b8a6d694",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b94354e3-db72-452a-a8da-00221ba4d08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ac798e-7c5a-4911-98a4-41f9791db8af",
        "cursor": {
          "ref": "7439a9b6-9460-4bea-a8b2-e8496faec445",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "267b2b29-fbb9-4e0a-a8b3-448ef625d3ef"
        },
        "item": {
          "id": "08ac798e-7c5a-4911-98a4-41f9791db8af",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3d0cf844-6ee1-41df-9ca3-6d761d6ffde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd17693-7a85-421e-a89a-b4fc839db88d",
        "cursor": {
          "ref": "49004521-f3ec-434a-b099-8ccd6df03226",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "673f4f99-db4e-440f-ae68-0c1b52ae1268"
        },
        "item": {
          "id": "0dd17693-7a85-421e-a89a-b4fc839db88d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f963e1b6-5195-43d7-bfca-4cde32ab4da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b92db2f-9435-4bf9-80c4-d733895316cf",
        "cursor": {
          "ref": "cdcfac35-9a10-435b-aac9-015f48df74b8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "02200c3b-af6e-42d5-81b2-12b35c070951"
        },
        "item": {
          "id": "8b92db2f-9435-4bf9-80c4-d733895316cf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4435aa4a-6361-42f6-9256-f4f0b677857d",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "36a2f760-0084-49b4-989d-3a5d3658ec70",
        "cursor": {
          "ref": "81c587f6-f316-4e93-9a80-ebbd06caa528",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ae8d3ed-40e4-4f42-9300-c54276597e43"
        },
        "item": {
          "id": "36a2f760-0084-49b4-989d-3a5d3658ec70",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "19052f67-76fe-4d66-9b3f-f9fbe1cade55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dfa7c7-7ae1-4db5-b7f9-808d4f42f6ca",
        "cursor": {
          "ref": "6ed7f205-b7da-4628-bd86-7a49d015e715",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "00003c84-a45c-4eb2-9e3e-9a8429fc7d2f"
        },
        "item": {
          "id": "87dfa7c7-7ae1-4db5-b7f9-808d4f42f6ca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "63a95d76-224e-4ee3-a551-e0ababef3001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29fdb21-7ef0-40b5-a48b-1166ca9bad2f",
        "cursor": {
          "ref": "fbe10910-a0d7-47fe-bcf4-b844b6ff70c7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "88a18566-49fc-41f6-bdbe-ef8bd11d8f4d"
        },
        "item": {
          "id": "e29fdb21-7ef0-40b5-a48b-1166ca9bad2f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2be05073-0e4a-469c-91a5-4435e83b9b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951882a6-27b4-4a40-a070-a22f65251a12",
        "cursor": {
          "ref": "f35117ed-c323-49e5-9580-3127090697c1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6ec7f091-41b5-48d3-8406-63e7374d484b"
        },
        "item": {
          "id": "951882a6-27b4-4a40-a070-a22f65251a12",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a6506910-2255-4c80-87bd-833559aa24f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e462fc6-264a-48df-b1d1-d617c5e25db8",
        "cursor": {
          "ref": "7fc71fb7-5f06-43a2-bb1c-35978edce86a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2968e9d2-b2f0-4b60-8853-be22a65ae537"
        },
        "item": {
          "id": "4e462fc6-264a-48df-b1d1-d617c5e25db8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "01eccd13-c45a-4df7-b86d-11524c2b6388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1549f8fd-70b0-40c5-94dd-b6dcb5d5ea81",
        "cursor": {
          "ref": "e30e0003-a347-4908-b295-37eb5e0b93e6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "762009e0-5c0b-419d-ad46-73060c85e922"
        },
        "item": {
          "id": "1549f8fd-70b0-40c5-94dd-b6dcb5d5ea81",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d65dcdf3-f141-466b-96b9-8fc3b85b5ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d07b04-4e28-4cd5-9439-d4b29a09ac12",
        "cursor": {
          "ref": "f424c285-dcf5-427d-a21b-3cdf8725c083",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f8368db7-ea5c-47ac-9e8e-c923534bbdf6"
        },
        "item": {
          "id": "c5d07b04-4e28-4cd5-9439-d4b29a09ac12",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d2259219-5500-4edf-a9b7-67ff9b244daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b137895e-fb20-420a-889b-54053919ecb2",
        "cursor": {
          "ref": "9cfdf613-0a9e-4c44-b913-f546c80e122d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dea8e4b2-6baf-400e-996e-837d7b611e32"
        },
        "item": {
          "id": "b137895e-fb20-420a-889b-54053919ecb2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "614e8171-f5f4-4294-9a1e-6f3d758cf42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82ede6a-9062-45a9-8140-a6e23315ccfe",
        "cursor": {
          "ref": "cc06ec6b-14ac-4882-afbf-4fd69b904351",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "de1b4e71-ee20-4184-8555-322e36ccff23"
        },
        "item": {
          "id": "c82ede6a-9062-45a9-8140-a6e23315ccfe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "77255ccc-8e5d-4340-b29c-791719a44ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43103bbb-6456-4b50-b9ff-87eda4c05d51",
        "cursor": {
          "ref": "951e26f6-a9d1-4b5e-9b24-746a5e434fce",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "41ec1ed1-bf8d-4f1f-b804-5b5e95ea9320"
        },
        "item": {
          "id": "43103bbb-6456-4b50-b9ff-87eda4c05d51",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4b5c9ab6-6422-4da2-a0a3-6cba1e6f02e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d20cf9-f90f-4041-abd5-e80d31e6d635",
        "cursor": {
          "ref": "4b886fe5-1f87-4751-a923-3f157b66ff5b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6bcf0411-814f-4a16-a936-68532d21e409"
        },
        "item": {
          "id": "85d20cf9-f90f-4041-abd5-e80d31e6d635",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "85cdd84a-cc14-4c52-b114-fa8161eef99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc38d5ff-251f-4990-adc8-8c65d0a3d854",
        "cursor": {
          "ref": "16f7e27c-ec60-4165-85ec-b067507800ad",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05f60f32-b602-4012-ae94-1bd7ae7c0938"
        },
        "item": {
          "id": "bc38d5ff-251f-4990-adc8-8c65d0a3d854",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "25caf7b0-7f64-4336-ad49-c0f74eaf9fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98de62ad-0b3d-4adf-bee2-6b632a7560b2",
        "cursor": {
          "ref": "bcbacf6c-73e1-4b5d-8697-85f76fe577d5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d6c2573-c8dc-4854-ac0c-17657cdbd00f"
        },
        "item": {
          "id": "98de62ad-0b3d-4adf-bee2-6b632a7560b2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "89a26093-84ee-45e5-81c8-4982ce543577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bde72b9-a39a-4188-8705-be18e3c94ed8",
        "cursor": {
          "ref": "1b2cc180-51fa-4fc6-b087-9b9f69f4dca4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7489449d-7632-4c8a-a827-361bbc047950"
        },
        "item": {
          "id": "8bde72b9-a39a-4188-8705-be18e3c94ed8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "93d25d2a-222b-4c57-96c7-40a9babef739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756a8c92-8f46-45c7-992a-6428e1269683",
        "cursor": {
          "ref": "17923e71-dfe5-4a93-80a7-f5a869865d13",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "32f9dedd-b82e-4084-9ae5-92ae8c8ac0fe"
        },
        "item": {
          "id": "756a8c92-8f46-45c7-992a-6428e1269683",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dfa892f1-6bc4-4706-be65-3fc8c267728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f12d70f-6495-4242-bbe3-381e31c7fb2a",
        "cursor": {
          "ref": "1c8db26a-1093-4534-bfe7-c22afd8bf684",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e9a77efe-7000-4ee4-91eb-d8a5a254ca47"
        },
        "item": {
          "id": "4f12d70f-6495-4242-bbe3-381e31c7fb2a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0bf36d2e-01d0-4c71-a367-69b60e831bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3ba2cd-fa24-486c-8e64-227b6424163e",
        "cursor": {
          "ref": "f51ece66-77aa-4bf0-a78d-a45afc5ad58e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "11ad6bd1-cad5-4686-a453-09dbf8b8857b"
        },
        "item": {
          "id": "5c3ba2cd-fa24-486c-8e64-227b6424163e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "176f0f76-ec49-4165-8929-4043cbbb08d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c0789-d48b-4845-a7c2-867f51433f98",
        "cursor": {
          "ref": "28b97d44-0682-45d5-af40-675f073ebe21",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dc5e2b77-602a-4971-b107-43ab5eb2570e"
        },
        "item": {
          "id": "2f7c0789-d48b-4845-a7c2-867f51433f98",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fb064137-5f6c-49c0-b3de-74bc57ee13fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d1b9b1-4ebe-42ff-892e-d177e5b49317",
        "cursor": {
          "ref": "83dfc941-c749-48fe-adb3-08b8dd491263",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "77c11436-e646-4eea-a977-3ca69a6b117f"
        },
        "item": {
          "id": "a9d1b9b1-4ebe-42ff-892e-d177e5b49317",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f6a8c822-a623-4236-bbb2-da15b8a750cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae271676-d6b2-48cc-98d9-b433d98ef1e1",
        "cursor": {
          "ref": "e5654aba-3831-418a-84d1-e8b14723c603",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "94b9130a-ad38-44cb-9d77-e7d3b9a9bf2b"
        },
        "item": {
          "id": "ae271676-d6b2-48cc-98d9-b433d98ef1e1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "026086fd-96d1-4f0b-9df1-2ed9acc48693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5623d681-a791-4c4f-ad65-71b859af2e3d",
        "cursor": {
          "ref": "68945587-3d9b-4264-944e-98cbab0a8fad",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "61227187-c948-4363-a577-742a39b63957"
        },
        "item": {
          "id": "5623d681-a791-4c4f-ad65-71b859af2e3d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "85e1f890-269f-40b4-a850-0ae5cc53d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c81903-55f7-44b9-ad4a-c6766662934c",
        "cursor": {
          "ref": "ece9a6bf-e69a-4239-b3b6-b15a78b1033d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a761e336-0bf0-42fa-832f-ffd2f8583e35"
        },
        "item": {
          "id": "d8c81903-55f7-44b9-ad4a-c6766662934c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "afa5503a-90e7-425e-9ff4-7e8a6c945ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6ef3c9-f5f2-4217-815e-18cfef074146",
        "cursor": {
          "ref": "4103850a-357c-4d00-a0e7-634ebe2ada75",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9b2ec7c9-dc66-4a37-9bef-ebc19aa2923f"
        },
        "item": {
          "id": "8b6ef3c9-f5f2-4217-815e-18cfef074146",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f6472e26-300b-430c-b8a0-1bb5df7afe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfe5b78-35d1-4778-ab70-5f3e83db8f2b",
        "cursor": {
          "ref": "98570438-f0e0-4b46-8991-7fdebdf30f62",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "db1751aa-e21c-4077-9215-4054d665514e"
        },
        "item": {
          "id": "6cfe5b78-35d1-4778-ab70-5f3e83db8f2b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "22019d2d-f880-4454-852b-909685e85c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71df532d-ffa1-47d8-b899-af23a962e1f8",
        "cursor": {
          "ref": "a275fd1d-e3fb-4f36-ad2f-675967bbebd5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c0d9e9dc-fca7-437e-a355-4eac5033fe7f"
        },
        "item": {
          "id": "71df532d-ffa1-47d8-b899-af23a962e1f8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "91bc1e2f-27e0-49ac-ba18-9f91718e6f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cee8689-a8f0-45c4-b03e-e964a61c130d",
        "cursor": {
          "ref": "291404a2-eb10-4184-b6b0-83f4cc384425",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c1dd5c37-7d82-4900-8db1-3332c673a70a"
        },
        "item": {
          "id": "9cee8689-a8f0-45c4-b03e-e964a61c130d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "75390a05-880d-4802-8b7d-be8f8c0b613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd17b16b-7786-416d-8806-df894c3dddd6",
        "cursor": {
          "ref": "0fdd7093-3567-4a1a-a7f0-eac2a1c2dd51",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5a19fd71-a911-4a8e-be1e-eddef926895b"
        },
        "item": {
          "id": "bd17b16b-7786-416d-8806-df894c3dddd6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b6cfd7d8-b51d-487e-bc12-b39820c88f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec517a1-f711-4529-8a64-396889466e03",
        "cursor": {
          "ref": "fc8e8b4c-b58b-42c5-b593-bd5e86f2ff55",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "97197ca2-b431-42d1-bc2f-556d756f2fe2"
        },
        "item": {
          "id": "eec517a1-f711-4529-8a64-396889466e03",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "021494bb-b5ed-4f60-b8f8-2f850cf07297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5131e64c-ed77-4f37-9a82-7181d85057f0",
        "cursor": {
          "ref": "1a4177ca-2091-40c9-9b9b-80b10f64b712",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "901b4c5d-96bc-404c-904a-9c74e0756f7e"
        },
        "item": {
          "id": "5131e64c-ed77-4f37-9a82-7181d85057f0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31f4bcf0-3b93-4781-82c9-27ecb9d52950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b385b8e1-4c4c-4601-bfd1-d2adb07abe65",
        "cursor": {
          "ref": "26c1b86a-9926-4bdb-acc2-b93b5b1e0b27",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "13eab95c-790b-42e8-bbf3-91558b770023"
        },
        "item": {
          "id": "b385b8e1-4c4c-4601-bfd1-d2adb07abe65",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0fac07b-22de-499d-8f0f-2c4b703690c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de59983-33ff-4b5e-b4dd-90a2b80ba65f",
        "cursor": {
          "ref": "39094214-cc2e-4859-8784-f21285263812",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "05476575-391e-4661-934e-66042c2e83a1"
        },
        "item": {
          "id": "1de59983-33ff-4b5e-b4dd-90a2b80ba65f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b591d5ba-c64a-4d6b-b040-993c4b199439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8805f6-8e3a-497c-bc8a-0e0ee318df0a",
        "cursor": {
          "ref": "13ebea70-63af-4e87-8dae-5d2e6cf0cdce",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d2b20ccb-1d5d-4a94-b80c-eb90246966f9"
        },
        "item": {
          "id": "4f8805f6-8e3a-497c-bc8a-0e0ee318df0a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c1edc04e-8df4-423b-ba1b-904b39679264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae1bed-2d87-47ec-967e-f24b17c835d7",
        "cursor": {
          "ref": "2ad51ccd-0968-418a-879c-39b0ca39ea65",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "72cc8011-fe75-441f-bc55-b5ba006ccbca"
        },
        "item": {
          "id": "7bae1bed-2d87-47ec-967e-f24b17c835d7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1b6a5df9-3b6a-4c91-92e9-0376d2015070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5358e9-4429-47d5-ad4e-7f70baeec346",
        "cursor": {
          "ref": "637f9192-cd01-4372-b956-84cb0d8a8b9f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dec631de-e091-44af-a007-9a125f5b1ea9"
        },
        "item": {
          "id": "aa5358e9-4429-47d5-ad4e-7f70baeec346",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "70920882-127b-4fb9-bfc1-2f9dce646d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5aaf78-7ad0-4d76-8037-21085301c270",
        "cursor": {
          "ref": "73a7234b-48f9-43d7-a6e0-ce913a0e8d36",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1a9da2f7-1661-4e97-ba23-2c42f66dc0b5"
        },
        "item": {
          "id": "2e5aaf78-7ad0-4d76-8037-21085301c270",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7c2d8b88-43cb-43f7-bd40-c87548d7417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e248a1a-7084-4279-8978-6de15935ba0d",
        "cursor": {
          "ref": "226687e4-ca01-4a4c-9f05-d8fb23c91271",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1159a75b-69dd-41fa-bd6f-cea6d67cf73d"
        },
        "item": {
          "id": "5e248a1a-7084-4279-8978-6de15935ba0d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9b32ddb0-f553-44d1-a12e-84ed0bcce217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525d4a2f-8c82-4e96-95e3-6464090f01d0",
        "cursor": {
          "ref": "671e4404-b98c-44f7-bbe1-3ee034885d53",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "90f73686-291b-4e25-ae3a-2df2240fcc72"
        },
        "item": {
          "id": "525d4a2f-8c82-4e96-95e3-6464090f01d0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2267f65b-d2e8-404e-bfea-ddc220a5ace0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d5aaf-997d-434b-b254-1431c75d3225",
        "cursor": {
          "ref": "46707711-a60d-4ec8-8f91-7cdc2ae8cb98",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7145e012-c581-4c62-8152-9a2805ee7be3"
        },
        "item": {
          "id": "010d5aaf-997d-434b-b254-1431c75d3225",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dd665256-521f-4a2b-bf3c-acb76a0a31e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c9d11d-304c-4550-8571-e8bdb4bbb9bf",
        "cursor": {
          "ref": "68ddc554-573b-4406-9d3e-40e0b0d45289",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "107e8918-3bb5-4d47-b7a3-424020403000"
        },
        "item": {
          "id": "d8c9d11d-304c-4550-8571-e8bdb4bbb9bf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "54cbbc3a-51a0-482e-ba92-bba83353041f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9538fcb-3689-4078-8396-2e9b308c5d36",
        "cursor": {
          "ref": "6110c4df-f664-443c-84a8-b1a2a5d70775",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b174ea3c-b3c8-497a-8fce-bde67cea17f4"
        },
        "item": {
          "id": "a9538fcb-3689-4078-8396-2e9b308c5d36",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "653ba9b2-544e-4c7f-abc3-a33d75c296f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b121a-41da-487b-855f-1ebab246a404",
        "cursor": {
          "ref": "6a8e37b5-8212-4c1e-bab6-5c91da6ada72",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4c29b6cf-4790-4185-8482-4e1e5960937c"
        },
        "item": {
          "id": "c17b121a-41da-487b-855f-1ebab246a404",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "995f97cf-5115-457b-ae80-61ac9f9ec638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039b6e34-fc7e-40cc-82e3-34f34e51f237",
        "cursor": {
          "ref": "e5088659-9529-44c8-a13f-9d605b737475",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2505f122-fa15-41f5-bb6b-945082fc548f"
        },
        "item": {
          "id": "039b6e34-fc7e-40cc-82e3-34f34e51f237",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b3f4546c-ddcf-4eb5-8121-7106dc64532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9714509e-27d0-437d-a985-6a2d6aa1ec7b",
        "cursor": {
          "ref": "e8dc9900-e2a2-4096-b41e-7297da6d8d47",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "82483ed6-d909-4841-8403-4a20d4dfbf27"
        },
        "item": {
          "id": "9714509e-27d0-437d-a985-6a2d6aa1ec7b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8bf0062b-fd41-4518-96fa-a746c2326fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed8f2f9-bf5f-4dcf-9072-85567c9b4709",
        "cursor": {
          "ref": "ed2c2495-172c-4cb0-85fe-418ebfd3e6a6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7effefac-e4a8-4bc2-9b04-97a750c5bdd7"
        },
        "item": {
          "id": "5ed8f2f9-bf5f-4dcf-9072-85567c9b4709",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d0a4fc88-c35b-4233-8cdf-6f72a7a2f3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5177b1fe-9373-43d3-89fd-9372ecb9d49b",
        "cursor": {
          "ref": "906337ac-604f-4d75-9ec3-8cba2cad2d8e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "625618ab-0afc-4bdc-939e-55df5e75ab15"
        },
        "item": {
          "id": "5177b1fe-9373-43d3-89fd-9372ecb9d49b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "564ed7c7-a12c-4854-9418-def48b2dc502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af78d4b8-2daa-4474-9fc4-e2790b495d7c",
        "cursor": {
          "ref": "0148e408-cd92-4d45-9745-a8f6b4367eb2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a8604ffb-b261-4e55-b328-78a95a6a96d7"
        },
        "item": {
          "id": "af78d4b8-2daa-4474-9fc4-e2790b495d7c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "015aa825-8aa0-498a-8d17-da812caeaf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770ccaa6-1d9e-4bae-8b8a-3d9dc122a65d",
        "cursor": {
          "ref": "5b4e5a61-9f43-4620-9d5d-e3bcec23b6fa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0bac100b-1f24-4367-9391-13dc9a4b3551"
        },
        "item": {
          "id": "770ccaa6-1d9e-4bae-8b8a-3d9dc122a65d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6525099e-f52c-4925-b7a0-c185ae9ad7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b6f932-33de-4c0d-9989-4129af6a4b2d",
        "cursor": {
          "ref": "dc0de61d-f914-4005-8d65-86a64d595c2c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dfe7212c-a57a-44e0-89d0-8f8d0731fc9d"
        },
        "item": {
          "id": "93b6f932-33de-4c0d-9989-4129af6a4b2d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4d68c09-70c9-40dc-a9af-541a05119104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c5547b-8860-48e8-a5d0-6fb25153f375",
        "cursor": {
          "ref": "2f0431e0-93c1-459f-913f-3cb3887d00e6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f35d1508-545b-458a-92a5-2d65ab23a5d0"
        },
        "item": {
          "id": "01c5547b-8860-48e8-a5d0-6fb25153f375",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0c3d2b3d-2d7a-40ff-9425-a7741dd2121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a6167a-fd9e-43a1-b18b-4c8501817eb0",
        "cursor": {
          "ref": "480fb02c-37fe-4ef0-ae4a-ae927d0a6030",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "38856126-f5d0-4bfa-af4d-0071aca82e12"
        },
        "item": {
          "id": "43a6167a-fd9e-43a1-b18b-4c8501817eb0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a901c392-4c3e-4cdd-a863-b33b800bbb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c255fb-3ae6-4eb8-85c0-8649abce482b",
        "cursor": {
          "ref": "9efcff2d-cff8-4eca-9bef-b8c95d21b54e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "556ad0c6-d4f6-4f81-b6cc-a1ad8c53c332"
        },
        "item": {
          "id": "b0c255fb-3ae6-4eb8-85c0-8649abce482b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a754ac7a-1fea-45e5-94cb-67ef9c9c72ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88483780-c2b9-4b51-a69f-e6bd3baa534c",
        "cursor": {
          "ref": "0dea13a3-4850-4566-b13f-b58f9f6fe3e0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8c13b9f2-220d-4400-839f-a0c0674cecd6"
        },
        "item": {
          "id": "88483780-c2b9-4b51-a69f-e6bd3baa534c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2186751e-27b8-46a0-89a3-018fe0fbd896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd6075c-88f2-440d-9b1b-8630936bfee2",
        "cursor": {
          "ref": "10a95573-de16-4a57-b142-de8bde4b7763",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8f72fe6a-e1bc-45b3-b0a7-fa6faf5185bb"
        },
        "item": {
          "id": "ffd6075c-88f2-440d-9b1b-8630936bfee2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bd200a86-ba29-415c-8f8a-bb046aa6ef60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08aaebd-7e5f-4892-8822-fe61b6ef6f53",
        "cursor": {
          "ref": "9c6cbbe2-96ec-4a0f-a5d9-0978a51ec397",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8615699e-84a2-4416-87f8-37d8d25caaeb"
        },
        "item": {
          "id": "e08aaebd-7e5f-4892-8822-fe61b6ef6f53",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9e640c0b-5527-4015-92ae-5646e5ec814e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1650a35-44aa-4915-83e5-ffe4d73bb630",
        "cursor": {
          "ref": "4ff6dba5-23a3-459b-a2b2-bedf1f250b13",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c7fd8538-1fcd-4dcc-b389-c2aec7ce002c"
        },
        "item": {
          "id": "a1650a35-44aa-4915-83e5-ffe4d73bb630",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c0bdfecf-38e7-458c-a456-dfbf1a83f217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886f0341-602f-47df-953b-c1d3093a3534",
        "cursor": {
          "ref": "55ab5234-ad76-43de-9607-e02aa5ff31b9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f4ffcd23-e820-4be4-b19e-420a8b49889d"
        },
        "item": {
          "id": "886f0341-602f-47df-953b-c1d3093a3534",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0934c122-3a31-4195-89a8-a577492c77fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0360caa-4db9-4cf0-b18a-c758ec90c3b5",
        "cursor": {
          "ref": "181e5596-f771-4374-b6dd-325dba4662ec",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "59dd814b-55c1-4acc-aff9-21419cb9d203"
        },
        "item": {
          "id": "c0360caa-4db9-4cf0-b18a-c758ec90c3b5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "18dc30fe-d761-4a92-9ef2-4a498623821c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae50bb78-2e9f-47d8-892f-810443b83f0b",
        "cursor": {
          "ref": "9a2fbad6-f7f1-46be-bf57-be4eb9b06177",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d56869fa-e2fa-4789-92cf-d341854d2355"
        },
        "item": {
          "id": "ae50bb78-2e9f-47d8-892f-810443b83f0b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d954433d-da11-46c6-8738-52d0bd0da921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca8f6b2-40f1-4734-b625-6f794094ad38",
        "cursor": {
          "ref": "872a3886-e71a-463a-ad2c-b1f6873c5693",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e4c2ef59-6bf0-4eb2-96cb-70fcd7375311"
        },
        "item": {
          "id": "9ca8f6b2-40f1-4734-b625-6f794094ad38",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bfd202d8-abdb-4246-853c-89e834758e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10cf576-697e-4f23-821f-c81c503caa3a",
        "cursor": {
          "ref": "4e7aca8c-eeab-494f-b2c5-38a007fdde50",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4ee3ef86-2a00-4d24-a379-e9b712c0790a"
        },
        "item": {
          "id": "a10cf576-697e-4f23-821f-c81c503caa3a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "481fa5da-3814-421f-b3b0-5f6f16f406d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9dbe96-effc-41ee-93f5-ff1f751ce8fe",
        "cursor": {
          "ref": "f89520e3-5c73-4076-8299-8a5f37ae4e47",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4ea30aaa-2340-400e-97ef-4116cf66a163"
        },
        "item": {
          "id": "bc9dbe96-effc-41ee-93f5-ff1f751ce8fe",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "77e3acb7-60f5-4e31-8c14-47297b6f87ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b708dc42-ba9c-41b1-b7ee-ad080deda675",
        "cursor": {
          "ref": "428a2bb2-bd3a-4c4e-8037-eb2a2b26f4ac",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cb95b0b4-d43c-44dc-85af-c626d9ec0969"
        },
        "item": {
          "id": "b708dc42-ba9c-41b1-b7ee-ad080deda675",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bb787fd2-8fac-487b-b18f-a1ab1b4a0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19084df4-1eb3-4932-9387-ddbf2dda86be",
        "cursor": {
          "ref": "933aecd4-f458-4ea6-bb37-15e1fe674855",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "92db4547-43bd-4766-abfd-1765214e6d7f"
        },
        "item": {
          "id": "19084df4-1eb3-4932-9387-ddbf2dda86be",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9027a89b-9819-42d4-8ddf-14fd54a1ec8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050fc3ca-20fa-4f50-9774-0a6cd381bfaf",
        "cursor": {
          "ref": "8cc718a9-1d7c-48f1-8a89-71f50fc58a9e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1a096beb-bf6e-4c44-9d59-d6f848d2daa3"
        },
        "item": {
          "id": "050fc3ca-20fa-4f50-9774-0a6cd381bfaf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8b5dea1a-d14a-41df-bf48-d7e9e0f9e0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c31a815-8ee8-41c8-8ef6-40fb2cc3dec3",
        "cursor": {
          "ref": "d20f2f4c-879e-4145-aede-ba842ba4c9e2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "53ad2887-0a19-43b2-a5ac-af0517f06183"
        },
        "item": {
          "id": "6c31a815-8ee8-41c8-8ef6-40fb2cc3dec3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b5432ed4-3431-4294-b4fd-9ecf8e901e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457812f2-1746-45c9-aa85-99a2b2888eb8",
        "cursor": {
          "ref": "f064d09f-e0f2-4675-a21a-2c26604cac22",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4cf4bd49-a2b2-4ef0-b9a8-5b83c26ae135"
        },
        "item": {
          "id": "457812f2-1746-45c9-aa85-99a2b2888eb8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2c6c70c6-b03f-4563-a1b9-26443423eaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88068e2a-14c7-43c1-813c-ff215ab5f8c9",
        "cursor": {
          "ref": "c1ba3b20-8300-468d-8f97-eca7ad07ef62",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "966fdbe5-aaa5-4aa7-9242-260ceb1e8008"
        },
        "item": {
          "id": "88068e2a-14c7-43c1-813c-ff215ab5f8c9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "30cc9869-f3a3-4ef5-b17e-bb5b821af707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bdc3b0-eb92-4ea6-9b8a-cad16e70790f",
        "cursor": {
          "ref": "700df145-31fb-436a-be0b-efd9721a3f2e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "60d5d568-f6cf-41f8-8d5a-a771670211b4"
        },
        "item": {
          "id": "94bdc3b0-eb92-4ea6-9b8a-cad16e70790f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0d857335-7ae7-45bc-acd3-16d8effbc0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c25909d-8565-40f9-a11f-ca5b15ca918b",
        "cursor": {
          "ref": "1c04b849-e2d0-45da-af8b-5cf6fa2db6bb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f7a3780-82ba-4c9c-a139-fc657866611c"
        },
        "item": {
          "id": "1c25909d-8565-40f9-a11f-ca5b15ca918b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6630de6b-7733-49f4-b8b5-861f3fe06279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9806a2-7d37-4412-8e32-fba30bbda20e",
        "cursor": {
          "ref": "e0b80690-4b3a-4873-b712-d2144de5e90d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "16a0a859-c822-4fb2-80a5-7c4b345db4ce"
        },
        "item": {
          "id": "0e9806a2-7d37-4412-8e32-fba30bbda20e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38fc2cb0-9bc1-423d-8da0-fbc077fe2f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d507c3-ecd0-4838-8d66-25b1739c0db0",
        "cursor": {
          "ref": "6db7276c-983e-4364-80a0-e22015f0a036",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7c24a224-a6a4-46ce-8f6f-b93d138dbe47"
        },
        "item": {
          "id": "87d507c3-ecd0-4838-8d66-25b1739c0db0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1a2f235a-d03b-448a-86e5-060848eb565f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420c90ee-8e95-488f-be3e-8f4e40c76278",
        "cursor": {
          "ref": "8ebb128d-3e24-4222-84f5-bafae854191b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c0ae1dec-41b9-4435-a5c9-f3a19c7572ff"
        },
        "item": {
          "id": "420c90ee-8e95-488f-be3e-8f4e40c76278",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a0ee393e-11fc-4608-96ff-90efc69aa0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a83820-7230-47a2-8e28-fb609427b623",
        "cursor": {
          "ref": "966cb3bb-03e5-4f76-8b92-5d78e6c646ee",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "57884de4-9fbd-4969-a97a-8bb7962e815c"
        },
        "item": {
          "id": "a4a83820-7230-47a2-8e28-fb609427b623",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "45e575c7-c46d-4828-b47c-5907646121b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d22911-2f27-480a-bbb0-9c2ea6fa50fa",
        "cursor": {
          "ref": "a635c85c-4208-4514-b459-0053925ceeff",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "19bcdd40-c533-42e2-81f7-aeca45da1ca6"
        },
        "item": {
          "id": "93d22911-2f27-480a-bbb0-9c2ea6fa50fa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "15653efa-244c-498d-ac85-4cdff977a7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f478d0-8797-4b52-8b85-a41bba41d332",
        "cursor": {
          "ref": "99419f80-f409-4f55-8032-64b42f7f0bec",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4f861810-275b-426f-b973-2610141ece95"
        },
        "item": {
          "id": "31f478d0-8797-4b52-8b85-a41bba41d332",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c6084c04-edb4-467d-886a-53de216339b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19be63e-ed51-40e4-8b87-bcdec0eab7a7",
        "cursor": {
          "ref": "4fd80920-c1f7-4eee-acf7-bd28d4ed1a56",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7ac1e4b1-aafc-4bbb-a3fc-b45bd798d34e"
        },
        "item": {
          "id": "d19be63e-ed51-40e4-8b87-bcdec0eab7a7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d8291fe9-d2e5-48db-9b00-b95b1521a2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e24552e-ff7e-461e-a8c6-ed3d0b90f717",
        "cursor": {
          "ref": "513dd8b9-af78-4120-aa6b-656582dfaa33",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a432c0b-6723-40c3-8968-94f28ba3a446"
        },
        "item": {
          "id": "6e24552e-ff7e-461e-a8c6-ed3d0b90f717",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "115d5955-aba8-4fdf-89d1-9556f98d5de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b749b949-9598-45b1-97d1-4ebc1b12a8ea",
        "cursor": {
          "ref": "04eef156-288f-49f9-8e24-9cdb0861bb9c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c1c9748c-9222-4e46-b554-17f0adce1d48"
        },
        "item": {
          "id": "b749b949-9598-45b1-97d1-4ebc1b12a8ea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7f4d1f5f-3c63-4626-add1-0dc969268e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7d404a-6e2c-4eaa-8e36-232e0720d6e1",
        "cursor": {
          "ref": "22475f70-5e83-4846-a42d-99d241deb759",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "97271a55-8c8f-42e2-af70-857ed00b9940"
        },
        "item": {
          "id": "8f7d404a-6e2c-4eaa-8e36-232e0720d6e1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "883ed713-6ce6-42e4-a1c1-2d227686ecde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb28c146-0246-4f69-9b18-9e8607720dab",
        "cursor": {
          "ref": "58652c18-a07d-40f1-8036-f3ac33c4c1e3",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e2dd0895-6da9-4201-b0c2-45be295fa45b"
        },
        "item": {
          "id": "eb28c146-0246-4f69-9b18-9e8607720dab",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0d451478-79eb-49a3-8f0b-03323757851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d528f3d0-c6be-4be9-876e-ce747031450d",
        "cursor": {
          "ref": "e7115631-9a57-4534-b27a-8f0ff2d3e67e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3eb6510-0119-4841-9d0d-14671ce77a5a"
        },
        "item": {
          "id": "d528f3d0-c6be-4be9-876e-ce747031450d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8383787c-658c-499a-a1d8-321a43c85d8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0c8221-102d-4f59-a113-943f8b6a3169",
        "cursor": {
          "ref": "c703812b-7994-4194-b23c-29834819ea03",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b329a33c-7bc7-4872-875c-8b539c1fd302"
        },
        "item": {
          "id": "2f0c8221-102d-4f59-a113-943f8b6a3169",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0c46f31c-e46a-4af7-a63b-78c0a5692d7e",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cb08be-08c2-4aca-92a5-9e827c93e7b1",
        "cursor": {
          "ref": "51fb7753-8ae3-40e9-b2fc-856b606ee1f0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1102f02b-2b07-42df-b3fd-bcd964f06686"
        },
        "item": {
          "id": "70cb08be-08c2-4aca-92a5-9e827c93e7b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2c279fc0-1f59-4d95-bb97-f8b677783438",
          "status": "OK",
          "code": 200,
          "responseTime": 3012,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aacb611-fc45-4093-8386-b3f542193b47",
        "cursor": {
          "ref": "fc6725cc-b243-468c-86dd-25ddf4b2a758",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d83542bf-7189-47ef-9c41-2bcbb25183a7"
        },
        "item": {
          "id": "1aacb611-fc45-4093-8386-b3f542193b47",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "91e45a3a-460d-49fc-8381-a288bcfca3fb",
          "status": "OK",
          "code": 200,
          "responseTime": 2560,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7872d98c-4d1c-432b-811f-b7d7cd9b3a1f",
        "cursor": {
          "ref": "d3576531-5f84-4f2b-bf3a-6eb8ce117b60",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc15e30e-203d-40e4-bc77-d00c44d194cd"
        },
        "item": {
          "id": "7872d98c-4d1c-432b-811f-b7d7cd9b3a1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "90e1920f-3c96-4990-9ef2-3152b1a9d3a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7872d98c-4d1c-432b-811f-b7d7cd9b3a1f",
        "cursor": {
          "ref": "d3576531-5f84-4f2b-bf3a-6eb8ce117b60",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc15e30e-203d-40e4-bc77-d00c44d194cd"
        },
        "item": {
          "id": "7872d98c-4d1c-432b-811f-b7d7cd9b3a1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "90e1920f-3c96-4990-9ef2-3152b1a9d3a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045aa1dd-924d-46b3-82e6-639bdaf4aaeb",
        "cursor": {
          "ref": "98ace35f-a941-4dd1-9247-91239978615d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "57824c82-eb07-4007-84d7-d1f4cb507cda"
        },
        "item": {
          "id": "045aa1dd-924d-46b3-82e6-639bdaf4aaeb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3568cdfb-aecf-430e-b81d-8f29b2b22b2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee728c8-6c95-4a38-b512-51573869dbce",
        "cursor": {
          "ref": "4b2e8f4b-7d2a-487e-bc69-86bd0e32b66e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ab252bf7-5619-4ad4-8a79-df3dcb81eba4"
        },
        "item": {
          "id": "0ee728c8-6c95-4a38-b512-51573869dbce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4d577fc5-4bcf-433a-8a65-821d11a0d69e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}