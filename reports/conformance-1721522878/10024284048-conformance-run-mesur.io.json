{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a2240300-38f1-48b7-a972-e985de2937ae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b4d5e066-dcc8-48ad-86ec-456811977bd5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6d7e078-85fa-44c8-bc7b-c3c45f51aa7c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd416fee-4944-47e7-975b-2b56ab5f3b10"
                }
              }
            ]
          },
          {
            "id": "09173d05-c262-4862-878f-fcdcd7edb7fe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f65e70b-4f58-46f5-92db-3811d49779aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e28597a-f96d-4c87-8fd8-e1e9d2220f9c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b18c06fb-f011-4f32-b4c7-f9b7facac8f3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7305660f-4e68-4b06-8162-4a366f9febc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "232ffdb6-3354-408b-9d3e-b7aa87449fea",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de7d723a-50e2-4d85-9496-2d9697000c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff6cc237-48c1-4721-9852-cf5a563c185e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cb3ce0e-93fd-4bcf-8f2d-cf6b15d14898",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "792ef9ed-5058-447a-a76c-b40111c986ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5922cac-60b6-4591-9f81-06bce538083f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f74d165-be72-4e2a-8bef-9dab008c93ba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45f80922-a6f7-4e24-ad29-6bb2a4c008d7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "23a93a0f-6319-4309-937e-35a8fa5b874d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4aa66ba2-b67f-4960-80d7-8840c6d315c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a1332f8-55b3-4710-9341-68c5125076db"
            }
          }
        ]
      },
      {
        "id": "df060bf4-909d-44c6-9af6-81a6a00c8f58",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9babd7fa-5f47-4ff0-9ed1-ba14c3709c9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d658de6-6437-4ffd-8db0-8fdc1eadf170",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3276fecc-3701-4b81-9dad-6db2f976df23",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2be3ddb-d87c-4c6f-932c-a9f86d6654eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5489dc2-a8f8-4cac-83ba-289ed4cbf7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e30d3a-b74b-4dbd-89a6-425c39024afe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c707ce-a9bc-4274-972d-e0edddb71291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "676f4b67-835d-4f73-9834-5bf7c348f91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340f131c-0a05-4be6-ae2c-6a017a42ce74",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9077bd9-36b0-441f-9b3c-24fc05cee247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6d3b02d-a3fc-4972-b490-7f3cb88db2f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e166486-3b25-4475-96df-827b6d296ac3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24e33d2b-cdcf-46d8-b462-9b0eb111eefc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0237a73-470d-476d-960f-d9901259fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d8882e9-dd2f-43d5-9f7c-44a36dfa27b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2a0a85-3d89-4eb5-bc9a-6241c586e11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7889711-f2b3-450c-b82d-cca6c008c33e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fbdbb369-4229-40fb-bb5e-f916f2137f39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61c44126-6e07-4c2f-92b2-ae1a4bdecb43",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f134e11-9030-4599-94e6-9e01d4133942",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dda775cf-cf53-42a3-bbf9-ad198d67b10c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63c3c7d2-081d-4c79-94f4-7309e23f14ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9fdf7b82-81b2-4038-8165-7bed91f53342"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c10d3d-0ccd-488d-966e-8dba089915e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2931dd81-c0a2-442d-9c0a-e838d9bf6b2a"
            }
          }
        ]
      },
      {
        "id": "782b8765-db91-435f-9c6c-d823f1b795f2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fcc637f9-851e-4146-bf7c-62eaac97c72c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45703dfc-de61-4df8-965f-20b84af8e0cb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a062485-112b-4159-90c8-41203d665e0c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1da1d30-dfcb-4b34-af07-7335ebe1897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91af6ec5-4861-4b6a-9f7d-8b5346c2e6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad84af63-2157-4025-b29f-d285e9aeefd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88a74b65-46ab-4c61-8d55-b02899417292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cd7367-e60d-4e47-8935-6b6abd1ca23b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704226c3-9842-4461-99fb-3db5c385518a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7565b2ec-b27e-4dca-86ab-337546179513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c4e858-caf7-463b-9034-559b40e4b751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59c49d1-7e2f-4c9a-8688-7ae563f8b443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9640685e-3d2a-4ed4-9157-fb97bd6ea3e1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03da4790-c812-4abe-9be0-177e5af7f819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5ab692-3dd5-426c-b6d8-b27ada3a3c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dd545a-ec60-4688-ac7c-537729977a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5f49c86-4086-4daf-9125-7fd6eef573d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fee03ba-90ad-40d2-a726-3a75f0cb614a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588bbe37-bfb3-4d0a-9a9b-bdcba76ca162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa81b18-2090-4bfa-bd3d-d4625a29b0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7d3d73-e86b-4388-8370-3675c66502bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a40776d-4037-466a-bd50-6e34bf67f5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07f28c8-11f0-4e44-af45-e976318c7bf6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2406bd5b-95bf-46b2-9ced-de65ef65832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5a579-6e7d-49c5-aaec-bc63cba0b532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf90fa7-c97b-4ab0-bd5a-7ab9a5e310f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62beadbd-d078-4e75-8f02-0dff8d7477f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef9439-f636-4038-9428-1603a32eac32",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f34c6-0eb6-4ce5-bafc-3c5a4879dceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64de917-2008-434d-bff7-dbb2ff5ec255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac106f75-4b77-41b7-ab2b-9f90d6f3331a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd856e05-f761-4e59-99ac-b96b5dbebe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982e55d9-9081-44ba-9292-555a8e97a888",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37ef7c9-4188-44b0-b530-402d9ee36b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583bd25c-f52b-4861-b98b-2c22579a1f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e414ecaa-d8f1-4ad5-8d05-c44c558fc34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d2665ab-f1fe-4d8e-b532-3c74135a78df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae930e7b-1d1e-4c7c-b3fd-03122b1b2eea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3205dd2d-3d5b-4733-9d2f-46fb13abbc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd2bd57-d958-47cb-b47c-45915d1b9ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595a24d0-05b0-4547-bbb8-3c92b31af444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc5227ee-8df5-4551-ac61-de6e34d820e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b07285c-35c1-4928-adf1-17be311a15e4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6799c161-9f41-4169-bd32-6c81311155b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a20942-a3f4-4c5f-bd3b-b26ca4a35f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277d96fe-f735-4cd0-9295-b78114ea65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27620895-c9dc-454b-8601-409e06759565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e43a36-358a-4270-9db0-0d3105f7ecf6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc216db5-9660-468a-956f-50c53d80ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5c116f-5b35-4e2e-9d33-96362553314c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22386867-9dff-4020-815d-19aa064c8331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae92a76a-68b9-4f28-8272-8a074014cb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daffba67-897d-479b-8237-05d6b8b0fbcd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9a171e-b893-42f3-90d0-44e7ae2ff7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3326633-b576-474f-9995-4888610c90a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d013d74e-a5cf-45b4-8f09-3701c2748fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d335f8a-1fba-4ebf-a7b0-b85e93678605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4b3109-5344-4885-9745-c8b139080f93",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682feb58-a392-4f2c-b0e2-58033fe7e4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2222a9b-a271-49dc-ad6b-e07a3bcb2551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd8ed96-d5c9-4e9e-99c7-7892326c7788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7055b5c8-262a-4acd-bb83-5a9477dff97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a679ea0-971b-47f3-8f9d-4ee441f04d37",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e88255-16f2-46ab-97b0-bfbf6ff1f476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc8d172-f051-4b7e-8652-aece5b9207ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d814232-7414-4a32-a0c4-b7e4fb0ff174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f287f721-290c-4e5a-8e87-fdc8246f4526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d329fd-f017-45f2-98ac-714b8bde3e8b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7a6022-5925-4d77-ae15-500654646818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6881a03b-26f7-4d39-8496-3b2a26df33fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1b82c2-3794-4750-aa04-c041c6a1397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8180b17c-e250-4ab8-84e5-bb5d06fdf3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99057550-24c4-47cc-94f3-46174c27fcf5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7872cf-027c-4ae4-a6f6-04f5564f5533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d16e6f-aa11-4032-aff9-8de64ed11cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cd008c-95f3-4e67-8c7d-7cea7f1ce323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "933f9dbc-7ebc-4d4d-bbaf-e4d57593da9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d853c-455d-4ebd-a9b0-23d7f98ee393",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6d3ec3-8d88-4934-8ee7-37ec0dda67eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fac6ce-80e9-4346-b5bf-b5b6cf3465e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916f8d85-d6b1-452f-9d2d-0fd4db0eb090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41559ca9-854e-4a7d-ba9c-149ffed7cef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3654f6f4-929b-4f35-9083-16cb799d17a4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3db3785-3736-461b-bc6d-d38c551d098d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291896da-9323-4afb-aeaa-6138da299c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6529f49-2804-420d-8c34-5a54ca29ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25a72e93-feca-42b4-9a48-81fddf7efe67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3392e3d5-b7bf-4584-a945-411382cc1156",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b32e105-91a4-4b22-aa35-06a68d461ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87494847-e072-4813-b5b4-12ee9b51cbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009a420b-af53-4472-b4ef-8e1e474a51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be60d5a-c929-4db0-b5dc-506160b37cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f94a55-b04c-4d88-82a3-ca5b8312a6dd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5789a420-aba4-4640-b7c6-269c3587a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0e4b47-6c75-42a6-b6bb-dbc4e02015a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9503da38-1efe-4e90-8f9e-8590a6ea7028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd064bf-ef9a-4ece-b01f-74f80fa02715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76388d65-1e0e-49ce-99c0-f94d5c6a877d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620a68b3-79ea-4ee6-a5df-cb417c9a3033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af56778-de23-4d11-a5e9-2a90e623c1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6626fc48-0eee-42c4-b86a-2c73d666f0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60840806-11f2-4cc0-99a7-a3d4ace3e24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5bd030-1ba0-44ab-a5b0-9aa77bd4af9b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cdb0ba-11e6-4d7a-af2c-0a70e86b080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294ce143-cac4-48a8-b7b9-2469df7340b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae48b32-0d38-47fe-931e-0e4d497b747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26cc1425-7eb3-4813-984c-32070ed08193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a61cd5-e499-4714-9dfc-cecda75af8f6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37930fb6-7076-4913-bde2-0347af3f6a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc71972c-adf8-4a96-9d00-4b8476db3f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69aaca0-6e1f-41d2-8883-b33ac426691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b372f1f-4571-4d28-a1d8-1045c89c61f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b846eb9a-19a0-4091-929f-2cfbd1a12dbd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4fe842-51d6-4180-962c-a790314c9fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f739257-181e-447c-a36d-4df17ff8b9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7308a3a0-5120-419e-a518-f99211ee94df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32b9d940-d92e-49c3-b6fe-ce050efcb4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36bdaae-c478-4563-9700-b8ebcce97ea1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e673781f-9bdc-46e2-9238-4099102661fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493b555b-80dd-4285-8530-c55e3d549cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308532f5-b9af-4e45-8ac1-773ebe87b019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0fdb5-8464-47d3-846c-cb20a016d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8980048-26d4-4cdb-a132-ba421246b92d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748ccdbf-3153-4b66-b5ba-bf49b35b458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2657d9d9-c3c3-4a65-b3a0-d7885fb2211c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab63353-067e-4a1c-891b-acf50fb0c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23fb0eb-ce22-480e-b82f-b3d46f29f746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d997a9-0c6b-441e-8359-a570cf76e58d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ebf32-ca4d-48a0-b520-571315eeec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6688b776-4696-4981-a2f8-d402ee65ed31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e31deb2-9bb4-4037-8432-7942eb3fd6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0359861b-72bc-4614-bfb5-a75e8f284c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784385a-7f59-4354-8aab-738deb2f8c93",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad9b149-0e90-4852-8d70-793457797fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da813d5-dc72-4bb9-b974-ea16e671c4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da5f9ad-6e32-429b-9019-8f320ce6af9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c33f00-9480-4ec8-9906-b01ae98bc254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46c88af-1ad0-4d9a-994c-7816b5767c2a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3433e5d0-0723-4a2b-8c45-34f1f2738551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744e4f81-0d0a-4780-b2ff-85f111a5a4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e08734b-a58b-404a-b0e8-78e142f6aef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "747c4bce-69a5-4ed0-b852-6a60e054df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00024cd-2eca-4328-ab70-e3205fd6ee61",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a222b120-4844-4180-a2f5-42291008a602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cc8d51-77ba-4930-932c-031e14fdbff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f1ee6e-0245-4059-acad-b4c2b64ac914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8630b164-180b-4829-ae82-c0667104ee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce17344-2cff-40b1-847b-d14feb298e6c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33fbb08-1067-41a0-8838-27345aa097f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e21ac33-06c5-4c6c-ba2b-937e553816db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f05049-95dd-4906-b60f-468063633e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "96834ab4-0b6f-49d3-8511-86221dd523d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdecd2a-c6a7-409e-b6ae-860da9d81b1e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d0c55c-9261-47ba-abd3-c66900e326c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac2308b-1404-438f-b422-09b0ecb270fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3433f699-8818-4b1a-ba46-39f2f6f04c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be22c79-f1df-40e2-b68c-e1cbaaa3e185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46193a74-0b15-4e47-9782-bcf701c44602",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5584a9e1-0631-4258-8048-c517bc68f16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f540cf2-1cf3-4281-8a55-b27f2d782cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb4b8c1-6feb-4091-a5b0-3cd7e89b7a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1aa988-e02a-47e5-8552-10b614e3f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82176065-3017-44bd-b070-f71e6edab83d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec357e5-43d6-401e-8200-a4402b24f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950f9e7f-b1ce-4434-b06b-4daaebe14635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7912753-f8e2-4877-aac4-56c10293e22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f01595-20c9-4be1-9c42-73d97be85901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccd7a84-86db-4cf2-aac6-b5038de05e5d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fd6b77-e305-4294-afd7-a527f3705082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254d59dd-7903-4c2e-9c4f-24b2fc0a6d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cd01de-a633-4504-8f4e-0375c8e65be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f04439f-55a7-4d35-ac06-772baa0e5b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898a48ed-7bb9-4340-b951-5a061c3d8ba5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb4ea6-98b1-4fb9-9345-4b4e75042223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc7b060-89c6-4698-bc1e-26fee55299b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3e56a3-53ab-4504-8960-625a493db125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "80d50d17-7fa2-4fed-a635-7819f8ae2d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeab230f-82ee-4a0d-91c6-5ae184e2178d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8d9a67-f0e8-4718-ba1c-738b415ed3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7179ee9e-9eb3-4092-a619-dd0ba4d7af95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1327387-bd1a-41b2-82f0-20974176e43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5478ff4c-3b05-4d5c-96b1-53e5a14d20c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624fb29a-44b1-4602-8c5d-c37c2ad0b0f7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2f907e-203f-49db-a1e0-f2f4b219a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dabd789-449b-4b7c-b6e1-642a55962749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a032bf-3efa-46c7-ba84-73cf78c8d623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "578edb40-8756-4c7a-b6d5-2c3f37d0fb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df80a456-8125-4279-84df-271898d39e4d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88454fc4-d95e-4966-892d-1fe82bde014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a0a91b-84f7-433f-bb3b-009549b6b30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2df2664-8c29-42b4-be91-2e4e818da762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b271904-a9a9-46a2-af93-9b5c3f3b4446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d757c1-0e62-495b-acd9-ef7ed43aab4d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d59429-32ad-4849-bbb8-46f2019bb12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ff57f2-83a1-4dfe-90e6-1c61dbd2138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b5acf2-92eb-40ab-bd56-b9da346fcd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4227b45f-a8c0-4928-8b57-42101445448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f065c172-df80-4875-9ec7-65e49cde92e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4907a632-b88a-467c-a8a9-585f8c0450b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb6ac51-53b5-45d2-8e59-e352bda611fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73060a3-6a34-4273-bf7d-56fe78e52687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba501e20-f733-4e6c-b0d2-60416f161993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7266b1c3-1cc9-4f18-af0b-12838729e88f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeefd411-f636-45f3-b96a-faaaddff27b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255aa1f5-ab57-445a-a6f4-2a8ec671213d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d76f46-0a69-4a87-95eb-8a6970009372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6309d222-aca3-4152-ae81-742f47ba6dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f570e5ff-a8e2-4d89-b509-f150c71cc599",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606da2b-f964-4a82-b9f8-9ab92911851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360747e7-3038-4334-858f-afbec5a66301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b1803b-07b2-4b23-9795-bcc1323c8732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ad48f6-1860-431b-b259-b96ca33b4e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc3fcc6-9a69-4a0f-b217-34c4a8df5682",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb3b7b9-4de3-4e10-bc88-5aae59be2e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a037ec38-bb38-42f1-9739-014858130720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7cb325-7030-4188-aff1-b65ffaf72c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "330a9164-b0b4-498c-a93f-00dd47758ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1893ad-44bb-4fad-9584-d1531590f5dd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12934d41-fca1-4dba-93f4-be7e78181313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b31213-f705-4eb7-a2dc-11aa7cb6b141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae3b588-67bb-472f-a971-9d4aa6f36556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1049ad-86bf-4ec4-8471-9b7bd962059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ff2beb-9595-4b06-8bfe-3e60d97ea851",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c19b8a-3d0f-403d-9cdb-5e7fc9506fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32ca34a-66c8-4da3-a0a2-8c4002fbdee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced1acf0-c898-4d59-8ce0-bf3c67e6c12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0b1de4-8c79-48af-a629-990215317319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92ccf83-d6ef-4182-8ff7-840ff3d62987",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2112a4-3cb0-4acc-a6a1-f21db663051f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b34b6a-dcb0-49cf-9404-3e00dbc27b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ea6121-dab3-48c5-a931-45bb9074f8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fe3027-6727-47e6-9437-5f3bf3bdc0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83840ca5-2aee-465b-a1ba-94cf6b8eff7e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd26a9ea-5f4f-49d8-a12f-13fb314f8bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5b3cd4-410c-4fe2-b614-ba4f70f108c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4084697-663a-4820-8aa4-f383a1b1951b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "411b1726-fa94-49a0-9da2-76468e855d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08201162-3d96-4831-beca-e472bbbd679d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe34b6f3-a432-4052-9245-7f2afff759d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6647ce4-ecb0-4a0c-baa3-00c9804bd2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216e7b63-cecc-4844-bba1-7a4aa69eec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "430dafe1-7138-4a9c-bbac-7fb9bbed96b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3c55a2-bc33-44f3-a804-7e9fa662b9cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31439526-5083-45f0-b932-1c79f3974a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a126bd-ee2e-426d-949d-13f26dd5df93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de79bdb6-abf1-41af-b971-cfc1068bda88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d28cf5-7875-407a-8c82-c088c6619bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d88966a-b589-483a-a0b0-d5ace925bce4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236d45eb-9b39-47b6-a8ac-3a3158d0f021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c853f9b6-faee-46a0-97a4-b7943f0ec4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b9c7e4-4a91-424c-9726-87eb88fa58d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55d85275-e4ad-418e-b4d9-d9a6434e868a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82758b7-632a-45ba-8981-4dd2ce15ddb3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c382deab-9340-4122-b665-9142839bad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33a7274-ea00-4e54-845b-e5248b25e9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b7c7d6-3ecd-44e7-9a46-46445f8aecc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36c0734-b5cb-4ad5-afbf-81b0d72c1389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce355205-32c3-476f-b947-5b925daeb9aa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dde3ec-c04a-4d9d-8815-ca9123f5dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24566972-82d9-41e8-aa02-685cd441e4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8242c15-a9a3-4b71-bbe6-bc7fcf7f9dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf67fb4-ede0-42df-aea6-72bfaff177e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bead18-367b-4378-bbd9-816f6cd17281",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675bfb45-f7f3-43c2-bb2f-df87d7b1c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e816f8-dd4a-4e3a-969d-5b423504e374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4307c319-d064-495a-8506-527a2db7ce2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "290d7db3-c275-4fc1-9517-90b7e189a220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e08a8d4-12ec-45bc-a466-954b6bde9273",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dfa608-0d8e-4648-a349-c9b75341073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96381925-6c7e-4d78-80a5-b6f4e8289530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b119e6-f7b4-4e62-b332-adfd9521fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6127e169-f45e-427b-998b-dc0f765fff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1f96a-e942-45be-9e86-74695785b12f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5210b4d7-533f-415a-98c9-18d992be539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ace4215-72b6-4cc1-8256-6610b51628db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85220fe-3a6d-43f9-a45e-da03bc4acfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fc62e0-6b12-4cb8-ae6b-5f48a7b5b424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3109e218-3caa-438e-afb4-8f62f3dee24d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce69789e-5d38-4f59-bd5a-a79fad39a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8e5f81-53c3-44ab-a5be-8b01ff44ff2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb09aba7-3951-4b33-a9b1-223eed64087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a996bec6-0df6-433f-b91d-ef1932497206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fcea39-8905-4634-b776-70e7716bb394",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a02cd1a-77e4-442a-a699-45feca35ff2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2cf2bf-7bb5-44a8-b02a-af806cf8081c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c74bf0-893f-49f1-bf9d-73806d18f6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9f1061-de77-4703-a84b-45f354fb4c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1530f317-ec0a-423e-afc3-f4d480a04b74",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a1428e-b47d-45f0-adbb-1d9d2920bebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411fe6fa-6a60-4a95-a860-c5fdeeea4658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634f956e-b6e1-490b-86be-1d0b56321a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1badef3-afdd-4df7-a1d5-67e20d712d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43421e90-0b70-4602-a192-753ed6d673ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed928a8-b849-44aa-b832-9456945fa2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4b5a2c-52c3-4552-9d12-e935a8c611a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1291a8e3-4f13-460a-8134-54f368e5cbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2db63347-c33a-4c5b-ad02-bd9f154f156e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faf1e42-8f8d-46f4-9d62-300d43c39ee6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146b0549-add5-46ca-a2cf-cb999720ea7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aacff06-8997-48bf-ba67-e5d2c56f28c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cf4a59-ba64-466f-84ed-dfbed12b6fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a976c66a-2e3e-48ce-b277-04858f8a1071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c976297d-858a-4265-9fc3-3b2e6bd3c918",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea88de0-3ced-481c-81c0-f38d9c2e379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccbce55-0984-41a8-996a-a1792ab683e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26dfaa6-39b4-4347-b390-7f2266e8c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "191ec349-4be4-4fad-bebf-c043ad474847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb4516d-16a4-4221-9e26-f44ee0444671",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c830b62-960a-4c35-b9d5-0fb8e2470f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304b7997-f414-4550-b729-0dd8c38bc5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d85e83-968d-4f1b-8ff2-a0ae6e609c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3093460-1611-439d-bb7c-23db9d387657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7b454-3e45-4633-9d39-bb3ba8456653",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adad7f28-3899-47b4-9541-820f96fc0057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb98383-a4ef-4306-be2e-d1019a28636c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70a9458-2851-4b64-8c9d-d85f25182810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2eb9b9a-dd40-4a89-a72b-c6e75c1f7301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21406c8a-cc77-4411-9f35-30864c3ee9e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65381d1b-1548-4cd6-9019-b708a980ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea037836-b555-45c7-83a5-d5a58dfc17d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864698b5-183f-49bc-9598-20a46b7c18a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f34f4d-1e5b-4a77-ba40-b1feb09e70d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c76365-275f-4df1-aa3f-4d9047e2100f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f593c80-3a07-4e13-ad15-d0e45e9a9c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8d293e-89b9-473a-94a4-786d0c29e139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ad90d-825e-4511-85a7-de87ce048537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51aca5d-40e6-485a-be68-37c8879f9015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06440dd-da91-42fa-b493-e15a30c69b42",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1833d76-8b50-40aa-81ce-6d47928ccdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900801eb-29a9-4c11-9932-8c820c5b5c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f6700-16d7-404d-b099-81a662113ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1396f054-384e-4b07-99db-f367641d5b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b83fc4-6001-487b-9ecf-c26449825c2d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a18e3-df32-4b77-ba69-304a8b937044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e355fd4-c249-423f-96e9-f39ce4b2ec29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7c2a61-08a8-4ede-bc97-40f6c71d29c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6937e508-5d69-4445-8f3c-932ac19701fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622577a3-93eb-4424-8bce-8762bf579d33",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901ce97f-3c68-4a32-921d-04aff71caeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5203b2-96fb-43fd-a6f0-7389d5228933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1342b4c8-1a20-4c91-b439-3509fa307d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c17fbf8-5195-4787-b821-bbaa417efa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709caac2-d75d-4078-be2c-98102f540ebe",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08fd02-1e23-4e0a-99a4-27c38d991c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb8f81d-9c1f-4e67-bea2-048c94f10931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab752ca-829b-40bd-a34f-4306b5ca0d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa447c12-bf10-4b85-b56a-a0fa331d0c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027588db-f1c5-456f-9e0e-e678f4151e31",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9554a1-ff26-4298-a691-9971c00186c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff18243-0f22-4267-8ec7-f319384e8f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2b3bab-00c2-43a4-a682-f3b1ba85d973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e42f147-acc2-40fa-8927-f4597ec546fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976d7fa7-3634-4cab-bf32-11a5c53f8084",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea7461-b3d3-4453-8d92-a3b36c7c819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9c4b3e-b43e-40e0-88cb-f75ee1f1bda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db99e297-b96d-47c5-9e27-6b2b67cef990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17886ec6-b14c-4a20-8220-9ff5fec50626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f561b146-c2fc-4a45-b88f-db2f88f49588",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf2e60-2f18-4db8-a790-fb1c8aff6796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a0f7fd-2011-4826-b96c-d142099d277e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daecbd6-3cf8-4408-bf69-5fc3428dc6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae02d47-e929-498c-97d4-c99314c3c02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6925da5-3fe9-4d66-82e9-b239cbdb5c30",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2f5cb8-4bf4-4a49-89dc-0599db42aa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d1c46f-85e2-4707-a7b2-ab76807f8140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928e3f6d-9340-484d-a411-aae3d1fee949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cd99ce-90c0-467c-9e32-1349c16ab3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8816e33a-d952-4765-868e-d18b761b4c7d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635d519b-2c01-4df5-89f0-e422434a1067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7678d9ad-365f-4f3a-97bb-3f53971b2512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c11802b-fc9d-4a52-8914-3c12c8d8fd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e29d5da8-6de0-4eec-b064-0c61d701bd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4427bd04-3271-4655-8c8c-fad0247836c6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebb5ae6-76ee-4199-b88f-8ebad6095cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae36ea8-809e-4eeb-87b2-f01ee19f3dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eaaf403-0a27-47ed-8e34-4426f746c2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4276fd79-ff28-46b9-b02d-eb1a6169ea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ffae0a-5fb8-4f97-8891-da1d2f397bc8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98857fd-c09f-45d7-b0cf-eb6f0591b411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3d494a-574a-4235-a1f3-7e55cc78a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1c4d7b-929f-4f22-b7e3-dd47089ce021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "230e31a6-3151-4419-b6ba-a13123037c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf27fca7-27f0-445f-bb16-5f543f12cdc3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e1a83a-cc3e-46c2-bda3-435607b74e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260f26e3-c84e-4a23-a838-3af167d359f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d538c9-b088-447e-b494-4c89517d42c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397e97e7-ad70-40e9-a801-891d929b41d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47f394f-8b5f-4ea1-a1da-c3d02148d83f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cc8fa2-e218-407c-baf0-e3a883e6e1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fe04c1-1f4e-4967-b32c-d977031bca94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d670aa-07ff-4226-aaa5-a8bfc5ff4a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c053b64-9383-4e3c-8bd6-837c781a3f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000958b8-af02-4e4d-9007-2221d055fbbd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b74ea2-65da-4681-9e75-97fc012d66d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929b8599-e168-433a-85a4-9cdcb5fa91d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307a777f-86ae-4d39-8468-68efb598fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1010c1ee-c346-4cfa-9e6f-1d80184cf21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efc2bfd-114a-4b8d-8ae2-67741ee59780",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d96ac-40f0-42cd-ab9d-937889f92dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba50c5b-9fc5-4f62-8d3f-d21b07f7509e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2960ef5f-3d9f-407b-868b-2ae5bdfd19a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "313942c4-10ae-40e0-a0cb-d62bd699179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc51ea2-0844-405c-8dd7-cc89c2f01666",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872d2667-dd6c-416a-8a81-ed2ea7cd79b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b29468-d8b9-4a35-8908-52383e326de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f5194a-f93a-45fb-91a8-064fae96da41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd60fc3-a9aa-45e2-b8cc-0a743ea161f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a400cdbd-7ddb-450b-8920-de345a79900b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf39bf35-964f-4ffe-a664-d4dc7d62ce33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f360db9c-285b-4af3-ae81-ef830e9722c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b864cf6-f81a-465d-a092-af879c612b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed04b9a-46bf-4f58-8736-d7ef4e034e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e979ce9d-938f-4fb4-a2a3-1f934f66c5b1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1848fa-209c-476b-a8a2-48b2b81f6b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23594294-1e71-458f-bdb1-fe340747366c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec562864-6940-48c6-9874-cf0f0e7d2fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b7e573-07e6-4160-81f9-097693fd95cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b6998d-b693-46d8-b94f-5b6eb6ea2466",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c8dab-aa45-4491-ba0d-02fcde7279af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786cde62-f74a-4c52-9e45-2ffdb2d0e5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46df3691-c61c-4e8d-b978-6ae132126687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abab4649-913b-49a2-a9b6-cbc06250a375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea96900c-d9d6-44ea-a3af-45b0a19d07a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d151f259-cc71-4972-bdb6-4c8c1e2fa27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442e4c10-cc15-455a-964f-591c04eeadba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f03938b-104c-4eeb-9957-2ebb6b99a86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e858c2ef-e8c8-4ba4-87f1-ca124bcae3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92127dea-e0e3-435a-8d12-c1891bb75031",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e0a121-f0b3-41ee-a9f7-32c36bb39e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a78fb7-4ff2-43a3-a258-b81dbde3fe14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f88613-7c30-417b-b1f5-7729d482bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f886166-7f9f-4c70-812a-d1c8bc1298bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4124f42f-2fcb-463a-8737-9c8fc2a0894f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03016de1-cc92-41ec-9982-c5703bc67886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7048f7d6-8c44-4e5a-a728-5c79020a94f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95dac71-2707-4406-ad4a-17bfb5f57a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34083c2e-e0e5-4ca9-b0f1-b0195391d288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f129350e-71f0-4031-a7da-345fe064f865",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cd6862-0873-41cf-8a11-45da4fc031b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f446c12c-f207-47f4-ab37-96747acebd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d137fb-c9e5-4e84-aa18-04e3c21b915d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8198f6-3aa9-4939-aa31-873fd3602df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789c705c-392e-426d-a229-8f3d1006d31a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b2f2d8-1c30-4708-86c7-2f7df0fb8807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa7c226-e2be-43e5-bbf9-71218e477ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1d73d4-1157-436c-95b5-ccb5abe26c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33f1710a-5153-4551-b989-1779c66f3b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a32ae1e-49ce-41e7-a3d5-2e6dfab077ff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26443e9-86fc-45b8-b693-6c72f444fd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c8dabd-60ea-42a1-923e-47fb65b04201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081477fe-430e-4d1d-9e21-fa6a2f4af430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91fe1ece-64a3-4422-b1a5-a6b0c0ce4fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19430624-ae60-4090-87e7-7efae1725f9f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17142ea4-96e9-4f75-a133-aa4f5b3cbfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf94c95-349d-4a18-b5ac-b7ae310b4ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bb339d-a5e3-4c29-bc08-684f607d13f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc68b6f4-1756-4403-81d5-8a0098a72905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b005b9be-c3c7-4d76-af25-709f71b6453b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90283524-f269-4209-a508-0d3841ba21ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "58b7169f-d7d6-4cd0-9920-1ee5d74f12a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b221cb-a2a9-4322-86c0-9f2f0a3900c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3715a31d-85a4-43fa-8ca9-7e7d08a9a54c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3db198d-919e-4329-8a01-a2c67709400a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52ef5e38-52e2-483c-a394-4d842dced678",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cef939e-0922-4c3e-914e-a30f6781f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2b83ed0-b663-4c03-a8f9-7c980b19cfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924e08a6-3bab-465a-afbc-6ea321cedbcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3cf3568-5d03-411b-8fce-ed8b2bbbb8bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0ea1630-a19c-46b3-bf21-36e041b8e797",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4975d100-48d1-4c19-a816-7af2c1b44294"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8f95990-9f3a-42f5-a76f-5ed1fe8cfd03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06587409-abb7-453c-ab58-fe86923b2865"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f570c6d2-8c9f-42e8-8b74-62b31f15d961",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b856648-51bc-4094-82ef-83e10afa45a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1afea52-ea0f-466c-bf34-8745a19a630b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8bc62df-5720-40dc-88b3-6445f3ded24c"
                }
              }
            ]
          },
          {
            "id": "9b08e205-8ed2-4e01-bb29-29b3e400eec3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3847357-a6c3-4bcd-920b-34d97912658b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "44e6d83c-f654-4a8c-9894-b16d90d6c9df",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aa7aa3-f17c-4bbd-9d8f-2c3ab3cf32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f013dbdb-5c82-4af2-a96e-2557bc2dfb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb2018-f1ea-4820-a715-9b0ac66e4e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55341085-4628-4ee8-a4b2-82a0a8b1eed8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a5eefe1-3928-4308-ac27-7b0d3847d12a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e07a825b-9573-4535-81fe-372f9743268a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c015f792-530c-4de0-b92d-382db47680e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b015e821-655e-48f2-b454-e2882db8a80f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5422be5-2d22-4bbb-8750-21446cd48743"
                    }
                  }
                ]
              },
              {
                "id": "00224cf8-1b04-457b-a09f-82f2d3eab05b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1aa3b7c-aaae-4504-b543-33ba365110a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a44fa94d-b1ff-4a26-a8cf-519bbb772a43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fb90cc2-6777-4224-8a2c-b20e27a80e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0dda405-af45-451d-a5d0-cce0a9a84df6"
                    }
                  }
                ]
              },
              {
                "id": "243f6eb8-b062-4f8d-b6be-be120ae96b8d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "292dd8e4-3373-47cf-aa6a-feab78b1680b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a1c25a1-c56a-433b-a84e-cbdcf7ad73ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8db7594-4825-4fa3-b7d1-48501dcf5b60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65784f82-aa2f-4d8e-92ba-c1054b7edf65"
                    }
                  }
                ]
              },
              {
                "id": "6306c000-1d29-4bfc-a49b-7981cb19bd32",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a12ba8e6-266d-4ded-bd01-44da205e40df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "618fb384-dbec-4768-abad-11b707ce1cec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f04b7af-b01c-4de7-8c09-36842fbd0e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5a36155e-db46-47cc-b57d-0cc7848fc30d"
                    }
                  }
                ]
              },
              {
                "id": "692d2fe9-5162-4510-b9aa-fbeb0a8bb4a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a46b4b45-0be8-467d-8d80-679cc4fea4ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bda2af3f-0cae-48e2-8255-6a74cebb042e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68a38463-c088-416a-9eb5-ed8598c30c2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b766c895-b577-4a30-9a6f-0ff02743f8dd"
                    }
                  }
                ]
              },
              {
                "id": "e63e199d-9be1-4c44-bc14-9e36cb3a89de",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecb42a96-dede-4685-81ec-7f112cf70f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5ca5140-cd27-4622-b26a-2760f15135a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1f46f3d-301b-4e2d-aac5-08ad1e853d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "190a6f08-7943-4aa2-8236-6968e2d19ad0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f58f2b3c-ef86-4c57-b488-9c650cf742ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7c6243f-cff9-4918-8037-aaa6a833d36e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a880d431-a300-40d0-8c4f-2dd89d49cfbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b19577db-6435-4e78-afb4-42e447d4dc0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5f08a15-18f7-47ca-9f89-67047add5a2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8c57c71c-8a8b-4bd2-a0a4-c1b17c609c54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "324a9ddd-5193-49fd-849d-05c2f367bcd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97adbd08-f5da-4e26-b5bf-4a40dc4357d5"
            }
          }
        ]
      },
      {
        "id": "e5b73bf6-ebb5-4858-92a2-10c6d6c27614",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "80eb4063-1be0-44c7-9fa6-2688e0482c55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88b1a81e-e527-46a4-a4fc-584421d3befa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da23e511-0b5e-4454-9020-e1c14b028871",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d968b-33a7-4196-9d5a-3f001ca8f196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e00db78-5417-4bf8-a3e3-65d5073c2287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c7c82b-845d-495d-9f76-12e8aff2ed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7443062-9d22-4ebf-b2ad-579117d943ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c76206e-2b34-449a-8acc-dc0a336c5e8c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520da326-bb69-4f20-be21-977e5b0a64ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860c3625-b7a1-45f7-86f3-f477e75b7bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa132ec0-6017-42cd-8ab1-2f55784c19c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7b2470-3eb7-4d29-8b3b-c5b06865b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d19401-573c-43a8-a870-9abfebd33c9b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4952644e-10e9-455c-92ef-6819bac403ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9c7919-3e84-459c-900d-47ae99a3767b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ff5fe9-65ad-47d0-a088-67682361f32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d3b7c3-48ba-407d-80cb-9c75b003f938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d908667-6206-4e6d-bba0-44bc171e8d08",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6149a48e-4696-4579-890a-18ad46dbb6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc060224-f8ec-47e9-b1e3-08c4c23cb9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21603e8f-2aa2-4762-ba7e-919663943a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12becc9-0c5c-4610-b681-b359902f538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a3c6f-b85e-456c-bdd7-399777958235",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebfab8b-07fe-4677-99f4-ac524bc9fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4161cb5-516b-4ce4-b79f-38375a9c8706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a36428-1369-42ca-bea4-7259ad75a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0d0a74-0bdd-4791-9a95-5268b58cf0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7c9c91-8f90-4f81-b22e-ff111418fcfc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1a784a-de28-46b7-a0e8-4959fea7dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f348c01-c13e-4bf3-b668-2d8ccadf5434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3745ec21-1250-42cf-82bb-17d481c25a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91008558-bc8b-4d9c-a409-4a92ad41973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ff96e5-5a46-4776-a960-a15adda50e98",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6625803-4a8d-471c-a112-3d889adda990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a4179a-bc8b-46a9-8ff6-249968dc79f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424b955b-801e-4dd6-bd59-51fc230bd80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82b13e2-5180-4624-ab58-18fb32aa8f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350bdc59-46c1-421f-9881-850394ce024e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b15ae15-cb44-48e0-8787-c18e3e87c38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2ffb66-5a5a-4070-9d67-da9f0d9fe406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a852a25a-89cf-44ed-aa6f-23dbc8cf49bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee89ff44-52c7-4042-bce5-64797914f41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df55bc9f-f2a6-4485-9b11-eec18fed7e5b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464ae64-02a2-4631-83e0-18078607c7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d904cda-1746-470f-9b12-51a17d656d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815ec987-d4ad-4715-81ef-42e50c22944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b8e656-e481-43cb-a194-3435b75c5409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420b6cc-96c1-4d55-b153-36efb2a68140",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5583b44-90ba-4ff6-ae6e-5ad0cfc49372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6750708-bf07-4391-bf44-e23c4c79e2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bfa557-1ba5-4de5-89d8-70b8981db8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83efdd97-f548-4eae-b08b-4e43a41a41e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e1f856-5869-4740-94d8-4fd5dfe3fe80",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dc18b3-5c8e-492e-99fd-0c7ad305cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070d6171-b8e2-4dbf-bdfe-1fd2b9a46a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a82e52-8553-452f-8245-91f3c40d5477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5963f37a-f5a4-4356-a2e9-b70e7100e0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a41205-8559-41b4-89dd-2e77b60989ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55551cf-aaad-45e6-88af-6073bcb0b827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbdf82d-7324-4574-a6a2-8372d68640f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76053383-c76c-4e4b-80d5-24965e7f6c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd21215-f315-4e49-aa8c-4f009e32960d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee44b10-e0b3-4ae7-95b3-1c850586073b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb06eae-e83d-4bb7-8bf1-e40257b292c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bc6739-c37c-4bef-873c-8b4b724e0da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72772df0-dce3-4bd0-b535-c86f5caf93fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5df7ede-ada7-46fb-8e78-aebfd201e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c10559-6213-4191-a613-2c7ca8c015e4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae8d1fb-1164-45bb-987d-d0e2b151a70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bde7888-f39a-451d-9842-da90447a114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e823d74-1b59-493a-8797-7da0810544e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e72d4a-ec3e-4685-a0d8-7875cc5bd77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daa196c-b1f5-4136-8b47-c4ed038bc134",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfeea73-b685-49c5-931f-285180e678bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90772a92-172b-4fa4-b4b9-1038a1a1f44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7845cfb1-d24c-4a68-a673-35e3d888988e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35981af1-43be-4634-a7ec-25303472e9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf8f5eb-d262-46fc-a7db-2830b3bd702b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bca95b6-8bc5-4233-b31a-36f1fb0d6313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3457697e-4995-4678-9b79-7754f3884c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d133ffa3-41b2-48ff-9599-b5ccca5323b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3c8b02-13ce-47e9-a35f-202dd3e8d760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d004ff10-be9c-4f37-b8db-c79c6ba414f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2139d905-78e2-43c7-8671-c7310a140aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89aadf5-9350-4073-b6cb-8abdec4e1f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90adab4-0bd0-42d7-aa23-e14fbee2d453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42a8ba3-f503-45d0-ba6c-7072af75d68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed73b0a5-2f01-4150-b763-535f492f0e76",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea75ba16-b821-4740-98f8-7d5bc7edfd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cbcf6f-3b84-46a6-a7b6-712021e655a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd07d3b-c302-40cc-906e-e7aabb3945ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b25fcc04-b263-4d45-91b7-f1144ae5b014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea4a4bc-324d-4d29-b846-e2b948dedab1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96151c13-1a47-4e9a-8063-f9f51f77e0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0a6d63-b869-47ee-91b0-1f13324fd644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ae2bcf-20fe-4978-a056-868dadab1a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07aeaab9-c86f-4c10-9eeb-83ba7a911dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4323eb-3d2a-4536-b32f-1749dea4ce8b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03f65cf-14a5-4c5b-a427-9b452cfca394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e86e11-f7d2-433e-a0e0-9eebe4951e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8131f3-a8fb-4563-b6ef-f3f8384ad75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4f703c-2667-4682-b994-aadec99c5ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200fa96f-9a08-4552-a648-222ea6565e2a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eccaf3a-767f-4983-a42f-522ba05fbb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5c1a06-347a-47ae-bd08-3ad1a9976f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2604d-e7b8-4083-8633-ff0df3abac84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "896c17fe-3c34-4691-83e1-9fa53336aff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569aa596-c743-4d0c-b163-e13a6ed81636",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2233254-93e9-47a4-aa14-b4ba5fede533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e714c8e4-545b-4371-ad79-da7766265f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf499f6-3140-4d43-9932-bf87b9b3e679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7471cbff-b4ab-4f78-a2e0-95b0e55560ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea4989b-8051-4fe0-b559-7cd45a3ceb4c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7c8b35-57dc-4046-bad3-537b3aa89c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0dbfe8-ff8e-4eff-85ee-7d9e9ec4cf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe7cf34-2526-44e4-bb53-ee798add5981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90874d98-9711-43ef-8611-5a063a1a8495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b27c21b-7a0e-45f2-a929-56ddcf8a2593",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c42f87-1603-48c9-8d65-c4bdbaf1929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd6aa79-24cf-47aa-9e95-76a1e6731dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e3a8ee-4ea8-4204-861a-74791d7a9475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4421a6a-b95a-483d-b941-ab858b294ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffae10dc-99ee-4a2e-9d34-0cfbe6d484c6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b959da-3e41-4a1e-a500-a1dc8054f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce81d2d-c320-4e7c-a433-f47581cb5420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ad3a62-c579-4321-a6fe-4408af003062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e23592-4fc5-4b4d-a2f0-8d05cf89726d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b40538-e5ca-45ae-abf8-9e9839bf73e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18be3250-1ec5-4294-8745-97d5796ec1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d73309-2be2-40f8-92e6-040753e9c35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f82edad-c11e-47ae-9a48-bd734feae070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "567be4ff-3f0b-4a72-bb78-0e227e45bace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36952ec-9b7f-48d4-912f-f589feadba88",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d064fa5a-7565-493f-a11c-c2f597db8184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05f6b8e-e5df-4a67-bd94-fbfd492b6d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b988869-765a-4ee9-a80d-230bc209e7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366a5370-ef95-4ef5-890e-cc80e0cf4160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd191935-ba27-420e-8782-3e9f4852b55e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fbecaf-34e7-4b90-beeb-0da4d1244ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cee10e-6fcd-4ad6-af61-138b27c4ccd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94253500-75ae-43f2-899a-e8f6602fe3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eadcce1d-57c9-416c-92a0-e9bede7fcd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675bbaf8-0c78-4bd5-8c15-e05fbbb426ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e186ae-c89f-4459-aab2-c630c908d482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede19a03-093a-41f2-8d56-bb5b760a2893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968516a0-f9d3-4ca9-aefa-dbfa91b3f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9db7f47-b1b4-42db-8182-78b2ac4b7231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900dce8c-fcb0-4d37-a7d7-6b7efaf0e7fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbf01e8-1e1f-4628-b957-87cba7c108ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bd43b8-c6e5-4701-bb5f-c736e6092395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07029811-ba55-4cc3-b95b-83f8a992dd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3d4641-e608-432f-b950-540645862020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47574e7a-b42f-4d2f-b742-60d6f7243b44",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdf1765-27d3-4295-b954-5270db2b50e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1848750b-f876-4d64-a0ec-f287f9e0a60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4218076a-f202-4489-b43e-de04f03e1d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930c10ae-8292-4ec3-a955-5c4f90d85d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e419a1-b972-4795-8314-67f48f299cb5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fd8a38-4711-481c-a863-3c6055ad0e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a0e181-def2-4014-ba5d-f015e1ee026e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f80c3e-7f97-4b97-afd0-5918b821323f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16ed88c-ec76-4bb8-99b3-3397d41d876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f39b569-3361-4ffa-aa38-521d9acd6dbe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0e01cd-ce60-48b3-932c-6b53d7590fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d21cdb3-9c1c-4985-a0a7-dfb9250c6374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708b7c3c-8339-4c9e-86db-a66cd5eb357b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad58f882-326a-4bff-914c-69f7bb940ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998e13a8-3ec9-496f-b772-b4a136c7c13d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018da435-4fbd-4370-8d62-c88f09913c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dc0e04-016a-4a8f-8ef3-9908f301cd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b941b7d-7308-474d-8750-b7edd1b04666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6901fb90-6748-4d02-9711-71654fbd293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa822ac1-90db-459c-a686-be28d740f447",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07918cfc-9c1c-471e-bd15-1ba04d0b14d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e247c5-544a-41c4-8922-10ce1e4a8d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25b046d-c523-4b15-a81d-f80aa1c20f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ec222e-cef3-49c1-84fd-6f40c502e6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab639782-574b-42b7-b73e-0e495c8647d7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b11e5db-4349-498d-b497-e826bc9915f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465052ed-1dfb-4c4d-8aa8-e856e3979686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427ae755-f1ad-4f47-b1f3-01f24c2e5331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2e0930-6803-4a98-8bf5-ee5faae892a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2e2319-69c3-4552-9d11-af4c9d5e6d0c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945df9fe-2ff6-4551-a5f1-ed3feea2bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62998f94-8c2d-4f8d-b802-63031c013cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c9a4c0-3a62-4e23-b34b-82f260476946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb55ee1c-d822-4965-9d2d-9eaa9e9067f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6028f972-fd35-466d-af2f-a0a40f99fcbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06d26620-ade1-415a-bd29-d52189f13082",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed7e3b-1c50-417f-995f-c31cd44f3438",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff7969e-8fa7-48f0-ae71-405af0d65b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbcf3d8-9317-461f-a188-14b7acc50803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e2303ed-1388-4132-9333-00d2247c4f84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bcb5c6b-4408-420d-bc23-8ce2604642ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef2e952-0e82-42ef-9adb-30646fea5f8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "710ef471-02a2-4b30-b4f6-f5668a2e4b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d6f9c4e-91da-4249-bf25-1a060568919b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2340575c-abee-4bb2-b059-fc3d804aefca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87c506c4-385f-4a25-83b7-2145715e69bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf39ed9-1723-4c2a-a663-bceeb545b822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ed2d5ee-fc0c-4cf1-b310-294754794b44"
            }
          }
        ]
      },
      {
        "id": "a11ee61d-4b2f-4360-a447-19c891b1fdd0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b7dfbe53-7e2c-45e5-9d75-557f90921537",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a719a43d-4ceb-464b-8d94-75df5a6774ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "261a46b3-fee8-4e18-8858-41d0df14bd82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad81918-e208-46b0-a130-ba305ec1c9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ddf3b4-7b9f-4e3a-9a2d-5f88ad9b7deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eab6ae7-537c-42d7-a299-e52fd270a8d2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766731f7-1586-4420-85e7-6b75aecf3a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea07e6e1-c490-4292-8dab-1e31434b2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4260aa19-3c0d-400a-8572-eca11c6bcb75",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c61965-f98f-4f6f-ba38-84a80baf9f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9984147-b47a-4e5f-b93f-b726f5912bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aeded9-0424-4061-9c79-dd3ad05c30fa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e662794d-c20c-4eb8-8c2c-2b613445bb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cafce24-0fa6-4751-b81e-d7147bc91444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb3618a-c2d4-4b8b-a201-f28ca2df6d67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778ed06f-efda-41f2-9865-a7c4556cf8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f3d6df-0e0d-42c3-9dc6-4697ef2d1df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98c14e5-ea7c-46a9-a216-f271d6c42cb6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0190cb-5f8b-4528-9417-29ffa23cc094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f2e274-8c1c-45fc-99e2-6c818d302e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd134e8d-818f-4f8c-9ebc-9ac3a781e060",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908fc543-c0ae-48fd-98c3-4e046f4f89ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43db784-693f-4abf-b2b8-ad4579ee5caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6c8308-9357-4988-b39c-55b44195ab44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4420901-adb2-48b6-a5e7-f69a3ceb7154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c6da75-65e6-4b8b-83f2-d4ff40a5bba0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8808b072-48c3-423b-8dbf-586af9e37ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb26286-aa14-41b0-9af7-c41be4d45266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e710691-77aa-4c8f-8f18-d707bb9663c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8d4f97-ed59-4ebc-aaa9-e59fe48e16ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afa0182-d3a8-4a11-8260-13ae9f39e713",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fffe65-561f-457c-9356-add2a3f100b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5568e200-5b34-49c7-b273-2c33bf87a97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195cb2a1-106f-4202-9b33-da949673174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032a644b-5d19-4bff-ba7e-68f9a6a8e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2dff25-3b79-48cd-a861-d87cad681911",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1f2114-7b92-4b82-ae5f-3d06623486d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2131751c-246d-4663-ab0f-ca26b76c5e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89516c10-eca4-4b86-808f-599dd0fd607c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34095992-0dd4-4a6a-a25d-5d13ee970867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62fcb5d-9bd1-4c17-8b6c-29ed4e180e16",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62cd0a9-9a95-467f-9636-6812f80aecaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4319053-1015-43db-b0af-1b56c8f23f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e93d290-13c9-450c-a771-dd36ebf5a4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3746057c-3ded-4cb5-87d3-ff30259322c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c33e93-f92a-4487-9f9e-b63551b7821d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb258b3-d8d4-43a9-8218-85a40e968d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0957f890-5bfa-4730-be3e-011b62354308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cf3b99-1004-4913-adfd-1dfe340cef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71475ade-781d-495b-8b6a-cb3dbdf040e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f24b039-0250-44c3-bb3d-0b36a3a0e7b2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f89b56-6fb0-4594-b51d-4ffa5e1f1b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58ae4c2-04ca-42c3-a085-7db472d60d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b190626-a295-4593-9531-3d4737d2681b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e604e7c6-5bfb-4938-8049-f6f5548334bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbedce3-b488-484a-9163-1348258b4c00",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de302f62-194b-4c7b-9e9b-4b0a7a84a225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b041df-7915-4af9-8f0c-8b320e82884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd49c57-1a80-48f2-b4e2-190c973897bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4d33b7-25f5-43df-b5d6-3a3c2d3764ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e8e112-1c95-4f6b-8d05-65631d345aea",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668c057d-20e3-425e-9f82-84ffcfd34d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef486f8-6464-44d2-8db3-d70189dc3e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19e2872-957c-43fa-82ee-f57f93a519fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb252473-5723-4cdb-9fb3-e3cc939b7dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f5fc4b-aa2c-49b9-99ed-17aa7cd435f2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b37b655-bfff-4da5-a1f2-285be690c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f1ef6f-bb25-400e-859f-84c81d9e63b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f6e54-60d7-41f4-b1cf-102df67005e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaa7adf-5f49-4d41-a719-bb8a0cfe70f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1994667e-11dc-4e7a-a6d8-e6d3c2f8726d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a4c91f-983b-4625-a303-775d74f76ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12caf95e-9f4a-4626-a6d6-7d6ba3a24991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1200914-43c2-4f35-a707-3189009ce6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ae5936-78fe-4a15-a26c-346d077b0acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540fad06-ba66-40ff-af44-efd60348546f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa77cf1-0dfb-4f74-bfa9-a8e9b98232c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a648e8f-a130-403b-920f-b83d679a1362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a961332-87e6-4730-bdf0-db0d8e043cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337ba708-1878-4d08-be01-fbdc4978470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c8cfd0-bd25-4e5d-8bef-42e936f479ac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a620a56-f7fe-4494-b1bf-bacd76556f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101c36f3-c3a1-4f74-b837-d5e2d9e33f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96d9753-e350-479f-a284-bec349032909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c46fecb-3380-4aed-be8f-86d4b78a5f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8d4191-0a5c-4fa2-a901-b5a8bc47e75d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0180a1ad-585b-4cc5-8986-68fe1cf7424c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851f4118-922f-4539-8871-1c356e20252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f735f0-afe3-47d4-b975-af4c5a84e0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2219e8a-2204-4851-9893-d760620d273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a1ca9b-eaef-42eb-8dc1-e1c9f53a4553",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3023cf2a-a094-46a8-b64a-afebca6dde9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c11f967-d542-436f-8e4f-07575c1dda1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a6e6ea-8e67-4b24-b958-05a51795123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08822a4-864f-4aae-ac58-e46700add312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5b253a-8d99-401f-835f-1c32719017f5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2133339d-8dfa-480f-a85d-6e2dedc44c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826a2ee4-b82d-49db-af17-b50706c26928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7e6063-b19e-4618-ad02-e44adf85c050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb1f6c9-273a-41ed-b519-68269482664a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5655a73-3f45-49c7-a13d-77217a17266e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbd8314-5d15-4320-b022-4474bf73f009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380f9754-be54-461f-9af5-6afa856cd8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da116233-18d3-411a-adf7-ecb13b84d74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5fb1f5-27d3-4777-9ef6-379bb1f0fa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e22d70f-d30d-491a-8c88-c032385670e8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2909c58-7ec0-4f7d-8991-01b27709071c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d573df-e6db-4d0e-b735-413920562b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1420352-c105-4caf-8747-28b97cfc7bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a006f9-67bb-4e81-8b05-5115a707b8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5525ae95-0a26-4c02-b8f2-4dc20be41e96",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfd6008-329a-45f4-be64-8c89f93ceed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88affab3-b154-4ea6-94aa-a71f6168fc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e14544-b777-43e6-a4ce-d50748395bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf67899d-25ca-4bf1-9ab7-cb9956a8ec68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1f6395-8b53-46a3-b8a2-3327b8ea30da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b222db-6048-4fa7-9155-d60c744e5f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611a6c43-0771-483b-9a21-e95f6f82a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60512a95-6e6b-4df5-98e9-ab2974683440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d38df6-3e60-4554-ba72-0283dd6e0b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dfd1de-6e03-486b-b5bb-b7b94d8d3743",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bed4ebb-3d22-4e5d-9157-b4b0157d4c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bffcde-1feb-4189-b44d-322a28caa321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b71d5-4029-4259-9bde-6b19ef4227b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd79d666-a00e-412e-91f4-985bb0c828c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3354d886-55d7-4d6a-a9fd-cbd6f7b4652f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd4a84-5ab1-439d-b4c7-b056fdbf1283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c53f762-0fb2-42be-a1ff-559d965571f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5daa11-6e64-4fad-a982-54cde38ec786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae91fc6-613b-430c-a810-aade45a63545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f795f90-6e57-423d-8837-487e48314e48",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf46a434-f963-4a9c-b88a-21e61251219e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db5451b-00b1-4127-b6f3-a4573b96e4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457fe2ac-fb2e-4e4d-819a-a7b787f28b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eb4548-52fe-4738-81a8-4b736d2392aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d33cdd0-847e-4991-b63e-9aacbdf14fc5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c23ec57-fd08-43d4-9592-565a0d727224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451d4ad8-eec3-4bf9-b54f-f526772bd24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4358b0-d875-4e8f-987b-3e6a082c6a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25546380-aa8b-4fc0-b2e9-bc0a78801af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da35dc4c-5e1d-4425-ac47-49ab9ee60309",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477c5a6d-1ff8-41b0-98c6-848492010903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96517ecb-532e-403c-8d67-f02633f7f3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126d2b32-d53f-479d-a46f-3791121dac28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fb5e73-ad26-43d1-ba76-8f3ca6576dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550d6d8-2483-4f5c-aaf5-5d154479bff2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16baca51-0562-476f-9905-573c93247b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3904fe3-357c-4ade-a670-5733518f35a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7587f36f-178d-4e7b-b808-8c660211403c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0798d690-861b-40bd-96f7-f490f58ad4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe461f35-07d7-44d1-8e8a-57c94f29149f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dcdd6b-d3ce-443a-a577-5bfe83276106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7e8329-fcb7-473d-a3a8-267281842c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb1c92f-40c8-4486-b755-32f0fb9c540f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2938785-c1ed-4f79-b312-863b24b83182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bb95fe-b679-445e-8781-77e7cf7f5fe5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed587bd-9ecd-4631-9a6c-334102a41b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6e05b7-eab5-4111-a390-98c8e68136e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b6fd75-42c8-40df-8d4f-667ac938bc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f70c85-09f8-4eaf-a198-426b155762d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da00d39-d432-4053-9a9e-5488aee0dc90",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2cac92-434a-4261-ac0d-d841ebe060f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06aa3fa-e3a6-4bcc-a4df-57367b68c77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08d38c4-2162-4238-86ec-15e6ed4239d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9155f061-37a9-45a1-b92f-dda304e47c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9a06d9-6327-4019-b3c8-bad009a266b3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41de30ca-0e37-4b0f-a28f-116db0443ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c51bbc8-f342-44f4-a3cd-25593aaddd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d49b6f1-9f89-426b-951b-cc8ebc558030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311bee6a-3142-4d11-b36c-988ecedb8d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b1c576-52f8-452c-a219-8f39daeced42",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64aabb9-c77f-49ec-a9b4-73d17377f34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8f43be-58af-46b1-b0a5-be26b47864f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d5ccd5-7fab-40b7-9ceb-9067d793ce4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd3c928-a911-4962-bf7a-abc8bea0a9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1243c9-55c1-4a78-b229-9c9148b623a6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f597f0-c6ac-4fa8-aed9-a9f58f1bd700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b488eda-ce89-4e90-b6dd-df121fdb3ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c31319-6132-43a5-8e85-9b881ff6b482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b67386f-2c7b-4884-9052-faae47c6feff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7b5d4d-98e9-48e6-8fe7-94eb3fa9b4c8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2995f5-3655-4840-af04-b1c2561d194b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866d7dae-6441-4ee9-9d4b-4af0b0bc2f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44547df8-5109-4a9c-b518-cce03bc59103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3136dca-3ff6-4cfd-b3b5-87ff5b81ec27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06268a9-80ba-4f08-9196-ba2e5de66e9d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a764fb-f2c0-4af2-a02d-d46cf6c2f71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5c8ef2-b2ea-4e38-bfc8-0f3f2aaea89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a457291d-f1c5-4da4-a68b-8200c9ea463b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a828a458-355c-4354-a532-7cd7b51602cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbbf98f-8591-466a-bb1b-80716d645786",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54d5cea-252a-4f96-a8fd-e31563491e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35b8ead-27d2-4a72-bb78-47fd6e3482ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e5b108-ec3f-44a7-867a-6e9e9cec2c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79d580a-0e50-4991-98cd-561373d6b20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417585b3-2f78-4696-9952-11db0fc1b6b2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13621dc2-f8d1-4fb3-9311-f2d0b3b4bee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b474b383-9ce8-4e43-bcb4-b44eb153605d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4690d0f6-2fa7-4a04-8be2-62d9de8052dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbbcbe9-316e-49b3-ba75-69f8a83d4586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a135cf-46f5-4fec-b9fd-fffdc3608e5e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1874ea04-39b6-4425-ba1a-f171063bd997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442de8d6-73e9-4253-be58-6cc58ee9a36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c963ac-bad2-47f8-a19b-1feec0737eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81634dce-7f09-49e9-983d-704d980eba4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ced164c-333b-48d8-8a32-5c1691cb3a35",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a864ddf-6485-4ecb-8c00-a19f28ae3baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950bee57-a93e-42e8-b39e-1a315a64e26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda1676a-6b25-4312-ac81-f9baec03e5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0d321c-c88e-4b60-accc-736e3ef3183c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff5f4ac-38ef-4cda-9bb4-0bbd224746a4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39888e5-506a-43d9-b440-6d72be1b74ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7300b2c9-6683-47ae-808b-d7cc51f31007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9af1b55-5e1c-4711-ba34-5dfbc4103d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89fd197-a449-4707-806a-cd48c2036dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb84d66-4fde-482b-88c5-70aa647dc65f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5bf4e6-e87c-4745-8e08-93a241db2e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999e8d8c-1903-47b2-b164-051452e3e323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebec3b26-63b6-4948-a83c-1ccb6f35a45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfe0120-e733-4318-9d3a-3713090c442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92166542-e40a-4707-8cde-bdf0e93500f9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d1d36-3472-4a49-a31e-c20e56e2d9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e41639-8f31-4ac2-a68b-4e8e78cbe4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4580bb03-1264-45c0-b458-de4082ecf025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c940f2-13b4-4426-9a75-5578556b4810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaddeb2-a8ce-4991-bd9c-e7aa42123eaf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d76c015-4764-46f7-8a17-fb163c78bd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1de146-fb37-4256-97a3-584d28d58525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8514d78f-2676-4b66-bd12-9ade3f3b0c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93241d0-1a52-467b-89ea-032263002507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1349bebd-5de5-4678-802d-0f0730c936df",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa50ff16-7d7a-41e3-8a1f-85f6e5e4554c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb477831-523f-428a-a247-3d57b0187fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0a911d-f50a-43ae-a391-98a82cd9b23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffb73d6-03ff-4612-b60f-45f4f271c8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7137113a-ff9c-4cf7-b87c-60ac577fc51d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3483637-db08-4cad-a736-241359d11435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42172299-1156-4cb8-8874-68f68e811661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6172a6b2-87e9-4a74-94a2-02055d854cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6624cdf1-5fc6-4728-b779-7ab650888988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abf2d5a-ca35-4ce6-a762-26530ad0fdcf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14c7d6d-5569-41c2-b119-5fbb085296a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4c7bc9-69c9-4659-9d4b-09b6de669b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e5c20-a7d7-4ccd-8f50-ff4a038291aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7bc22e-e3b8-4d37-ac07-f8cd91c0b36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ae18cb-cb98-44ba-9d16-0919ae0dc5d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba8ee6e-efc8-4f63-96d5-4d46d65815d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8cafa4-e108-4f23-b475-2caf3764698a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e5693c-4596-498b-a341-18f30bb53d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40383172-c910-4e3b-bd7a-b9c9d5ad12c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0a66ae-6d77-4410-b23d-b8442e693df1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2dd872-8e84-4209-a84d-7915179f236b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c89a92b-c6cd-4fee-b266-fed86682f83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d43ff7-1c3c-4900-b5c5-c078206585b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f0bec2-d785-40df-8507-938d5c2df13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74347862-e2d2-4cff-9ccf-0f98e500d161",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ffe781-6c47-49ab-855d-f6d7c47b1cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a86b0c5-38c5-4182-9bd3-4abb742c401c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e99140-4e23-4de4-a0ee-68d506506f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e4643d-7501-410b-8488-e36152da1ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bd536b-fb4f-4f49-a491-158b645df579",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23b3f8e-185f-4d95-bd9a-879d6cbe4d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d65026-26c4-47df-9be5-04906a2ba72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d03aa9-36e2-47d5-b68b-2205b9558edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c89cd7-6bbb-45e7-a88e-d69ddca03c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0622366f-2d0d-4ce7-894b-296e8b28730b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5e9783-b93b-4bb7-90a6-a90768894f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9f629c-9a45-42f7-931a-780c0b3031d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2945a616-7bbf-4831-b11b-86c37efaee8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d457126-d332-4a0d-a815-b4c59944b782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e550868-9fa4-4b37-91f7-f6c29a1f7c10",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c552c9-7f6e-44ee-b985-631d35f5b356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa55449-b96a-4910-96d4-e15123339a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dc1a65-ab88-427d-a9c1-1824279ab9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e6a56f-23e9-4762-a332-a65393506594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913ba666-952d-4417-9f45-01cc93cbe35b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715f64e1-da5c-4c40-9b89-cc7860fa0fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c5a1e0-4219-4f9a-b522-137bcb720c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceabafa2-b406-43a0-b7d6-fb8cd4dd09f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aca339f-2ef5-41df-bda3-4802eec00f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf1beeb-d2e7-4db4-91e0-ff097ee7a654",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a06366-70ad-4596-83d2-2cb796764a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9202fa56-e898-49c7-a2b2-f2e4fa9b1ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a313a2c5-d13f-471c-a0be-0bf0fcce23f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07ddd49-2ace-45b3-99c0-153d73971fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9e2562-a0be-4bd3-9263-5193dd11fa94",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218e79bf-e54d-48f6-aa7d-0ec9e4b20c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bfd193-08c9-4829-b8a9-90f7db9109ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bac97bb-643e-4ca7-9796-10723fc4a885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e2a254-aeb4-4361-9ddc-f2331d0c297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ee1310-b291-4233-a8f4-1d013886e8ea",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9665795-27ba-4c41-a8b5-502f56add88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04f8c6b-4bed-44f1-ae31-6aca5961ee0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa7897a-9f2d-47c5-b038-e431e8f4c8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768650b4-9ff6-441e-983c-f625fd03231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09d79a0-d1a0-4717-ac44-8eef6171fbcb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3549c49a-0c0a-4478-974c-002e013e239b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b30ac3d-4b85-4c97-8c30-5de03a6b48d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46238c43-2d96-41d8-86bb-b7fd7e9ea5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbbc2e0-f938-4953-ac24-5fab3640cd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67259d71-c0e3-4ff1-99cd-cfaa954cf4dd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b445c-7d73-45f0-985c-33e74b0d01f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae8adbc-5ee2-4653-bdb0-341336ab512e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a41eaa-eb46-4829-aead-2dfe96d829e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d403d5ca-b2ea-43cc-81f8-c552c8381c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ac6e2-6c71-48ca-b52a-4f11f4416551",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6c2e22-3039-4424-b538-2f5cb74ea95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7898570-053b-4ff7-9a1e-e33e7f0d5d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69a939e-5f2b-4fc8-b05a-bf580d5eb608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46464a08-f665-4913-9cf5-e842691ea2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbea58b-66ff-4d80-8630-2b8016efa53a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f9a337-1e20-423d-91d9-e7472b71c20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8517c4-62a9-4231-bd45-23caf5a8173b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f90a60c-2d1e-4f20-aa3e-152bca987b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66eb9ff2-8bad-4321-b11e-178a5858986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f565aa91-2a5d-4f78-9d31-f6402122188a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b2e4b3-7f7d-4f5c-83cd-4a6d6dc6a22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce16b57-1cd5-402a-a231-796cb4629bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88383bb1-4a31-4986-9762-a1f4faf54e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e74101-6781-4258-b3fe-437178db30f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa4bdc-a740-4d78-a1f5-c2aa16f8f576",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195d9bd4-e2b7-4caa-9d58-0d13d70aa400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fcbb116-45f1-4545-9d70-afc1851ea73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429ab665-dc8d-4838-9c5c-f55900aa7596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66a1c45-0d7d-4332-9784-64824bf5f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed5710a-f7b9-4bd8-83f0-3b4fb89a0e2c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f491ba-a698-42ca-b001-f550e0101266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53a45b7-0034-48ae-8d11-6d7d0f0baeff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f617d9fc-9cff-4a38-91f4-6a283babdfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3e0ed0-fa13-4d3f-8a6a-65957c010757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bc0ae7-3d20-4ed2-90ab-96b5806e1011",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a05fb7-e722-4ad4-8fa2-9c07351dc84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51eef653-351c-4080-b531-8f5203b5d0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137db178-05d7-44c1-985a-76f4db47a321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78308ac0-71ca-4b41-81c6-87f5c8116cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89477aa4-f8f8-42aa-bc2a-8f34acf236c9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f714b995-0efc-49f3-9acd-e6323493a021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad8e870-32cb-4ddc-9eeb-485de5530986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eae993-86bb-45e2-8b43-7ad94f5737f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1a0fac-bf99-4e29-ac73-87ea5ade8acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a7c47b-a144-40fa-afcf-c445d9e00347",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024be4ce-f8d5-4bf1-9772-c98f554436bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "665afed3-5902-4565-912f-80b2cf0cd284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d378d73-eb16-448a-b332-aefbe05d09e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d6c6da-a34c-43cf-9430-aec60671e16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867512de-264d-4914-959b-9865f4a4ed32",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8faadf-fe38-41bc-b760-8d444b8c41a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77fabb04-4117-4bf4-981f-8e4b439b60f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29794bb4-7306-44f9-84cc-89841458d070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ea9076-e993-4ec9-b4c1-e2c3af5b57dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08673815-2599-4ebd-aea0-0fff4242ac65",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c255c43-1429-4416-87b5-64eace94a04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3f7b64-65b5-4ea1-90b3-fecfb0ae0db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a78b207-386e-4665-a2c0-6c0be6a26ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1440ed3d-a069-4945-991f-ddae2343b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1477714-9bae-431f-9e65-aed13f56b674",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a920f4c0-9113-42cc-9ba4-a8f298c62155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f492803f-24ba-47b4-ab97-d204564ada15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86060a70-20bc-486c-9a28-4b3b54b1ee6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4aab74b-b328-4aba-93e7-8e288a6bf185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f2e100-4d97-48be-995c-2addbd4899dd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e36d32b-d5ab-4eec-9c4a-ad0ca14d7efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75438d1-4304-49b9-9123-ceeed02420d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a804ef3-a44f-4ea3-94e9-b0c805f7241f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbee52a1-f9b8-4ed3-b1d3-7aea2a7c9b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737f74b8-42da-4718-be9a-c16b4d78182a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4834eb98-01de-4b85-b97e-fc99bfa25c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2575080b-ce44-4e20-88c6-56c28ccdb292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d54917e-1a61-4f26-b0b0-57c23c6f2196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af333f47-49f9-4701-8a16-4699e2a9eddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a3480-43d6-45c9-91a2-df77cdc47d5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09c038b-5618-4df3-95aa-c98bd4281f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b7c0ec-bf6e-4051-a692-417dbb89ec0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87998331-4082-4d07-b415-e8ec0b5bbbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfff1fe-45fe-4450-9b33-4c38bd46e9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d070dc-0920-4f4c-b432-905305d2e8d4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc114a4-d5fc-446c-a043-10ce99c3540c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b332308a-b3a1-4ce2-b676-0c60f131bb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd57936e-bb59-48ec-97ee-9e3c0b2be811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b754b81-fdc7-4fa7-91c5-2727f67ce547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea36ac0-ad7a-4dcf-8608-2b6c5fafcb63",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70e5c13-1867-4c94-b982-db10a2b63d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c438f138-969a-464e-ae1b-c418bd69ebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b668b-2c19-4d51-9c34-b9e1d22f18f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd2e078-cec6-4f4b-9b27-a0dddff02241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98cf804-a465-422f-acdb-0787482eba8e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729af35e-d749-467d-8624-b07b0ea09228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15bf72e-6ab6-48af-ae5e-2876d8265f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cead50-05ad-4e13-9e25-37bc3918f3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7ed10f-616c-4f3f-afe9-6adfd2856edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d726fb-f068-4746-9f72-b4869e8e73ae",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd6a298-2d56-4fe0-8c41-5e8fbff54e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b01fc9-f5da-4860-bf87-9823664f4db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5b69d1-81b7-4a2d-adad-0a5cb02fe67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c12576-0e9f-46d0-bf81-fae1c18e40fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bcb9e5-3a28-4a5f-be7a-0780545352cc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53890cdb-8ee7-4732-b84b-d09afb144308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575116b6-fd72-4a6d-bc00-bb4a111cff4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897ae1d5-9a4a-4779-8709-d1e13150b56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b8029d-4c57-4146-9852-46c9e3e7858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93d8fc4-0844-48ea-8878-332870c1db64",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748beb64-bcbd-48fb-b6c2-e635258860a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3731cc-bdf4-4cfa-82f3-9e39fb2620a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dd5a12-d408-4c23-a13c-6b3d5629c6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52498031-a132-4698-ba75-29173b51225c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828edca3-1f0c-44f5-abce-5bcb5e5ae312",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66dcbfd-9e3a-4e0e-b634-79017c81574d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bc4a98-bd5c-433e-aaa7-1a4652069c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9dc329-c2af-4ac0-923c-53be10ce2c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b29c430-3912-4a06-8526-17cd5f107926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605052eb-1fa1-4838-b5c8-ff4c495764d4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f8bc55-3dc7-4b3f-ba64-dd9aabb9a388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffdbda1-4ee6-47ed-b7ac-d8f27bbe6429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cceffb-03fa-4b9f-ba24-769255cc8a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04c3f74-2940-42a3-99ef-abc8c75dde99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8468d10b-e0ba-483f-9097-d9e8d92bdc30",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4277f7e-b2b0-4a82-bf0a-05b561eca993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8d5e96-dc49-48a4-a410-046c89b264d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37046cc9-9afd-4505-9608-88f080ccb6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a327cca-cad1-4a81-be88-1d7f9433d3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f799f5-4140-4fa2-b351-867dea38fcf5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae1a576-4b61-481c-95a1-b6bc30a3e203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8220069d-d338-497c-972a-712187172f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fbc1e9-ffd0-44a5-bc55-277b30dd4b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea3a179-60eb-415d-b265-694cce2e0065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5468fd0-8c72-4398-b6c5-b2c0baf0beb3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a323ab-2c25-46d2-8c26-56028d3e531a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca19012-652a-428c-b059-721836ac3a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a44c83-b6d9-4314-9d2e-f84de1c78b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d479ee4b-00ab-4006-9acf-c505bcd12c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce793ea-6283-49cd-9370-fcc32352de9a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d493203-2e25-4a72-954d-d8c272d85ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c357eaad-8eb2-482b-810f-3794e0bad6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc30c6-d3d1-49b7-a5c5-6ab1dee7d9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c31a98-9c10-4218-8fda-f4a75133cd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300b254f-00dd-4dc2-b09e-c395b6450b84",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf38e05-1cfc-4a77-9102-b42cd941c742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee97bedf-718c-4bc0-bbde-76b27d8873b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e589d6-7116-43b0-ae07-9687e2a84237",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c846040-f79e-4356-be68-ca1c16d377c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ff2b99-fba5-41fc-b608-ea76ac83975c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8c6436-56d5-4e6c-a1e3-fa718d1ebbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ee4a30-c84a-480b-bfb8-08de6c1a13b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beb0e16-8baa-45fc-a58e-cc4e785bfed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0103b248-ed81-4955-b694-2cba7cb5036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9a7ec-0117-4227-965c-952b5ef009a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1686d25-0a44-43e8-8f25-7fcdbe9945da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25641186-d54a-429c-b172-d1751f9f798e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6689ab05-ef27-46ac-be8f-75d06ceae36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2f301c-9ae0-4bca-a920-1b3944e69c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcece5a5-e16c-40c7-a966-538ef33b7c53",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a962bd4-8390-4d09-9fbc-fd97598d24c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd9c382-efd7-4787-bd81-f3b5ff8654a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9349c67a-a498-45fe-a207-a33656ebd3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e204d4c2-0b0e-4ed0-92de-b314c2598f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1157ca0e-c1ad-4ab2-83f9-9323850a68ad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3585a11-7e54-4dfb-a4c2-afb9849a277c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20621809-6213-4362-ae00-c6affb063146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d295ca8-8072-4075-b0d4-72b83f11bf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687b8fb6-3c08-49bc-b8ea-6f978d1ae648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb264fb3-b2d4-4701-af30-b2cbf8a8f118",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0970e93c-179a-45c4-aa66-29eadb3b92c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b599687c-93ed-4832-8b59-6c7d516f8236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6498d48a-3021-4905-b1ef-02351962af82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6408f3e3-7f02-42cf-b1ae-3b2836ad4708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85c1590-4e6f-417f-a8e2-0db2f63bec0e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d846f8f-409e-4bcd-9811-404b51eae4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3209bfea-be5b-415c-a876-46cba66a0c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f483ab9-cfde-47e6-9b59-ecf6ec6f947d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9e136f-46d2-49f7-8bf4-630e5ccae03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396bd9d6-3cbe-4b35-b6ea-c30753638ac1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667b1578-665e-4882-9b22-637262a382e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03eeb09-6067-4d87-84b8-249ddd61006d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d246133-bea9-40e0-9cff-7050f9fc406e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ac660c-6c30-472d-ae12-c8bfbdfb67b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df19855e-17cb-4d8b-918c-141386ca4ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75859cdd-e524-4076-8a70-43597f391226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73133440-ce43-4f79-af14-1f1168e0a7b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8678f7c8-129b-46dd-b882-24638c263fec"
                    }
                  }
                ]
              },
              {
                "id": "42e793c0-211c-4441-ad32-106c9b9b1d61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50f65507-710e-48a4-b041-ae873564ecd7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7686b9ef-9ff9-45bd-a432-af71adbbdbe2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e6d85cb-4570-4672-ab36-aae7e0c28a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2d7e31-3162-47e3-b9ab-417ecc0b80ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d19ab59-18c6-457f-94c9-2656da6d40e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a4b2cb6-4abf-441d-a4db-50bc87fcf6c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e45a36f4-de21-401d-a86e-8eb81025c688"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a00e7d8-22ab-46c5-b5b9-0714f26c47af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73031dba-5305-4656-9219-e80305243b69"
                    }
                  }
                ]
              },
              {
                "id": "2558f51f-a651-4d79-ace3-ab2c298697aa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79730e5b-881b-4b92-bc8f-cb502b9e9d4f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14170c61-4a87-415d-a920-596b283f48a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8ef8f17d-1519-45ec-9899-b14048bf56c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ab6338-f156-4115-9f2b-687909c21412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e08ca8-0635-43c6-95af-03a76de0025d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e967f27-765c-45d0-a0f6-c58848427d07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e668b01b-8758-48cb-9b41-97cb72617746",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75f4429b-267f-4b90-8193-573ed0c02ae1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "991c0e68-3f5a-4bc4-831e-319112e45028"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f73d6b54-8cee-4feb-bed9-3351e961ca1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a28de92-d7ad-4d8e-bfb3-93da27639914"
                    }
                  }
                ]
              },
              {
                "id": "561c8adf-80df-45d8-b9c4-c149c3386a42",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "291ba216-5c7d-405c-949e-b045632cebf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0acbc1a-1596-4857-a92e-4c4eb895dd3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f0c9f8b-d864-4e8e-bc52-ccae01e521d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fcf2cf3-db12-4860-9fb6-f842d34913ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9089ef9a-97ce-4b37-9651-05d87a48772c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "59d6f475-3f90-4ddb-8685-1ef8cc76f8ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "541b77f0-e74d-492e-81df-c4fb8daa8a1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d74968bc-771d-4813-9b08-6343b6375ab5"
            }
          }
        ]
      },
      {
        "id": "fb89b9e4-4a4d-4f09-870c-40a810deb4ef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a742520-b462-44f2-9f37-51b7d914c838",
            "name": "Negative Testing",
            "item": [
              {
                "id": "623a55ad-7a80-4dae-97b6-abaf1fa13ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83d2ff0f-e573-4871-af3a-327ef2e41a5c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0384dff-51fa-4168-a9c9-bacc5aefe4f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b3de8836-acb9-4a46-b868-bdab8c8f488d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104cecd6-22b5-476b-8074-0c559e89acca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "357aa6e8-e143-46f5-9936-56f703923600"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58ed5a25-bb7d-432e-a2a5-93a81cf04205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b382e6b6-5cc0-4fd7-ad78-6d8c73c7cb68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ab547d8-ed06-4075-82bd-1b400fefbcd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d0cd319-1f84-4510-b1e0-7be884aca351"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d625399f-4539-46fc-8f78-4ccce7ad2505",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2b2a5c37-f87a-47d3-8024-881d4ab65fe8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f08d3b3-d6ff-4c9a-a307-6194bbe0ecf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9307beab-83da-40d3-9b09-932e738df573"
            }
          }
        ]
      },
      {
        "id": "526c96ca-a499-44ef-a960-f18b863ae56b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ff1bfa5b-ca10-4a99-b000-fdf1d5979b48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edf2d8b8-6822-49a5-bf2e-ecaddb454781",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "690adc41-012f-4daa-b9ba-305f6bcc1fdc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c4e59f-775c-472d-a42b-96f53dff0b17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e26b14e-53b0-4590-9d7d-6ca2d10b771f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a270a7cb-4786-447e-a683-ef95e62688ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c795dd0-a614-4c95-b02d-80a0a70a0b4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "071ea6e4-09b3-4676-8244-3a54e28fcabd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e04e0aa9-0441-4997-8ff6-73bdfd24c2b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56cf853b-182e-43f5-a5fe-c89216a57529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8742ebfb-edc7-4d91-b9c9-b60a36a1448d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2539843a-9383-4b71-84d7-0cbf0f8420e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9fa2e288-9f8b-4d22-9ae7-741526d0b988"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96747a42-ecc9-46c7-89f6-0d97f17a7e53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb4cac28-52fb-4a69-b9be-54453d3b1af4"
            }
          }
        ]
      },
      {
        "id": "9609c17f-dac5-460c-b23a-640cdfbd09a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0fdc9b4c-2566-4149-90f8-aada7607b94d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22ede4d4-f4f9-4942-9da6-7ad98ba0705e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae133d2b-76ec-4ab4-a6dc-581b24472ed2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110de95a-5b81-4edf-b89e-0631cedc2ed3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c721d4a-2d85-4438-9ba0-5a85db332dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd943f1-4c70-448d-b683-754a27232a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce55d0b7-a20e-4446-8449-5f8b43d21f3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4fe89a0-3903-441f-bec6-8710da065db6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67263491-fc31-46f0-be51-773f88c36837"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cccaaf07-39da-4a0b-8dd9-c1847498ac97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "107253a3-0b81-4426-a0c1-1cba22014370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b0b4a84-7390-4016-a16a-dcd22d481a42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1ca3121-c0ca-4c07-90d4-8ebe942aa2de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3807e0bb-64b3-4acb-a1d4-3d6b4f879a0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1742d874-b659-430a-975c-427bce745601"
            }
          }
        ]
      },
      {
        "id": "2806a8d3-48e4-4890-96ea-6697ded3149b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af0c77fa-7e86-4911-bf6e-1c1667668212",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "146b4f6e-68e7-4333-a143-ecad1b57010a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cc29b3cc-d60a-4971-91d1-94c96514e103",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20a5ebcc-a403-4374-a95c-85191823d0fd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79f485e5-3f35-4c3a-88ef-56d3b0939c73",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.841269841269843,
      "responseMin": 2,
      "responseMax": 341,
      "responseSd": 27.373348380534452,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721522603331,
      "completed": 1721522613180
    },
    "executions": [
      {
        "id": "b4d5e066-dcc8-48ad-86ec-456811977bd5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ef7a3c84-2da9-47d3-82cb-d2c66084a239",
          "httpRequestId": "902fa566-b459-40b1-9461-9bbd261635d2"
        },
        "item": {
          "id": "b4d5e066-dcc8-48ad-86ec-456811977bd5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9baba41a-1c78-4b25-a1d4-c5c043c79d0b",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "09173d05-c262-4862-878f-fcdcd7edb7fe",
        "cursor": {
          "ref": "4bba5112-b41c-46a9-b65a-33a08b77154b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c3b246e4-88b8-4bc5-8806-f69c6c02760d"
        },
        "item": {
          "id": "09173d05-c262-4862-878f-fcdcd7edb7fe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d7479dba-1937-4b4a-8d6d-f0753f7c803e",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "232ffdb6-3354-408b-9d3e-b7aa87449fea",
        "cursor": {
          "ref": "b5210d74-1928-432f-ab98-b5905233d41b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a74c7fd-69b7-4b28-b19d-35a14f802ee2"
        },
        "item": {
          "id": "232ffdb6-3354-408b-9d3e-b7aa87449fea",
          "name": "did_json"
        },
        "response": {
          "id": "68acbc0d-fe5c-4f5f-94a9-f6dbee2a4dfa",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3276fecc-3701-4b81-9dad-6db2f976df23",
        "cursor": {
          "ref": "2bc074c5-e0bb-4899-bb4c-d8bfc65bd2aa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bae4e3f-3379-4a4d-80d7-933c16642493"
        },
        "item": {
          "id": "3276fecc-3701-4b81-9dad-6db2f976df23",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a65bb9a-3dc6-4792-b188-7a1348b67a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3276fecc-3701-4b81-9dad-6db2f976df23",
        "cursor": {
          "ref": "2bc074c5-e0bb-4899-bb4c-d8bfc65bd2aa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bae4e3f-3379-4a4d-80d7-933c16642493"
        },
        "item": {
          "id": "3276fecc-3701-4b81-9dad-6db2f976df23",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a65bb9a-3dc6-4792-b188-7a1348b67a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e30d3a-b74b-4dbd-89a6-425c39024afe",
        "cursor": {
          "ref": "5a239915-9b75-47d2-b3e1-63c2ccc32ea8",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a74d5f72-f439-464c-920f-14a5f2ff5bf2"
        },
        "item": {
          "id": "c2e30d3a-b74b-4dbd-89a6-425c39024afe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a006c27b-bfff-4034-b6c1-ee16d414e957",
          "status": "Not Found",
          "code": 404,
          "responseTime": 163,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340f131c-0a05-4be6-ae2c-6a017a42ce74",
        "cursor": {
          "ref": "ff9f0e3e-f29d-4c73-bd4d-c44138946184",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "47bebd05-70a7-430c-89e8-c9434f319483"
        },
        "item": {
          "id": "340f131c-0a05-4be6-ae2c-6a017a42ce74",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9bc63178-066e-4bea-a58b-4d53712211ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e33d2b-cdcf-46d8-b462-9b0eb111eefc",
        "cursor": {
          "ref": "fe6fb2bb-d29c-48af-96e0-a663a68c9da8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6df29320-078b-4127-a10d-680db106551b"
        },
        "item": {
          "id": "24e33d2b-cdcf-46d8-b462-9b0eb111eefc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "73ba9322-c8fd-47d0-9ff9-88aa8cbe94b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c44126-6e07-4c2f-92b2-ae1a4bdecb43",
        "cursor": {
          "ref": "9ba6ba80-b7ba-4b73-8b82-0fde47da5660",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "62a83e5b-2064-43c6-b5b1-0d3203ea3471"
        },
        "item": {
          "id": "61c44126-6e07-4c2f-92b2-ae1a4bdecb43",
          "name": "identifiers"
        },
        "response": {
          "id": "104ada4d-0f9e-44b5-a389-1945e75f01cc",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a062485-112b-4159-90c8-41203d665e0c",
        "cursor": {
          "ref": "c1b0c060-31af-4fd9-99d7-19dec57dadc0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dbd8ce87-b09e-44ba-bd21-74608dc51f21"
        },
        "item": {
          "id": "9a062485-112b-4159-90c8-41203d665e0c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34a5bec1-660a-4e74-949b-5eb2dd273460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cd7367-e60d-4e47-8935-6b6abd1ca23b",
        "cursor": {
          "ref": "f51d4d14-f053-46bf-9a90-a1b0297d553c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2ce8400d-3011-409b-89e4-f478993586ca"
        },
        "item": {
          "id": "18cd7367-e60d-4e47-8935-6b6abd1ca23b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3d01663b-7c61-418d-93fb-f21929a1d9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9640685e-3d2a-4ed4-9157-fb97bd6ea3e1",
        "cursor": {
          "ref": "e690c897-3dbb-4667-a96d-1933b1e909e0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "43748e00-f087-41b7-be26-cf984ceea7ab"
        },
        "item": {
          "id": "9640685e-3d2a-4ed4-9157-fb97bd6ea3e1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f2f29add-384e-4ddc-a118-6adb4992990e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fee03ba-90ad-40d2-a726-3a75f0cb614a",
        "cursor": {
          "ref": "3420cec2-f90e-4622-8485-55b6256455b7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b5729a1f-a4d2-45ac-bb90-97b4f9a40b82"
        },
        "item": {
          "id": "1fee03ba-90ad-40d2-a726-3a75f0cb614a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2ce45067-ce1a-47ad-bd7b-062f6275baf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07f28c8-11f0-4e44-af45-e976318c7bf6",
        "cursor": {
          "ref": "30c6b16f-fc07-4f6b-9b32-14638c24450e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6b673701-0525-4900-adae-514f37170923"
        },
        "item": {
          "id": "a07f28c8-11f0-4e44-af45-e976318c7bf6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1e049b1a-24e1-4f07-a573-c1f1df610e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef9439-f636-4038-9428-1603a32eac32",
        "cursor": {
          "ref": "3abadaba-bd98-4dcb-b8a2-1bf4689b06f0",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3faef273-1930-42e5-b26f-5400b4432418"
        },
        "item": {
          "id": "54ef9439-f636-4038-9428-1603a32eac32",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ff9c54cc-43f1-43ef-bd2a-c76b31d21d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982e55d9-9081-44ba-9292-555a8e97a888",
        "cursor": {
          "ref": "26fea5e4-5b7f-4692-ad2d-202a53907be8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0b9b1296-79bc-474d-981f-54d6bb17e52a"
        },
        "item": {
          "id": "982e55d9-9081-44ba-9292-555a8e97a888",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "785ddb3c-5882-4c9f-a5a2-849ace48b3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae930e7b-1d1e-4c7c-b3fd-03122b1b2eea",
        "cursor": {
          "ref": "354f7a0d-ea06-4f8f-8c90-92672efa5f98",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9cfab064-6cff-4238-a611-e06f816b044b"
        },
        "item": {
          "id": "ae930e7b-1d1e-4c7c-b3fd-03122b1b2eea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e8165eeb-3b5a-412d-add1-ba133aa94a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b07285c-35c1-4928-adf1-17be311a15e4",
        "cursor": {
          "ref": "e6ce5305-f2b4-4112-aadf-6eea12276960",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e29b245f-89d9-4f31-849f-6d0fb5ac9669"
        },
        "item": {
          "id": "6b07285c-35c1-4928-adf1-17be311a15e4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "60d6426c-035f-4764-8e9a-a698516a5914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e43a36-358a-4270-9db0-0d3105f7ecf6",
        "cursor": {
          "ref": "ab9ba2ba-64db-40de-a4d4-63464ce9c8d4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "21c87098-fef1-4edb-95b0-67b63612e9bd"
        },
        "item": {
          "id": "30e43a36-358a-4270-9db0-0d3105f7ecf6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "43a771c3-4cf9-4e49-af3d-338a8705b73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daffba67-897d-479b-8237-05d6b8b0fbcd",
        "cursor": {
          "ref": "cd1ca625-9303-4f98-b65a-584f37cb0ad2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "56f24577-f2de-4e8b-b9e4-b3655febaf77"
        },
        "item": {
          "id": "daffba67-897d-479b-8237-05d6b8b0fbcd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0bc1572c-64b7-41cb-8c0f-9d3592fef86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4b3109-5344-4885-9745-c8b139080f93",
        "cursor": {
          "ref": "a7d2f105-a610-4545-a8bc-b712ad8accba",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a4fe44ef-8ef8-417a-8319-086bb6ecdf7d"
        },
        "item": {
          "id": "3a4b3109-5344-4885-9745-c8b139080f93",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b3729f5a-25b6-40c1-baec-a105e7fb56af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a679ea0-971b-47f3-8f9d-4ee441f04d37",
        "cursor": {
          "ref": "d91d54e2-f9c3-4ca6-ae58-53ae53fa61a5",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0c856ceb-695e-46f4-b291-785c290476dd"
        },
        "item": {
          "id": "3a679ea0-971b-47f3-8f9d-4ee441f04d37",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4a9be2c4-1089-43b3-b3ea-77a87feb7952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d329fd-f017-45f2-98ac-714b8bde3e8b",
        "cursor": {
          "ref": "f3d6620c-9549-4271-a428-d1c19c0abef1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c26e7063-0d89-45c2-99f9-07729f5134e0"
        },
        "item": {
          "id": "98d329fd-f017-45f2-98ac-714b8bde3e8b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "312ae47e-ab12-47b2-877f-92c14824ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99057550-24c4-47cc-94f3-46174c27fcf5",
        "cursor": {
          "ref": "6398a24d-1315-475f-9f61-b1c0a4adcfc3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d7c35074-3ca1-4f7f-b927-620596f402ab"
        },
        "item": {
          "id": "99057550-24c4-47cc-94f3-46174c27fcf5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f4485758-f026-4d4a-9327-3a4627fb69c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d853c-455d-4ebd-a9b0-23d7f98ee393",
        "cursor": {
          "ref": "241c852f-b8cb-45d0-b571-2ecf7bd226cd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0bb620a6-10d5-4eb1-a9ae-ff6708a89c09"
        },
        "item": {
          "id": "3c4d853c-455d-4ebd-a9b0-23d7f98ee393",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dda92652-131d-45fb-9718-8fbdef381359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3654f6f4-929b-4f35-9083-16cb799d17a4",
        "cursor": {
          "ref": "d34ec8ca-c0ba-4b4d-bf4d-22995196e26d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0d844a35-98af-4434-a31d-8145758f5116"
        },
        "item": {
          "id": "3654f6f4-929b-4f35-9083-16cb799d17a4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db0ddc90-9323-45e8-8b5a-2b52bfd71a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3392e3d5-b7bf-4584-a945-411382cc1156",
        "cursor": {
          "ref": "feeb48b2-3555-410f-aede-cf73944f1ee3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b809276d-e2ba-47d5-9d08-40934dc2de29"
        },
        "item": {
          "id": "3392e3d5-b7bf-4584-a945-411382cc1156",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4d4ba28e-8ef3-439e-b459-202e3ae83c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f94a55-b04c-4d88-82a3-ca5b8312a6dd",
        "cursor": {
          "ref": "dcd1e012-c2b4-4290-9196-8e08d3bf29de",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "65a8fa79-e7d9-4312-95c2-a8192ff9b4f3"
        },
        "item": {
          "id": "30f94a55-b04c-4d88-82a3-ca5b8312a6dd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3cd3881f-867e-4e77-bfee-83f536f59bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76388d65-1e0e-49ce-99c0-f94d5c6a877d",
        "cursor": {
          "ref": "b0a6e8fe-c13f-4f07-8a73-6c463466c992",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e2b0edae-cc8b-4fa9-bd07-79a7601d5ee0"
        },
        "item": {
          "id": "76388d65-1e0e-49ce-99c0-f94d5c6a877d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3a9cffa0-c35b-40a7-b4fb-6dda3f39c2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5bd030-1ba0-44ab-a5b0-9aa77bd4af9b",
        "cursor": {
          "ref": "3fe6b0d8-24b4-4696-9972-c2e460b66c15",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "549eaaf4-cd03-4b9e-b419-8607516a6780"
        },
        "item": {
          "id": "8f5bd030-1ba0-44ab-a5b0-9aa77bd4af9b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "55e0e049-1636-4051-912a-2e3242767bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a61cd5-e499-4714-9dfc-cecda75af8f6",
        "cursor": {
          "ref": "a7117b16-16e7-4f86-849e-c806211c939e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2dadd5e7-dac0-4624-848c-1bb79d279832"
        },
        "item": {
          "id": "61a61cd5-e499-4714-9dfc-cecda75af8f6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2156a99a-714f-458b-8357-fe0adaa33f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b846eb9a-19a0-4091-929f-2cfbd1a12dbd",
        "cursor": {
          "ref": "b9251fd8-aa8e-42d2-b56f-1a001fdd9396",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d7be5de8-0c22-46cb-9099-679d50840ca9"
        },
        "item": {
          "id": "b846eb9a-19a0-4091-929f-2cfbd1a12dbd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bb11885b-848c-45bd-af46-19e274ce4cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36bdaae-c478-4563-9700-b8ebcce97ea1",
        "cursor": {
          "ref": "8400f9f6-1f29-4887-bddd-ec191f48270b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8de840ca-98ca-4abb-8928-e22176d73588"
        },
        "item": {
          "id": "b36bdaae-c478-4563-9700-b8ebcce97ea1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b01ad7be-482f-4c21-89b2-27479779e13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8980048-26d4-4cdb-a132-ba421246b92d",
        "cursor": {
          "ref": "7b4b7e54-4b94-4170-b350-d45823aaf60f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "73bbffa0-b667-4e5a-b9e5-c2b6b0399923"
        },
        "item": {
          "id": "e8980048-26d4-4cdb-a132-ba421246b92d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "18855834-1caa-4cd8-9f3b-e03845ba8968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d997a9-0c6b-441e-8359-a570cf76e58d",
        "cursor": {
          "ref": "f111de8f-0d72-4600-bd9b-fc9fbc6a1a49",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d6f8a1f3-9ded-4471-81ed-1ae269966475"
        },
        "item": {
          "id": "21d997a9-0c6b-441e-8359-a570cf76e58d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b60f0d02-35a0-442e-90a5-cf84c4b3c519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784385a-7f59-4354-8aab-738deb2f8c93",
        "cursor": {
          "ref": "af64a47e-be35-46b9-a09f-82c602dd3ee0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6007ee67-688d-45a2-aa85-45c6d479a5ad"
        },
        "item": {
          "id": "d784385a-7f59-4354-8aab-738deb2f8c93",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a779eeb-7fc3-40bf-9cf0-132367416cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46c88af-1ad0-4d9a-994c-7816b5767c2a",
        "cursor": {
          "ref": "932dffae-7f29-4441-bf29-a79759d0a590",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e1969553-23e8-473e-af5e-7692c8627b22"
        },
        "item": {
          "id": "a46c88af-1ad0-4d9a-994c-7816b5767c2a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c047df5f-4c32-41a4-9fa9-5a4546cf2804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00024cd-2eca-4328-ab70-e3205fd6ee61",
        "cursor": {
          "ref": "e8ff5a6c-04e1-47b8-ab81-fec640744131",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1abaf437-f6d6-429f-ab1e-ff586b597b73"
        },
        "item": {
          "id": "a00024cd-2eca-4328-ab70-e3205fd6ee61",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e509f1b-bbef-422a-bf6c-797fe3b9f975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce17344-2cff-40b1-847b-d14feb298e6c",
        "cursor": {
          "ref": "040c2bd0-e661-40c9-bb59-b1cfc188224e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4bc7c627-f2d1-44be-957f-55a27cc9afc5"
        },
        "item": {
          "id": "8ce17344-2cff-40b1-847b-d14feb298e6c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6c9b1a58-0ea3-4f89-a14b-9466b4fa330e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdecd2a-c6a7-409e-b6ae-860da9d81b1e",
        "cursor": {
          "ref": "cce4bac0-f710-450e-aafe-ff71b680e157",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b5bb73f0-30df-4db3-8d9d-141308bc31a0"
        },
        "item": {
          "id": "ebdecd2a-c6a7-409e-b6ae-860da9d81b1e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fc87d08e-516a-4d8f-8b14-9e621df95cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46193a74-0b15-4e47-9782-bcf701c44602",
        "cursor": {
          "ref": "d3e5ef07-bb03-4cd9-9b7a-f39e1079f588",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dab405a4-b507-49f3-abcf-aae68d6b5887"
        },
        "item": {
          "id": "46193a74-0b15-4e47-9782-bcf701c44602",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6e1e0905-07d1-4d5d-8c38-b8080327762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82176065-3017-44bd-b070-f71e6edab83d",
        "cursor": {
          "ref": "6a3dc5c8-3fde-4276-b293-63dcd73ba2be",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "15958c10-257b-4fd9-a4ae-05e1842b9105"
        },
        "item": {
          "id": "82176065-3017-44bd-b070-f71e6edab83d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d36bebc-91c4-49a3-9d78-3b3d5445e851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccd7a84-86db-4cf2-aac6-b5038de05e5d",
        "cursor": {
          "ref": "b37979d0-65b5-4321-8020-85a3ae20a0e5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f936ca9b-3ea4-4f5c-a9a3-86e7a37f537a"
        },
        "item": {
          "id": "4ccd7a84-86db-4cf2-aac6-b5038de05e5d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c462b482-bb90-4691-a06a-f54706bde6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898a48ed-7bb9-4340-b951-5a061c3d8ba5",
        "cursor": {
          "ref": "1a308614-aeb0-4ce7-b84b-bf4813a54958",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a7834ba5-820e-4a6f-aafa-a8ee9301f3e4"
        },
        "item": {
          "id": "898a48ed-7bb9-4340-b951-5a061c3d8ba5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dd2ccc79-4e1e-4fdc-a024-9fc1aef9bd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeab230f-82ee-4a0d-91c6-5ae184e2178d",
        "cursor": {
          "ref": "422d797d-dc98-4edb-bbd1-222320cbef97",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "49eb4429-f70d-4816-a5b8-71c7fe11195c"
        },
        "item": {
          "id": "eeab230f-82ee-4a0d-91c6-5ae184e2178d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7ab2d060-7a53-4048-88e5-73eabb99ce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624fb29a-44b1-4602-8c5d-c37c2ad0b0f7",
        "cursor": {
          "ref": "7eefd5fd-684b-4f94-a632-37802ef82142",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "faf7cd81-0013-43a1-b17a-b5e67d92a7a4"
        },
        "item": {
          "id": "624fb29a-44b1-4602-8c5d-c37c2ad0b0f7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81caef3f-bc5c-4883-8905-fd7581636880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df80a456-8125-4279-84df-271898d39e4d",
        "cursor": {
          "ref": "8ca1c41d-5aef-4c3b-af0a-fd4a66674f42",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3d89c4cc-2548-46ac-bd7c-4a4cc79e2867"
        },
        "item": {
          "id": "df80a456-8125-4279-84df-271898d39e4d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "206ae5b5-2976-40b1-aed2-25315cb3a133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d757c1-0e62-495b-acd9-ef7ed43aab4d",
        "cursor": {
          "ref": "e618ce85-1084-4019-b6a5-906dc1eb78c1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cdbbbed9-270b-4f13-93b1-835ee8a078ee"
        },
        "item": {
          "id": "25d757c1-0e62-495b-acd9-ef7ed43aab4d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "31f629a6-1df5-4d2e-b139-ec8addeefc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f065c172-df80-4875-9ec7-65e49cde92e0",
        "cursor": {
          "ref": "76719ff9-f8d1-40f2-8f3e-a19022f0e7b8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8af3b610-4549-42d4-9315-dec9d99f8979"
        },
        "item": {
          "id": "f065c172-df80-4875-9ec7-65e49cde92e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3f4352c0-15be-492a-85e9-30b0c5966f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7266b1c3-1cc9-4f18-af0b-12838729e88f",
        "cursor": {
          "ref": "cd7cc9dd-d26e-4a38-b000-4b71ba706dc6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8eb7ea18-79ff-48fa-a4ef-f075790f68f8"
        },
        "item": {
          "id": "7266b1c3-1cc9-4f18-af0b-12838729e88f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8d9fe5a3-0f87-448d-b568-0e19b220a6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f570e5ff-a8e2-4d89-b509-f150c71cc599",
        "cursor": {
          "ref": "cc3c0af7-dc80-4b89-977a-7bc6dc3557f3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "79ac840a-3bf4-4adc-9037-c186691e624c"
        },
        "item": {
          "id": "f570e5ff-a8e2-4d89-b509-f150c71cc599",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c68b42ac-1709-4d59-9355-585933d1ad68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc3fcc6-9a69-4a0f-b217-34c4a8df5682",
        "cursor": {
          "ref": "722b103c-a623-4be6-9d84-ec1059243f97",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5879f781-eb32-4fb5-aba5-f059a5d30094"
        },
        "item": {
          "id": "9cc3fcc6-9a69-4a0f-b217-34c4a8df5682",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d4a76800-321a-4454-ae64-f9778aca9a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1893ad-44bb-4fad-9584-d1531590f5dd",
        "cursor": {
          "ref": "9980b69e-49fe-44f0-ab63-c9f181ffc71a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "115ee581-8201-4083-a758-4aef80850d43"
        },
        "item": {
          "id": "dd1893ad-44bb-4fad-9584-d1531590f5dd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eb31fdf8-d775-4d3c-a571-2e75625d945d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ff2beb-9595-4b06-8bfe-3e60d97ea851",
        "cursor": {
          "ref": "56de5c46-83a5-4766-8fd8-e2827718df22",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "53918f7a-1f40-40ae-ace3-db01f2d7c949"
        },
        "item": {
          "id": "29ff2beb-9595-4b06-8bfe-3e60d97ea851",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a5182c98-1c0b-4915-bdc9-1da5029b8111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92ccf83-d6ef-4182-8ff7-840ff3d62987",
        "cursor": {
          "ref": "8cc7a948-4e7b-477d-a72e-6816a1a866af",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "db7323c5-b124-4150-9c9b-7a17e5502584"
        },
        "item": {
          "id": "f92ccf83-d6ef-4182-8ff7-840ff3d62987",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8c7bfae4-1f5f-4a75-9fe8-df10d22a5636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83840ca5-2aee-465b-a1ba-94cf6b8eff7e",
        "cursor": {
          "ref": "eac6f185-cc91-4cfe-8316-b536a416bfd1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "33f5a6cf-e1d6-4e77-909a-37b3dbdf2a61"
        },
        "item": {
          "id": "83840ca5-2aee-465b-a1ba-94cf6b8eff7e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "49cc0688-cdfc-4c39-a4e7-944e3914d19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08201162-3d96-4831-beca-e472bbbd679d",
        "cursor": {
          "ref": "c2dcdd51-3e5f-4f1b-a15d-9259ca654a34",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6ddad529-b394-4b98-a8ff-80e75547e467"
        },
        "item": {
          "id": "08201162-3d96-4831-beca-e472bbbd679d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1e8ce080-3ec7-4584-bbf6-67cae0410b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3c55a2-bc33-44f3-a804-7e9fa662b9cf",
        "cursor": {
          "ref": "1f76797b-d8e8-473f-862e-1242994073fa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3ba57bef-e361-4d08-9806-5ca958bbd259"
        },
        "item": {
          "id": "ba3c55a2-bc33-44f3-a804-7e9fa662b9cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ff1702a0-7453-444a-b890-0fcff767d269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d88966a-b589-483a-a0b0-d5ace925bce4",
        "cursor": {
          "ref": "6d6d8ec9-10a0-45c7-bc88-5a54c76576cd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3d429fb6-894c-4e84-9120-8583f7d18686"
        },
        "item": {
          "id": "4d88966a-b589-483a-a0b0-d5ace925bce4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a5b1e637-baa1-4eb9-8fbe-4460e8190d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82758b7-632a-45ba-8981-4dd2ce15ddb3",
        "cursor": {
          "ref": "af48bd0c-3525-4933-96b9-684344eef5f6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8ab15117-8cc6-491d-aaf7-6f4a59e70f61"
        },
        "item": {
          "id": "e82758b7-632a-45ba-8981-4dd2ce15ddb3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "df0d7c05-c167-491a-8354-9e1ccb25ca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce355205-32c3-476f-b947-5b925daeb9aa",
        "cursor": {
          "ref": "cbbd5d40-b9a2-4927-8862-a7297fe39249",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6a0318c5-ff43-4a47-8a46-fc0382c843a0"
        },
        "item": {
          "id": "ce355205-32c3-476f-b947-5b925daeb9aa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "46442c39-8c95-4d32-83e0-899b36fd4526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bead18-367b-4378-bbd9-816f6cd17281",
        "cursor": {
          "ref": "60bfd1f4-e163-4585-86bf-adb18a3dc187",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "83bd9c4b-f329-46ac-a13e-47ba142145c9"
        },
        "item": {
          "id": "39bead18-367b-4378-bbd9-816f6cd17281",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e26e196-7960-491f-a461-f940fa01ba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e08a8d4-12ec-45bc-a466-954b6bde9273",
        "cursor": {
          "ref": "c25ac455-370d-45ec-b46b-a384177364eb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "64b49101-5565-4f4f-8833-b81a6fd7ff44"
        },
        "item": {
          "id": "4e08a8d4-12ec-45bc-a466-954b6bde9273",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3092628b-4055-4791-b69e-e6e6beb490c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1f96a-e942-45be-9e86-74695785b12f",
        "cursor": {
          "ref": "d3c74f68-4df1-47ec-8c72-42e937542695",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6102745-adca-42ed-aa27-59aded279c64"
        },
        "item": {
          "id": "0bc1f96a-e942-45be-9e86-74695785b12f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29912d08-9ebd-45f4-aef9-aa51872081ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3109e218-3caa-438e-afb4-8f62f3dee24d",
        "cursor": {
          "ref": "98f2b4a4-468b-458c-85e4-be33ca2839c4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a4f611e-3888-48a3-a963-92ccb7e6185a"
        },
        "item": {
          "id": "3109e218-3caa-438e-afb4-8f62f3dee24d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9aca7cd9-970c-4bda-b529-505efbb6efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fcea39-8905-4634-b776-70e7716bb394",
        "cursor": {
          "ref": "e6a98a01-af8f-4273-ad33-af23387889dd",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4b1f133c-c2d5-45d3-b01a-fc212e7d825d"
        },
        "item": {
          "id": "07fcea39-8905-4634-b776-70e7716bb394",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "01de7e28-56b1-43a0-be02-5ffdb414d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1530f317-ec0a-423e-afc3-f4d480a04b74",
        "cursor": {
          "ref": "5ed88e6d-eb3a-4fe5-a42e-106cb6c07bbc",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9eca0197-756e-4398-9bf1-8d334f71c492"
        },
        "item": {
          "id": "1530f317-ec0a-423e-afc3-f4d480a04b74",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38d701ee-dcc9-42eb-95b3-f769b760fadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43421e90-0b70-4602-a192-753ed6d673ed",
        "cursor": {
          "ref": "8a6f2bb3-477a-4792-8a89-6b09a04b2517",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "701fe44f-e366-4a2b-b019-b53f5d5acb5d"
        },
        "item": {
          "id": "43421e90-0b70-4602-a192-753ed6d673ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e808335a-65ae-409d-88e6-7629aa6b75f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faf1e42-8f8d-46f4-9d62-300d43c39ee6",
        "cursor": {
          "ref": "535a9908-8311-41c7-875d-af308e7c8a4a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f22119c1-cc2f-4ffc-a763-06b440086807"
        },
        "item": {
          "id": "6faf1e42-8f8d-46f4-9d62-300d43c39ee6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f0415fd8-296e-45fc-aba9-6f4efe60e992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c976297d-858a-4265-9fc3-3b2e6bd3c918",
        "cursor": {
          "ref": "3d7366ad-aaa4-4f2a-81db-2493dd4a2e7b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c480c9f-3f65-4ead-8e9f-0b3aab65872c"
        },
        "item": {
          "id": "c976297d-858a-4265-9fc3-3b2e6bd3c918",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8c199a37-9acb-48e3-9f83-96c35fa7bebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb4516d-16a4-4221-9e26-f44ee0444671",
        "cursor": {
          "ref": "a54ae32a-1142-4f9e-99a8-5c25ecbf6d69",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "56c48a3b-9e18-4e15-a827-4c20af7f6d00"
        },
        "item": {
          "id": "4bb4516d-16a4-4221-9e26-f44ee0444671",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d46f8289-c5b2-4e2a-88f5-692abb3edb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7b454-3e45-4633-9d39-bb3ba8456653",
        "cursor": {
          "ref": "b4625aee-de79-46f9-8285-a32ed93764a7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b0bbe08-32d7-427f-b13c-e6d97b7af633"
        },
        "item": {
          "id": "d5e7b454-3e45-4633-9d39-bb3ba8456653",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bc7212d9-f502-4193-bb43-48258bf25df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21406c8a-cc77-4411-9f35-30864c3ee9e0",
        "cursor": {
          "ref": "82029218-06e9-4731-87ce-5b5eb1c07c65",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "63b82345-4727-4d64-bfce-21e62272ddf7"
        },
        "item": {
          "id": "21406c8a-cc77-4411-9f35-30864c3ee9e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cb47c22b-6e83-40d3-9abf-4b369891ee21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c76365-275f-4df1-aa3f-4d9047e2100f",
        "cursor": {
          "ref": "eb465e72-2802-414d-ae98-dffaace4af2a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ed9d413e-c017-4d4f-8d94-04b019e21c04"
        },
        "item": {
          "id": "c5c76365-275f-4df1-aa3f-4d9047e2100f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1e459848-f7c2-429b-b75a-59c46a8637d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06440dd-da91-42fa-b493-e15a30c69b42",
        "cursor": {
          "ref": "0b099cde-0646-426d-b90b-3db325a48b0c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "672a26df-e243-42e7-bce7-a7728c342843"
        },
        "item": {
          "id": "c06440dd-da91-42fa-b493-e15a30c69b42",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8f69221a-9ebd-4de1-9dc0-0f3a3fa2232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b83fc4-6001-487b-9ecf-c26449825c2d",
        "cursor": {
          "ref": "bd471ad0-be10-4caa-abd0-86dda0b2181e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "134a60b0-3920-49dd-8754-18cf6afe44d0"
        },
        "item": {
          "id": "f6b83fc4-6001-487b-9ecf-c26449825c2d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c0b59a37-2471-4eb1-8e1a-ccccb8030ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622577a3-93eb-4424-8bce-8762bf579d33",
        "cursor": {
          "ref": "a790b65f-2bfb-4e20-948e-5ba1c78cd26e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c5d8921-594b-4cc3-a075-fe81468ee8d5"
        },
        "item": {
          "id": "622577a3-93eb-4424-8bce-8762bf579d33",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ecb007d-81b0-427b-aebd-8aa9ad7ff179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709caac2-d75d-4078-be2c-98102f540ebe",
        "cursor": {
          "ref": "1a275356-3424-4b2c-bf84-7166fcec4623",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f7eb96a4-ff41-4651-96bd-9036a555d3af"
        },
        "item": {
          "id": "709caac2-d75d-4078-be2c-98102f540ebe",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "586230c3-6d0b-4394-8297-22e558867af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027588db-f1c5-456f-9e0e-e678f4151e31",
        "cursor": {
          "ref": "317616d5-e1bd-47c8-9c28-e108b534e475",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7f6cfb21-0691-4923-94af-1d2ecc9ff195"
        },
        "item": {
          "id": "027588db-f1c5-456f-9e0e-e678f4151e31",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13748538-7e58-4587-8bf2-f51a12f27f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976d7fa7-3634-4cab-bf32-11a5c53f8084",
        "cursor": {
          "ref": "fa5c9eb2-997d-4146-9d1f-63a04e7701a2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "95e158ef-ae34-447f-9e33-36655d7d0ce3"
        },
        "item": {
          "id": "976d7fa7-3634-4cab-bf32-11a5c53f8084",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b92fcb6f-e8d9-4f74-a8f2-a9aad062c164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f561b146-c2fc-4a45-b88f-db2f88f49588",
        "cursor": {
          "ref": "d972db13-7a96-490b-880f-e2ca660f9dfd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06fd0f0e-c105-4b2b-aed3-3a8ffd867a0f"
        },
        "item": {
          "id": "f561b146-c2fc-4a45-b88f-db2f88f49588",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "04bcd30a-a1b5-414f-ad50-f6b7656a59d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6925da5-3fe9-4d66-82e9-b239cbdb5c30",
        "cursor": {
          "ref": "eb900ed6-b3ab-4130-9ae7-b0eb409a9fc9",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "97994ed1-1d19-4c20-8073-c0eb1a2f889b"
        },
        "item": {
          "id": "b6925da5-3fe9-4d66-82e9-b239cbdb5c30",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c61a8fa2-fec9-49b1-94df-881fa9e77fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8816e33a-d952-4765-868e-d18b761b4c7d",
        "cursor": {
          "ref": "0f2e2854-d6eb-4cce-b49d-687cb7f23bf4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8438aeac-06e0-4883-8c9f-243846610da2"
        },
        "item": {
          "id": "8816e33a-d952-4765-868e-d18b761b4c7d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "471db378-d736-480a-ab0f-c3b336bd56cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4427bd04-3271-4655-8c8c-fad0247836c6",
        "cursor": {
          "ref": "8dd95c04-468f-4541-9d28-9d2a65b5513f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aca1fb48-a560-4331-bdc4-afc0ce722532"
        },
        "item": {
          "id": "4427bd04-3271-4655-8c8c-fad0247836c6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "052251af-b32f-4a4d-8b95-c5c00fcb7eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ffae0a-5fb8-4f97-8891-da1d2f397bc8",
        "cursor": {
          "ref": "43fcdc3e-b7bf-47e3-a705-0e8680374fe8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9e70fa30-7f28-45f6-abec-b723c6fd5fd0"
        },
        "item": {
          "id": "88ffae0a-5fb8-4f97-8891-da1d2f397bc8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fa63a960-92d7-430c-86d0-57b168a0d4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf27fca7-27f0-445f-bb16-5f543f12cdc3",
        "cursor": {
          "ref": "da6275bd-5c04-461c-960d-8b20cb690a8a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3e693165-0fe1-4bcf-9a8e-242c7d719144"
        },
        "item": {
          "id": "cf27fca7-27f0-445f-bb16-5f543f12cdc3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e58019c4-0ccb-4b66-951e-9c3fed318ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47f394f-8b5f-4ea1-a1da-c3d02148d83f",
        "cursor": {
          "ref": "9ad232e9-b963-43c2-a787-4ff572a6accf",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1f6cb7a7-2cd1-4bd9-b2c0-a1d4358c7d78"
        },
        "item": {
          "id": "c47f394f-8b5f-4ea1-a1da-c3d02148d83f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed255bc6-9f91-4a47-bc9b-a8baacffce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000958b8-af02-4e4d-9007-2221d055fbbd",
        "cursor": {
          "ref": "312d180c-2ed9-4fe1-b2b5-161981b6166b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4bb5b23a-dd4a-4d27-8049-2cbd3f9d605e"
        },
        "item": {
          "id": "000958b8-af02-4e4d-9007-2221d055fbbd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a8a2a30a-97c3-4f88-ba0b-45a7888db775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efc2bfd-114a-4b8d-8ae2-67741ee59780",
        "cursor": {
          "ref": "0afc24c7-65de-48cc-a198-0ff6641051be",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "25ec7783-e272-437e-b051-873a9697a5cc"
        },
        "item": {
          "id": "0efc2bfd-114a-4b8d-8ae2-67741ee59780",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "53432d63-eb22-4503-91e5-c40feb63aee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc51ea2-0844-405c-8dd7-cc89c2f01666",
        "cursor": {
          "ref": "76c9236c-4b7b-42f7-bea0-c349e0bc6362",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "15f56ec0-3701-4cdf-84cc-fa196766eba2"
        },
        "item": {
          "id": "fdc51ea2-0844-405c-8dd7-cc89c2f01666",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c4cbe74a-e273-4292-87b9-ccb96f827073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a400cdbd-7ddb-450b-8920-de345a79900b",
        "cursor": {
          "ref": "8e61af49-4d37-43d1-ab59-86070e7b0bf2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2579ab90-3b5a-4353-bdbe-db27a20e18b5"
        },
        "item": {
          "id": "a400cdbd-7ddb-450b-8920-de345a79900b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0fd71c6f-18a7-4792-9a45-d3db95f141ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e979ce9d-938f-4fb4-a2a3-1f934f66c5b1",
        "cursor": {
          "ref": "f1c77cdb-063e-4f05-8f91-39d5488c2749",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0175a20c-9e99-4568-8f3b-ed81b9bb39b5"
        },
        "item": {
          "id": "e979ce9d-938f-4fb4-a2a3-1f934f66c5b1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2f14aadd-4c02-491b-86e8-8a5f672def2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b6998d-b693-46d8-b94f-5b6eb6ea2466",
        "cursor": {
          "ref": "5428f2a6-4acc-4314-99d1-76538867d716",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bbc988b8-1096-47e0-b0b4-21a70da2fcc5"
        },
        "item": {
          "id": "d7b6998d-b693-46d8-b94f-5b6eb6ea2466",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "da3d0e0f-12e3-4d3b-a9f6-6c38f2e997b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea96900c-d9d6-44ea-a3af-45b0a19d07a6",
        "cursor": {
          "ref": "5d7fd0b4-838f-4b24-acfd-d63d3f725cd4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "49e6af3d-12f6-4176-9165-05a4d6a1270a"
        },
        "item": {
          "id": "ea96900c-d9d6-44ea-a3af-45b0a19d07a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0c323dfe-f829-432a-aae6-62f222a09611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92127dea-e0e3-435a-8d12-c1891bb75031",
        "cursor": {
          "ref": "68bf53c3-c985-4f43-82c6-7814291db6e1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "655f5656-87ce-4e75-b050-ae2da8d6cbc4"
        },
        "item": {
          "id": "92127dea-e0e3-435a-8d12-c1891bb75031",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1ba8a9f9-82d1-4006-bee3-8df5945ca9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4124f42f-2fcb-463a-8737-9c8fc2a0894f",
        "cursor": {
          "ref": "77b9e69e-19f3-4b0c-8579-d9fe720fabc0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "641b8a4d-9d06-44ee-8713-21038849b482"
        },
        "item": {
          "id": "4124f42f-2fcb-463a-8737-9c8fc2a0894f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d221cbb4-e952-44ca-a2a3-db366845e693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f129350e-71f0-4031-a7da-345fe064f865",
        "cursor": {
          "ref": "7af19ff2-0128-4aac-85cd-624bf24d0a92",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ff2169ae-460e-455a-8047-880e78c04d52"
        },
        "item": {
          "id": "f129350e-71f0-4031-a7da-345fe064f865",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a9baf572-6354-4a08-8596-91db48f0c4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789c705c-392e-426d-a229-8f3d1006d31a",
        "cursor": {
          "ref": "a3e85a96-0ad0-4dcd-82ee-9cdcf66d16d3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d9ccf205-fbd8-494c-b8ec-a06343ef4571"
        },
        "item": {
          "id": "789c705c-392e-426d-a229-8f3d1006d31a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "58b425c5-0c04-4880-9711-0cc0957f4781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a32ae1e-49ce-41e7-a3d5-2e6dfab077ff",
        "cursor": {
          "ref": "cffc4605-6e51-4d48-bb58-575682bf7713",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "253a56f1-38af-4321-8947-1a35afb5c19f"
        },
        "item": {
          "id": "9a32ae1e-49ce-41e7-a3d5-2e6dfab077ff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8e57905d-8551-4e80-a107-38b7bf241627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19430624-ae60-4090-87e7-7efae1725f9f",
        "cursor": {
          "ref": "6c4303d3-820c-44e6-8563-a71a1366ea10",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "07debb97-5657-4a70-b8b0-e8266e3ee697"
        },
        "item": {
          "id": "19430624-ae60-4090-87e7-7efae1725f9f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "65d51bb0-f326-4666-8739-2b37a2971359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b005b9be-c3c7-4d76-af25-709f71b6453b",
        "cursor": {
          "ref": "8a1c7376-60a1-45b7-9db8-73826db0c983",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "17ec1330-f4b8-49e2-a3ce-6c929f39e447"
        },
        "item": {
          "id": "b005b9be-c3c7-4d76-af25-709f71b6453b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a3ddc8f1-e197-4d60-bb95-137b8dc2cd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ef5e38-52e2-483c-a394-4d842dced678",
        "cursor": {
          "ref": "2394b374-79fd-4f9f-aed6-1747f9d2a1ae",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c6b79dbd-a3c2-4441-b614-00746d47dc32"
        },
        "item": {
          "id": "52ef5e38-52e2-483c-a394-4d842dced678",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "61129c60-848d-46b0-aaed-f880e66efce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e6d83c-f654-4a8c-9894-b16d90d6c9df",
        "cursor": {
          "ref": "8343a6cc-a856-4c3d-b1d7-962dee4cb169",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0054ab3d-7f03-4afa-9028-3614a08228e8"
        },
        "item": {
          "id": "44e6d83c-f654-4a8c-9894-b16d90d6c9df",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "eb6694ed-b67e-44e4-a5e1-c87dbe0fb96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1a5eefe1-3928-4308-ac27-7b0d3847d12a",
        "cursor": {
          "ref": "6d54210c-0dc9-4461-a0fe-a4cc3ad54e0c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "37b9d405-7a33-4a6a-b0ec-57bebc7b3a20"
        },
        "item": {
          "id": "1a5eefe1-3928-4308-ac27-7b0d3847d12a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9db1c6ab-c5de-41dc-89bf-4055ceca85a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "00224cf8-1b04-457b-a09f-82f2d3eab05b",
        "cursor": {
          "ref": "c7d308a0-3214-4e6d-813c-9088ec9280cd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e2ade952-67cf-421e-b59f-3c926f7a3701"
        },
        "item": {
          "id": "00224cf8-1b04-457b-a09f-82f2d3eab05b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ebf24e1a-88e6-4391-acda-67e8279e184d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "243f6eb8-b062-4f8d-b6be-be120ae96b8d",
        "cursor": {
          "ref": "d7713a0f-0749-4372-89f6-bfcdb5a8e686",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "21ff88b3-0a10-4842-82d4-e004a8a0f433"
        },
        "item": {
          "id": "243f6eb8-b062-4f8d-b6be-be120ae96b8d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "65bb1958-6707-457f-a47e-442ee74dfbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6306c000-1d29-4bfc-a49b-7981cb19bd32",
        "cursor": {
          "ref": "6554b356-6f37-403e-8bf8-c4b2ac302b4d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "77441395-4ad8-4073-b2e0-e2825c305d60"
        },
        "item": {
          "id": "6306c000-1d29-4bfc-a49b-7981cb19bd32",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bad69eb9-94b2-4e4e-9455-fd0571809d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "692d2fe9-5162-4510-b9aa-fbeb0a8bb4a8",
        "cursor": {
          "ref": "3024fc88-0833-4477-9334-a6a456f64a83",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9c97e1fe-8abe-49ec-9a26-c40eef861b4a"
        },
        "item": {
          "id": "692d2fe9-5162-4510-b9aa-fbeb0a8bb4a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a43d4ee7-c31c-4208-bb88-a347d873fd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e63e199d-9be1-4c44-bc14-9e36cb3a89de",
        "cursor": {
          "ref": "61fabb0d-10d4-4496-a7dc-ef836d44014c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f27e6a8b-4c9a-4468-8b17-b09095cd4aa5"
        },
        "item": {
          "id": "e63e199d-9be1-4c44-bc14-9e36cb3a89de",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c1813918-06d2-4486-bce2-78008f5b9653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "da23e511-0b5e-4454-9020-e1c14b028871",
        "cursor": {
          "ref": "e846aebd-9e81-4ffa-8fd3-44605ba5a72a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bc1ce5ca-45f2-4d62-9a1c-d4893d57fee1"
        },
        "item": {
          "id": "da23e511-0b5e-4454-9020-e1c14b028871",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "663225e8-e598-4157-9137-cf7fc3af4e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c76206e-2b34-449a-8acc-dc0a336c5e8c",
        "cursor": {
          "ref": "3d62cc4b-e17b-4f85-a316-942a5a9a3563",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e81dd17-1535-44a9-976f-937f076c39b6"
        },
        "item": {
          "id": "8c76206e-2b34-449a-8acc-dc0a336c5e8c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2980e58-2671-4261-ac55-2f76dcb7547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d19401-573c-43a8-a870-9abfebd33c9b",
        "cursor": {
          "ref": "d242d506-e8ff-468c-be52-c00209cd0a20",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "72159705-9221-4993-b994-e720a096447e"
        },
        "item": {
          "id": "f5d19401-573c-43a8-a870-9abfebd33c9b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "31195b2b-cee5-4614-ac06-4e24d6a12c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d908667-6206-4e6d-bba0-44bc171e8d08",
        "cursor": {
          "ref": "08faa696-6377-4cbf-953b-6104e1cb7382",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de42c074-0a3e-46be-bb3b-c1690c873e64"
        },
        "item": {
          "id": "7d908667-6206-4e6d-bba0-44bc171e8d08",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "317c97d2-8965-4e85-ba6a-d86976c49990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a3c6f-b85e-456c-bdd7-399777958235",
        "cursor": {
          "ref": "1140af55-56db-42f2-b81c-655212654ad5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6133d426-a8df-4070-b069-9c5be34863ad"
        },
        "item": {
          "id": "706a3c6f-b85e-456c-bdd7-399777958235",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f9c97bbb-b78d-40cb-a758-875980586443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7c9c91-8f90-4f81-b22e-ff111418fcfc",
        "cursor": {
          "ref": "93613ff4-2410-4ffd-a28c-5e1bdb0b68ed",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "729c9a5c-095f-4820-87ce-0d5c71328e98"
        },
        "item": {
          "id": "aa7c9c91-8f90-4f81-b22e-ff111418fcfc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e472810-368d-494d-98c0-422ea43fde91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ff96e5-5a46-4776-a960-a15adda50e98",
        "cursor": {
          "ref": "03edf7c5-9a97-44bc-ab26-dc7cc1efb1cd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e23dc66-4fba-4e08-b02d-f65e6b9ea62a"
        },
        "item": {
          "id": "e7ff96e5-5a46-4776-a960-a15adda50e98",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2b85f028-bf27-44da-a4d7-afba786b20b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350bdc59-46c1-421f-9881-850394ce024e",
        "cursor": {
          "ref": "1c6d8912-e52b-4f8f-acac-191b87ebf260",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9cd542d4-1cc6-4571-bc7e-064aa7b4b06b"
        },
        "item": {
          "id": "350bdc59-46c1-421f-9881-850394ce024e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fb2cafa5-9bb0-4cd0-8306-f8ae26870411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df55bc9f-f2a6-4485-9b11-eec18fed7e5b",
        "cursor": {
          "ref": "e22400c1-c47b-4a49-802c-2fa2d23df126",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3953f154-5e5d-4f8e-89d8-8b48abd31513"
        },
        "item": {
          "id": "df55bc9f-f2a6-4485-9b11-eec18fed7e5b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fa75f374-1b5a-41d9-a73f-ecd946e48f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420b6cc-96c1-4d55-b153-36efb2a68140",
        "cursor": {
          "ref": "19a2217e-a7f6-4f72-9d1c-a114fcd7629d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9bc5f4c8-2f98-4d7a-bd13-3a60d79134e3"
        },
        "item": {
          "id": "5420b6cc-96c1-4d55-b153-36efb2a68140",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61ff623e-2a6b-46b5-90cc-e98a02a72b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e1f856-5869-4740-94d8-4fd5dfe3fe80",
        "cursor": {
          "ref": "7d8bdd8f-93d5-4c3b-aeb5-847fc8d1d594",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ff6ac965-7b42-4cbe-ac8a-9c2434d616a4"
        },
        "item": {
          "id": "97e1f856-5869-4740-94d8-4fd5dfe3fe80",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e50dc36e-fc78-42bb-87a0-5591dc842f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a41205-8559-41b4-89dd-2e77b60989ff",
        "cursor": {
          "ref": "986b1d8d-57c5-4218-8e1c-6a42953de83e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8378747c-baef-49ae-b687-dc786c609657"
        },
        "item": {
          "id": "a9a41205-8559-41b4-89dd-2e77b60989ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9cbd306a-f4e5-4206-8e77-e54b433bf16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee44b10-e0b3-4ae7-95b3-1c850586073b",
        "cursor": {
          "ref": "fb89436e-91f6-4dbb-9a6e-f0056a17dd24",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cc456e0b-ccc1-464e-aa7b-17f659de747c"
        },
        "item": {
          "id": "5ee44b10-e0b3-4ae7-95b3-1c850586073b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9dfcd792-d864-496b-902d-8faf330b4620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c10559-6213-4191-a613-2c7ca8c015e4",
        "cursor": {
          "ref": "06801045-6e56-40a0-875f-e6f7cc60679a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7b2b3073-a0af-4406-9dce-c3e7a3e72889"
        },
        "item": {
          "id": "37c10559-6213-4191-a613-2c7ca8c015e4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "de136f02-3ae9-4550-844d-d2de84f2647b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daa196c-b1f5-4136-8b47-c4ed038bc134",
        "cursor": {
          "ref": "c16f95ec-dd6a-4117-9d8d-9bcec8a59410",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "53880e41-54de-4f3d-9eb4-2e5529f516c5"
        },
        "item": {
          "id": "2daa196c-b1f5-4136-8b47-c4ed038bc134",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ae35bc7f-6023-4d90-b247-d12695d69696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf8f5eb-d262-46fc-a7db-2830b3bd702b",
        "cursor": {
          "ref": "bb0501aa-9258-4dcb-94a5-a59ffc57a7d1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fcf3e01b-12fb-4dab-baf5-9e91ba9b6bca"
        },
        "item": {
          "id": "daf8f5eb-d262-46fc-a7db-2830b3bd702b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6f4d54b1-1cef-4fe4-b369-eb3c07ddfb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d004ff10-be9c-4f37-b8db-c79c6ba414f1",
        "cursor": {
          "ref": "66715536-3f5d-4c1f-8884-5a44f3af1249",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "770988c0-5bf3-4061-b288-9aff821d5b93"
        },
        "item": {
          "id": "d004ff10-be9c-4f37-b8db-c79c6ba414f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eab92d0f-32bb-451b-aaeb-cd792942e9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed73b0a5-2f01-4150-b763-535f492f0e76",
        "cursor": {
          "ref": "71e136e4-b5ed-4996-937d-d777159d7193",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "223edc7f-0322-43dc-aa1a-03606a69add4"
        },
        "item": {
          "id": "ed73b0a5-2f01-4150-b763-535f492f0e76",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea19d24a-dc70-4efe-94dc-cd4ad5dca833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea4a4bc-324d-4d29-b846-e2b948dedab1",
        "cursor": {
          "ref": "05372563-541d-41ce-b18c-4b435713cb07",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "865907b3-07aa-4a62-8d2a-a464003742d0"
        },
        "item": {
          "id": "3ea4a4bc-324d-4d29-b846-e2b948dedab1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2efea7cc-2c97-44de-ae87-1176c0c939ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4323eb-3d2a-4536-b32f-1749dea4ce8b",
        "cursor": {
          "ref": "8ec9a04f-790e-47eb-a51d-371934040ead",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6cdf015c-2082-41b3-b4f1-738b44dea363"
        },
        "item": {
          "id": "1d4323eb-3d2a-4536-b32f-1749dea4ce8b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "45bb23db-50b2-4313-87b0-66d9238b26f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200fa96f-9a08-4552-a648-222ea6565e2a",
        "cursor": {
          "ref": "ce2642eb-8787-44dd-b951-8ff2304e5fd0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "624df51b-6309-4461-9565-d92657c8cf01"
        },
        "item": {
          "id": "200fa96f-9a08-4552-a648-222ea6565e2a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20b01f74-14ca-4cae-a564-2fab6ad1ed4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569aa596-c743-4d0c-b163-e13a6ed81636",
        "cursor": {
          "ref": "d5ce6c66-72f0-4a2c-9952-62a5b8529e95",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b2d74b35-a902-4047-9644-8673a317f3e8"
        },
        "item": {
          "id": "569aa596-c743-4d0c-b163-e13a6ed81636",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c7eeb3a1-1f72-4c76-9868-b6435ea2bcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea4989b-8051-4fe0-b559-7cd45a3ceb4c",
        "cursor": {
          "ref": "82e9a69f-3993-46f4-ad83-dac2f12412b7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6438c389-9d42-4108-bb35-6e692505d272"
        },
        "item": {
          "id": "5ea4989b-8051-4fe0-b559-7cd45a3ceb4c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b1f30c50-cb94-445e-b97e-b8cd3e0a86cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b27c21b-7a0e-45f2-a929-56ddcf8a2593",
        "cursor": {
          "ref": "81272f61-ad82-47ed-a9b4-dbccb344431a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "053ef743-5ecc-4ffd-942e-d7320c9effcc"
        },
        "item": {
          "id": "7b27c21b-7a0e-45f2-a929-56ddcf8a2593",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8bb7d9f7-2ae6-4bd5-bb7c-fd323d6f0e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffae10dc-99ee-4a2e-9d34-0cfbe6d484c6",
        "cursor": {
          "ref": "ce5291e0-d60f-49b0-a25a-080a020ec4b6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e705c796-856c-4721-847b-e928cb025acd"
        },
        "item": {
          "id": "ffae10dc-99ee-4a2e-9d34-0cfbe6d484c6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9847fdee-f1e0-44c8-9eef-b45c04421b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b40538-e5ca-45ae-abf8-9e9839bf73e9",
        "cursor": {
          "ref": "0d275bb8-dea6-4330-8a15-af3d1ef77880",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4f77a819-fec7-41ac-8915-29f97200ae65"
        },
        "item": {
          "id": "a3b40538-e5ca-45ae-abf8-9e9839bf73e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5d0524f8-04d5-474b-9e47-8a924afde1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36952ec-9b7f-48d4-912f-f589feadba88",
        "cursor": {
          "ref": "44af14a1-7497-497c-8c69-c3ff4adfb60b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "28f3a259-5735-4457-8936-8f48fbcfa30a"
        },
        "item": {
          "id": "f36952ec-9b7f-48d4-912f-f589feadba88",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10ae0d7c-923b-4dd8-8a64-a441f5ff73f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd191935-ba27-420e-8782-3e9f4852b55e",
        "cursor": {
          "ref": "7170fdc7-202f-4d9c-8a0e-294fa589bc90",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e7aa9bb8-cb76-4d7b-8afc-e8ec8b2f1670"
        },
        "item": {
          "id": "cd191935-ba27-420e-8782-3e9f4852b55e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6835cd5f-5844-4c6b-a1d9-ca8f858cbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675bbaf8-0c78-4bd5-8c15-e05fbbb426ba",
        "cursor": {
          "ref": "8f013b35-ac18-45dc-9761-fa2d270887f6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "43b674ba-7e10-4b95-9f7f-68972689402d"
        },
        "item": {
          "id": "675bbaf8-0c78-4bd5-8c15-e05fbbb426ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa1cb504-2e41-4d38-9926-dcaef45c504b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900dce8c-fcb0-4d37-a7d7-6b7efaf0e7fb",
        "cursor": {
          "ref": "3c08d011-09b9-47d9-8a2a-56044e9b02f7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "55ec4e58-fdcd-41f4-b0d3-4f1ed5a6b318"
        },
        "item": {
          "id": "900dce8c-fcb0-4d37-a7d7-6b7efaf0e7fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9d1360f-794d-4376-a7da-fc8c5e3cd86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47574e7a-b42f-4d2f-b742-60d6f7243b44",
        "cursor": {
          "ref": "be56b36b-3782-45e5-857c-dfc667fd3269",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "457d25fc-57c9-4e52-a405-cb78fd01be65"
        },
        "item": {
          "id": "47574e7a-b42f-4d2f-b742-60d6f7243b44",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7d6c51ed-f7d2-4015-9289-beb55714392c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e419a1-b972-4795-8314-67f48f299cb5",
        "cursor": {
          "ref": "4d665126-8e4d-4e52-858b-9c6d0fa9efe2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ec4e7c09-f6c0-4532-a29f-5d05680b1fbc"
        },
        "item": {
          "id": "94e419a1-b972-4795-8314-67f48f299cb5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d5cf5ab1-062b-4bac-ba24-07377c42b9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f39b569-3361-4ffa-aa38-521d9acd6dbe",
        "cursor": {
          "ref": "f7797a96-6f74-4ca1-af69-cdbd82a322b2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c24c2dcd-476f-408f-8896-988fc8289321"
        },
        "item": {
          "id": "6f39b569-3361-4ffa-aa38-521d9acd6dbe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "63e4d43b-6b40-4327-b6dd-f4e7ecbb951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998e13a8-3ec9-496f-b772-b4a136c7c13d",
        "cursor": {
          "ref": "40338488-b6ad-4ec9-9e32-3b508e20e5d7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "65cbd473-cec9-455f-9200-654765ac75b0"
        },
        "item": {
          "id": "998e13a8-3ec9-496f-b772-b4a136c7c13d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d3e0e912-a9fb-4530-838b-9254a6a7cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa822ac1-90db-459c-a686-be28d740f447",
        "cursor": {
          "ref": "1d489f4b-a779-4d8c-94af-4c32fbb73230",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9588d52e-dff9-4266-ae22-5501f53f8fa7"
        },
        "item": {
          "id": "fa822ac1-90db-459c-a686-be28d740f447",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fd724b09-d2ae-4bad-b05f-0aa8e6517089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab639782-574b-42b7-b73e-0e495c8647d7",
        "cursor": {
          "ref": "835bcf47-a546-4322-a8f1-57276ee2d85d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b850fca8-1d9f-416b-b73c-88a975808894"
        },
        "item": {
          "id": "ab639782-574b-42b7-b73e-0e495c8647d7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "40f3c057-b506-4170-b575-a9f4428677fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2e2319-69c3-4552-9d11-af4c9d5e6d0c",
        "cursor": {
          "ref": "14290300-47fd-4f5d-b677-c51cb71f9b95",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "92c9d371-88fc-4f27-ac56-3bd95e63ea11"
        },
        "item": {
          "id": "3e2e2319-69c3-4552-9d11-af4c9d5e6d0c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b33af609-0194-4b0e-ab0a-ed8b8edc84c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d26620-ade1-415a-bd29-d52189f13082",
        "cursor": {
          "ref": "f9b252ac-d76e-4c2c-ab1c-e61b3b70fc8f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "582f4c3e-cc36-41df-9e73-c5f93007d8ff"
        },
        "item": {
          "id": "06d26620-ade1-415a-bd29-d52189f13082",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa5979fe-bc4b-4f9a-aadb-209ad8643101",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261a46b3-fee8-4e18-8858-41d0df14bd82",
        "cursor": {
          "ref": "d9260bcb-1fbe-43d0-9b71-63d91196059b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b2f6781a-2898-4a22-ad83-c7d39b988892"
        },
        "item": {
          "id": "261a46b3-fee8-4e18-8858-41d0df14bd82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb63e8e0-b5f7-43f8-b1f0-9f9e953669e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eab6ae7-537c-42d7-a299-e52fd270a8d2",
        "cursor": {
          "ref": "9b28e247-4354-4646-9a6d-e0081dd8e31a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "377d6595-9d78-4d77-ac30-ac1d9407dc7f"
        },
        "item": {
          "id": "4eab6ae7-537c-42d7-a299-e52fd270a8d2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9cc65f14-cfc5-4ed4-bb53-0aceb7c84ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4260aa19-3c0d-400a-8572-eca11c6bcb75",
        "cursor": {
          "ref": "5817f9ad-ff5e-436f-871e-1be08a76ba4c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "05506a61-cb6a-4f21-b16d-120d3b77b7a3"
        },
        "item": {
          "id": "4260aa19-3c0d-400a-8572-eca11c6bcb75",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "300541fb-8d3a-4f1e-a8d0-a68e26245feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aeded9-0424-4061-9c79-dd3ad05c30fa",
        "cursor": {
          "ref": "08855fe8-f043-4c36-aeb9-dc2d27a94c17",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bf4e8e6f-93f9-4522-99ad-2712f668fdb0"
        },
        "item": {
          "id": "85aeded9-0424-4061-9c79-dd3ad05c30fa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85d0874a-ddbe-4952-abc9-2fec73ff289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb3618a-c2d4-4b8b-a201-f28ca2df6d67",
        "cursor": {
          "ref": "8a3811ee-6b39-4ed9-a0ad-f35d94348915",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e620f476-0dd2-45dc-92ac-62ddaf23e3c0"
        },
        "item": {
          "id": "eeb3618a-c2d4-4b8b-a201-f28ca2df6d67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b49ef770-317f-465c-9ba9-cc8c3835bff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98c14e5-ea7c-46a9-a216-f271d6c42cb6",
        "cursor": {
          "ref": "d2e4bb5f-4222-48c5-bc05-bcd6233f8838",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "354820bf-4139-487b-8be2-440fb9172aa8"
        },
        "item": {
          "id": "b98c14e5-ea7c-46a9-a216-f271d6c42cb6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "825ac928-923b-462e-bfc8-f89883c4ddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd134e8d-818f-4f8c-9ebc-9ac3a781e060",
        "cursor": {
          "ref": "f27424ef-e6d9-4237-91cf-6b224d8ab016",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c7a6eba-0aa2-4037-8044-362b3d147b71"
        },
        "item": {
          "id": "bd134e8d-818f-4f8c-9ebc-9ac3a781e060",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8934d435-88ee-4c78-82eb-318c6f34a0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c6da75-65e6-4b8b-83f2-d4ff40a5bba0",
        "cursor": {
          "ref": "75fc60fc-510e-4956-99db-9c4921cbba82",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75339cce-aa97-4ca6-83e4-7730f47de0d0"
        },
        "item": {
          "id": "18c6da75-65e6-4b8b-83f2-d4ff40a5bba0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bc62cc58-fa96-4f70-a172-e8f1ecdd66d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afa0182-d3a8-4a11-8260-13ae9f39e713",
        "cursor": {
          "ref": "c15e1fcd-1aef-458d-9fa1-c3229cd760cc",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3319c4b3-5731-4b44-ae4e-9fe20f20e9fe"
        },
        "item": {
          "id": "8afa0182-d3a8-4a11-8260-13ae9f39e713",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "927a3183-c1f3-4054-a9c3-ecbf70630c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2dff25-3b79-48cd-a861-d87cad681911",
        "cursor": {
          "ref": "5bf12947-ecaa-4be0-806d-dd3d263d2174",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a2eb9906-e91f-4330-9c73-69b854f2b5de"
        },
        "item": {
          "id": "0f2dff25-3b79-48cd-a861-d87cad681911",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2e47fd8c-23f0-4be9-834a-7576a7a92cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62fcb5d-9bd1-4c17-8b6c-29ed4e180e16",
        "cursor": {
          "ref": "1326ed5d-9a37-4134-ab1f-176a8933da7a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62f5531d-daeb-4cb7-b785-d454337008ce"
        },
        "item": {
          "id": "b62fcb5d-9bd1-4c17-8b6c-29ed4e180e16",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "34f59fad-446b-4ffe-bb30-d4bf91a3d4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c33e93-f92a-4487-9f9e-b63551b7821d",
        "cursor": {
          "ref": "a0b93dcd-1392-41f4-8aae-2b1db8d45e99",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "058537c2-206c-4d69-8eb7-66ef351a7a71"
        },
        "item": {
          "id": "d1c33e93-f92a-4487-9f9e-b63551b7821d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3338319-9430-40d4-9bb0-05b731082c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f24b039-0250-44c3-bb3d-0b36a3a0e7b2",
        "cursor": {
          "ref": "7bdae776-5d5d-401f-a5b1-34da4a1cfea8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "49687471-a9ec-441d-84f6-43079b6f9b86"
        },
        "item": {
          "id": "2f24b039-0250-44c3-bb3d-0b36a3a0e7b2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "193c11ac-de3c-4921-a3b7-bafd14b3d808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbedce3-b488-484a-9163-1348258b4c00",
        "cursor": {
          "ref": "af6c0194-aca1-4037-bbd7-936d71680c2a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3526a13c-afc4-444a-b239-c23dbec5d724"
        },
        "item": {
          "id": "8dbedce3-b488-484a-9163-1348258b4c00",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51ea7c69-7af8-4d70-8c09-97e6376cbdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e8e112-1c95-4f6b-8d05-65631d345aea",
        "cursor": {
          "ref": "517c88c1-ba1c-4968-bcd5-e29fc3f7f5fc",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "514f2962-4708-4efb-9c3d-8e6ad7428f99"
        },
        "item": {
          "id": "56e8e112-1c95-4f6b-8d05-65631d345aea",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "07edaa87-1b25-4389-b70e-853cb23c57a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f5fc4b-aa2c-49b9-99ed-17aa7cd435f2",
        "cursor": {
          "ref": "ce4680d6-b106-42de-b295-9161aa2b062a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b90a9b9d-91c9-48d9-9ba6-21601df6d68a"
        },
        "item": {
          "id": "76f5fc4b-aa2c-49b9-99ed-17aa7cd435f2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6289b1a5-850e-47c8-a711-25d868ac4b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1994667e-11dc-4e7a-a6d8-e6d3c2f8726d",
        "cursor": {
          "ref": "d52cfd41-7fa5-41aa-9063-4419b331443a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e1c63a54-78c1-4f19-a0bc-dc82083e751c"
        },
        "item": {
          "id": "1994667e-11dc-4e7a-a6d8-e6d3c2f8726d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8b5baa92-10b1-44a1-ba9f-a6aae4e48fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540fad06-ba66-40ff-af44-efd60348546f",
        "cursor": {
          "ref": "06729354-166c-4c20-bdcc-ea3899348763",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ad3cf43a-3e40-41ac-90a1-561037965691"
        },
        "item": {
          "id": "540fad06-ba66-40ff-af44-efd60348546f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f33b798-7af8-477e-ac7d-44990e6e12e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c8cfd0-bd25-4e5d-8bef-42e936f479ac",
        "cursor": {
          "ref": "c05b6808-3ac9-424e-85d0-817d4330707a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3b94e28a-04c5-4519-81eb-0e320ee07768"
        },
        "item": {
          "id": "93c8cfd0-bd25-4e5d-8bef-42e936f479ac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "01f0ccb2-26b0-4fa8-b23f-cf11eef5d929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8d4191-0a5c-4fa2-a901-b5a8bc47e75d",
        "cursor": {
          "ref": "0bddfd6f-be2a-466e-b4bb-22fed704aafe",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e31a377c-9ea8-4fd9-8e90-1a3e6f80d9c6"
        },
        "item": {
          "id": "ad8d4191-0a5c-4fa2-a901-b5a8bc47e75d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ef61e32f-989e-4ed4-86a8-dcb160d9e82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a1ca9b-eaef-42eb-8dc1-e1c9f53a4553",
        "cursor": {
          "ref": "c2a55492-1639-4c5d-abd4-db4ddf8e5e03",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "989685e5-6ff2-4f36-b2b8-fbf9326beb92"
        },
        "item": {
          "id": "71a1ca9b-eaef-42eb-8dc1-e1c9f53a4553",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81af0494-59f5-404c-88d6-d7051a5d0822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5b253a-8d99-401f-835f-1c32719017f5",
        "cursor": {
          "ref": "d2fe95aa-97e9-4e36-9f5d-eee70f749fa1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "695e124b-8fa2-46e8-a1fc-737ece526a8e"
        },
        "item": {
          "id": "9a5b253a-8d99-401f-835f-1c32719017f5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dfe0c5b5-8bd1-49f2-8741-b3905172b070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5655a73-3f45-49c7-a13d-77217a17266e",
        "cursor": {
          "ref": "b0f775cd-eccf-439b-b1d4-52c728722861",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6266ff28-854c-489f-8f18-6cda3710892f"
        },
        "item": {
          "id": "a5655a73-3f45-49c7-a13d-77217a17266e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9d7c0189-fe64-401e-a49d-868235316959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e22d70f-d30d-491a-8c88-c032385670e8",
        "cursor": {
          "ref": "9c81b39e-81ec-4cb4-a370-4001162b659c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "13794b61-a364-431b-b60f-b92b732c364e"
        },
        "item": {
          "id": "4e22d70f-d30d-491a-8c88-c032385670e8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "389411f4-46c0-4169-8e71-f475cfca4787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5525ae95-0a26-4c02-b8f2-4dc20be41e96",
        "cursor": {
          "ref": "9fa9e426-30ee-4634-b83d-0c22e8daef4f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8d403498-3ccf-45ff-9dcd-2c4d83458e25"
        },
        "item": {
          "id": "5525ae95-0a26-4c02-b8f2-4dc20be41e96",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f7776609-ebaa-44ae-b0c5-4da4bf6301db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1f6395-8b53-46a3-b8a2-3327b8ea30da",
        "cursor": {
          "ref": "35f0a61b-ab68-43ec-a1cc-f0efc19512dd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b64c31db-a4f3-4f78-808d-331bb1954123"
        },
        "item": {
          "id": "fa1f6395-8b53-46a3-b8a2-3327b8ea30da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9ffff8f8-0a90-4eda-a248-6be14f3599df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dfd1de-6e03-486b-b5bb-b7b94d8d3743",
        "cursor": {
          "ref": "229b28bf-cf34-4961-8c6c-aaae6e15e83e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "96cf36ce-356d-4c30-acac-aa82a8f0d7e2"
        },
        "item": {
          "id": "f9dfd1de-6e03-486b-b5bb-b7b94d8d3743",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "330936a9-4ab2-43f6-8772-6309fd2ad412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3354d886-55d7-4d6a-a9fd-cbd6f7b4652f",
        "cursor": {
          "ref": "c51d125a-3910-4714-bca4-9ebdb5f68f28",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b7721b4c-597e-4c3f-a540-6a7c3f0cf3c5"
        },
        "item": {
          "id": "3354d886-55d7-4d6a-a9fd-cbd6f7b4652f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f44664b6-ed29-48c1-922e-02ac3e61b293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f795f90-6e57-423d-8837-487e48314e48",
        "cursor": {
          "ref": "307c67fb-1e54-4128-be4e-bf05729e2415",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "311c37f5-9c15-4f22-afd8-2dce5b314419"
        },
        "item": {
          "id": "1f795f90-6e57-423d-8837-487e48314e48",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab8a9af8-c996-4c47-b8c1-3f9506ef287c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d33cdd0-847e-4991-b63e-9aacbdf14fc5",
        "cursor": {
          "ref": "a2950867-2b0a-468d-b5e4-2279c8bd4c6e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ed7aef32-6bcf-43bf-9861-70196d81a2f1"
        },
        "item": {
          "id": "3d33cdd0-847e-4991-b63e-9aacbdf14fc5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dca5652f-1f96-44ea-8cff-56d26a4a36f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da35dc4c-5e1d-4425-ac47-49ab9ee60309",
        "cursor": {
          "ref": "3ed99a16-e51d-470f-b22f-5be1b2652669",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7f16d2eb-55dc-49a6-9a19-c10d90ad4453"
        },
        "item": {
          "id": "da35dc4c-5e1d-4425-ac47-49ab9ee60309",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b3aa9db4-334e-45ff-b817-8642965e2bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550d6d8-2483-4f5c-aaf5-5d154479bff2",
        "cursor": {
          "ref": "6687da56-7ffe-4b59-ba86-d80ef2194b7e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "713238fe-22c0-4bbf-877f-362297eb6905"
        },
        "item": {
          "id": "d550d6d8-2483-4f5c-aaf5-5d154479bff2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "20705e13-e4ab-4357-bffd-edc8dd97fed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe461f35-07d7-44d1-8e8a-57c94f29149f",
        "cursor": {
          "ref": "2f177080-2762-4060-ac53-0f2ff19ae2c2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f5ea1b31-1bd8-40f0-ba26-16a785a9b457"
        },
        "item": {
          "id": "fe461f35-07d7-44d1-8e8a-57c94f29149f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "62e19932-59d5-48c0-ae7a-1b466cf98d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bb95fe-b679-445e-8781-77e7cf7f5fe5",
        "cursor": {
          "ref": "eaa4dfde-40ba-45bf-9399-97aa29b2a2ff",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b57cf33d-8682-4b23-9a60-d3f808360e06"
        },
        "item": {
          "id": "84bb95fe-b679-445e-8781-77e7cf7f5fe5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1bb37ea2-f34d-4756-813a-03d1e0a81e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da00d39-d432-4053-9a9e-5488aee0dc90",
        "cursor": {
          "ref": "c1993376-3c30-45d0-9ffe-0307a73a4441",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d13aff7-3717-4c8d-9e40-95a06520e25c"
        },
        "item": {
          "id": "3da00d39-d432-4053-9a9e-5488aee0dc90",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "91711915-09d3-4c43-8a5a-c64967104c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9a06d9-6327-4019-b3c8-bad009a266b3",
        "cursor": {
          "ref": "4f34e7b3-b03f-4832-8b71-427ca07fb3d3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1621e127-1fd9-45f5-8926-aff0744d0e4c"
        },
        "item": {
          "id": "2c9a06d9-6327-4019-b3c8-bad009a266b3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3d1bb150-acdb-47c2-937f-7e3bcc1a131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b1c576-52f8-452c-a219-8f39daeced42",
        "cursor": {
          "ref": "936e517b-fe34-4c1f-9dbb-1a99705c18f8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "01c1fac4-5555-42ee-ade8-57e78a36e4d8"
        },
        "item": {
          "id": "17b1c576-52f8-452c-a219-8f39daeced42",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7f26bce1-1c62-419c-80d5-89f297a87823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1243c9-55c1-4a78-b229-9c9148b623a6",
        "cursor": {
          "ref": "2cc11ef2-1321-45d8-9b44-16874cf72fc9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "93ccc6f0-7d81-42a7-a572-10bf9aeac855"
        },
        "item": {
          "id": "cf1243c9-55c1-4a78-b229-9c9148b623a6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6cc6f165-0d2d-49bd-ac6a-4c266f6dd399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7b5d4d-98e9-48e6-8fe7-94eb3fa9b4c8",
        "cursor": {
          "ref": "bd5b435a-559e-4cf1-8b27-ef3e6776eb49",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "665ce95e-4744-424f-8dcc-f1f92b1f1e8a"
        },
        "item": {
          "id": "0b7b5d4d-98e9-48e6-8fe7-94eb3fa9b4c8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fddea7fe-2d38-48d7-ab5a-8517e58d507b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06268a9-80ba-4f08-9196-ba2e5de66e9d",
        "cursor": {
          "ref": "0c67aa4f-64fc-4d48-adf5-ed1732d4821d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7910b68c-fbf6-41f6-9424-491d0190ccbe"
        },
        "item": {
          "id": "f06268a9-80ba-4f08-9196-ba2e5de66e9d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ac3e3cfa-ddb3-4020-9a39-a0cd3bd78057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbbf98f-8591-466a-bb1b-80716d645786",
        "cursor": {
          "ref": "94096460-ae95-46cc-8468-40ca5b9f849f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "49c4ae0b-4a78-47ed-80de-90abfb12a3d5"
        },
        "item": {
          "id": "afbbf98f-8591-466a-bb1b-80716d645786",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "caa73f15-d02f-477d-ac40-32424d958619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417585b3-2f78-4696-9952-11db0fc1b6b2",
        "cursor": {
          "ref": "7e6fe003-84a0-4823-8d3d-d9a540903a57",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "76cdb993-1c98-413b-b6ab-b370f6057ae4"
        },
        "item": {
          "id": "417585b3-2f78-4696-9952-11db0fc1b6b2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "89495066-6689-4ead-9948-451b247f57b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a135cf-46f5-4fec-b9fd-fffdc3608e5e",
        "cursor": {
          "ref": "fc83aea8-ae89-4452-9de6-793dab906b15",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b4711a50-1208-4b1e-9db5-51b362457c64"
        },
        "item": {
          "id": "50a135cf-46f5-4fec-b9fd-fffdc3608e5e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3630a85c-740e-4c0e-97c0-6dbee6151e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ced164c-333b-48d8-8a32-5c1691cb3a35",
        "cursor": {
          "ref": "0f9d0fb8-736e-4865-a23b-aeadee3e8794",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d252d000-0f80-46f3-a27d-051270785f80"
        },
        "item": {
          "id": "8ced164c-333b-48d8-8a32-5c1691cb3a35",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d40150b3-effb-4168-9356-272e8c465466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff5f4ac-38ef-4cda-9bb4-0bbd224746a4",
        "cursor": {
          "ref": "e3dc2e09-23fc-4d50-b5cc-e559db7a98ad",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4591238e-8631-4200-acaf-e3748e932982"
        },
        "item": {
          "id": "4ff5f4ac-38ef-4cda-9bb4-0bbd224746a4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e22471e1-ad61-4c6e-9b51-4b6e12d2ba27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb84d66-4fde-482b-88c5-70aa647dc65f",
        "cursor": {
          "ref": "8cc9e1da-a1cf-45ad-9cc6-837a0c8745a3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "61b389e9-a44d-42e4-9f1f-541f1d768a09"
        },
        "item": {
          "id": "3fb84d66-4fde-482b-88c5-70aa647dc65f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9184d5a7-aea9-4a54-9c81-949fc5867c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92166542-e40a-4707-8cde-bdf0e93500f9",
        "cursor": {
          "ref": "f613d14d-43bf-4574-aef4-9c3bf5143106",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "11b99c8d-4576-4363-bd0e-ef96d6aad08c"
        },
        "item": {
          "id": "92166542-e40a-4707-8cde-bdf0e93500f9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45fd7546-266e-4fd7-ab3c-d55ddcef8e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaddeb2-a8ce-4991-bd9c-e7aa42123eaf",
        "cursor": {
          "ref": "9f28c5f9-159a-4d46-b0b9-e1560f569563",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "150ba4a8-e436-47ae-a9ea-db45366dc318"
        },
        "item": {
          "id": "5aaddeb2-a8ce-4991-bd9c-e7aa42123eaf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ecf8ed88-c68c-45df-957d-207c84573668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1349bebd-5de5-4678-802d-0f0730c936df",
        "cursor": {
          "ref": "f959c4b9-266b-475b-9acc-45bc2e2de227",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0b6030bd-fb2d-4c24-b1f7-fda06026fffe"
        },
        "item": {
          "id": "1349bebd-5de5-4678-802d-0f0730c936df",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d3773592-af26-4b0e-875c-dc91a7935888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7137113a-ff9c-4cf7-b87c-60ac577fc51d",
        "cursor": {
          "ref": "ca9ea3d9-4c9a-4d9c-8c68-d25e937fc60b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "568e253a-7710-4749-b283-0b2966d80e69"
        },
        "item": {
          "id": "7137113a-ff9c-4cf7-b87c-60ac577fc51d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c6397a18-05cd-407c-a5e4-0232832677f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abf2d5a-ca35-4ce6-a762-26530ad0fdcf",
        "cursor": {
          "ref": "e8cf3081-0499-4f03-9b49-6f5afd89ed79",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9b881225-e82f-492d-bfa6-47475abb7e18"
        },
        "item": {
          "id": "0abf2d5a-ca35-4ce6-a762-26530ad0fdcf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4336c147-edcf-460f-bf57-17c6eada40d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ae18cb-cb98-44ba-9d16-0919ae0dc5d2",
        "cursor": {
          "ref": "8cbe9d33-2620-4683-9149-505cd4107293",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "271f6249-f085-4032-8b02-230c3bcb16e5"
        },
        "item": {
          "id": "53ae18cb-cb98-44ba-9d16-0919ae0dc5d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1c19887c-1c16-476a-a6b1-21693517108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0a66ae-6d77-4410-b23d-b8442e693df1",
        "cursor": {
          "ref": "1aa2e844-c18a-49d7-92b9-5cee4628b5d7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2324c669-0d2d-4350-ab92-0aa81c7dcff2"
        },
        "item": {
          "id": "9f0a66ae-6d77-4410-b23d-b8442e693df1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8cc837c7-f47c-4861-b591-8634c63e16bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74347862-e2d2-4cff-9ccf-0f98e500d161",
        "cursor": {
          "ref": "9fc44e2e-5ef1-458c-b56a-a562db866473",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d63f0d34-5a32-41a6-bdaa-0d7808be5f1e"
        },
        "item": {
          "id": "74347862-e2d2-4cff-9ccf-0f98e500d161",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f3a5f7c2-f26e-462a-b2f4-4ed69c1d728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bd536b-fb4f-4f49-a491-158b645df579",
        "cursor": {
          "ref": "e9ed8fab-f734-4711-b98a-d7a47f2d5416",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f1cdd5c8-c7b2-4932-8660-ac52dcb9555f"
        },
        "item": {
          "id": "77bd536b-fb4f-4f49-a491-158b645df579",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "39b7f308-1fe6-4a9b-84e2-ce942a70f746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0622366f-2d0d-4ce7-894b-296e8b28730b",
        "cursor": {
          "ref": "0275246a-81c3-4e03-8c1d-26d971c2f8a4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3946b687-9806-4b0b-8235-8918629cda7f"
        },
        "item": {
          "id": "0622366f-2d0d-4ce7-894b-296e8b28730b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6b971e09-96e5-496a-b57d-18ff56b01c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e550868-9fa4-4b37-91f7-f6c29a1f7c10",
        "cursor": {
          "ref": "d2d9c7b9-a1f9-4def-a59a-ef095a4eef49",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0a963dab-4b31-4f0d-9d9e-8faa38075b26"
        },
        "item": {
          "id": "3e550868-9fa4-4b37-91f7-f6c29a1f7c10",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a5bce536-8aa4-4b8d-b650-93bd95edd232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913ba666-952d-4417-9f45-01cc93cbe35b",
        "cursor": {
          "ref": "00ab48a9-3d01-4d7b-8fa6-efe869ea939b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "00445d06-c559-4650-9bc2-fc1d9a50d82f"
        },
        "item": {
          "id": "913ba666-952d-4417-9f45-01cc93cbe35b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "66e606f4-44fb-482d-bfd3-3b506eae6b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf1beeb-d2e7-4db4-91e0-ff097ee7a654",
        "cursor": {
          "ref": "50d1d432-d6fd-4069-92ab-145bede05dd5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6da46e25-bf4e-4ab8-9643-3c33dad28526"
        },
        "item": {
          "id": "cdf1beeb-d2e7-4db4-91e0-ff097ee7a654",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c9cf9644-0c25-4129-a1b9-212b7335cc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e2562-a0be-4bd3-9263-5193dd11fa94",
        "cursor": {
          "ref": "b28a7983-2768-4467-b503-321ff09fb2c7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2045ba3a-2beb-40ae-9702-8a4b324cb494"
        },
        "item": {
          "id": "4c9e2562-a0be-4bd3-9263-5193dd11fa94",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b6a6488c-4ead-4c82-b285-862b89df026d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ee1310-b291-4233-a8f4-1d013886e8ea",
        "cursor": {
          "ref": "1f23db5b-7a8f-49fa-b5e6-5f4c0ed39b74",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "49d21604-1c09-4649-9e94-7359c490f3b3"
        },
        "item": {
          "id": "f3ee1310-b291-4233-a8f4-1d013886e8ea",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "37a0a4b5-d0f7-432d-ba36-165b1b963152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09d79a0-d1a0-4717-ac44-8eef6171fbcb",
        "cursor": {
          "ref": "84923a17-9caa-4384-ba1e-a325662c927e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9a172eb6-b28e-4c35-aa01-ef30836724ee"
        },
        "item": {
          "id": "c09d79a0-d1a0-4717-ac44-8eef6171fbcb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9a8025e5-b574-4fca-9ba1-37e77e30af43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67259d71-c0e3-4ff1-99cd-cfaa954cf4dd",
        "cursor": {
          "ref": "980f7e49-d17b-424c-8d1f-2f62f1915916",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce236796-70e5-4176-8d46-e8212f6cd57f"
        },
        "item": {
          "id": "67259d71-c0e3-4ff1-99cd-cfaa954cf4dd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f644efd6-1b40-451a-891b-6005dc9ad7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ac6e2-6c71-48ca-b52a-4f11f4416551",
        "cursor": {
          "ref": "1a635fc5-606f-47db-828a-de63b8585254",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0fc9adf9-c7dd-4b02-a688-e55238cca048"
        },
        "item": {
          "id": "aa8ac6e2-6c71-48ca-b52a-4f11f4416551",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "685a76b1-a2da-4edf-a87d-773910c80eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbea58b-66ff-4d80-8630-2b8016efa53a",
        "cursor": {
          "ref": "601cfedd-d090-466f-bc5e-3e5c667e4008",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0b9c6c20-acf0-4d0e-a830-2a6321f8149d"
        },
        "item": {
          "id": "9dbea58b-66ff-4d80-8630-2b8016efa53a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d4d8c358-3e27-4e00-9818-9d287852736c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f565aa91-2a5d-4f78-9d31-f6402122188a",
        "cursor": {
          "ref": "81a66ba4-3f6c-4ac3-8ca4-aa473c0d4272",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "85b98bdd-f3e8-4adb-9935-23ab0c940628"
        },
        "item": {
          "id": "f565aa91-2a5d-4f78-9d31-f6402122188a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3a1e841f-228c-4c75-8505-517b9b4685e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa4bdc-a740-4d78-a1f5-c2aa16f8f576",
        "cursor": {
          "ref": "bf4b75fb-73a9-4253-a3fd-28245a55d77c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "123de468-beda-42ab-9ec0-53c30211a67f"
        },
        "item": {
          "id": "8faa4bdc-a740-4d78-a1f5-c2aa16f8f576",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7bd4bc58-4d88-4a0a-9446-2a4db8cc7cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed5710a-f7b9-4bd8-83f0-3b4fb89a0e2c",
        "cursor": {
          "ref": "20b5a2f1-0b74-4055-b2aa-e8eae8749f10",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ae0ec36f-7eda-4330-a4fa-ee07d09755ce"
        },
        "item": {
          "id": "aed5710a-f7b9-4bd8-83f0-3b4fb89a0e2c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "35028bbe-b226-4641-9b66-9c4253414c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bc0ae7-3d20-4ed2-90ab-96b5806e1011",
        "cursor": {
          "ref": "12055378-b0d0-4851-a76d-eaa47d9c9e5c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f81ba810-f699-4c44-80ca-9541385ab57e"
        },
        "item": {
          "id": "a7bc0ae7-3d20-4ed2-90ab-96b5806e1011",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ce1dce40-e775-4adb-9df4-475123e1e758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89477aa4-f8f8-42aa-bc2a-8f34acf236c9",
        "cursor": {
          "ref": "4bb91dea-bb8b-4bc2-9602-918e89aa39e4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "31f41a76-89e9-42c9-90bb-d6c18a48ccde"
        },
        "item": {
          "id": "89477aa4-f8f8-42aa-bc2a-8f34acf236c9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "38c5a7ca-3e07-4913-88d1-416809bbafd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a7c47b-a144-40fa-afcf-c445d9e00347",
        "cursor": {
          "ref": "1d3862b8-0acb-43db-9af6-fafa900a352c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a0df1cc9-d472-4e99-ab51-81ef37b49171"
        },
        "item": {
          "id": "92a7c47b-a144-40fa-afcf-c445d9e00347",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b61b846d-e515-4bff-ba64-54bd0b9bb462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867512de-264d-4914-959b-9865f4a4ed32",
        "cursor": {
          "ref": "a747c4dd-728a-456e-8941-c3cf1c31678e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9680017f-28b1-4fcc-b45c-c77d3ca1fc47"
        },
        "item": {
          "id": "867512de-264d-4914-959b-9865f4a4ed32",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d785d723-9aed-46e3-bda1-024ed98c7d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08673815-2599-4ebd-aea0-0fff4242ac65",
        "cursor": {
          "ref": "2683cb8b-a8d7-4e80-a2c7-9253343d6510",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b54c289f-ce74-4a5e-bc51-0f254a0cabc7"
        },
        "item": {
          "id": "08673815-2599-4ebd-aea0-0fff4242ac65",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "07081b5e-be3c-46e3-b81d-7e67976de2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1477714-9bae-431f-9e65-aed13f56b674",
        "cursor": {
          "ref": "4d8eb1c5-1ec8-4c49-a8bd-c978663a3ee8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c2544734-d5c0-46e1-ba71-ac2048737f49"
        },
        "item": {
          "id": "d1477714-9bae-431f-9e65-aed13f56b674",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "32627b1c-7119-410b-a94a-dfbedef41fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f2e100-4d97-48be-995c-2addbd4899dd",
        "cursor": {
          "ref": "2d01b491-78cd-4c2b-ae1a-9954364b001a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8fe684b6-1cc9-4944-be6b-30fcb5da871d"
        },
        "item": {
          "id": "00f2e100-4d97-48be-995c-2addbd4899dd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "119cd53e-0597-43ad-bbd6-67ed0d794b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737f74b8-42da-4718-be9a-c16b4d78182a",
        "cursor": {
          "ref": "dfab9565-c4bb-4dd7-b5f0-7bd6aa9216c4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "162e1c5f-4186-4a85-a446-39bf0d6f351d"
        },
        "item": {
          "id": "737f74b8-42da-4718-be9a-c16b4d78182a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "883b9ab0-bde9-47d1-ab9a-e291772bb7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a3480-43d6-45c9-91a2-df77cdc47d5c",
        "cursor": {
          "ref": "66980cf3-a1a8-4c4e-9036-1d771d8f4c86",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "267d557a-7c19-4423-b318-fb335ff33cc8"
        },
        "item": {
          "id": "f66a3480-43d6-45c9-91a2-df77cdc47d5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d6a55f56-4804-450d-9f1b-f4512118fc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d070dc-0920-4f4c-b432-905305d2e8d4",
        "cursor": {
          "ref": "d8b5d41e-d9a3-4d3a-88d8-e186c839bc66",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "53c865dd-8038-4eca-b11a-05574c68388d"
        },
        "item": {
          "id": "39d070dc-0920-4f4c-b432-905305d2e8d4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4ccde069-3358-414a-968b-7635c5f1cde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea36ac0-ad7a-4dcf-8608-2b6c5fafcb63",
        "cursor": {
          "ref": "53170fd0-5197-4790-bb7d-c9aaaadb08cd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a2f8f42f-c94a-4c7a-986c-a7c86aa506ea"
        },
        "item": {
          "id": "bea36ac0-ad7a-4dcf-8608-2b6c5fafcb63",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb5f1f56-9ff6-4d93-bfd2-6ee0e4743023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98cf804-a465-422f-acdb-0787482eba8e",
        "cursor": {
          "ref": "b10139e6-208a-48ea-b5d7-77bf95f9525a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cd63fe95-6112-40af-9f1e-76305db9f60a"
        },
        "item": {
          "id": "f98cf804-a465-422f-acdb-0787482eba8e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b4ef051e-f239-4e88-962d-96d45927fba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d726fb-f068-4746-9f72-b4869e8e73ae",
        "cursor": {
          "ref": "fbde27c4-0edb-4b3f-9c05-8f963018490b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "401502da-27e9-4a90-9d24-18c39247fcc0"
        },
        "item": {
          "id": "50d726fb-f068-4746-9f72-b4869e8e73ae",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "da8c366a-c6c4-40ac-8d75-79ed49f78d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bcb9e5-3a28-4a5f-be7a-0780545352cc",
        "cursor": {
          "ref": "8ef5657b-ba28-43cb-83fd-0d67e3cbfddc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "75c80f34-0557-4bc4-b3f2-ce6d671347e3"
        },
        "item": {
          "id": "d9bcb9e5-3a28-4a5f-be7a-0780545352cc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "828cf847-5525-4a92-9a31-8ae2323eef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93d8fc4-0844-48ea-8878-332870c1db64",
        "cursor": {
          "ref": "2193daf6-a009-4a8c-8b5c-204427baf4be",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d12e5ba8-f850-4ca5-82d8-6ee6c1dfde1f"
        },
        "item": {
          "id": "f93d8fc4-0844-48ea-8878-332870c1db64",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1e58113d-fefa-423d-936c-e66e050f0c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828edca3-1f0c-44f5-abce-5bcb5e5ae312",
        "cursor": {
          "ref": "88b30910-73c2-400f-b742-2041962b65c3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "064af211-38e1-48f6-a9cd-bb7701473765"
        },
        "item": {
          "id": "828edca3-1f0c-44f5-abce-5bcb5e5ae312",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "800ac685-e48d-44e6-ba25-47425bb30afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605052eb-1fa1-4838-b5c8-ff4c495764d4",
        "cursor": {
          "ref": "c4e4fae1-2a41-424a-96de-e85d06762bd8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0994dd8a-ea0c-4ba0-bcd8-d58fe0736473"
        },
        "item": {
          "id": "605052eb-1fa1-4838-b5c8-ff4c495764d4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "af4d2720-d58f-43ea-a10a-e4df760c20f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8468d10b-e0ba-483f-9097-d9e8d92bdc30",
        "cursor": {
          "ref": "4986aa8d-5420-4c72-ae17-b57894adfced",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8e38a339-1e26-4efc-bf4a-77d2f7f5fc58"
        },
        "item": {
          "id": "8468d10b-e0ba-483f-9097-d9e8d92bdc30",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5e4bf00-3151-4e40-88d0-f23eeb762cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f799f5-4140-4fa2-b351-867dea38fcf5",
        "cursor": {
          "ref": "25e26a6f-57b0-488b-a0e8-2be463e3196f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "99814ec6-62ea-4fba-b575-04a17c79bda4"
        },
        "item": {
          "id": "d3f799f5-4140-4fa2-b351-867dea38fcf5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "972817a7-ce2c-4126-8316-7dabc30445cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5468fd0-8c72-4398-b6c5-b2c0baf0beb3",
        "cursor": {
          "ref": "6fc2bc81-9afb-4b4e-becc-7dbdbe8edcbb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "93a1f460-450b-47d5-9aff-e2df35583663"
        },
        "item": {
          "id": "c5468fd0-8c72-4398-b6c5-b2c0baf0beb3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eb9e2dd0-cf9f-4d0d-96e5-5352476558c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce793ea-6283-49cd-9370-fcc32352de9a",
        "cursor": {
          "ref": "9599addb-d115-40c8-b633-936f5becfd40",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6a1d6abd-4081-4441-94da-445edda4bcf1"
        },
        "item": {
          "id": "5ce793ea-6283-49cd-9370-fcc32352de9a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e56772c0-34d1-4d6a-aea8-d6a15edbb760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300b254f-00dd-4dc2-b09e-c395b6450b84",
        "cursor": {
          "ref": "88255565-8e69-43d0-93ee-e747329c42d7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e57b23f0-fc6c-4dad-910a-b4fc0971a40d"
        },
        "item": {
          "id": "300b254f-00dd-4dc2-b09e-c395b6450b84",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f5bcfede-c9cc-438a-8ab1-eed6dbaaa4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ff2b99-fba5-41fc-b608-ea76ac83975c",
        "cursor": {
          "ref": "8e56bc77-1d6b-441d-bd85-1570f60ae79b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "88ea8a5a-1dfa-442b-9bdb-0e421dfc1061"
        },
        "item": {
          "id": "14ff2b99-fba5-41fc-b608-ea76ac83975c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "503da5f0-b4dc-4bbd-8c20-3d74506f0fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9a7ec-0117-4227-965c-952b5ef009a7",
        "cursor": {
          "ref": "be52b3b3-ff88-47ed-b6cd-9075bf7cb3c6",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a81db26a-c5b4-41eb-bdb0-793b4cd911c5"
        },
        "item": {
          "id": "0cd9a7ec-0117-4227-965c-952b5ef009a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f73f6d52-efd3-4baf-a7ce-3e2e6ed51599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcece5a5-e16c-40c7-a966-538ef33b7c53",
        "cursor": {
          "ref": "f651acd6-c025-47f3-a21c-438b52d48ae5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6082819f-5972-4244-ae48-63365f4b951c"
        },
        "item": {
          "id": "dcece5a5-e16c-40c7-a966-538ef33b7c53",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4cd0a31c-b425-4ab3-afee-e0c94dc97b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1157ca0e-c1ad-4ab2-83f9-9323850a68ad",
        "cursor": {
          "ref": "754789fd-2414-40a1-a8c0-ef11142488d7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1e91bc74-2e80-434a-832d-b0c729c8c4b9"
        },
        "item": {
          "id": "1157ca0e-c1ad-4ab2-83f9-9323850a68ad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eb07c478-183a-49a1-baec-ebcaf14ed4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb264fb3-b2d4-4701-af30-b2cbf8a8f118",
        "cursor": {
          "ref": "82cd682b-23f3-4ca7-8b43-43dbfdda64f1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ff8730a1-98dd-41e1-8d2f-85071011c713"
        },
        "item": {
          "id": "cb264fb3-b2d4-4701-af30-b2cbf8a8f118",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7c35a798-0a17-4f84-a4e6-56808fef2fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c1590-4e6f-417f-a8e2-0db2f63bec0e",
        "cursor": {
          "ref": "88ea5302-f0df-4c29-828b-8f0d14a4340a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2499a188-0844-4196-8655-d8629bd389b7"
        },
        "item": {
          "id": "b85c1590-4e6f-417f-a8e2-0db2f63bec0e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b35ed7dc-9641-4cae-8568-c907136aa59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396bd9d6-3cbe-4b35-b6ea-c30753638ac1",
        "cursor": {
          "ref": "f18fa33f-7a1c-4e8b-81f6-ec9e4d2aacc1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "75e68b17-8e32-47d6-a007-e8e34b6fe4e7"
        },
        "item": {
          "id": "396bd9d6-3cbe-4b35-b6ea-c30753638ac1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "adc700ad-31fa-4d1e-8f2a-23fe86bd4651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f65507-710e-48a4-b041-ae873564ecd7",
        "cursor": {
          "ref": "c0c9f387-98e9-4cc9-8354-a5728aaedf73",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13778928-44f5-4332-bc8b-ffe6bffdaba1"
        },
        "item": {
          "id": "50f65507-710e-48a4-b041-ae873564ecd7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7c7b2f3d-561b-467b-8b6b-95bae7ce6ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79730e5b-881b-4b92-bc8f-cb502b9e9d4f",
        "cursor": {
          "ref": "bd59e0e0-c150-4da3-8ac1-58529b77fd72",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba39ebaa-c6cc-4381-846c-348049314a2d"
        },
        "item": {
          "id": "79730e5b-881b-4b92-bc8f-cb502b9e9d4f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8c93503c-d2e7-4b91-aae1-8f14d09849a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "e668b01b-8758-48cb-9b41-97cb72617746",
        "cursor": {
          "ref": "4587e784-bb54-43c1-a6dd-c6e0a77fb0a7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "634fca01-75f4-4604-8205-d942daeaa0b2"
        },
        "item": {
          "id": "e668b01b-8758-48cb-9b41-97cb72617746",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3992aac-59d7-48de-b744-deb4580953fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "561c8adf-80df-45d8-b9c4-c149c3386a42",
        "cursor": {
          "ref": "f753744a-da27-446a-b23d-a4a6c34e3912",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d48de9a1-8f47-4e83-9e4c-3f55f6be0280"
        },
        "item": {
          "id": "561c8adf-80df-45d8-b9c4-c149c3386a42",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5813c2dc-767a-4c52-bca0-cc300a4f2333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "83d2ff0f-e573-4871-af3a-327ef2e41a5c",
        "cursor": {
          "ref": "7b19d53b-325c-4ca2-a6f3-05a0b73bd732",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a48e712b-1e1c-46b4-b0c7-b54b9a298ca3"
        },
        "item": {
          "id": "83d2ff0f-e573-4871-af3a-327ef2e41a5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f1dddb0-a8a1-4894-9ce8-072e79517f2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d2ff0f-e573-4871-af3a-327ef2e41a5c",
        "cursor": {
          "ref": "7b19d53b-325c-4ca2-a6f3-05a0b73bd732",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a48e712b-1e1c-46b4-b0c7-b54b9a298ca3"
        },
        "item": {
          "id": "83d2ff0f-e573-4871-af3a-327ef2e41a5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f1dddb0-a8a1-4894-9ce8-072e79517f2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690adc41-012f-4daa-b9ba-305f6bcc1fdc",
        "cursor": {
          "ref": "2fdda90a-a44a-4e16-b317-a4f67e6c37fc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "590a9fd5-23e8-4744-8629-2827de3a7388"
        },
        "item": {
          "id": "690adc41-012f-4daa-b9ba-305f6bcc1fdc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b48fe19e-105b-4f3d-a96e-3e2bd2335cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae133d2b-76ec-4ab4-a6dc-581b24472ed2",
        "cursor": {
          "ref": "c8775f99-6056-43d0-8080-e1d67eeeec87",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b2944ffb-9cf3-4274-9216-c4adb910d832"
        },
        "item": {
          "id": "ae133d2b-76ec-4ab4-a6dc-581b24472ed2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9b935508-ed4f-4aca-99a0-53ad35db311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}