{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "af0f9e36-4f19-4ce4-ac85-79a2e838e186",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0c5f63b4-d823-4c85-9eb6-fd8875d55049",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d43104e-c7a1-43c3-86d0-80413b8067bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "476380d4-81d1-4590-9c78-b6565249cde1"
                }
              }
            ]
          },
          {
            "id": "ae8b83cd-685c-4250-b6b5-f25100d26a39",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75d8ca8f-9e03-486f-90c4-81e647853140",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae90088e-fd6e-40ce-ba6c-2b02656688bd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b134e03d-0f30-43a6-b27b-7ceb44f487a4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5e674000-6359-4a94-a36a-dc2ea0a0896c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14ccc556-9d1c-46d0-8679-2debe57e2055",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb6c4b85-4ced-44f8-9df4-92ebd7612dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e676220e-2bb7-4024-a015-78a9bc518cf5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5902c6e1-18ea-4fef-8d80-228967706478",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a853d1f-6a79-4c5d-bb44-4ddad45b84ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "131dfd9d-8a6a-450c-b0bd-fa9af0e3907a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c1faac3-0303-4adc-93e0-2f9bd6e1bf48"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0794068-8b45-40f7-8c8e-750564f781a6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7044c99e-2ef7-4ab4-959a-52dc54fa08c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9f19ef2-1d48-4c53-bcc8-0c3df8c56c05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9dc7b89-ff90-4369-96fc-3d2a01012bca"
            }
          }
        ]
      },
      {
        "id": "508dd8d7-c4e8-4233-831c-494f7d1dfe2a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d935f3d5-3a3e-4af4-9eed-aab7a7d36ac4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b715e85-32bf-4eaa-ab51-27e2329e5368",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95746961-efd3-47b5-adc2-205468e505ac",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c42b56-9f56-4369-809e-cdb0392abbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da0d455d-d450-4f56-a05f-76696911ff1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c583be-8026-4428-9878-61d854e7e7f5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a257d428-8a31-41a4-9bde-c14504e5edce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1206866b-6197-4ea5-a603-8e5406885505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4ef0b9-7ca4-4cde-82ca-3cd69fab330d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edccf1c-19fe-44bc-8f2a-bb9d01788659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90be6c42-b4dd-4900-972b-86283a5f971a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b061879-0d6a-4920-a424-dfc0144837d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fab8ef61-be81-40f9-8dee-f61a9b7c276c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb96c65-2780-456e-a0c9-470532d88d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "260b19de-cfb4-43bf-8f94-ab7ffa7ea8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61837780-7d59-4ac0-bb28-3399b3a4cb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9ec1a4-9ee4-4bf3-86ff-4fe454ead734"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ec9aeae-3210-46fd-bf8d-108c62827caa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cc480d5-234b-486b-903b-47364061401d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b381ffde-c284-4930-a0b8-ebc63fd7e59c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "298b3666-436d-4c31-88a1-204b538b1358"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5cd0ead-ca17-4376-8e3f-4d6e016fd563",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "478a3100-8124-4447-9c0f-7d1537c9de1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2ef485a-4670-4927-b2e5-3af723b0ed65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ced61d7c-74ea-484c-8d9a-a87b831e60a4"
            }
          }
        ]
      },
      {
        "id": "edf9a1fa-186c-45f1-b3e1-9490e75b7937",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b4caafe0-8ceb-4d6f-81c6-440392359413",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3682e61-d5dc-4bc0-aeee-bcc3fb569c84",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "58ad5a17-bfb1-4671-9fd4-ec66453f738d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d797b405-fdee-4f46-86a7-d566ee46b489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbea000c-5d65-4602-8278-2ea1d81a557d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d3e980-5b50-406b-9a51-595c56f235fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b29c0882-5f4e-414e-af1d-89fe1f12e404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bccc865-9ba3-44b3-8e57-0bae5d05757f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21565f17-5b34-41be-804b-abaf514cdcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4829c8ab-16f2-41ef-b42e-326915adfa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f625db-1699-4638-93fb-11f08cffac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58f3e7df-6ada-416d-90fa-7b03ccdab3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01986d1a-8c98-4395-8542-ae1c8a8889cb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b27d76-2d31-4516-aa44-ed880504a223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4de355-601b-4b03-b709-bbd768eb4efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fb8399-7c92-4c4b-a73a-8d23bf502d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87de7ea0-413b-4caf-a5dc-0aeafdf0be62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f369a-a4ae-4368-ad02-a0c47e2dabf5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712da16-2909-495c-9409-93b3780513f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689a5d4e-8441-42c8-9868-a479ba9d8168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3848f06c-ac50-4959-9f24-fafc4957407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c697844-bfc2-457f-adad-7302b7a064aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6becea-4424-4269-9a32-8eba52a75844",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f2dbd8-1702-4582-9b9d-ebf2d1fee6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9048302c-8d44-470c-9755-45c144d63643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cc2632-3c4f-46fa-bbaa-0d04da1233b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1214918-4107-4967-b4d2-39b7830a55e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007fd147-9562-47fa-b9e1-a1f8c0d79478",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf7ec70-5572-400a-a149-0b7062458fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa810cc-1462-42b2-bf8f-4c7ef07cae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7fea8a-e14f-4275-94d2-b1a7b2f2c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e13d28e8-0607-41c5-bc84-33693de01ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6ce6bb-e172-4aad-a028-e6dc28d275dc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8150c85c-2799-4bd6-a190-15dd6524c620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adf20f6-e0c2-4099-9aaa-ba88692bebc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373ad6eb-2f24-4fd1-8566-c11544447a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb4c4b8f-9770-47c5-b96c-07dbfc200119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f379c660-8889-48f5-b81a-efd7c1cfff33",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f091aab3-3358-4c97-bdd0-dc73726df9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02754bff-9776-436b-a077-8d9e255bfd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f14ddb3-edc2-45da-a2e6-0be1ac16487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edb148d4-7995-420d-9664-327ce4aa26f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8b2e33-be27-461b-9dfd-7df0a1367aaa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9262bf6-1d56-4a95-8608-65d9d703d219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445af747-e2a1-4a51-8e1f-48b62e6795e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cf7094-2ecb-4915-a541-128588a0b686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43f90d08-7f67-40fd-8845-234dbb644d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b8b6f8-64a5-4e96-8291-853f738514d0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9596a24b-9c58-4f4c-837a-f76d36c364d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48a3041-694c-451f-9f4a-10ef0ab6faaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65878c29-3895-4a3b-8497-4201263523fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9c4ac56-d072-45c3-a641-ab7343c64b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e90517-9ce2-440a-a8e3-52ca9f89904a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9908d5a8-ddb3-42e0-a880-97ccb6439179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9320c567-9ea8-42ca-b7b1-950ce7d21c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77efeb78-9cfb-4f32-ac47-e1f14e528b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c136606-3415-4f01-b132-c9fc84a2a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d476b1-e7ed-4490-a92f-023448625b7d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33569f9-6237-4668-ac68-9adbadf86b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6600252-525e-460d-a21c-9b700fe9eefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf7d52-eb9b-4c4b-9bee-080a3d85f752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9ae1eae-de77-4257-b7fd-eca732d76061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d56bfe4-f10d-47af-95d3-89e4503b23ea",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07d016a-d8de-43e3-a21b-52787c645acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16733ec0-c62a-4089-851b-2c3bb089e7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e190c7-479f-401f-b98e-c3ba429583ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ecdc35-b3be-4672-8e26-8fb260d935a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7f3fd8-5f7f-4e96-a98d-6d03100e8f06",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c67708d-6e5d-4ea5-bb0f-6a71063575ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ac673a-c5c8-48e0-943e-b777247092c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393085e8-0eca-4bdb-b36e-d0eb3d121d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7441652-0401-43f7-b32a-6d15511930bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e056e92e-327d-41b7-a9a5-14aba3cde351",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b6e23b-91b9-436d-9986-8c973a7aa8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ef18f3-2d64-487d-b277-de04e972fbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd838bd7-7453-452e-abed-767f89845efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d54c387e-4ff5-4110-9507-88d6e3cd8cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb82e64-6c19-40cd-9568-1351d65316c0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe80ecfc-bfd8-4a04-a2a8-b7b8d3c91796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb957465-c8dc-4cdc-bebc-668c1bed836b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b47e323-2ed8-4659-be42-0c358b62285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a23a9d3-75ae-4fa4-9c64-d132105c73da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a657ee-2d27-4d10-bf58-bd8263391961",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e71a42-4ffa-4092-98ea-df5b556c3a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209b27e2-c59d-42eb-8ebd-2d6e2e603bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20bb963-c301-4c2a-8acf-2b2dc98f831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81f738a6-ab21-4121-bc9a-e7c87ef66222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e44730-54cb-4023-927a-a5a815af0d17",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416afde5-06aa-44ae-b8c3-a5778864a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08382ad-83dd-4aa7-b11d-4dd516481069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86809ce-c879-4f1f-acbf-b8e75c9bb812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6052f83f-39c1-4e63-814c-1b29e54a4b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba057af2-fe40-43df-8753-18675fd77ef0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43c66ed-b101-47a2-a0e6-7302861e919d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8086f3-352d-4f2d-b5c1-d364bd282252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b37583f-917a-42ad-ba1b-579d36c77066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49119fd9-8116-4e3b-b01b-61e6b500b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018b1e9c-c849-4c06-9d77-0b0c202943bb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4246a7fb-bf3c-4f7f-af7a-feb37ec74095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec481541-60a9-4825-867b-2d2a6f5dd024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03372dc3-559a-4a92-8d9f-23b9a313328b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d28aadc6-825a-4655-b5e7-5979e7707c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f80ac6-8ffa-4ed2-83e9-621015386ebe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef37e147-642c-4ede-b1b6-2f36f90bda92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dd56ab-9d0e-4bc3-a53e-8ededfb0a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc051fa-a80e-4058-be0a-391a5e94073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0019e41c-afb8-4a8c-b2cc-5dedc7690094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecef8d68-0d1e-475d-beb4-51278ab1c667",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2667fe85-728f-48d9-a37f-b63f450c2d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b767e816-88a9-440a-bc12-099a4e8f14a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2848e2-c25b-4691-b3be-4ffda94673be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5869e7b7-6f99-40e6-93a4-3282ad27156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678961ce-f53a-4029-9c9b-f7600a96f332",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd3b3d6-12da-4429-a53b-30b1c5360bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9743ce2e-d3f1-4867-b64f-b949e3b7c6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487af3ff-14ce-484c-867a-2a0722b94584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7928840b-ab51-46b2-bff5-cae75832e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47345af-3070-4435-824f-aee7f9a06414",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6464b0f-1e7c-46d2-a416-d10298047024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31572cd9-d258-45ac-bf94-1cd21dc434ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e22c8b-add2-4989-8ad2-9835e5bf1484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f81d7f6-6491-43c1-a862-8d8168aa3472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaf5e5f-d45d-4b55-9095-efd3c2d3a001",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8858bf60-bc65-426b-aed3-d742dc24988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd3b8ab-247c-4c70-86c3-6610c1043be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d55e2e0-ed2a-4516-80e6-2209e8383a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c557f0a-7065-4ce3-9225-bc7cedcb15c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e51920-75f8-4440-90aa-dbecaf30e2dd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aee6035-2b84-47cd-9721-7b344d0c4a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2736442-27fa-4eba-a4b9-bb513bc66a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bfc487-731a-4d38-b58f-ab84ae59a13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fb266b-88bb-4474-a176-72869e4ab2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58ec04a-2993-4aad-8992-146144f662b2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea28908-85d0-4e79-b19c-7831a23ff2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2c389b-dfe5-447b-a304-39f93bac6bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a722371e-cfe4-4b12-bbf9-cb16a3a741e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "275f4b8a-d3f1-4525-a2b6-44d299be7a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fa7d22-e450-49cf-ab99-071e20caf0e9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6e06a-9b91-4214-b43f-e1ae66534d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2927599e-2a8d-436e-a17a-a6a13aa8f25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e6be4-4ff4-4928-beb0-e9172c756af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6c909b-f25b-4cb0-abb1-3234a8e78d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd39500-68ff-4a67-a08e-5f87e2e44687",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5316dc1f-bcb3-494f-bb57-3c97ba5bb255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a34ed8-db68-4231-8fed-b813b784f102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e810f25e-4fba-49c8-a11b-6a2993607193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "731ff615-ace4-4f0f-9dde-f5f8fdcdad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416d0b54-c2a3-4d97-849a-92583bdd2762",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a122b8-4e76-48a0-b9e5-a537393dbf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecc170a-23d3-471c-a083-7056c29a68e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78869ded-2675-416e-b9f9-5e7b11120499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "870574ee-ac0a-48d9-ac7c-9da32de309c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c4af9d-b563-48ea-9495-f95a591a1875",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675124c5-faa6-4b12-b6dc-14057cbdba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48225af2-fab8-4052-bc4e-5b21cb3cc1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed288f37-2caf-4b34-9075-79e26fcce09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6ef4b2-f269-475c-b873-b7f5fa5a910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee65698-14e0-4f30-81d1-6c03415b0000",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277594ac-fe04-4c6e-9844-b7e98d82fc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af867fd-d87e-472e-88a5-282125609df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023147ef-3ac0-4bae-bfdf-18bf39c45642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a8b303-14e3-4a6d-9e8a-18dfc74e75ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddcaf72-e5a3-40a5-affe-43570b5895a6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabedcb-e988-4f6b-82fb-66d822aee7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04dc336-51fe-4097-be12-5a101645d579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d8d569-0fae-46e5-a283-236d4d6d2696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "150f828e-43c2-4bc6-9402-bb1dfec66118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703d0009-0f0c-496c-bd2a-8bf99221dc08",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3dbcef-f8d8-4be2-a59c-65424608ca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e6cddd-e501-451c-8e87-dfd9b444be35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b41ca-61e5-40be-b6de-9fd435cadfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "199532fc-b119-4e62-a1d9-4ed9c191b8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44948787-f3dd-4f6e-a11c-43b9a73b6ae8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88de80b-c9ea-4657-a01f-91c3bfde6941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a349e77-03fa-41e3-9aba-8a3331205d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5f4207-be41-4695-b631-3a2c02a4c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "80a4299e-6898-4102-8076-ee9f5c99287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f4a069-1b26-48ea-8506-06400df375d3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46cc831-a8fe-4d1d-95c2-39b57a84cff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f039c460-3b18-48ef-996a-75a95c926bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ba9a24-8892-44fb-a975-2ec541774e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd89141e-47e8-49ce-abf0-6d200d54bfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c85316-2793-4db6-96eb-92bccb2fc504",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0350d4-d703-4235-a019-718adf6bf65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501025e4-1ab4-46e8-a557-770f0e3006d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73f77ff-5b4f-4677-a2ba-9eeff45c8e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b9e64c-bafb-42b0-889e-d91b3df1b606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a97ce27-f919-4124-be73-1381ebab8cf1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9537acec-181b-4578-8eb1-125e8828faf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a77500-1b71-47f2-bf32-c62bf280f1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509b9cdb-703b-4b45-9a37-e8a687094268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b45b6048-09e3-46fb-8f0d-c8a6674ddea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136d7992-3fb0-4ab4-a50f-c7bf8cd6f688",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8311889f-5698-4adb-918c-0b1a3244aecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f346e64-3fb1-4aff-9e02-ebe6f549714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e8e51b-71b1-49cb-a9d9-9ba7cc5c62b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb86bbd0-19b8-4114-aea9-4dac15ffc4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0210af7-d7cd-456e-8b5a-2a75cf736af2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9089dd5-254a-489f-bbb4-11f7a99cd194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b15368-eb43-4759-bd0c-a87aba30abac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d09f08-dfb6-4cac-ad63-b0de4ee9a0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e82d8c2-6709-4df3-8866-69b36314651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d71e30a-70d4-4b2a-b554-83b3d06605c4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd791bee-e516-43e1-8ea2-02d98241c241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29270728-8e80-42f1-9453-23fe525d4b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898a8793-e939-41f5-b18c-1e2d073076f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad7337e-23d0-4121-bb25-0fdad9828f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c158765-8b08-4074-9ffa-abf02788bc8b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ec4ce7-b0cb-4c0b-8956-47d47e95d59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08e0707-bd19-443b-9784-2c0530cfe71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3ac38a-76cf-4cf5-a3e2-5b058a1f3e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "754d672b-6787-4277-ac0d-707c1c92a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb8954a-f78d-47ad-a506-473d36b0650f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3159d9c0-428c-4ab8-93b5-be0f88a16fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbffb4b-604a-4978-884d-6f14d2428ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1856e689-c7a2-4256-b90d-c0e6ff26d840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8758fbe0-6c03-4cd0-9c96-05355d7fe0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99e51f0-7245-4f4b-87f8-2a0510e50964",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba603b78-8009-482f-8d6c-89863764bad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dc97ee-83a9-44f5-8c8c-9c126d4ad38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a13f06c-3a25-43e6-a754-1ba8302b678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "61808415-389a-4d96-a757-4cb5eafdafc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70210a39-a93e-4bcf-9f73-bda75b563427",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e35cf83-eff4-4854-a767-005c779deb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950930a6-9a10-4dce-b10e-92b0761fef14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaeb300-221e-485c-b00c-3a4877a7b4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "964608ff-b8d8-4ecc-bb1a-77f3fa6155a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e153130-dbd3-4d85-80d3-3f246d772e65",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723ba004-bddb-4440-9654-dd9b09b19b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd08a81-5109-41ba-8bc4-fccbe35ca941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd27d8c-3ef6-4aa1-ab9d-c58c3ac421c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85cb89d4-4522-4e6b-892a-98f258c448fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a63489e-1086-4824-b4a1-81b5d688ef36",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6652a082-9998-426c-a107-e17497939921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d3a887-229c-4c29-a0bb-ed351d566d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980aab35-62bd-45d8-98de-be3b37e43be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e333ad4-5f05-4b50-a897-1287c7e22aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dfebab-16c6-4ed9-a044-f5569c6ec647",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711d67f0-9f83-4277-a741-d2ff28aa5171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ece3fa3-0b53-4763-9fb9-4cb88d9e6b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ac8930-d14c-480e-9b11-af20f4d5752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66654edb-b597-4928-a192-59a10477a6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce50be4-c70e-4503-aba8-5c81d9362196",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2554538-5cc1-4681-a35d-91bd1e084e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec684e53-daa0-40d3-aa6b-9f714049f312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7cd5e5-903b-47a6-bc17-805b43d544d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3613422-5060-42c9-8f81-e62589884022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03eb71d-f9da-49fa-8563-54e88e6c981c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0ec760-75be-4ba9-a20c-85b7cf9b236b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0403c943-1672-4262-8bfb-e14788e40d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a395f5-0d88-46e4-9b9d-d188d3a95f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "724cadcd-ad76-4ea8-b037-9a87e42d15d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d6a61-8439-48f2-bc40-f1c2d5bf83f7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cebdee4-1872-4b9e-a777-03b67d70acf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0ac3fd-9f3e-4270-bdbc-0bddcc6dc062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44c2ad4-c760-4503-9b11-1dab1dc78057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d983a6-3fa3-4582-a303-ef23a71cf40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dd5bae-2810-4f06-b394-428fdf610a5b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7904229-2157-4932-9c72-34190d280bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a399a82-0d17-4ece-ad52-6205d2cba484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c43049-e67a-4c54-8c78-26da51a167c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e606986-9fed-41a0-b5ed-9f27699710f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31d4a72-0a3c-4577-92cb-ef20bb1ff0b1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8889d0f6-392d-4706-8d09-b67958624956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10556fbb-d191-48b2-871e-8194e8e468ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73ed820-a7b3-4543-8a3c-20d438f6b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79fb6b20-c406-419c-b83f-f9a38d69c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6fe850-81df-44d0-b902-077d1f936ac5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02449fd6-0ce9-469b-9936-18c2eda7eba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afdacbb-8729-4489-a00e-1fa4aeb17410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aa0a53-ae15-40de-8467-2f4cfd902859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2ed2ef-5ff0-4c94-93c5-fe2863ec46f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ccebc7-ff89-45e8-89ef-4f31028ad57e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8fe55-de89-4cd5-b9ca-998b534f7975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd33642-325d-4db3-8cb9-b486c7efddc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c164e992-a6f5-4095-813e-384549979c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6b9145-9abd-4e59-a56b-a08504758451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9da5ef-e9e3-45b6-ac71-e90a6b2eefd1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef29288-4e33-410e-babc-1b88699f2a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166d6f8d-f07a-48f2-b547-b4377b29b8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed70b08f-d7df-4d84-b000-dd82acc2c975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "92b61e6d-8753-43c4-b058-367e7760913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dbd0ee-cade-40f7-b448-09ff229e478c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7462985e-d08e-45a4-b878-851433b5a3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e05ef5-f7b8-452d-a3e3-fe2e16816c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3805a0-eec5-4025-8ef2-93d505beb092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aca085-cb77-4eff-a203-e1d672df0799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b87f40-3a32-45b6-af58-3b67e4ba5072",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3883069-c90a-438f-bd43-172d22f2fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4b2603-dcc2-4763-a849-2391efa4ead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1656884-4fcb-49ec-8bdc-ad043acf8a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6730205-dfbc-4e75-aa24-7bc6160b64c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe779e2e-0927-4f26-a612-8653f0d798cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e17a5-de2b-4d59-abb3-65d4c008ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2664733-aaf7-4989-a15e-b2d3634a818c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f8948f-5b6d-472c-bf04-829b818a5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ecc4a8-031b-40cc-8d36-b12e66c54735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d907a5-5a8e-449a-9d26-d19eebe71c36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab0494c-28e2-45e1-9b83-1a4424a72b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3479439-31bb-4681-9c78-120ecac04ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812ef27a-dc22-46cf-b071-0b07e27e1ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e236f4cd-c4c8-46bb-b67a-c850acdfbff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452049b7-78b3-44fc-a8c5-9fe2200b8ea8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be226e4e-1866-449e-ab80-a41b827cd50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f1796d-02f5-440f-b111-87c9c6a4722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563967ac-fd9e-4fb9-8318-a2c9ebfd731d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e20c5d-ffe5-42d0-ae54-47b615236375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be140383-b3de-4a9e-98aa-18f1a5fadc1f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9d6517-87f3-4c16-83be-ef332a1af33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14563550-302f-4d61-a1bd-9e621e29e339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5c30b9-aff9-40bc-a4f5-b59213d96927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a585ad7-a40b-4b92-926d-4398157ab3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214ce23d-124b-4840-8828-c1b4f11d543d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32e06bd-c1b6-46b8-8598-ad66f292b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7695e03d-22e4-4f0f-b356-7e18be37ad5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9d38fb-1bc9-4ae0-9690-a9a2161da390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "174f517d-59a0-442b-aee2-82418bbaa294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4e015c-c64f-45c4-b432-82b4b27c7efb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e1132f-bbb7-4f8a-987d-ceb30c54a901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d724109e-0fe2-4fca-b330-e5b181c593dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd5cc21-3f2c-417b-882e-4d57d64aa3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9670e9-7a09-4d17-9d2d-2defd9deb858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2a1d67-d3f6-40cb-babc-691dea63cab7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec3fbc0-7f45-48a4-a107-f832ee6f2ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025abac9-40e9-4084-ab27-d55a6fbb65cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6811b4-a894-450c-8c5f-2f3917cd7545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a1630a-6e6d-4b9b-830c-c069454655a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c9589d-1226-4d0b-89a0-823d782c94bd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7f354f-bad5-46a5-bb96-5fa60e653698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befa072b-612b-4694-93a6-373d5e61b1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b48e396-760b-4e13-8b7f-b410964b9546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63af7a12-771c-4d01-9515-47642d2da709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e247e2-e09a-4b26-ab23-0a5eced70a45",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981c289b-47f6-43eb-8ff3-9554a3f42b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed4c0b6-3520-406a-bf7d-8aec8e37d134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bd7099-a175-4fcd-bad7-e8b05482c2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b99fd71-618c-4512-86ea-42714aef2459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc647407-da51-4f6e-bfd0-be89a09db95f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6bcdf1-ea0b-444d-8274-0f5dfb2c0042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7210500c-c42a-4c1d-a467-5fa0449a0d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f3f420-06f7-4d48-8d65-17bce0fb0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cffc7e-1d26-4c35-abd9-eaf0777ed570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabcb054-fca0-417b-8a09-9c9757018395",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9e468c-987b-4254-a025-0f13175f984b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fefe49-1876-468b-a541-41bb8f597cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e39a358-77db-41fc-8d87-0536f007be26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8019b46-2aa2-4267-99fa-bd252855b0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9b78c8-78fa-4386-b8d0-aba2bd0bd392",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de703cfd-0c2f-4f9e-ad50-0cbecaf0ac85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4aaf5f-81c9-4c4b-809c-4487b9f5be3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab36a82-7213-4f65-bcda-6f8fc935aa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c50268c-b97a-4c1d-976a-300942b2c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521da527-cf63-4382-9f86-9bfa4f1ac2a0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51423f3-0719-41f5-84a1-5ab4869a26b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297f1128-bfdf-4971-86f4-ede3cf7ad8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d832b5e-130b-4f50-8a73-b44372291ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc249185-a93a-4e91-88f3-b85e3ce37b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca3956d-c336-4ca2-a788-d531d08e2029",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0decf22-6708-4bb1-ad87-85d003c0ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9d6b43-442b-426d-af9f-38c5c540f3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec937de-c277-4f25-b91c-c017d3b15fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de63f06d-d1ad-495f-8917-0e77c4a11adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6f320-7ef2-4929-9ee1-f5b1e5dde516",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044f19b6-9e68-4a12-9430-744fd64208cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93ceb5d-60f3-408a-ab34-181d0c1eb09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbbd7a8-459b-4489-afab-e4de09f6479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1d3fa2-0e11-4b30-8952-bcae017e9dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf28683-b0bc-44b0-8e80-ab2db7b6fe10",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8865a598-d443-4d7f-9e22-b3774ac7b944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc3300a-7a49-4e47-be99-307ee576d918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8b6168-5712-4a3b-b1f6-b4c5bfc641f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "777c65b7-4948-4125-b410-e821affac381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ebfbc-d0e1-44e2-859b-3f65cade7822",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd13f2a-1df1-4420-8282-1b07c61fa23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dd5247-d149-4f8e-9535-a9fbf33ce809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb4666a-a37a-4f74-a195-38abf15ddec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc00a752-ab29-4187-a0f8-75566dd25fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d49d53-8812-495e-904a-4b99cec8a426",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5b8fde-3170-499d-88db-a64d34205cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfe25aa-1c8e-48cf-baa2-5f54de3f5a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091559be-0860-4d3f-8432-872ebb6a141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80dec705-4066-44f2-a2fa-56d306958eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e61daa2-ce64-4431-876c-9a4205650fd0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2867ebd1-f604-4b4b-8d48-bb0d6a9aec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fccce9-6c08-4c28-863a-761474f817de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc539e8-5fda-49fb-bca2-a8c92c9e59c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71e90aa-1fad-45d8-9f27-eb5f7897a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ee5440-1afd-48b4-abb2-e989d0642ffa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a2aea1-a084-42b7-8049-a1974e4633b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739c4c39-2862-444e-9994-e7cd6d69b78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83accc23-7208-421a-a46a-b3aeec010d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96410001-effa-433b-88d1-53260bfe2251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f483c3e5-0818-41f0-86d5-7383ea70e27a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5141cc-9152-4ebd-9b88-b22945a7d786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f38fcf5-451c-4bf9-af93-2f9de651515b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b8c894-9d00-474d-9a91-aa3ef398046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9960c60-c533-442c-858a-f43781917e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc06f40-68eb-4872-8398-e71a32e53cda",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896251b1-c76b-4b31-af92-99f0a82988ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bff6bf2-823b-43d3-a269-e5d2e5e30e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fdc4f8-b798-4e21-a64c-9caa7b4d1626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8399b150-32b6-4227-842f-00a453ea852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d269f5-9f96-4387-b4b0-a6beff793d9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5642b4e-98db-4300-83c5-c3c2454bb5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94ccbc6-8eff-4e70-8017-e97d2f1f3779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe09c3ed-3253-4a0b-a781-62da46ebcb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca14266c-9fbb-433d-b55e-16cf43b00d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb41898b-5b59-4d5b-9314-b71bab9044c3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157d5f5e-8ecf-49d6-9bd8-5b625783952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2da53f9-f534-41f6-b588-5ff31e2f8b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4194fdb8-91b2-4a36-8919-6e8066d0fed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7ab7bb-d2fc-4823-b96c-101bb1bc1552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85210a6d-ba57-478b-a667-0268bc2b981b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed1eac1-1eef-4d15-ba3a-1bcb0eb3d467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0f3591-c75d-4d1b-8905-80a52fd3f155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697319c5-3db9-44e7-afa8-53de20096fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfa1640-bee0-448a-859d-d5f7e9682bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5639e5f4-edfa-4a9d-bd6a-47d98ae7ba7b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e0381c-f4b2-4571-b339-497401f7c234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7f7970-1469-4401-bd5e-970470a68717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8153e12-935d-451e-a3e7-6591d05ce0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e214af1b-5302-4687-82c9-0a1bc040be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c6b989-db8a-44fc-b237-719774d923c8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14327727-c2b8-445c-b7e8-bbbb9c9543ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb245a3f-740a-4880-ad31-63a8aad37f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36a6a8a-2e3d-451f-ade1-a75041811466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0f8e3a-1094-4c45-9396-ef4a568f4313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7119fca-3aea-4fae-8e8c-98aafa5d46dc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c24849-3c60-4e43-bd8c-a1c8a7a16821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b585b17-29c4-4306-b11e-c04ee05fb39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d95c3f1-84a6-4133-9b88-8f82ab5fb872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dad6e181-489e-43cc-ad0b-0fb14ed114da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f6f099-0230-45f1-8002-c33700ccba59",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ee92a5-aeca-4095-9938-8fa5adda4632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6faeb8-3d0c-469e-ad42-69256754e22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b282ebfb-a314-417d-82a0-bf61536e2e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4408638e-b6d8-40af-a5d6-c113a9616e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1d70a6-ded8-4336-89ab-2e02a1443b86",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b4cf8-7f7f-4bdf-9134-1e67c15de5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0cd016-3270-49b5-8fcc-d511067c2b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de36ec5-bfc8-451c-bba9-a8bb01231269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d40ea71a-fead-4683-924a-2c7c2daff88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d101d3-7532-4788-94b2-51de3ca92588",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd7d047-8dd5-49c5-9a62-23f080a49825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc998e0-8c66-438f-9ca6-97e7cc60e04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8402070-2e0d-42a0-90a6-cd72b722827e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0092e8a9-6f38-4de6-86d0-fe5b8f5d2cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8ed2f8-f19e-4806-aa66-259da1015142",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1466469b-1ce8-439c-88cb-e2474867ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9377f478-8c86-473d-a04f-65627a122623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc1e06-7715-44a3-bfb4-557ce2c8891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b20c31cb-61ed-4b39-8c7d-dc4e455f2581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63f7f73-57f7-4699-821b-287211c0529b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cd60a6-80b3-4fee-a25a-abc834534465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e75f32f-3fe8-4d65-84cc-f3df3394e10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b895367-0613-4f87-bcf9-aaf05d20816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8478c453-25de-4b5a-a65a-38223163d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7af5e7-dbbc-4474-8bf0-f32f8596fcf5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08675276-9e50-4483-b5ba-d25d48275bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d0d5e66-9454-4cf5-81ba-9c7a545c6821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0302a7-3786-46ce-bc92-b11c05bf63fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e32fb0-8e29-4442-b102-d59166581a7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d0bb0ab-0d96-49a4-ab37-44d979a1f5e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09ae975f-bab1-4e6e-831d-9c42328e88f6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd9720a-ed82-4a18-8c2b-fc345fde2757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2f0e2e3-bf0f-4adb-ba1c-132c34d3faff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c1fc1a-04bd-407c-8d16-dbb39ef760b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "384726ec-1053-470e-9b33-cc96019bc957"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1272eb0-ac3f-43a1-88d3-403c5258aae5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600c2673-0c3d-4339-8339-9c755a0da24a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8928440-1288-4eb0-9d0e-048bb19b8529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e0617c1-3827-4d2f-b628-b8f310bdeae6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51ac9011-0d11-4f16-bb57-6b2dd7977025",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e53d9b8f-89b5-47f1-8983-b770fb0533f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1aa8faec-9cd6-4300-ab82-fcc65c9550cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c6659b4-de9d-4763-a372-75cb8192ee49"
                }
              }
            ]
          },
          {
            "id": "1856ef36-5250-4e8e-a7d0-50b208826a65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "947829f5-e6d6-4013-9db8-184cf0e68b74",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5005b048-a6f6-4751-a9cc-18435beea4e2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eec46a-f9f7-42fb-ae55-d73590cdcfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f5c9417-b492-4917-8aac-1c4b47d4b441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e08a1d-d164-45d6-8d91-68a496964ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1849b9e-8250-41ab-8f51-bc508ec96ad0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1ba2a4b-fd99-4e3b-814d-16389e2c1d91",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1499246f-737c-4eac-a995-29586da6e662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe71719b-8fc1-468c-9481-9e88a5f8bd71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "678db1d5-2e94-41df-b8db-29ae236e7320",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e3d98e9-3747-43a9-b117-edc91988d301"
                    }
                  }
                ]
              },
              {
                "id": "26b3bf77-82da-4e91-9675-f0727d115b0c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd7181e6-cb95-401e-b41f-7d9f000264cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f45d5b0-4ff1-409f-8200-a437b227d98f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "386419bb-4ca6-4bdf-a65e-e4ae0a2429de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ebf72a42-d6ba-4afc-a86a-9332debf8f80"
                    }
                  }
                ]
              },
              {
                "id": "f7f2ce53-a5a3-46be-827e-8b347ed8bfbc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da6e0d75-7667-4eb1-9080-3285d32227de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6fa0f76-b1e5-4223-a670-8c73c4331a73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6945c4-2173-40b3-a5b7-17bd9b7aa626",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b63f3278-9b4f-4990-8ef7-c8c3784723f8"
                    }
                  }
                ]
              },
              {
                "id": "c7213bb6-2ae1-4a6f-b84f-e423bd26bc2a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c6a949b-a45b-47a7-ba70-cb4883dbe23b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "359f4b9b-b376-48f0-b208-2dfcf094ff85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7a7af96-b7ee-4e7c-903d-8063f9e8659c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "93b61c6f-9513-46e8-aeae-2893c3a55f96"
                    }
                  }
                ]
              },
              {
                "id": "04012f49-fcd6-4894-bde1-b97efa5fb04e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a71bebc-7f1e-4d4a-baf7-f1e7beabd132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ffa8c01-8af6-446f-8f02-7f02dd4cfd10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf18cf87-10e6-4eeb-aab4-7f3873ffde06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a4cb0c7-0134-43f3-86c4-6e05caec8dd2"
                    }
                  }
                ]
              },
              {
                "id": "c32963e5-4abb-4004-8050-84193eed2eb6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41764c1d-b7d7-4ac1-8ed6-1f578636bc4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2040dd60-c76d-4c66-8157-03d55608904c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5997875-bcf0-42ed-be4f-a7211dd89092",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a207f325-2f6a-4d12-aeec-2d3130bb4db6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65af0283-5f53-46da-a660-4fc48b48d09c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9eaf3e93-f341-4363-8bef-d9172ec5b4f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08932dc9-87ce-44ba-b5a2-55113eb6ffa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e37f534b-75d0-48a4-978f-d1044a71f789"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a34c6ad-c424-47ce-9a77-2dc7ff772f39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "856122f4-b715-4ca3-bb9b-78c521845ed1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0d0abd0-10d8-45aa-a4ed-17dcaf205c14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e4c7bb3-98a2-4dfc-81c8-8d3e695d5ed5"
            }
          }
        ]
      },
      {
        "id": "75e0329f-21de-4726-8273-c1d7b11b836c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "90f9eaa6-55a8-48e0-9998-9948cd60c399",
            "name": "Negative Testing",
            "item": [
              {
                "id": "733d62e5-5a02-49e8-9712-7a03477d53d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3e7a847-ca5f-4723-a2b6-e15bb4e7ba78",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ee182d-a5d2-4aec-8988-f759024dd4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2826fa3-a5e1-4a91-a612-cc1f1a4227c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0502bf1-60d3-4114-b159-d065e9c4eee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ce78b7-8ceb-45fe-ba06-29a3e9f01410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26175cf1-4a93-459b-8c7d-a6d62372880c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43ded53-70d5-4376-8489-af6c555f1db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98b4fde-ce45-4d69-835b-9e77e4b364c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bc8fb1-0b73-42fe-8c09-ba1c4e98dd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "099abc68-486d-425b-a2a9-70aa7a963d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4b98c9-89a7-40b8-9fe7-d779f04ff748",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab6c3f4-4420-4ccd-b3c0-074beda021f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c5379b-f1d2-4bd9-8082-ffe6a38fa10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1b6648-7666-4f1c-b3f3-b67a0a32ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "697c400e-2c1b-4199-9576-aaa63e359882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bcd41d-67e9-49c8-b675-301332765c47",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bf1843-d925-4acc-b8f0-d148abcb1083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cd4c8d-f2de-4ea4-80db-f72b438e82a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf8dbc5-8a24-4c92-b513-3d573c8e5e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62900312-4230-45f5-ac5c-0cbfc5767a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ea2d18-c02d-446e-9ef7-0d096933f8d3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0640e67f-b000-48f1-86b4-677700993e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47717961-e650-41fd-bfd5-c010498809c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a8bbdd-7373-40d7-9f2f-5362078b44ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9346fad9-870e-4054-af1e-f8c92aa97bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ddf745-9443-4662-8071-0d49f95f93ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18789852-a942-4107-8d7d-c5192898133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e95739-700d-457c-ac88-7f76531bd6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04042397-2a30-47ca-a41e-75132fb94441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95420f65-15a2-4edd-a594-d5b56eadeaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8197070c-02a7-49d2-8be5-3dcb4f41b01f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d10837f-7fb7-439a-8c6c-2fa875ff6e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00b28ac-436f-4c75-8456-316bd5f9cab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e9f06-9ac2-4010-9d8a-74c02786e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4efc0ba-a745-4a29-8b50-81cf9de232d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea28f84e-037a-4328-9bae-7bd1618a26b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb382c98-680f-4976-8176-86f94672e1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccbe926-5b20-4aa3-8ab6-6951ca6d5324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2d6a0a-b018-45e5-9c9f-0b2c883e1c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47d8e40-50fe-4f06-8f96-e3a9fa587390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8256572b-e5d2-4f09-9733-67ad41823710",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af970bd-9b32-4cd5-a4ea-67be9cd6f80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e7524f-08f7-4688-9737-cf41437a4712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7f654a-c7f7-4694-8190-01f39b72f380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd18905-9ba3-426e-b1ab-330cfdd65224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94052d96-35d6-4bb7-9afe-cd208f2d4bbb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f865935b-a9e5-47ed-bbff-9bf69b3f6a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449d0f95-8239-4013-9b94-e70c20b18d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaa1adc-f215-46e7-900a-47966b7a97ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece8e1f4-5c20-47f9-99a4-8cc8d3371b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c917d077-ca79-48fc-a19f-10dc2cb5450a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a8726-a88b-4659-b78a-0176a1bf9fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f7116f-49f5-4f4a-9516-d249d1712edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079f9fdc-e92d-4b78-a79f-f5dff4649211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b9d86d-3b5d-4751-9508-3cd4a5f10688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8708ff-ee4d-48aa-9d37-c461366d8078",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d881cbac-5cc8-4302-849c-6469020f6f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1f21c3-efa0-4501-8b13-3db5427c987a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f30f760-f4d7-4e32-86fe-0c7b5fe5743b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cffab50d-81c5-422f-85f4-f73b7ede1eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033ce2a8-7320-4653-92d5-14ae18988a18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca61e23a-9619-4370-ab54-ff80be0e2d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef310b2e-d2dd-4f1a-ab06-66f7f5a181f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a286f8-d1f6-4ccf-a9a8-672c6a251175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a9b7f5-254f-45c2-9b07-68def6eb3c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca53096b-9667-4e68-8e74-aec99eeb6ae1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b84df3-b330-4e78-99ce-f6974885af3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26215e88-9a06-4291-851f-ce443b389455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d333b5-cbef-4125-9b0c-5d19ccfd4587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e71f056-542b-4afa-a70b-b297fa2a8196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f35b74a-a32e-4b11-be10-d7fd316dcf0a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24754c44-b2a2-4737-9f71-c48187c2c420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba722f09-9b05-4482-acc6-8eda520774bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66333e02-791c-4706-9d45-c461c0a229a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f84cab-d446-4bdf-a83e-7d8bf127d9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff98a589-f65e-4d75-ad7d-18ce2c0252b3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69113cf1-1728-43ca-90e1-dc0aded81786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299bfd21-4d36-4c56-913e-4c32732c3fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1fa49b-8bcf-4a7f-b7da-244aa5e5cda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b11560a-2c29-4a28-a347-f5c06db77bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38409fd-92d9-4bef-a3ac-26cd85e152d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f6a88e-db01-44a3-8f2f-26fd967e72fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4549e32a-d3dd-4e2b-a1aa-da677e98b9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c3f07a-10db-45d3-94ef-2ffbec78660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf65160-31e3-40ef-8e91-fd651c2ce804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3312cb1-fa8c-4b3d-9d4c-1818041e65bf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d7f947-7636-4012-9c85-03ec56ac0fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128d1732-a9cf-446d-bc72-1a04a6aa59ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a18e8dc-df32-42f5-b5a5-31e203826885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5be6e06-1906-468b-91af-78c8f07ea76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161a9ad-21ac-421b-9055-6c22e5a5c193",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad072de4-a1b0-4a47-8cf2-073e5a288fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e892a4-1f41-42ac-baa4-5825f433e254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e64b7-04c1-4824-8d15-94312187f47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da51c57b-9bdf-4593-9970-ccc324f34ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55fe3f8-724d-4573-9213-f9cc8f5e3fc9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c031cd2-b956-4af0-bbea-896976eee538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e9991a-3921-437a-b227-2706eae8e2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57bd539-5d3a-4bc8-98c1-88a13de4d1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cf80a5-be2a-4c1a-81a8-cc7d6c400bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fbd153-93d8-49f8-8272-95bd7d1d1532",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b923fbf8-6010-4dd7-b734-615ada84bc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e42017-a633-43e3-b870-d55b6fa3268e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6e4009-34d0-44fe-b446-3d7a31cbe547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f3c470-5f5a-4b6f-b9f8-ae50a6f9608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb9e2fb-8f73-4804-aec0-b370f4788fe8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ff992b-93c2-4645-a1fc-7d75b7a8b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0af98e-061e-4353-848b-c0181c146f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ad2455-3de2-4154-896c-01199909105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf19323-e74f-4c8d-831a-eddf2dc2b29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2f6a5c-bd9f-4d89-b775-13edc208dc1d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff71a52-afe0-4d08-b034-784e6fffb8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e734d81d-ea5c-4cd0-8b9b-f21d2b9fd207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1a5208-91ec-4366-aa9a-915a56f833ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f0a1bc-4c25-459d-82d0-194adfa8e605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7376bda-5fc2-4277-9beb-42b5f50fbc18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19af75c-7557-44ac-bb84-0145ff7bbc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03e3bf9-53bb-407b-9569-d09df28c8790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f44e23-9803-49db-bdc9-c0c295403c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81326f2b-5c8a-45cc-b2a7-401dcddfe90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5ef6f0-e87a-41aa-b5ec-db65651308df",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b9702b-23d6-48d1-954d-1fbbabc1883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f22a80-254a-487a-bede-8ab35c6465df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40ef382-d323-453c-a97c-d88a683bc797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e80c2a-8369-4216-98ab-4dfbce6200e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8048244-70d8-4afd-ba79-25fbde47b37b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fe8aa3-1c60-42a5-bd55-795cd7bd49b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07d1be9-1861-41f7-bdd4-e583e4c209d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85c5118-4858-478a-a913-c65c088a3be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f2ff4c-255c-4bb8-905c-b158b3b60146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f13537-bc12-4770-83c2-848f4f8ae755",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afd86eb-d457-46bf-baff-3b6069fefc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b28b3e-8f1e-4b25-a21b-194c46bea1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0ebdad-a61f-470e-b1ee-25a09a2b96e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c11393-feea-46d7-aa23-2f0016f4af8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e076d5b-ee2e-4b5f-9c82-2b6f02731ec8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e5743a-9be5-42a7-a744-61ebbfc16549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82391f4c-3baf-4ba5-9835-c6a909fae52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7cd550-1516-40e9-bb93-c8b726fbd13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf106bb-1ad8-4e77-8f25-41b494ecc29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f178f2b-ff6e-4155-8d8c-d42fe5769236",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd939044-6915-4672-b94b-c00814cc214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb0e597-42ef-410a-93e2-13add50d7876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7684ab1-5b64-432e-a31f-4976a3c41e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a6b0a0-8617-4cb3-82c5-f9cfd985bcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef839ac3-d6ad-416a-a93b-33c3b18ce75c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff47b3c4-c5e0-498d-85c2-e9cdb1fb1c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d63e40-226f-4164-a4af-0cf2c2d3057d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6340bc1-7c49-4779-87a2-011357b068ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d69e13-6cff-4db3-ab0c-efa6b90e3b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3779e5c6-8665-427d-98f4-f2c173a8e0dc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3903ec25-666d-4074-bb76-3c52a7a06adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848e2da8-9067-44e9-a5e1-b64725292134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd335d81-eaea-41f5-a841-49019121fd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd757d8c-15cc-4840-bc93-4f4094d6604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1923b8a3-2bff-4e37-8901-fc23caaaddf1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d498b48-956d-4ed9-9c59-601ec3480baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b1773d-b61b-4705-aad8-6f65fc47250e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98fdc49-003c-42aa-b99d-9ee41bb30e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa53414-ade1-45f1-acbb-c7dbd55f607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc726216-55da-4b04-b426-2548f2e034f4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41eb8131-c6ee-43b8-9c5f-dc6aecb627e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0656dba8-f87c-4cfb-919d-dad2458d9af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca40766-f945-4203-bff4-e197bca5c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5fdc45-7c3a-463a-bc7f-b96082e3b2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7779b57-7bcf-4a22-9e06-0efda6df36db",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce793549-9051-4a96-9fab-8e207abba747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd11c5d3-73ce-43bd-9cdc-a93c2c537d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe89ee3-7b24-41d9-8a18-8a55a016a2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22be4c3-beda-4abc-be60-f7b40d3f20fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00335704-507a-4e9c-9647-be455d061f62",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbca7342-d507-46f2-a294-5050d9fd902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08379f5-9a54-48fa-9ebe-be6e92c3a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0825faea-6cbf-43e6-9efd-3e0a07c42e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ffba1e-81e0-4a03-8c26-3b9120850b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d292fe2-3b18-4b83-b395-d520227fd089",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed7800f-53fa-4d0b-968f-e00002c83d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dafb01-2134-43c4-95f7-962c9216b767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b6b0e-cdcb-44e8-a725-6cd48d90f8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8abac7c-c76a-45e5-afd5-18340d3f5a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6877f22b-b2d2-48e1-a7e1-edd8dec04a80",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189c974a-1ade-4eb5-aeb4-51834f931ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5383f934-170c-4bbc-a75c-4cd77744b180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec54567-0b7f-4b13-9238-71e87179fee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81261bc0-0b3a-4327-88ef-bcbd0913285c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4dc83181-e7ee-44c7-9c9d-807479e6f9a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0e34a80-b9c0-4ec0-a805-00e7b8916f0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48caa7de-3e22-4013-8bdb-ed518ac021a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "adb8b24f-a26b-495d-abb9-0bab029bf0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32709057-eba3-4f25-ad73-af62b7ee089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12e7b24b-f6d0-4cae-997d-cfa8aa7589f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abda6f20-a48e-4290-b168-6c2fad18d0be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b67d278-dacf-4681-84a1-88d15828b3c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9afd2c3c-2c96-45ac-8a5d-695418301a55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82f09be7-ed78-41fa-942f-c7340b693d32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc86cfbf-9f60-4c77-a03a-a2d4bd64b11d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d629943-4d19-441b-a24e-bf943dc3c041"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3c6fe70-deae-413c-9b69-f49036bd53ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98fec71c-6626-45d9-9f58-4d01e86ac982"
            }
          }
        ]
      },
      {
        "id": "7d47427b-1040-4de0-a24c-7b610be87149",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "460c255d-8734-4f63-a979-e21743b34b51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ea3c1be-7929-4cef-a174-64b82441a6fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02e6f945-1dc2-4d09-a3c3-9b269459220a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a65d049-e951-44c7-b2b9-c006e270f949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b630fd20-5b7b-44af-9f99-e645777d053e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63524e19-2a07-4eb5-b4f9-e3fe32539e50",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6da7f5-eeee-4bce-8a66-0870c461a8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b1b9ec-8498-4357-b401-ce4f3c976108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c07f272-85f2-422c-abca-042399f45dd4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa6488c-b963-4a31-a7e3-35a706b89b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3e68d0-06d5-4736-8ca6-fb49908732ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cfff43-55af-4f07-ae87-e28c4f2e5100",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9d5c21-1397-41aa-9470-974a1b29b6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8319639-66b0-45de-8878-e5025113c218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460420a0-7668-43f2-830c-382d5b1ae22b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b24c743-257e-400a-8a1a-693d45bed402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9de3363-667a-47df-87fa-a3da6b50b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fc5798-ad9b-481f-823b-d6ac162cb957",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be18e132-d3e0-479c-a5b1-e0fad7aa6a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccdcb04-b793-410d-a4df-3dac544fa7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c918779c-d0a8-446e-85b7-69505b5b01cb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2076abfb-4d6f-48a6-808d-8494c99bc774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a421c9a3-aa60-4039-b68d-bab32efc2143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ebe2a2-5a26-431c-b8f1-61a337517608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ca5489-1301-46ee-b925-7ebbdf71cc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2c4054-7912-40b3-a9a5-42b43f493d39",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b41bc08-f44f-493e-8edb-ea4646bc4fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c50f50-a0ab-4034-ba76-fe93acf12970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25741b78-be4f-4f05-9756-3d7bba040085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4efcc8c-1f12-46dd-818d-408eda161d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15683f6b-ad4f-4a09-8596-37d2f789629a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c802ebfe-a488-4ccc-b280-f3c80924f8ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6f4555-f14a-460d-88bb-d2b37e3baee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298701d4-7c39-4447-bc27-fe1e2b4630e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e336cfb-8698-4c3a-8a1e-13388ec4e2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c0792c-4bfe-40f2-b0e1-f917614900c1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd12bdf-1841-4cd6-9221-73dc9b5427bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c795d1-44bb-4151-b9f7-2bce0dc64194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb37a397-a3f6-4580-9535-21c2e2363cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877ea3de-e7d9-48d6-90d5-d445b14235de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3f522-c608-471c-9f24-b28f5941fb62",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dc7420-7de6-4ae3-9af9-5d8f216342f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958aeed4-67b5-4246-b8e5-a27eec06887b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0a1183-0380-41f1-a736-5ea02ed8158c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5438504a-60cd-435f-b88c-7356333f520f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935ac9f5-f939-496b-9f8a-44b225e5ec30",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0338dbcf-98c2-48e1-ab3c-029dbb3c79ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5055cd-1180-47af-9b16-062b457e3cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d21f480-6bf5-4459-8e9b-562b56a522c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd4f021-1157-46f9-8b84-fd447842d9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997325a8-888b-4e08-82ed-525a60769d20",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416ae122-7fda-4b48-a0c6-743d2a6a6ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f5ab9e-5750-478c-9358-7498a54039ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b65d1c-1e59-4eb1-9161-eeef92719a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f174c1-55ea-4399-8288-7c484890af95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d6275a-71c3-4af1-9aef-f023403261db",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9d7e7f-8947-4dc5-ac1b-2517ae1264d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b89971db-6f1d-42ae-ab1d-8f0ef5b5b679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81fd889-0e89-477b-9f64-11be37bb1ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bc7945-aa7a-466c-8085-eb7fdd64a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efab4821-14cf-4097-bf1b-6f57947e3454",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e381dc-efb9-4ee3-a3f5-97949735af60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7dfa50e-007b-43a3-90d1-3b14e1b871fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aeb9da-3c38-46ba-ba73-644eacd4f18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2990a275-b9d9-4b6d-b8ab-b987ea4714d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec2c1de-de3f-4611-a2e6-897feeafd08f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015d5064-a07c-4de0-bb18-bb58bc06e60e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c88f651-b217-4b28-a209-a4385295a9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520e1c0e-2aa5-4c0d-98f0-bab8b36d698f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba8d08d-c16f-4360-860a-a6900bf8cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8876cb17-18c9-4e1e-9026-ee53cb675231",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6da036-ae54-4b9c-acff-babc0b81c8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad34ddc-9f05-4c63-92b0-8689d755487b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb099158-ed2d-4897-892e-0817203caa25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3fd2b5-168b-446a-a463-c4f381c29d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4484d475-1ff3-415b-b597-8280594e9a71",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f0183e-d73d-4699-8239-2e8a4219b756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e784a8e2-7702-4429-b98c-042f2fc6be12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec9857b-5f54-4f45-8e66-8b75f374c8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257c2165-2f5c-49f6-9a39-22ce2ee3e9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fda961-6d4d-494f-9c55-c3ccaa7820bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66517b07-f90e-473b-9080-a6353e869775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f40002-5a92-4060-ac6d-f4c9eace27eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985cec1e-821f-44b2-9355-6a0c7a32c5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc382c4-e0a5-45d6-8f27-c1a4de9bf67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc567851-6534-4309-9222-7426c61cdb07",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba60fab-8439-448f-9194-f2f4771a9518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2fdf50-14b0-46e9-bd86-bcb8e258d78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86b5e3b-bb5d-4a70-b73d-bf546f84b58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66cfa6e-32ec-4616-a5d0-bb8295f1316f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932c32bf-26dc-4577-9f30-1955465cf3bf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffe1b24-615c-457b-948f-69ec18a6e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123fc906-955c-4035-aea3-d49a90236009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3776c843-35a4-4b27-ad80-762fa5fe67ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a217aeb-6a9a-4616-a09c-9b4ea900fc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a7a39e-7cf0-42c6-ade3-664b9c096891",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67315ca1-eb80-4144-83d3-b317f5c0307d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a02fdb-45b9-4f43-923c-a4387e95e6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4219c8e6-fbb1-41f6-a0b6-701b61c3be32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7728507b-e6d9-4370-828f-99a0fac16124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d487c2-cd64-46f1-920a-a76cd50e0fe2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2112404d-1dfb-46f5-b91c-f062c8beb1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b1c084-6180-4246-a31f-7027cc401202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8b89a4-922e-4537-bf60-1b4adaaf9f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0dad72-8dd7-4a73-9fe9-d698069227dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf26c7f0-4ab0-4b97-9755-16497b968343",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cfc2e4-703b-41af-a2d5-9a556cdb04d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c546d854-baae-4dea-b79a-c4f88f586ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4e3cf6-925f-4cf3-89b9-10ba26933d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a887be-96b2-4951-81a1-5dd42fd04ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3b5bb6-5f4d-4953-8d45-483deebe3c89",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2789582a-9a44-4e16-9fca-8f1cc0f7ab15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8431942-8aac-45bc-91d9-b390fad16bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809fd5e7-ff78-44db-8318-4741cd0a2dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0647cc88-2f52-4c9f-b101-23961d820ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96d8156-ec58-42ec-beeb-362abc723471",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "face31df-c0e4-4a47-9363-55ca0c88b425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3328b01b-577b-4cc6-8f87-49a8dd877e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cbb76e-53e8-4084-a6ff-30424fcb2d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee38535-f4c7-4b4c-85ee-5773ee65babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034d0df3-7126-4972-9312-73784d21d203",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43daa4bd-a332-4107-9f6f-55837900b6bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3feefa1-1a96-453e-a4dd-565c4a76856e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7a4c3a-cdce-4d29-8eec-e9549dd2964a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f163e-f580-472a-91e0-3a7b5cfb9886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ac0278-00c8-4375-913a-3f5c564d501c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2592a0-2348-4c78-ae71-12fd819566ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbb4b34-7a2d-4456-b06d-a11a478c10da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61d54b-ed53-4d76-a150-b9fa7363e267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f7acb0-1211-4891-afc8-777df86792de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8674fe1a-25b2-4b08-8ae3-169596e74e37",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e357d49-5133-4a81-9d2e-67f11dbbba87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3925149f-55ee-4397-8fbb-49fb5ab6bf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0c3e93-15d4-4a28-99da-985db9616371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efc49c3-8feb-4312-a688-ea9e2cb11409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45a5fb-dbfc-472a-bcb5-3d4bce4e8cf6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb042a1c-0440-4a12-9bfb-3a5f141f693c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e804a9d-e3ed-4f03-85bb-7cc56c6c4d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44438f96-f985-4397-9214-a039a9284dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33627e52-5ad3-4543-af67-8e5ba6c82acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e60913-facd-4072-be4b-75ef3fa60c04",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b1165-0374-4f35-852c-ef5ffb5bfb8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e264603a-fbc1-4c96-821a-8e645398055c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dbc205-5a77-4bd6-986c-f7777499253b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77190187-f89a-44b6-b4e9-6eb822e378d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f192e27c-03f7-4dd3-ad77-9569416bfe0d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6355a509-bba3-4aa5-9d0d-f014b2968c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a786133a-b2a0-44aa-80ff-39929f132821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b74a01d-f66f-4ff5-a192-0f66cd431cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f25b5fd-7787-4ead-8b3b-3d883fa48a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa90058-7a2f-40a4-95ef-796a4d58f9cc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51066a70-f27e-46cb-8aef-522ad46d19b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb0367d-5ee2-4446-b737-f45ea77d6392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d9193e-2819-40c6-a381-8efd070e770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a3b504-9676-4e74-a43f-1fb4fc0f5e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a2d19e-36cb-4963-9c5c-db69507fce72",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1f21f3-4283-48a0-969a-10a3e7885ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65805cbb-8de1-4b27-8e8c-715060572183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df49b3f-3670-4092-9639-7459cbf1bf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c446dc-156d-4d52-87d7-43dc31a70007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f40244f-a70c-4447-b954-5491ce40cad2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8560276-dfc6-498f-b769-aa988d5784e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8c3dfa-127e-45a4-93d5-1511accb321c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e69590f-12e0-40ac-baee-f580e01f0fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eea194-489a-44eb-a3c5-8ba584dd495d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80f68e0-4c8f-43cf-93f5-7e5335086668",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203ceeb9-16d7-4ac8-97d1-0991cd04d6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cc8121-bff8-4602-ac27-0b2445a2efe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ffc760-960a-4484-9c89-a9f882cf93d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0327ad-0fae-4852-9cc4-f16208feb0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c6c31f-c012-432d-a6ad-e7a4814e5268",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ef8a58-112e-4fd6-aaab-cce580ac88b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b50ece0-e870-4596-b1a7-344dbcdccc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba7efe9-52c0-4ab0-9231-be583bf5a8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2068322-33eb-4ed4-8afb-deb0ecc267f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609094be-c745-4575-827a-085b7ba806aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8f27b-0b38-4ca2-9834-8c58d3e7bb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ade92c1-da03-4373-a815-c3c99b3f6897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce4fa3e-996f-47a4-9e44-df302ebaea96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea00e04-6756-492d-aa2b-92913abb3cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaec5d7-2524-4a13-8ac4-9f59cba79ba2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d46417-c7e5-4958-9f7d-4115753ed8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300f9222-f1c9-4cab-9370-f9bb701d0003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f1525-a201-4bf1-8eb9-3cad79349278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610a6c2a-01d6-45ac-9a21-1d386aaf356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e474610-1ce6-4ccd-9870-bd9fb12d6949",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f39e807-d6a2-4557-a7ea-284e76c0b488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afaaba4-9518-49c4-911b-b4c1124c63ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af88441c-b7c1-4226-b1e1-6c146db43d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e975765c-1143-4ce2-81df-bc5c7c8423a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2ae3ca-7988-46ca-b965-e9f645dcc9e3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ecb0b9-25a5-4b2c-84b4-c2c2ca236313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b913753-6726-4b2d-804a-e2165503fef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f535541-3fa4-431c-82af-b24a74d731b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7f1fc7-bb3b-45dd-87ef-f2e32569bf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db6007b-2729-4fdb-9d9b-9eaed1019f3c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e76e792-9abc-478d-b486-60bff1d36b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b467ab9-322e-46a5-9a83-0a235bfed73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f52993-2a1f-4f30-920f-0673a46bc321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1717bfee-a69f-4642-be17-a134b07da22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3adaeb-7d22-4a3d-b2d4-a6cb7b286c26",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6371f86f-59ed-4735-a0f1-49f17a43bbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29edb432-8920-49a4-af13-115ce8ac796f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4101fe78-1b24-4d25-9d4e-88adb3f12a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff75fb3-ef90-4477-bba4-59a209581b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2e2349-07a8-4934-b39c-1d455dadddc1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7171a37c-232d-4ac2-80fe-f88fd4d5e252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62915374-88ff-4b6b-8b70-3984b6b7b1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e140505-69ab-4b62-95ba-e50d58773de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92dc3caa-91d7-49d3-a0fe-b38bd588ad01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30951097-bd20-4ad4-8be9-4513bf76e384",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f304fe83-4935-408e-b5d5-0751510261f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f76ca2c-cd76-438d-8249-a181f5104a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359d74d-761d-45a1-b8fe-3b92718ee59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcaf80e-a2e2-473d-816f-2982567ee281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25719e74-016f-40c7-be1a-71f4e5416f19",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47256fb-277a-470d-8ae5-7bbc8c775049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66b3458-06fa-47db-8b5f-a9746c1e7a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e306d88-1e65-4228-a8c6-f4bb27c7f591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c640f-ffd6-4360-990e-c27daa0b8b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e9406e-4142-41b5-9ead-bb3cf24850db",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f4d349-5e50-4500-8641-547a84a443f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dab1f42-d030-4928-ba50-934583282f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e4be30-8a26-452c-82b0-df5c2f70c7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7157fb7-ea5c-42e1-9e3d-31f6b1ed1b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745821f3-84a9-487a-9a2c-d29318954aac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77438f2d-027a-493f-acd0-7b3ef1028223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150e0ef4-1d6e-4d71-806b-e43e8f2dbba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a75ef8a-329f-4672-805f-55acac173756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aa5e39-3516-4d64-a977-9a7aee1db617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8fb858-e143-4e49-a2cb-e6c42cfd7087",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3379e66a-c3ce-4912-af11-7a4ddf24f5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44f4a60-1fd0-43d2-8e9e-0d47bbbaa51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61183d76-c2a0-4b89-bb92-505c025c6456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd32a55-2106-4b9c-8ccf-1835dc7bdffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb35a2e-e5d3-42af-a11f-590fd6bf0f2d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836b064f-7e06-42cc-bcc9-1021bb0ce58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3977a993-fdd4-4a1b-b16f-568ba14aa4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e57b4c6-55aa-41ea-94cb-3d846c1471e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22be0745-9317-4884-b551-73b146e5ec07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698df62c-f1d1-4853-b116-f702facb6202",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7477843-139b-4ec7-bee0-1b5e006c5d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f17389-0b61-43f3-903b-98db3e36c24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ce9106-1410-481d-ab20-92156493e4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbff34f-b50e-4ae3-98cb-4da0ceda3ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e0033-b6f5-4518-81dc-7cdef89e7d7c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87d1a74-60bb-4fa0-93a8-bb13db4f32d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a0c2c6-f402-41b3-a6dd-000b44bd6d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c93b635-be4e-4fec-9016-b9cd245b5358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd22bf1-1092-4855-89bb-fc90099af1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c6d898-9ce9-4fdb-8ecb-55eece229d67",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ecad46-c342-4705-bb4a-0e70dc4af291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84239a7-6427-452b-b04d-f24e8ee1f10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d17cff6-4fe4-4f52-9516-111d5c58205b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820aa2db-9507-499d-b7cc-fa7c898e6f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1321cab-7afe-43c7-bd69-cab7af7ed39a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ddf8a0-67ce-4a4e-b139-ec25ea699130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd31694-7386-4845-b551-d1aa2ddc48c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eef9a4-f8f8-43b6-9ffd-9eb1b079281b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaa661d-f836-4ef8-b296-c437c621ff05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82aacfb-12d9-4d9a-b80d-aef3c5910bfb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225fb2b0-d9eb-4fa8-8398-5d9e2615838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3c52f8-9ecd-4bac-9cb8-571d3eaf2f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f77d68-16f3-49a3-a72b-5318daee59cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46254d3e-99b0-4eac-a0aa-97e23da0582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ffcb53-d0bb-42a0-9961-b2385a2b4db1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdce288-2ab9-440c-90ed-944bcf426bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90af610-51f3-40cf-a8ba-579670d0fc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012b096b-fd6f-4c8b-a85f-b562e50d197d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a938047-33b4-4436-aa6c-3d4ca173502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e526042-af26-4465-8a02-df9d613f8cc1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a3bd34-fc87-402c-b259-6f21c171b46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4491ec78-be90-4f55-9501-9632bec8d9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cf32f9-6af1-42a6-a873-8fb3c85bc5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaeab1a-b7d9-4f77-8cbb-80028cf2bcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae0063-c0b5-4c5d-be64-bf4582dfe11a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b556c6-4e5d-4e6e-b576-794967900aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322e03e5-70c6-4892-823e-8feb8774fe5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b120ad-b978-4aef-b9e7-3282425aad33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c108e22-773d-47a3-9131-fc9730fcc5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867739d0-f34a-497d-ac48-5b5b4fc238b3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1952bf3d-0c79-46d1-9264-188508d93931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa98304-1214-4f6e-8d1b-874aaf585e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edc25c5-6c46-4ca9-8b73-1c3bf533d629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60674c4-7148-4a2b-872e-c4d5733c12a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f952c3c0-a1db-46a6-8a2e-0b0a1ac82bda",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692e2e79-93b6-4aad-a091-bdf12ceb90f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e0e1b1-b1b7-4bca-9c5d-662fc0b063f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69947230-b417-43a3-8ef8-57103cca8640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6553e5d1-e4e0-402d-9097-40d5460e6faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148c927-bf97-4e51-b51b-a76b72851459",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4182e2-5378-40b8-b78b-78631a8e80f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ea22b8-7730-48ae-8403-b5f115638194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7ec3f4-344c-4547-8ce2-bdab1c650333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1127ef33-f93d-4e06-ae93-549cf673f968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fdc5cf-d2da-4953-9f26-a1828fce2d60",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17672105-c5cb-4c3d-be39-daf2a7fabbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8092f8-093d-4e9d-962e-9dfb0b65d674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5bf4b1-5f2c-4db9-8629-9641ab98e621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fd07eb-28a8-4fae-8730-8344f43e2ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd1161-7fba-41cc-bda8-a8e4cb55dd13",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b44afe-dc1e-4957-abce-0e600e5eb2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e88b7d-4a47-4d64-abce-2e3eb2aabd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c5a750-4c6c-4844-a9f7-33ccb97df1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4931d45-1db8-4bb9-a287-3f8ec6eb24c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc5d4fa-6c8b-46a5-812e-15e149a78af7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ee837b-74ce-404c-91f0-08ca2fc950e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6076c9cf-aa1c-49a1-a1e9-09b62c3bfd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7908a8-9e46-4ebb-8005-dcee75a44e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e80f98-8558-4e9e-83f2-16383c2bbae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadd5534-ebe1-49b8-bab2-84113cbf1999",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd6f22c-fd99-4ecd-9fe8-b868e7a2f185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f7870d-1d04-4bb6-b797-5d00e484d821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3bf00d-ffda-411f-bd0f-cef5304ed745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8410abd8-ac7e-44ae-8ae6-2dee7f854fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189a2624-38a4-484b-a822-a333957419dc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1b408e-bf3c-4960-a07e-75257e37ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92529a3b-f29d-41c3-8b4e-289e4a08ea88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39433b7c-fd8f-4504-a808-47cd59ec1eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e8aad6-2f19-4b0a-83f3-8fbe1622eca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41695fb-c0bb-4ebc-84d1-38b2d55bb5b5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cebad25-5dae-4c06-b099-027a90f4b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b761a6-0b82-48fa-93c1-a7822227ecb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d40f9f-7a17-4be6-a2c3-664f723a21c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf68e0f-43e8-4034-946f-be44b70c650d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bd0d0b-2168-479d-b965-9743b24ac8cc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5932c30-e95e-4781-8207-bee996fea732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2f1b29-419c-4096-a91b-ab35cf5f75d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0b53c3-ce99-41f2-9fc0-1e4af64fc2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0d66a2-215d-41a2-b36a-037dc920af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fafe942-487c-43e9-9803-ab1dd10f572b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce55e634-979a-402f-8283-274231460feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a5fcef-d911-499c-81f4-ea9ef6f02049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbff5294-b20d-40e0-9bbe-2fe2807dd830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5698a7-61c7-4cb8-b59b-3bb0e5bbde64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2360554-4c5e-4106-863c-fd36eea3ebe0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a0fb9d-cd86-4e1b-af00-537f772b78d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109b32c3-6fbd-4117-abea-5f3c9c47b32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a789761c-1f79-4869-b66f-e492a2b2b845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c2bf43-213b-4dec-be71-a49e18051768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4c257f-9881-4ccb-add4-82b8326a0863",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370d121-254c-4d26-b432-7e526557a3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37b933f-2883-43f8-8bab-5472f797388c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b2b3ca-0929-4cb7-b0c3-a9d61b193b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ada03c1-8249-4a3f-91f1-236148767100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d331ba-8de7-4082-96be-2cf1e2d1cf06",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b73bac-1e19-4e52-adf1-8ff562776a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbe25cd-0177-414a-b05c-d58de29427fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e70da57-f431-4397-8459-155681f1800d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0bb56d-d71b-40c3-a8cb-dcb194e6a31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4db1a00-cb22-4fd6-b130-90d57d278d40",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e60de29-6811-4312-b5cc-8c9b7fbbc5ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd7e787-49c9-4f64-9e1f-f3a9d5ba0325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c111f1e5-60fc-459b-a8fc-f40542f7a649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6068e5cf-39e8-4038-a679-da185af6d5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14febc6-9561-4b30-9374-ed2ca07012e6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e3a93-e6a7-433c-8f2a-55c65e1af600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00b4afe-7f56-43ef-93a2-c2aa0bdc68f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea014b36-d276-474a-bc45-43e58ccf375b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e988b0aa-c966-48b1-9e5f-53806f62392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867eff44-b92a-421c-8641-8a3d516c7ce4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a609d30d-f621-4409-8e29-4d3d5c4c0f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c3c687-95ee-4e60-b20f-7764049581a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759f8e51-24e8-429a-a104-a868f5f59060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4918137d-d301-442a-996d-7239249a075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1bfc85-e4a6-44e2-9b53-3bd1004b9bed",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84e2c6e-9097-4432-bdad-6ad6ec502a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b55f02-cac3-487c-a548-27e165717de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69120b86-7e30-4be3-a4a0-87a10466056b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e494b6-dd08-4cd1-b063-096117a4c35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fbf887-af52-44ff-adaa-82b7cf00737d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a947e0f-1a65-4b49-a72b-99b93e923f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc472906-dbe0-4645-9b76-d18e04553db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ccfa83-8706-478f-8885-b1961cf2fc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c991b836-ec90-425d-924f-9e3b65b5baa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1245c4bc-8086-48b0-8a39-529507be47bd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f91976-847c-42b0-863f-e2f795e72568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853e76da-89b2-4806-b835-9c8094c41482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fafd3f-2f8a-4444-b248-dda33d840f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b36ff74-0ba3-4698-8e91-38ce6511081e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0564b3e7-92d3-45c8-a6db-83200542c091",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d75229e-a1ec-4bf5-a525-b52f138a0e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2eeea1-57c9-4c82-a587-2271a9223e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab20fc42-f15c-449f-b054-67947b7a4662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554ce505-e626-4011-a323-45dd6365db06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff5d6ad-1fa5-4ed0-b8d7-9fe6f731beeb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f678275b-82e1-43c8-a9f2-cba170a21b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01858cf-85dc-410e-91ab-de364305f4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4952b952-72a1-4a58-82cf-af9040ac3fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f14a0e4-b48c-4e61-9377-fe1b0848daec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319334c8-1a7e-409b-b416-39c73ccc5277",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94deb93-63ee-4bc9-818d-a57973b50a8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c1e57da-24b3-4b28-9f4b-5aea5f93e474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915bd182-dba8-4f8f-b746-4e3b2bb85640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419409e0-b7e7-4979-899c-565442b7a435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fab215-923b-4606-b751-3175b7908da5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af2287b-998f-4ca3-9f65-4ac631e1f03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6173ea3-132c-4c37-9020-bcc7906dd360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85012b89-29fd-4f99-b93d-47e67e378ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb3e1ce-e734-46e7-9ac0-346e5b781fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97aae64-120e-4e37-a831-d3b13aa7c023",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768a21cf-2347-4ca7-9318-19af6eaa67f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828ac79d-2897-486d-a2f8-076c6b36ddf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0159417-b379-4272-bdef-79c349b8b272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f0345e-2019-4cd2-8a47-472eb5af20ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa500440-d14a-43c3-94c1-e95a9d96e16d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf9aadf-3604-4756-a116-0883e0332aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54fc87ed-dc5e-4e21-a877-3e68d948a65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da37b64d-4289-4f72-a20a-3cf059c2f10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f6cdf2-c1b5-4dd9-bd7e-bf94a3b4e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84516f2f-6dc5-4f2a-b7ea-55d9fe637f1e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed021105-3cfa-45a5-b88d-5d5c74fe1c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a231dd-47bf-4eca-9f7e-8184ee1e03fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b1a883-415a-41b3-803d-0158f2525c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ac1901-7706-454b-8202-145ce6a6300e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbd2de0-591a-4069-8787-fa65a98930d6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5416ab-c8cd-4374-86e8-d766afb02949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cac516-2151-4c89-87b2-1c0f9fc1af4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da18b2e-b591-4a97-8435-191c1b336da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a837651e-933d-47f2-8c36-5e25f9e7b4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6d7584-7307-4469-8c72-0d4f5f4a14ca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373ccb82-603a-4b26-97ca-827256e3b5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc76a617-9df9-4a8d-9afd-c62e70f728cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b23077-c5e5-43a3-b9a7-cd027fbdaa6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db64b6b2-fb6c-43d3-8451-9d21f2c8d2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a298ce14-191f-4e96-a1f2-0e7bf8edcbed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f63b77b-efd2-4ddb-a83e-024fc8df22af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a51920-e7e6-4de1-a44f-8ea0a9013eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75554a2-0ab6-416c-91b0-2d1f887e0903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9feada-d95a-47e1-8977-bef507cddbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b64b24-c8e1-4eea-9b81-1f50a2a356e1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e833b9ca-3f20-4e04-93d5-310d1a8d418f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e02b2ab-4093-4e17-bbb4-dbbc1ea7366a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1c4883-f0ea-4770-9a19-80408d89f1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80940a60-2585-4d2a-84c0-fadeaf167a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a3d155-63c9-4fb9-b96e-b43f5cb691ac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf95c442-015b-47b4-8931-ff75caa13ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "186f91ce-d2be-4c26-9a06-986f348860be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f46038-945a-4f09-9201-ebeb1d6e403d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c45243-a738-4816-9e66-c354e3be5ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b19aacb-b7a2-45ce-94b6-45e3b87b6578",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9a1d21-4b9a-41b3-8ec7-d620bdfd2ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c418737-f702-40c3-a938-5bd37c8bf774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ccf833-e30d-47e9-8a5f-ca9d4f847a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a5ca6d-300e-4cfb-9733-392a6ec112bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56617b08-f652-477e-affe-1938eec3a21c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba444011-60d7-4e4c-965a-6494c0c67a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f4eaa8-2f23-4195-a8f0-163e5a5ddc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f7c8f7-b59e-423e-a269-b8142c2f40d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99506926-bff8-4d12-846f-511deed02f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f448998-364b-47a8-8797-530e13f14535",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe2d52-ac86-4689-b0d4-1562e7a32487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88cc842c-e4f9-4211-a7f3-c4531c09da74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6869676-7c52-41c8-9c27-f6163a4c259d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e93f4c-ee79-4ffb-8c15-060c09b7e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b92058-2ce8-4a0d-904d-bd2145c852bc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bd4584-5f20-4738-9d6c-1d45bbd62cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec84c7a2-68a2-48d2-b6ca-0197f3733788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e082731-c070-48d2-aeb5-87e9455215fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7330923a-8c57-4483-8502-8ae6d4b3ebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9760402c-5766-4666-bcd4-debd02338f95",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b4e6b6-8012-441f-beb6-e7e164a6223d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759b32fe-34bc-4fd7-b3b7-b8b1c5158ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166a8636-2e35-475b-9817-bdb9f3b7c10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb5ca04-e0be-4361-890b-bd8de680013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d525c066-3341-460a-b667-9eeac1e129c4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b44a78-7305-4de0-bf60-3449ab5354f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c545f7-0364-48b6-8292-8ce4e241c945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee77dbf8-32ee-43ef-9763-0f7711b48eb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3250dd9-0072-4fe7-aaeb-bc1bcd34f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53dd0c5-1911-4fbd-be17-6ad4c6549366",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89759ce-c3bc-4603-823b-6957ea1e1cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e22bbe-fe2a-455e-9d60-fc4eb33b4f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54ba4ed-ead2-4c5c-abaf-949a0c3709b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381738e4-42fd-494a-b11e-8b60b2e57c81"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "056f6c0e-c966-4943-a078-7652b59c03c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f393e475-f27e-4449-802c-0ae160bf1712"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6349aa2-0b22-42a6-98d6-5e9615cb3932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d77c0c2-333b-4ad5-9e2c-8da3b46f4349"
                    }
                  }
                ]
              },
              {
                "id": "ea811742-048b-4172-b28a-58c3294e5650",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1ac8d18-2e82-4a83-bb58-8eb08c04f70d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0599ad1c-2e23-4012-a621-85159c0feb07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c4fd3bc-2c66-4b11-961a-56c2b671fe99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640b69c8-557c-44ff-8f98-033d090551b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28b32313-17e5-4692-8a8d-ffc50b280d47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a785c586-0232-4b60-b4db-7623b1a814b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "957e76b6-8262-42ce-baf2-50152c808ca1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0542dc25-d0da-4155-b36c-cc02a1d16b5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c351d61-62ef-4cb8-9d0a-751088abd02c"
                    }
                  }
                ]
              },
              {
                "id": "69bdea7e-b426-4b50-948b-6ed291bf5d5d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b780a88-b787-401e-a3d2-6bcbb188b998",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57cf1f4-fff0-4b7a-9bb9-2c2cf7817b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7490fb2b-ac09-4532-958b-0592b69deb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9c242-03c7-4351-b720-bb989d92a357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a565be16-38b1-4007-b6f1-4ce7e0d0e876"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "343b1035-b17f-4c96-981b-d31d5d3814a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a488c59-ff88-40e4-bbd3-a2f172733a80",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2742a614-f3eb-455a-89e0-eb95c3c83bef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66b22dab-821a-43d1-bf80-84e113e81e4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "516d4531-e043-4180-940c-09c5d9fac09f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b2e828a-8ceb-4cd8-8d72-8a6e2506c48d"
                    }
                  }
                ]
              },
              {
                "id": "1afc7469-7daf-43cd-84f0-db5d0ac7d4a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d5bff6a-6ef1-4865-91dc-bcaf305178d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fdc71cc0-258c-43e0-883e-b771e2551f7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6eb3e0b-139c-4a36-88db-7fb8b65bbefc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfb9f486-6840-42c1-a260-7519bedf599e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67ca7696-2ffb-4dae-aefc-9e1e87377026",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2fb93088-3a98-4d4b-a623-1f6a677d1d8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60655e8a-2712-453a-880c-45e6255231b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3683468-a4b0-4b40-bdd6-4b88da0de4b8"
            }
          }
        ]
      },
      {
        "id": "7b5962f9-a68a-4bfe-90e5-07ce9cf052d5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c577790a-c247-4710-8d53-690d9252935f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a0917b6-7c6f-438d-bef7-024fcc78e587",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb1935b4-a069-4137-b698-55fc918dc93f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1b8b69-b133-43b7-86ba-18111c054a14",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4d196ed2-6400-4bb8-98d8-c925dde397ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798a1266-4805-4f4f-a3f8-c6d17e909666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20bcc75e-6fe9-48d2-afc1-d9f230b57a23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c753da01-2ea1-4937-a893-fa0fc4fcdae7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bafe200-103e-4f56-8dde-904bb312b3a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7084b316-8040-4376-92fd-b97ea92b5af6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c169b203-17f5-41a2-9846-f76e3b4dfcb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "602464f9-f35a-4e34-bce3-450d105f8f8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "362e4a5c-7e21-45b0-ba28-d711e4e14222"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ee0a4f5-8f9e-4405-ba15-83f7d4032d7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30d94444-b5a1-4b63-83dd-da67d253172f"
            }
          }
        ]
      },
      {
        "id": "59c0bdcb-f0fd-4a3e-9e89-fa6f8242bee1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7c197d04-62cd-4e61-807c-ed10ea5cc4cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7bacbea-5d4f-4adf-b5c1-d782a1e02086",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a784df4-6b61-4c37-802e-08eeb6cb766a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3babe1af-b341-4b53-801e-3fbd8a518db4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47f10e6b-d203-442b-bdbd-6d0b7499eeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe5469b-52f2-437c-a2c4-73ac2efe2750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4440f7c-76d5-4e58-ac99-c464665f2596"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "973d0139-b087-4f57-9160-5429cb64227c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac0d6ec8-a1a6-4ae8-a652-e8dac3b1423b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04bba2a-1fbd-456a-9182-8270b1cf7f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a106020-51bb-4319-acba-b02c00f797a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e6de366-ae49-4273-85ed-758e822d9fd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07c97253-4dfc-403b-b3f5-14ff3de94326"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0584b8f4-64fe-403b-9b14-0ef119592f22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc29a84a-a195-4dd7-a62d-57622e37c1fc"
            }
          }
        ]
      },
      {
        "id": "661fc71e-db22-4d41-989e-e057234210af",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "48f622dd-10d1-4584-810c-923302e36c40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6329941e-5a79-418d-8d77-99d875c35ad9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aaabd1d-95a5-4b14-b017-9f4e7b659bb3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05f7a57-c3ad-4c04-9b88-deaa9f9d53f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8447aa2e-ade9-4c24-abf2-443644338ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f72f3c-e65c-4199-9358-504d675bb8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1ce49d5-727e-4bc9-bfc8-20ba0303a2d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc276080-4b29-47c7-a289-b94643d0e5fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65fd263b-fdb0-4cef-9870-929aac5f3426"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08cf2dbf-b384-49e7-96f0-f82b97705f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8e27c4b-af28-403d-ac0a-81e64df74db2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95a2b084-03d1-4677-bcff-984cad3886d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec5a4386-99d7-4ce9-aa4b-45231b8a0d63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16306217-de36-4bc8-b54d-6959b1266e8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "169a30f4-1a3c-49e4-b911-1b47aa49b324"
            }
          }
        ]
      },
      {
        "id": "f50d261a-d31b-4eb3-93ee-e3b61b3e6339",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a1a5ea8-47d9-4ae7-a7b5-4cd2fefbc5b9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75f6b915-f863-4282-97ba-df329e540be3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "254b433f-57c8-4223-8a39-73ec31094974",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c3a702e-e8a6-478b-a1ba-aeece66606b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6de720f4-1797-4cc0-8223-9f794363cdfa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.9603174603174,
      "responseMin": 23,
      "responseMax": 11453,
      "responseSd": 763.3265741101618,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720744740897,
      "completed": 1720744778664
    },
    "executions": [
      {
        "id": "0c5f63b4-d823-4c85-9eb6-fd8875d55049",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "efca1632-ab37-4a9e-bb36-21dcb9460707",
          "httpRequestId": "5d9f5248-68c8-422f-893d-02d2ab853c0f"
        },
        "item": {
          "id": "0c5f63b4-d823-4c85-9eb6-fd8875d55049",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c4e8465c-c0ce-4d83-a5ae-d31346548d6c",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 0
        }
      },
      {
        "id": "ae8b83cd-685c-4250-b6b5-f25100d26a39",
        "cursor": {
          "ref": "71c5bafc-15a2-4a69-9f17-3dcda0e784cb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a5592796-aef8-459c-be23-45032bbb493d"
        },
        "item": {
          "id": "ae8b83cd-685c-4250-b6b5-f25100d26a39",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7bc909c8-2cb8-4176-8b8f-9d5555ddb4bb",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "14ccc556-9d1c-46d0-8679-2debe57e2055",
        "cursor": {
          "ref": "84e5f9b1-3d05-4b4f-b63a-12e63a64f9e4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4f10d5ad-6006-4c03-8326-56cb24f0ee9f"
        },
        "item": {
          "id": "14ccc556-9d1c-46d0-8679-2debe57e2055",
          "name": "did_json"
        },
        "response": {
          "id": "08759605-c622-46e6-8738-d1e8b4e7cdf2",
          "status": "OK",
          "code": 200,
          "responseTime": 441,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95746961-efd3-47b5-adc2-205468e505ac",
        "cursor": {
          "ref": "1dee96b2-c378-4bc7-974f-bd6fcc717158",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3d8f45bb-0332-43c0-85bd-4dddcdbb7998"
        },
        "item": {
          "id": "95746961-efd3-47b5-adc2-205468e505ac",
          "name": "did:invalid"
        },
        "response": {
          "id": "67903461-8ab4-442e-8e79-d72b7dba76a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 326,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95746961-efd3-47b5-adc2-205468e505ac",
        "cursor": {
          "ref": "1dee96b2-c378-4bc7-974f-bd6fcc717158",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3d8f45bb-0332-43c0-85bd-4dddcdbb7998"
        },
        "item": {
          "id": "95746961-efd3-47b5-adc2-205468e505ac",
          "name": "did:invalid"
        },
        "response": {
          "id": "67903461-8ab4-442e-8e79-d72b7dba76a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 326,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c583be-8026-4428-9878-61d854e7e7f5",
        "cursor": {
          "ref": "1bdefe3d-a2af-4523-b325-04930e7ab5e4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a6ee89bd-ca9b-48bb-b7ce-ef68c1209268"
        },
        "item": {
          "id": "a3c583be-8026-4428-9878-61d854e7e7f5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2090dc82-7f5c-455f-930d-e272add27a4b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4ef0b9-7ca4-4cde-82ca-3cd69fab330d",
        "cursor": {
          "ref": "66a3966f-bd31-4062-9fc7-3b543253818c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5ceeb8a0-e288-4a7c-89cd-1df580b82ced"
        },
        "item": {
          "id": "9f4ef0b9-7ca4-4cde-82ca-3cd69fab330d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3901e3f5-020e-4e92-a468-53fc77413ae9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab8ef61-be81-40f9-8dee-f61a9b7c276c",
        "cursor": {
          "ref": "8981ced2-ce31-4ff0-9087-cab7dc82b41c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fb00584c-55e6-45cf-86f7-cf9e8b87a57e"
        },
        "item": {
          "id": "fab8ef61-be81-40f9-8dee-f61a9b7c276c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "adc5aed2-eaf3-4221-a666-36f5b9d66ba6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 103,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc480d5-234b-486b-903b-47364061401d",
        "cursor": {
          "ref": "a58a37fb-fae2-4df3-af7d-928386b9b1b0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4485a70b-f6e5-44d9-907e-9c5521aa3dcd"
        },
        "item": {
          "id": "7cc480d5-234b-486b-903b-47364061401d",
          "name": "identifiers"
        },
        "response": {
          "id": "97e186a6-2848-482a-894f-38d85d4fc22f",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ad5a17-bfb1-4671-9fd4-ec66453f738d",
        "cursor": {
          "ref": "2325b1a4-7dcc-4cb9-a7c7-678af94a90d0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1ada8b3a-cfbe-4315-b6f5-ef8f4d2874fb"
        },
        "item": {
          "id": "58ad5a17-bfb1-4671-9fd4-ec66453f738d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f3a186ec-3bcf-429b-94d2-53db819fffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bccc865-9ba3-44b3-8e57-0bae5d05757f",
        "cursor": {
          "ref": "91edf0ea-5d68-4b65-be14-ca73c7ae3aac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "57225d19-07c4-4ae3-8c50-5d3c48631c0f"
        },
        "item": {
          "id": "1bccc865-9ba3-44b3-8e57-0bae5d05757f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0a4017b7-bf1d-4edd-874b-5fc8e81e6689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01986d1a-8c98-4395-8542-ae1c8a8889cb",
        "cursor": {
          "ref": "bc31cdcd-33fe-4624-8d3b-a631a3001e6a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "759f9498-ac95-44c3-a133-a28283e02646"
        },
        "item": {
          "id": "01986d1a-8c98-4395-8542-ae1c8a8889cb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3a33cb9f-1ade-40b3-af60-4ce36db8af3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f369a-a4ae-4368-ad02-a0c47e2dabf5",
        "cursor": {
          "ref": "99662e85-19b4-4082-bf59-19e0685e6d16",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7de9e903-7221-4c48-bac6-f2b3557ca153"
        },
        "item": {
          "id": "255f369a-a4ae-4368-ad02-a0c47e2dabf5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32dbc2e1-0953-4ed5-91a5-d8d2e6e40ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6becea-4424-4269-9a32-8eba52a75844",
        "cursor": {
          "ref": "f51ddf67-3ffa-4047-99be-767cf474d572",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "68915bbc-e4c6-4fa2-b4c1-616ec5328cf5"
        },
        "item": {
          "id": "2f6becea-4424-4269-9a32-8eba52a75844",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "13fd4cab-b01b-4b39-b5da-e22855310c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007fd147-9562-47fa-b9e1-a1f8c0d79478",
        "cursor": {
          "ref": "34c0c9b3-3ab0-4cb6-9fe5-c6c542653bbf",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a01facae-8990-4004-a8d7-ae2bc19c535d"
        },
        "item": {
          "id": "007fd147-9562-47fa-b9e1-a1f8c0d79478",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d0435295-d9d2-450f-962b-b91a91890b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6ce6bb-e172-4aad-a028-e6dc28d275dc",
        "cursor": {
          "ref": "d77ea961-737b-435f-97ff-a2f056a2c683",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2175fe37-5d8c-46fd-92da-cbaab84ccb43"
        },
        "item": {
          "id": "9d6ce6bb-e172-4aad-a028-e6dc28d275dc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f82cf00-81b8-49c2-8bb7-6013f6159b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f379c660-8889-48f5-b81a-efd7c1cfff33",
        "cursor": {
          "ref": "7804fdfc-a634-410e-9c30-82d3466b6f34",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d1ba4cb2-acb7-4eb0-a7d7-1bd6b97186f3"
        },
        "item": {
          "id": "f379c660-8889-48f5-b81a-efd7c1cfff33",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7e87afe4-009f-4179-99ad-f2f0de47f702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8b2e33-be27-461b-9dfd-7df0a1367aaa",
        "cursor": {
          "ref": "287395f8-24d0-489e-9880-d29dadf72d20",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "28adcf09-0464-495e-9223-3d4f6384583a"
        },
        "item": {
          "id": "bf8b2e33-be27-461b-9dfd-7df0a1367aaa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac6bfe83-ce13-4dc2-b6cd-c94f003ba58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b8b6f8-64a5-4e96-8291-853f738514d0",
        "cursor": {
          "ref": "01384da8-2d8d-4b46-acb8-c249c18b96ba",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1fa67238-44cf-420d-bf40-43242b1a1f27"
        },
        "item": {
          "id": "d3b8b6f8-64a5-4e96-8291-853f738514d0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bc5d86ef-dbcd-4c52-9c36-4c90a312e704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e90517-9ce2-440a-a8e3-52ca9f89904a",
        "cursor": {
          "ref": "f8b3b84b-93f7-4a58-8183-6728d96a4f3a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a7affa04-517a-43c7-a1c2-364418205994"
        },
        "item": {
          "id": "77e90517-9ce2-440a-a8e3-52ca9f89904a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b72af728-c2d2-4b9b-9016-41d6c304aadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d476b1-e7ed-4490-a92f-023448625b7d",
        "cursor": {
          "ref": "c9561778-f17e-47fe-8440-743e4b0af2fd",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2c8d0d05-652a-459f-9f4f-33196e8efde8"
        },
        "item": {
          "id": "99d476b1-e7ed-4490-a92f-023448625b7d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "73b6b137-651f-4af5-9613-ae4802d1c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d56bfe4-f10d-47af-95d3-89e4503b23ea",
        "cursor": {
          "ref": "71114c12-9996-434b-9c33-181ccb8e689c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "71aecf6f-5c3f-4417-bf97-d2946cca821d"
        },
        "item": {
          "id": "7d56bfe4-f10d-47af-95d3-89e4503b23ea",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0b02629a-5e3f-4553-a4a1-1cc2457ecb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7f3fd8-5f7f-4e96-a98d-6d03100e8f06",
        "cursor": {
          "ref": "cb57330d-4dc9-4f65-8dd8-df7714d35999",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa9ea206-36ea-4b8c-867a-9e197dc5a7ba"
        },
        "item": {
          "id": "da7f3fd8-5f7f-4e96-a98d-6d03100e8f06",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "43b5a67b-3c61-4740-85a3-825f50c5021e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e056e92e-327d-41b7-a9a5-14aba3cde351",
        "cursor": {
          "ref": "3c9e05c2-551a-4500-a2fc-d459e3b5fcdf",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "66611202-9c30-4278-9251-69b1106e7095"
        },
        "item": {
          "id": "e056e92e-327d-41b7-a9a5-14aba3cde351",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "95b86175-1149-4bb4-87ee-721f9c4ccd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb82e64-6c19-40cd-9568-1351d65316c0",
        "cursor": {
          "ref": "a436ab73-8321-4e72-9bda-312c0b62b316",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "392bcbc3-3d58-42ac-b43f-0b3e7ff9bedd"
        },
        "item": {
          "id": "efb82e64-6c19-40cd-9568-1351d65316c0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "35e182e3-dcf8-44f5-b5da-4e3c6e459a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a657ee-2d27-4d10-bf58-bd8263391961",
        "cursor": {
          "ref": "eecc00ae-24f5-4d5f-9bc2-bbb5a76ef8be",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d7f015f3-3b3c-4d8d-98dd-990d8ca8dff5"
        },
        "item": {
          "id": "e0a657ee-2d27-4d10-bf58-bd8263391961",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "20c73743-0ea5-4b32-b615-186ccca3bd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e44730-54cb-4023-927a-a5a815af0d17",
        "cursor": {
          "ref": "1ce15c2c-5222-4387-8b02-b0c6bde1e1a5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bc7c241c-769e-4814-8a94-6d338c6463e0"
        },
        "item": {
          "id": "68e44730-54cb-4023-927a-a5a815af0d17",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e7f3c76d-3379-45c4-8a83-d9f28d99fc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba057af2-fe40-43df-8753-18675fd77ef0",
        "cursor": {
          "ref": "51eb9843-6292-4241-a971-3eaf49537b48",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "090fe66b-21e4-4daa-9ca8-14a743281162"
        },
        "item": {
          "id": "ba057af2-fe40-43df-8753-18675fd77ef0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0a09da2f-aa46-4157-a34c-d6b353dae2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018b1e9c-c849-4c06-9d77-0b0c202943bb",
        "cursor": {
          "ref": "89afe0f3-7090-4842-a859-d74888a06d82",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "19e723a8-b433-43ed-b6dd-1572b1759fc0"
        },
        "item": {
          "id": "018b1e9c-c849-4c06-9d77-0b0c202943bb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e99b4d7d-5ac8-49a6-b6cd-5edfec09ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f80ac6-8ffa-4ed2-83e9-621015386ebe",
        "cursor": {
          "ref": "a6356613-f0ca-428b-bac4-2beb80c8ef60",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd0452bf-206a-413c-9c33-82d9957f3ab7"
        },
        "item": {
          "id": "e6f80ac6-8ffa-4ed2-83e9-621015386ebe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "edf5c55d-c16e-491e-9014-440ca9e67e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecef8d68-0d1e-475d-beb4-51278ab1c667",
        "cursor": {
          "ref": "11f14c18-fe2d-41ab-a41f-693c922398e8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d3cc1997-f2ed-4010-b366-a7a25a729a1e"
        },
        "item": {
          "id": "ecef8d68-0d1e-475d-beb4-51278ab1c667",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bf8049be-24f9-424f-913b-3cb1fc412077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678961ce-f53a-4029-9c9b-f7600a96f332",
        "cursor": {
          "ref": "66398af5-5d0f-4c56-a47d-d89a5d6b5d4e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f7089810-91c4-44b4-a1e9-5b3e9f36c4db"
        },
        "item": {
          "id": "678961ce-f53a-4029-9c9b-f7600a96f332",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a583ef85-ff00-428f-805c-f895c8ad527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47345af-3070-4435-824f-aee7f9a06414",
        "cursor": {
          "ref": "84bf8af0-3a7b-4558-b4e3-945486234839",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "209bd78a-e889-46ff-b88c-5e0670c1d688"
        },
        "item": {
          "id": "b47345af-3070-4435-824f-aee7f9a06414",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0fdefeba-1acf-445f-866b-d0bc157a1064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaf5e5f-d45d-4b55-9095-efd3c2d3a001",
        "cursor": {
          "ref": "0053aaa6-1c2c-4ed7-b987-f3df8f4caccd",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "98b73fd4-5e47-4fb5-ae1a-b858aff54bc4"
        },
        "item": {
          "id": "6aaf5e5f-d45d-4b55-9095-efd3c2d3a001",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a08a4bf2-d59e-4f73-b5f7-30ddde1977e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e51920-75f8-4440-90aa-dbecaf30e2dd",
        "cursor": {
          "ref": "b7bffe19-2e60-42cf-b256-8735cbbf7710",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6d165813-4886-4ad6-9217-378c3b251212"
        },
        "item": {
          "id": "10e51920-75f8-4440-90aa-dbecaf30e2dd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f44c9854-9c62-4c78-8601-8c3e434e51e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58ec04a-2993-4aad-8992-146144f662b2",
        "cursor": {
          "ref": "d7967a6e-d87c-4492-8921-489355cd3bf5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9cd03b9a-8e7a-4d34-99d6-f6cc9d122268"
        },
        "item": {
          "id": "a58ec04a-2993-4aad-8992-146144f662b2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "11094142-8a43-4c3b-a923-1110d6ff013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fa7d22-e450-49cf-ab99-071e20caf0e9",
        "cursor": {
          "ref": "cecfdbd3-5148-48a1-a6de-f0ad6ae07c8d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6b4a7a15-548b-433a-87aa-b7731d4d186f"
        },
        "item": {
          "id": "31fa7d22-e450-49cf-ab99-071e20caf0e9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c139b6eb-c0e3-4b72-977f-2f62a20c5456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd39500-68ff-4a67-a08e-5f87e2e44687",
        "cursor": {
          "ref": "c92882c0-95b4-4b9d-a0a5-4750a802dd25",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "89019895-646b-4229-aabf-86adb234fda2"
        },
        "item": {
          "id": "3bd39500-68ff-4a67-a08e-5f87e2e44687",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "602c99d4-8020-4fdc-b40e-90e2a9e10ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416d0b54-c2a3-4d97-849a-92583bdd2762",
        "cursor": {
          "ref": "bf1d30d5-6f2b-43ab-8589-8a08449fa2d1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4aefd063-475d-4622-887b-cbdc232d7897"
        },
        "item": {
          "id": "416d0b54-c2a3-4d97-849a-92583bdd2762",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ae35b2e3-1e91-4a2e-af82-46c6243a7003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c4af9d-b563-48ea-9495-f95a591a1875",
        "cursor": {
          "ref": "e37851cb-9b93-4982-88a8-d0a956a6635e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "212c25fa-4215-46e0-8062-8e5be9171bc1"
        },
        "item": {
          "id": "64c4af9d-b563-48ea-9495-f95a591a1875",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1c21edaa-86aa-4ebc-9919-bab10359afff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee65698-14e0-4f30-81d1-6c03415b0000",
        "cursor": {
          "ref": "b191981a-1a46-44e2-88b5-cb8d56da68e5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0ac320bc-8bd0-4061-9629-e5001c5045f3"
        },
        "item": {
          "id": "6ee65698-14e0-4f30-81d1-6c03415b0000",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ba949bab-5f33-4efb-a0c9-6829b61932b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddcaf72-e5a3-40a5-affe-43570b5895a6",
        "cursor": {
          "ref": "e018ae56-98be-42ac-8086-689859172a03",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b480ef44-893d-4187-8458-d4559ade1978"
        },
        "item": {
          "id": "6ddcaf72-e5a3-40a5-affe-43570b5895a6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a5e09433-1f9f-4f3d-a9e9-d02d13699d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703d0009-0f0c-496c-bd2a-8bf99221dc08",
        "cursor": {
          "ref": "3f60599d-cb86-4e3e-bcb8-1625ca5c1843",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b4c7b62-a570-4ad7-b84d-78973cf7a37c"
        },
        "item": {
          "id": "703d0009-0f0c-496c-bd2a-8bf99221dc08",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "36db4151-5d2c-41b7-af20-66dae32e5122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44948787-f3dd-4f6e-a11c-43b9a73b6ae8",
        "cursor": {
          "ref": "e1f86bbb-47db-4abb-bb4f-2e38286c91a2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e75742a-2ea6-441a-97f2-7c20bf3bfb94"
        },
        "item": {
          "id": "44948787-f3dd-4f6e-a11c-43b9a73b6ae8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3532a814-228b-4a95-819d-6b075013fcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f4a069-1b26-48ea-8506-06400df375d3",
        "cursor": {
          "ref": "856502a3-e4da-423b-b3d7-f5193e5ad62d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ac5ce5c1-d80a-4f70-9b75-6fcb0f0c4735"
        },
        "item": {
          "id": "21f4a069-1b26-48ea-8506-06400df375d3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "333a7a88-7548-4358-9570-bf59983d51fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c85316-2793-4db6-96eb-92bccb2fc504",
        "cursor": {
          "ref": "65c88a40-4074-4d82-8aea-d01add31228c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "47fb65ad-882c-4564-a651-6059e0cad3b5"
        },
        "item": {
          "id": "e9c85316-2793-4db6-96eb-92bccb2fc504",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1f627962-58d2-4bc9-bb87-06c80f74dbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a97ce27-f919-4124-be73-1381ebab8cf1",
        "cursor": {
          "ref": "f81335ce-869d-4220-869b-bcd2f74b388c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3636f9a0-7d1a-4af0-9dee-d7fac58f728e"
        },
        "item": {
          "id": "1a97ce27-f919-4124-be73-1381ebab8cf1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "feb016fd-2e2b-43f5-bfe5-65c4131bcd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d7992-3fb0-4ab4-a50f-c7bf8cd6f688",
        "cursor": {
          "ref": "e05887b8-453a-4748-a0d4-b6b7831ef297",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "56dde042-08a0-4344-96b2-6a5b95862eb5"
        },
        "item": {
          "id": "136d7992-3fb0-4ab4-a50f-c7bf8cd6f688",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e2bf40b5-a213-4de6-9d33-0d3fbb360965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0210af7-d7cd-456e-8b5a-2a75cf736af2",
        "cursor": {
          "ref": "5fd885cc-2e46-4856-833c-dc2462134996",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "68cf75fe-7a41-4bd9-a0fb-76a35c4431e6"
        },
        "item": {
          "id": "c0210af7-d7cd-456e-8b5a-2a75cf736af2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7b5202fb-15ee-4e49-810b-c5f090c0e522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d71e30a-70d4-4b2a-b554-83b3d06605c4",
        "cursor": {
          "ref": "c9bc82e5-a19f-4fdf-af40-4fc19cc4aa53",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9007b7ea-e49e-49ff-9c29-6c8df3ef0f6c"
        },
        "item": {
          "id": "6d71e30a-70d4-4b2a-b554-83b3d06605c4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ff4f777f-73c9-468e-b4c1-77052d0e8488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c158765-8b08-4074-9ffa-abf02788bc8b",
        "cursor": {
          "ref": "c7058864-7bd4-452e-ad04-ff6e16b51663",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "31dc62b9-acd2-43b1-9afb-47157b416aed"
        },
        "item": {
          "id": "3c158765-8b08-4074-9ffa-abf02788bc8b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9deaa88a-0ef3-4807-a0f9-a0bc507c9559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb8954a-f78d-47ad-a506-473d36b0650f",
        "cursor": {
          "ref": "ee666428-63b7-457b-a6e5-a392686cb1e9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bcad2d38-b3e3-4a25-906d-ae9a925f9485"
        },
        "item": {
          "id": "7fb8954a-f78d-47ad-a506-473d36b0650f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0e5d9e3c-e4ac-4417-818c-a36eb7e97aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99e51f0-7245-4f4b-87f8-2a0510e50964",
        "cursor": {
          "ref": "5df5ec2a-2532-444a-8920-8b19d18a16b3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d23687e-f8b9-4283-ba7f-bce8f4c9367c"
        },
        "item": {
          "id": "d99e51f0-7245-4f4b-87f8-2a0510e50964",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9ef9e55e-a826-4592-9057-7bc24769b48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70210a39-a93e-4bcf-9f73-bda75b563427",
        "cursor": {
          "ref": "a27a327c-5dc2-4a15-8f59-55ec90cd6a74",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4bba83ff-4e88-499b-8386-f11d917d316b"
        },
        "item": {
          "id": "70210a39-a93e-4bcf-9f73-bda75b563427",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d36de87-ea4b-4061-968f-23bb5f85417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e153130-dbd3-4d85-80d3-3f246d772e65",
        "cursor": {
          "ref": "85010a98-f7b9-462b-bb50-8f7ac86e40b9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7d7f660-2eaa-4d46-aa6c-76835092c703"
        },
        "item": {
          "id": "1e153130-dbd3-4d85-80d3-3f246d772e65",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "20041f25-dfac-4582-999b-fd2967168333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a63489e-1086-4824-b4a1-81b5d688ef36",
        "cursor": {
          "ref": "68b1bb56-301e-4914-a8e4-b4aa03d378a8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "288a4f61-b52a-4a45-810e-1be5ac81f76e"
        },
        "item": {
          "id": "6a63489e-1086-4824-b4a1-81b5d688ef36",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9421fb12-ce7d-4977-a38c-b45d7d1b2aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dfebab-16c6-4ed9-a044-f5569c6ec647",
        "cursor": {
          "ref": "44025edf-5ee0-4e25-8840-3c04c6d98536",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0479511b-3caf-4bb4-9f0e-83ff23f7862f"
        },
        "item": {
          "id": "36dfebab-16c6-4ed9-a044-f5569c6ec647",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8aa9f370-1422-4397-99fb-4104cebc80bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce50be4-c70e-4503-aba8-5c81d9362196",
        "cursor": {
          "ref": "c4500323-dd0a-4bbd-84a2-1172d1717a50",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "933c1cbd-e953-4e15-ba74-6037ee2bb7c8"
        },
        "item": {
          "id": "9ce50be4-c70e-4503-aba8-5c81d9362196",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3abd7d64-ca83-4eb7-8db5-126f2c48f5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03eb71d-f9da-49fa-8563-54e88e6c981c",
        "cursor": {
          "ref": "bc796a1a-b52b-4398-bf8c-80e641cad51e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de43382c-6913-4e94-b5ec-e4e8106e0494"
        },
        "item": {
          "id": "d03eb71d-f9da-49fa-8563-54e88e6c981c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "713ebbe5-6a7f-4285-9093-50ec149db7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d6a61-8439-48f2-bc40-f1c2d5bf83f7",
        "cursor": {
          "ref": "0b3cbb83-599f-4cde-a668-045a6d37ef82",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "be62fee1-def6-4bd4-93ba-c4d784a3bafb"
        },
        "item": {
          "id": "f70d6a61-8439-48f2-bc40-f1c2d5bf83f7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3f63284a-f8d9-40bc-ad72-f3d5d0ed39b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dd5bae-2810-4f06-b394-428fdf610a5b",
        "cursor": {
          "ref": "5a842acc-0b86-43bc-a40c-a528249b7a36",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "828edde8-c936-48d9-9f0b-433433d30479"
        },
        "item": {
          "id": "d7dd5bae-2810-4f06-b394-428fdf610a5b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e8a2e652-2e98-4056-b5a0-313c671aaa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31d4a72-0a3c-4577-92cb-ef20bb1ff0b1",
        "cursor": {
          "ref": "98e61023-0e8f-49d1-8972-4ea60e3f52df",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "79aa40d0-9e4f-4746-8e1f-3f5870c2d3ab"
        },
        "item": {
          "id": "c31d4a72-0a3c-4577-92cb-ef20bb1ff0b1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f547ea77-a932-4d68-9314-1770046eb280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6fe850-81df-44d0-b902-077d1f936ac5",
        "cursor": {
          "ref": "0252bc5a-e570-4972-9aca-a8dacdec6589",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3c268bab-9f74-4879-a509-46f34287591e"
        },
        "item": {
          "id": "fc6fe850-81df-44d0-b902-077d1f936ac5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7234056b-afb0-4c83-a460-7c71875febbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ccebc7-ff89-45e8-89ef-4f31028ad57e",
        "cursor": {
          "ref": "7758000d-4cbc-4295-8928-e91ea344fb92",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b8ec9d8e-7a83-4ff0-848e-7ed8caca1c58"
        },
        "item": {
          "id": "c3ccebc7-ff89-45e8-89ef-4f31028ad57e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3b1e1a35-aa6d-41b8-8c83-a6ac68fba6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9da5ef-e9e3-45b6-ac71-e90a6b2eefd1",
        "cursor": {
          "ref": "357ef8e7-ce28-4c13-9e00-c241ab46c72a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0434412d-a3e3-4dd2-8c87-25932c2a0ff1"
        },
        "item": {
          "id": "7c9da5ef-e9e3-45b6-ac71-e90a6b2eefd1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "743f8d41-37b7-4130-8489-2addb95b8957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dbd0ee-cade-40f7-b448-09ff229e478c",
        "cursor": {
          "ref": "50db808f-53be-4a60-9bc4-070be5d40b70",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "86c8934b-ef30-450c-a1d4-56d52ec16611"
        },
        "item": {
          "id": "67dbd0ee-cade-40f7-b448-09ff229e478c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8f844f41-8498-4800-b7ff-fea2b199a1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b87f40-3a32-45b6-af58-3b67e4ba5072",
        "cursor": {
          "ref": "1cef58c2-6619-42fc-bf5f-c5930c929252",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2ac72115-fd72-4f28-965c-d5885f6f7cdc"
        },
        "item": {
          "id": "56b87f40-3a32-45b6-af58-3b67e4ba5072",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2c50f946-0034-43a4-959c-de9b5f76a75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe779e2e-0927-4f26-a612-8653f0d798cb",
        "cursor": {
          "ref": "38152a34-9f96-4106-a887-844540478d7a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11de17fd-7ad9-4a0d-9c19-e6538acc611f"
        },
        "item": {
          "id": "fe779e2e-0927-4f26-a612-8653f0d798cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cbfca2b2-7752-48a0-8cee-61a5865fe5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d907a5-5a8e-449a-9d26-d19eebe71c36",
        "cursor": {
          "ref": "05bb80da-7aef-4b61-916f-ca76904018fd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "68f75dd2-bbc0-4e48-881a-99346d009257"
        },
        "item": {
          "id": "89d907a5-5a8e-449a-9d26-d19eebe71c36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4f3732ef-11fb-4dce-9de6-181381aaa180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452049b7-78b3-44fc-a8c5-9fe2200b8ea8",
        "cursor": {
          "ref": "9e3bfc7a-2358-4d04-91d4-33372531299e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ba471d70-bbc4-4bdd-b9df-1753e2c06eb4"
        },
        "item": {
          "id": "452049b7-78b3-44fc-a8c5-9fe2200b8ea8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "96fe4ef0-2a3d-4706-85a7-d9c67efbdcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be140383-b3de-4a9e-98aa-18f1a5fadc1f",
        "cursor": {
          "ref": "f0f38ef2-564d-4243-a75a-38b00657be6a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "43be4bb7-0109-4398-a647-de3af0c10879"
        },
        "item": {
          "id": "be140383-b3de-4a9e-98aa-18f1a5fadc1f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8f383c45-3ba1-403c-aa61-50bded8d3682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214ce23d-124b-4840-8828-c1b4f11d543d",
        "cursor": {
          "ref": "ae2e1a67-8809-4d02-9be2-e626fb5f1cc3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4cfb2131-3b5e-4956-82f2-8008e1f068a1"
        },
        "item": {
          "id": "214ce23d-124b-4840-8828-c1b4f11d543d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "52624ac5-ab09-4c65-bcd0-fccf6750a3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4e015c-c64f-45c4-b432-82b4b27c7efb",
        "cursor": {
          "ref": "5520ff90-bad7-437f-93e0-9354b4410090",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "92e1f89c-862a-4933-88bd-69c4820fa363"
        },
        "item": {
          "id": "5a4e015c-c64f-45c4-b432-82b4b27c7efb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6d0beefe-c1b6-4030-90d9-3d8bc89e8532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2a1d67-d3f6-40cb-babc-691dea63cab7",
        "cursor": {
          "ref": "9ab82f42-419b-4024-b084-e32d2c28da4e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "486c3e16-9bca-48eb-8dce-ffe3b00c8687"
        },
        "item": {
          "id": "9a2a1d67-d3f6-40cb-babc-691dea63cab7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "380041e0-3b35-4b8e-aac5-01be9c43507e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c9589d-1226-4d0b-89a0-823d782c94bd",
        "cursor": {
          "ref": "c2a848a4-1a46-4873-837b-eb21a29e38fa",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fdd16ee5-d2d5-43a8-a0eb-c54918440e5a"
        },
        "item": {
          "id": "09c9589d-1226-4d0b-89a0-823d782c94bd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eae3b863-3662-47f3-9387-cb00cb5594ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e247e2-e09a-4b26-ab23-0a5eced70a45",
        "cursor": {
          "ref": "acf21c44-1088-4e46-b9ca-c2ce53532d08",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "daf86051-8b0e-4991-89a5-4992d3759862"
        },
        "item": {
          "id": "21e247e2-e09a-4b26-ab23-0a5eced70a45",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e1f04b42-ab36-43ef-82fa-d56ce7cd2a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc647407-da51-4f6e-bfd0-be89a09db95f",
        "cursor": {
          "ref": "5130112f-1535-46d7-a66f-3adc1b6fc9f3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2ad9d374-c31f-46e9-bd13-ddef8acadcd3"
        },
        "item": {
          "id": "fc647407-da51-4f6e-bfd0-be89a09db95f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b117f9c0-e65d-493c-a461-b933d6ea986c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabcb054-fca0-417b-8a09-9c9757018395",
        "cursor": {
          "ref": "fa397cda-a6e4-4950-b55c-61741fff3302",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f5e58505-a22a-41b8-9fe4-b3e0ca97441a"
        },
        "item": {
          "id": "cabcb054-fca0-417b-8a09-9c9757018395",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a51f385a-97b2-4f32-b238-e500366204b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9b78c8-78fa-4386-b8d0-aba2bd0bd392",
        "cursor": {
          "ref": "a708964d-95e4-4b75-befd-e418103a8bb0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf46bab2-783b-4207-8ea5-508ec0bc14ec"
        },
        "item": {
          "id": "8b9b78c8-78fa-4386-b8d0-aba2bd0bd392",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b67a3ced-179e-4915-821b-1c9daa7a16d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521da527-cf63-4382-9f86-9bfa4f1ac2a0",
        "cursor": {
          "ref": "6efe3745-0da5-4c10-b59b-e66e175de54e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3eae3e55-d655-4879-b920-736ae54aad39"
        },
        "item": {
          "id": "521da527-cf63-4382-9f86-9bfa4f1ac2a0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a592157e-afc4-43a0-8ba2-11bee1c47fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca3956d-c336-4ca2-a788-d531d08e2029",
        "cursor": {
          "ref": "83ec2953-21aa-46c3-8ad5-8f92bf6cd890",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce6e120b-f027-4550-a493-810f2d024f5b"
        },
        "item": {
          "id": "7ca3956d-c336-4ca2-a788-d531d08e2029",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9b8d46bc-ee1b-4e7a-8d24-22be973ebb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6f320-7ef2-4929-9ee1-f5b1e5dde516",
        "cursor": {
          "ref": "ba9d3d3b-6e32-4ca7-bd75-11589b6951a4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f04a7a47-bf21-4408-bdd7-b6d8ca183057"
        },
        "item": {
          "id": "07c6f320-7ef2-4929-9ee1-f5b1e5dde516",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b695d0ab-529c-46d5-86c1-c5cd943c3cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf28683-b0bc-44b0-8e80-ab2db7b6fe10",
        "cursor": {
          "ref": "3731b65b-f135-49dd-8e8e-3ac7376adc1d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b2d1a39b-2ef1-4d2b-aa88-14da17eb2674"
        },
        "item": {
          "id": "acf28683-b0bc-44b0-8e80-ab2db7b6fe10",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e40b852d-6576-4cf3-9b2b-339ed5c5efe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ebfbc-d0e1-44e2-859b-3f65cade7822",
        "cursor": {
          "ref": "61bc3529-caa4-4305-bd7f-1b732d83a941",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9322c448-a7c5-47b9-9bf5-ecd51efc3a9e"
        },
        "item": {
          "id": "c55ebfbc-d0e1-44e2-859b-3f65cade7822",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0b85855e-e1c3-4bde-9af8-3cf56f41cf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d49d53-8812-495e-904a-4b99cec8a426",
        "cursor": {
          "ref": "50c8f8f9-b350-4b66-a755-23b248651c59",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6150506d-dc85-4997-95b5-664692be9b0c"
        },
        "item": {
          "id": "23d49d53-8812-495e-904a-4b99cec8a426",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c44ab3a2-b598-4119-86d0-bd9ca03c6648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e61daa2-ce64-4431-876c-9a4205650fd0",
        "cursor": {
          "ref": "a1b6e7b8-b1e4-478c-bd05-ccd186fbf263",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b1dad06b-911e-4ca0-9194-6fe9143b8d45"
        },
        "item": {
          "id": "8e61daa2-ce64-4431-876c-9a4205650fd0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db7e5cab-d097-4a20-8e57-3838cdfae3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ee5440-1afd-48b4-abb2-e989d0642ffa",
        "cursor": {
          "ref": "acfdf29a-8bc6-4f9a-a766-a0298309418f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "12c5d794-ad7d-41ec-88e0-b5778307483d"
        },
        "item": {
          "id": "a0ee5440-1afd-48b4-abb2-e989d0642ffa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "12c7aaf1-deef-4394-b5cb-565bff391309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f483c3e5-0818-41f0-86d5-7383ea70e27a",
        "cursor": {
          "ref": "1eb10734-f6eb-42e4-8b74-2f4d092f1584",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3abd70f0-900c-4a93-9dc6-4dcfd9a8c68a"
        },
        "item": {
          "id": "f483c3e5-0818-41f0-86d5-7383ea70e27a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "58cfc639-57c1-45ce-aca3-80f49de76d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc06f40-68eb-4872-8398-e71a32e53cda",
        "cursor": {
          "ref": "d2795a2d-5b6d-44de-b6c1-8cf162eea300",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6628cf07-e296-43d7-8f7b-1e14a1237a60"
        },
        "item": {
          "id": "afc06f40-68eb-4872-8398-e71a32e53cda",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "544fcf61-fba0-4f3a-9d8d-801014c99972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d269f5-9f96-4387-b4b0-a6beff793d9d",
        "cursor": {
          "ref": "58fa7e26-2609-4b6a-ad9d-89f59e5e6934",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4915abde-c463-4221-8556-f7b588863b62"
        },
        "item": {
          "id": "e7d269f5-9f96-4387-b4b0-a6beff793d9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0f6896a5-51b4-4dcc-af8b-6c33fba634aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb41898b-5b59-4d5b-9314-b71bab9044c3",
        "cursor": {
          "ref": "0652c07e-ffd1-4a1e-8d0e-b88ba8d8e9a1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6e05589c-4152-4a12-9fe8-3486feffdd6b"
        },
        "item": {
          "id": "cb41898b-5b59-4d5b-9314-b71bab9044c3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "92904a80-1cd6-4f6e-a37a-b54b9af64f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85210a6d-ba57-478b-a667-0268bc2b981b",
        "cursor": {
          "ref": "9aba580f-8333-401c-8f3d-34e49bae0dce",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1c97cbb6-9b06-43ea-994c-40c426601325"
        },
        "item": {
          "id": "85210a6d-ba57-478b-a667-0268bc2b981b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "68e64e21-7206-4375-a758-0129a4f3f746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5639e5f4-edfa-4a9d-bd6a-47d98ae7ba7b",
        "cursor": {
          "ref": "f18d3f18-c3d8-4776-9082-8cd0690ad6b2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e221d761-2b8e-4da3-a255-3cc6519a63ff"
        },
        "item": {
          "id": "5639e5f4-edfa-4a9d-bd6a-47d98ae7ba7b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "36572e69-9c29-49eb-9f68-55121afb9a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c6b989-db8a-44fc-b237-719774d923c8",
        "cursor": {
          "ref": "a9af1150-e8f3-4a6c-a151-3119230eaa19",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "26531821-271c-498d-ab54-db45006232a8"
        },
        "item": {
          "id": "f3c6b989-db8a-44fc-b237-719774d923c8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "877c6350-8d40-4129-81cf-a3b5edcfb5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7119fca-3aea-4fae-8e8c-98aafa5d46dc",
        "cursor": {
          "ref": "3da82421-35b9-4731-839b-abc933d82b3c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8275061e-9be7-4d3b-bce9-91e8339c576c"
        },
        "item": {
          "id": "f7119fca-3aea-4fae-8e8c-98aafa5d46dc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "155e6eda-7d57-4573-ada5-5cb211c1cc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f6f099-0230-45f1-8002-c33700ccba59",
        "cursor": {
          "ref": "0069289f-9970-4523-ab4e-99c708f32e03",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f3bb8cd-4791-41cc-9d64-2364b9b0caf6"
        },
        "item": {
          "id": "e3f6f099-0230-45f1-8002-c33700ccba59",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3cf12566-7a3e-4b7a-abaa-57babf0d4faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1d70a6-ded8-4336-89ab-2e02a1443b86",
        "cursor": {
          "ref": "fb4aaa95-c768-4c83-bf42-6b82add2f8a7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e586e8a5-6c13-456d-b096-cb7df7f9fc96"
        },
        "item": {
          "id": "7b1d70a6-ded8-4336-89ab-2e02a1443b86",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5c6b444a-e7f6-43c8-817e-da4a6532081c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d101d3-7532-4788-94b2-51de3ca92588",
        "cursor": {
          "ref": "472233e1-fe96-47b9-8ddd-3cde4e5c4a25",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cf536253-6940-4324-a052-308e3453e679"
        },
        "item": {
          "id": "c8d101d3-7532-4788-94b2-51de3ca92588",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7355e859-6be1-4b28-bb4a-607ca2f06400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8ed2f8-f19e-4806-aa66-259da1015142",
        "cursor": {
          "ref": "ed33c5ad-1ae2-46a6-a93d-361047249ed4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3ac3b852-d846-48c1-a4ed-4b8ed03a60e0"
        },
        "item": {
          "id": "af8ed2f8-f19e-4806-aa66-259da1015142",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8070350d-ef0c-422e-9105-97342779b744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63f7f73-57f7-4699-821b-287211c0529b",
        "cursor": {
          "ref": "05ab2a20-ccdc-4b41-8145-7adca5a54886",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7ce09c0a-7ddb-49b4-bbc3-d84053fa4c8d"
        },
        "item": {
          "id": "d63f7f73-57f7-4699-821b-287211c0529b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2c858614-522c-46d1-8570-21568493dac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7af5e7-dbbc-4474-8bf0-f32f8596fcf5",
        "cursor": {
          "ref": "189cb5b0-828b-4c20-8dc9-f6b7a84021f4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d8ac4a12-2e98-4e58-b3d0-bc9c0767e5a7"
        },
        "item": {
          "id": "de7af5e7-dbbc-4474-8bf0-f32f8596fcf5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5e916114-669c-4a76-8038-5a1e65c0a8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ae975f-bab1-4e6e-831d-9c42328e88f6",
        "cursor": {
          "ref": "be771e91-c084-427f-ae66-924268ffcfdb",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1f782b6a-06be-435e-8d00-bfc1f6ce05c0"
        },
        "item": {
          "id": "09ae975f-bab1-4e6e-831d-9c42328e88f6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b713828e-1bf8-4d3e-bc2f-fb36b2497fe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5005b048-a6f6-4751-a9cc-18435beea4e2",
        "cursor": {
          "ref": "3feb7434-2566-4476-9cd7-8a4838433b12",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "235c81c9-ef7a-4c17-abec-731bb0e01793"
        },
        "item": {
          "id": "5005b048-a6f6-4751-a9cc-18435beea4e2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a07c1a5f-30b3-4c2e-afa5-b1d45f6ecb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d1ba2a4b-fd99-4e3b-814d-16389e2c1d91",
        "cursor": {
          "ref": "e70e2b0e-06b0-45ca-b29b-c91233d6831f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e0ee9b25-b97f-4344-9ed7-d5215ed703eb"
        },
        "item": {
          "id": "d1ba2a4b-fd99-4e3b-814d-16389e2c1d91",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2906777c-140f-40af-88d2-828f5dbebd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "26b3bf77-82da-4e91-9675-f0727d115b0c",
        "cursor": {
          "ref": "62f4a0f1-4ddb-4119-ba89-33ed83ec18a5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "051d4233-ddaa-4c8c-a6e8-e7669a9601c6"
        },
        "item": {
          "id": "26b3bf77-82da-4e91-9675-f0727d115b0c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "91c3313f-37fa-4f2d-abec-fa1ddddef84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f7f2ce53-a5a3-46be-827e-8b347ed8bfbc",
        "cursor": {
          "ref": "53fa9c3f-bc6f-4381-92c6-7c8a49e1f549",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10d458f4-d423-47dc-8885-dbac3efadd5c"
        },
        "item": {
          "id": "f7f2ce53-a5a3-46be-827e-8b347ed8bfbc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9fd6ad63-0fdd-4757-85bf-346fb520ff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c7213bb6-2ae1-4a6f-b84f-e423bd26bc2a",
        "cursor": {
          "ref": "8cbfcaba-5276-4116-9607-fbb91cb3e4f7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5c4d9bfb-0f13-4939-b8ea-ecad8d4d3bdf"
        },
        "item": {
          "id": "c7213bb6-2ae1-4a6f-b84f-e423bd26bc2a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "463cff7b-1784-4be2-97c1-7b9ba91dde55",
          "status": "Created",
          "code": 201,
          "responseTime": 11453,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04012f49-fcd6-4894-bde1-b97efa5fb04e",
        "cursor": {
          "ref": "36e6f302-984b-46b1-85f6-63935d17cd05",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8be34236-fe6d-4956-ae45-40b9dc52aac9"
        },
        "item": {
          "id": "04012f49-fcd6-4894-bde1-b97efa5fb04e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "63961cf3-5227-4e9c-931b-7cf407829c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c32963e5-4abb-4004-8050-84193eed2eb6",
        "cursor": {
          "ref": "9c56541a-c30b-4d61-bbc1-ff3e9c52ebdf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63f76073-6cff-4cb7-8f8c-77272ec16f73"
        },
        "item": {
          "id": "c32963e5-4abb-4004-8050-84193eed2eb6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0e7e9c71-9349-4a19-86e7-c02b20fc5f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a3e7a847-ca5f-4723-a2b6-e15bb4e7ba78",
        "cursor": {
          "ref": "c3e3631f-c985-4bf8-bf38-faa0fa0dce71",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2def89db-5e7a-420b-a0df-c443034337c8"
        },
        "item": {
          "id": "a3e7a847-ca5f-4723-a2b6-e15bb4e7ba78",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4affcb0c-734b-48cb-997f-8b42ae58f4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26175cf1-4a93-459b-8c7d-a6d62372880c",
        "cursor": {
          "ref": "4af4ea27-9523-4dd7-996f-febd94342596",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "61cbb5ca-f21b-465b-8676-12ba4f685cc3"
        },
        "item": {
          "id": "26175cf1-4a93-459b-8c7d-a6d62372880c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5dcc0a11-903f-4189-97ec-f7261dd2b884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4b98c9-89a7-40b8-9fe7-d779f04ff748",
        "cursor": {
          "ref": "4b513c95-28d2-41ad-bc0f-03d3e003a74e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1e1e6b7b-94d7-44f5-af8a-b387ed765964"
        },
        "item": {
          "id": "db4b98c9-89a7-40b8-9fe7-d779f04ff748",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c28bafc5-f1b3-4e05-a5f0-8950e23661bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bcd41d-67e9-49c8-b675-301332765c47",
        "cursor": {
          "ref": "7ba11618-cb60-4326-92d4-aa666d65699b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d4ae9944-7f29-4ac2-9274-fdbf26477927"
        },
        "item": {
          "id": "13bcd41d-67e9-49c8-b675-301332765c47",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d448ed57-6274-4467-8f43-9ff4b207707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ea2d18-c02d-446e-9ef7-0d096933f8d3",
        "cursor": {
          "ref": "4f9ae674-6a1c-4d18-bbd3-efaf445c9fd4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "20f9790b-ffce-4d8b-acf4-ca86ffb9b6c0"
        },
        "item": {
          "id": "15ea2d18-c02d-446e-9ef7-0d096933f8d3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8819dd92-8b62-426f-ac2e-8a773cdb7b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ddf745-9443-4662-8071-0d49f95f93ef",
        "cursor": {
          "ref": "23adfd00-031e-4389-8890-5489b4ef37f3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "41040c4b-60b1-4c28-86e1-a6ca0b32baa5"
        },
        "item": {
          "id": "97ddf745-9443-4662-8071-0d49f95f93ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ffb43492-0763-45f5-9657-d38d4b04bb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8197070c-02a7-49d2-8be5-3dcb4f41b01f",
        "cursor": {
          "ref": "278b9615-1121-467f-98d4-843632af720d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0299833f-8995-4593-96ee-c8dc08fff286"
        },
        "item": {
          "id": "8197070c-02a7-49d2-8be5-3dcb4f41b01f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "782b2e6f-69c8-46f2-a2a6-df87d7dbcbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea28f84e-037a-4328-9bae-7bd1618a26b1",
        "cursor": {
          "ref": "8ea8e568-fbf8-4a30-bf0b-8b9638988dc8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "95df738a-0442-4782-94c3-9f72b0ab9a3c"
        },
        "item": {
          "id": "ea28f84e-037a-4328-9bae-7bd1618a26b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3dbcca35-4266-4dfb-b75a-b8e7011e9048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8256572b-e5d2-4f09-9733-67ad41823710",
        "cursor": {
          "ref": "9bdd51e5-1170-409c-b61c-71a8574f68b3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5720cf6f-4756-427c-a38f-8b5e1b743018"
        },
        "item": {
          "id": "8256572b-e5d2-4f09-9733-67ad41823710",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1acbd591-10ac-4f9f-91f8-a4ba6ab3fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94052d96-35d6-4bb7-9afe-cd208f2d4bbb",
        "cursor": {
          "ref": "80e16d44-ee4b-4ef6-ab19-20c50c2e605a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7484b5f6-b6d0-4ce1-8a8c-d1a0266d5cff"
        },
        "item": {
          "id": "94052d96-35d6-4bb7-9afe-cd208f2d4bbb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28a5b30d-c8a1-4af8-95bb-56690172601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c917d077-ca79-48fc-a19f-10dc2cb5450a",
        "cursor": {
          "ref": "7a67fd20-4ccf-404f-883a-8e0a70de39f1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "18b3473f-27bc-4146-8670-32190d6d9369"
        },
        "item": {
          "id": "c917d077-ca79-48fc-a19f-10dc2cb5450a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7c76e768-7a6e-44c1-bed9-c32b54694905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8708ff-ee4d-48aa-9d37-c461366d8078",
        "cursor": {
          "ref": "4a74c47b-6c7c-41be-be57-391a55c8e8d0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "990133dd-f84d-4920-a377-0fa240f4ff45"
        },
        "item": {
          "id": "1e8708ff-ee4d-48aa-9d37-c461366d8078",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "69571117-02f1-40d5-b9b9-ea81db3a5b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033ce2a8-7320-4653-92d5-14ae18988a18",
        "cursor": {
          "ref": "5ad3c683-c24b-4bf0-88e3-bb878abf0350",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5284788c-8b98-48db-a0cc-0d5d82f891b9"
        },
        "item": {
          "id": "033ce2a8-7320-4653-92d5-14ae18988a18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0422d787-6b08-4013-ba71-78fcdbeaddb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca53096b-9667-4e68-8e74-aec99eeb6ae1",
        "cursor": {
          "ref": "70f554cf-30a6-40f9-ba24-8b88370500bd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "068bd941-8761-4534-bf57-e2257c40389c"
        },
        "item": {
          "id": "ca53096b-9667-4e68-8e74-aec99eeb6ae1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "853f1be3-440a-4c91-a24e-a209738715b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f35b74a-a32e-4b11-be10-d7fd316dcf0a",
        "cursor": {
          "ref": "ea75e590-08ec-41bb-aa2a-5a05b57d6351",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee585d35-775e-4945-9ef7-765a33253fbf"
        },
        "item": {
          "id": "5f35b74a-a32e-4b11-be10-d7fd316dcf0a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c060037-307a-452e-88fc-6af8a5f442a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff98a589-f65e-4d75-ad7d-18ce2c0252b3",
        "cursor": {
          "ref": "0b20d1c8-c73f-4410-860b-c800a80722f2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "343b0dda-472e-4804-a5ba-7f4441022f36"
        },
        "item": {
          "id": "ff98a589-f65e-4d75-ad7d-18ce2c0252b3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd8ac6ba-624b-4aa2-9d65-068ef92e9411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38409fd-92d9-4bef-a3ac-26cd85e152d7",
        "cursor": {
          "ref": "f14b0642-61ce-43ff-a6b2-1722d07a03f3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bb35754b-7a32-4109-ae67-bd60103110e7"
        },
        "item": {
          "id": "d38409fd-92d9-4bef-a3ac-26cd85e152d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "830122b2-35e6-4002-aeda-b7e35a46b3bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b3312cb1-fa8c-4b3d-9d4c-1818041e65bf",
        "cursor": {
          "ref": "ee62d8ea-e2cf-4976-9b2a-fa1b8f5b892f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "afc25c97-7e9b-4002-bff8-b3200334fa07"
        },
        "item": {
          "id": "b3312cb1-fa8c-4b3d-9d4c-1818041e65bf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "72bf0f78-c631-4ae2-8be0-d6f46d169315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161a9ad-21ac-421b-9055-6c22e5a5c193",
        "cursor": {
          "ref": "11db55b6-1658-476b-94ef-d6e20898afc0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "94ae52b2-b59a-4a5d-8403-44253a46495e"
        },
        "item": {
          "id": "2161a9ad-21ac-421b-9055-6c22e5a5c193",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "128c3eb4-8c52-48ce-a19e-3f76fb66653a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fe3f8-724d-4573-9213-f9cc8f5e3fc9",
        "cursor": {
          "ref": "5ece4d25-66b2-4176-b0fb-4b5e69478ad1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0898ca9a-6525-4d32-8e51-368273e7d7eb"
        },
        "item": {
          "id": "b55fe3f8-724d-4573-9213-f9cc8f5e3fc9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35bbb444-0e97-4f8b-aa45-7281d7f45e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fbd153-93d8-49f8-8272-95bd7d1d1532",
        "cursor": {
          "ref": "c7766715-9a1a-4eaa-8295-9d6efd665fc6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5e021949-caaf-444d-a408-0886650e04b4"
        },
        "item": {
          "id": "e4fbd153-93d8-49f8-8272-95bd7d1d1532",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "176bc480-0253-4ebb-a5c1-d77ee340f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9e2fb-8f73-4804-aec0-b370f4788fe8",
        "cursor": {
          "ref": "6bd2cf90-699e-40f6-9612-177d11a4ff5e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "31f25656-5777-49db-ab8e-752ca7fd4d1a"
        },
        "item": {
          "id": "5eb9e2fb-8f73-4804-aec0-b370f4788fe8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "811a0945-07a7-4019-9347-80c563f7ea02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2f6a5c-bd9f-4d89-b775-13edc208dc1d",
        "cursor": {
          "ref": "7e02fe46-b233-4731-aaad-144ca3e704db",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e0dcb36c-3369-47a2-932c-f993b3f91398"
        },
        "item": {
          "id": "7d2f6a5c-bd9f-4d89-b775-13edc208dc1d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bbbd1214-cf3c-4b47-a95d-6dc966be1831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7376bda-5fc2-4277-9beb-42b5f50fbc18",
        "cursor": {
          "ref": "631378c0-c898-4409-8f5d-90d1457300bf",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "334279b2-c09b-4cf8-a8e2-2b27ab523229"
        },
        "item": {
          "id": "b7376bda-5fc2-4277-9beb-42b5f50fbc18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3dbbc84-1275-46a1-99fb-3ac00710f092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5ef6f0-e87a-41aa-b5ec-db65651308df",
        "cursor": {
          "ref": "7e4a7fa8-5a42-4131-b5c9-37e14e82e8cc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cea87727-b891-47be-90d7-3536e457bb92"
        },
        "item": {
          "id": "ea5ef6f0-e87a-41aa-b5ec-db65651308df",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eab8c107-98e9-4bc2-9964-86398c22d7d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d8048244-70d8-4afd-ba79-25fbde47b37b",
        "cursor": {
          "ref": "e6612381-ca29-4378-97bb-55d0b322eef9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "323c81aa-0694-4463-bf15-8257c32afc2d"
        },
        "item": {
          "id": "d8048244-70d8-4afd-ba79-25fbde47b37b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d77c028e-7210-4c31-a280-48d5af5ab3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f13537-bc12-4770-83c2-848f4f8ae755",
        "cursor": {
          "ref": "94c2bce1-b2ef-485f-a6bc-8fd6eb0827ec",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3c6146c2-d3f0-4ba2-9508-7a64359a57ae"
        },
        "item": {
          "id": "b4f13537-bc12-4770-83c2-848f4f8ae755",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3fb71a05-ac00-45fb-b538-57fde78f3d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e076d5b-ee2e-4b5f-9c82-2b6f02731ec8",
        "cursor": {
          "ref": "acaf1ec1-b4ea-4ce5-8c45-84cd8fc14ff8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ace4df35-7a57-44b7-8a22-9a2659e5c1a2"
        },
        "item": {
          "id": "8e076d5b-ee2e-4b5f-9c82-2b6f02731ec8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef2624b7-7610-4043-8c7c-9e1888c38b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f178f2b-ff6e-4155-8d8c-d42fe5769236",
        "cursor": {
          "ref": "4942f928-2404-4a40-a795-fd1d193635e3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e2721ace-7e41-4cf6-9ada-2b730d2552b9"
        },
        "item": {
          "id": "7f178f2b-ff6e-4155-8d8c-d42fe5769236",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5400d44-b8fc-4774-985f-ab9825a52a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef839ac3-d6ad-416a-a93b-33c3b18ce75c",
        "cursor": {
          "ref": "1dcca39b-5c04-48e0-ad99-6a91c9c8356c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23846329-9655-4172-bb0d-f4491446995e"
        },
        "item": {
          "id": "ef839ac3-d6ad-416a-a93b-33c3b18ce75c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "33e9aa17-009b-4a9c-904d-be2d9ed6f5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3779e5c6-8665-427d-98f4-f2c173a8e0dc",
        "cursor": {
          "ref": "cfe0882d-3b35-4bc3-8226-912d360fe7a0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a6189a27-ce68-4ba0-8a21-c6aa4968ecab"
        },
        "item": {
          "id": "3779e5c6-8665-427d-98f4-f2c173a8e0dc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "308d96f5-0a62-4a66-b313-ad08dcec4c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1923b8a3-2bff-4e37-8901-fc23caaaddf1",
        "cursor": {
          "ref": "868cb44f-99bf-4941-83ef-b89e8d536675",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e84158a7-1cf0-4373-a9e9-634cb4e42286"
        },
        "item": {
          "id": "1923b8a3-2bff-4e37-8901-fc23caaaddf1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "43dea44a-efa2-4e3e-a55d-f67272fcaa1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "fc726216-55da-4b04-b426-2548f2e034f4",
        "cursor": {
          "ref": "d223eadc-6da9-449e-9752-a4bbbac20748",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2cdaa353-b21d-452e-8ac8-90ed2ff1dc3c"
        },
        "item": {
          "id": "fc726216-55da-4b04-b426-2548f2e034f4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "88f56101-3bbd-4d20-9042-448a79afeace",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c7779b57-7bcf-4a22-9e06-0efda6df36db",
        "cursor": {
          "ref": "a0d8e4a1-dbdc-4f80-ba75-64d3df7bd77f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2d1a7a80-3acb-4f6c-b471-d85826f01ab6"
        },
        "item": {
          "id": "c7779b57-7bcf-4a22-9e06-0efda6df36db",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "48c0274d-2a83-459b-9be0-13b1aa1b2148",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "00335704-507a-4e9c-9647-be455d061f62",
        "cursor": {
          "ref": "da6931f5-3e82-4d49-9e03-9d5381c30d7e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "593db214-3484-4a83-b855-6a293b397153"
        },
        "item": {
          "id": "00335704-507a-4e9c-9647-be455d061f62",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e652d5c5-4cac-4a0f-a037-c6be4f909550",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "8d292fe2-3b18-4b83-b395-d520227fd089",
        "cursor": {
          "ref": "84018186-00f9-4ae4-9fd9-47027d15bf5a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f5281135-54ef-443a-b5a8-3243002cdd47"
        },
        "item": {
          "id": "8d292fe2-3b18-4b83-b395-d520227fd089",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b4a7afde-8949-4807-842f-e5f0694c5cb1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "6877f22b-b2d2-48e1-a7e1-edd8dec04a80",
        "cursor": {
          "ref": "a4d04e1b-962f-41c8-b91a-6397e3951fe0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "830abed1-c00e-4fce-b6a3-a62aaa32ade1"
        },
        "item": {
          "id": "6877f22b-b2d2-48e1-a7e1-edd8dec04a80",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b86c7dff-098f-47e4-a04b-20256d56118b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f0e34a80-b9c0-4ec0-a805-00e7b8916f0c",
        "cursor": {
          "ref": "ab37ed1a-8d6b-4f4a-ad99-f6813a6050fa",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4214a527-3df2-4796-b22b-87a5244f0130"
        },
        "item": {
          "id": "f0e34a80-b9c0-4ec0-a805-00e7b8916f0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aadf91c8-648e-4a2c-8310-05abdff6e5b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e6f945-1dc2-4d09-a3c3-9b269459220a",
        "cursor": {
          "ref": "3a3cebcc-cb9d-4223-8d44-eff069fab4a0",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f4380335-50ff-491e-8189-67812dc959db"
        },
        "item": {
          "id": "02e6f945-1dc2-4d09-a3c3-9b269459220a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1e8b547-47b0-4aab-82de-314b5ae6dcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63524e19-2a07-4eb5-b4f9-e3fe32539e50",
        "cursor": {
          "ref": "c9ee8d52-3277-4ee1-b371-92841a69d656",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6856b61a-f955-4cfd-9b6b-81631db247a8"
        },
        "item": {
          "id": "63524e19-2a07-4eb5-b4f9-e3fe32539e50",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9bf25e5e-ee2e-466c-95bd-8dc331a5fdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c07f272-85f2-422c-abca-042399f45dd4",
        "cursor": {
          "ref": "591bf679-3a77-4f47-87f8-02b17d501cfb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2bf2a72c-8a3d-49a3-a566-466d9f6c5f74"
        },
        "item": {
          "id": "2c07f272-85f2-422c-abca-042399f45dd4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c70c2123-fe05-451b-afb1-2de982ee015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cfff43-55af-4f07-ae87-e28c4f2e5100",
        "cursor": {
          "ref": "44119283-18fb-4ee8-888f-2a422df2c893",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "10a8152c-a297-48d0-b348-ddd2d34e1b41"
        },
        "item": {
          "id": "f0cfff43-55af-4f07-ae87-e28c4f2e5100",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f9e0c82-9776-48f9-9f1d-d3563d3fbfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460420a0-7668-43f2-830c-382d5b1ae22b",
        "cursor": {
          "ref": "8db30ceb-ae93-4590-8972-10a7693d11a0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2de1f2bf-061d-4a8b-a9cb-ab22254edc02"
        },
        "item": {
          "id": "460420a0-7668-43f2-830c-382d5b1ae22b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "95c3daa2-54aa-452a-ba0a-f407f3c8631e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fc5798-ad9b-481f-823b-d6ac162cb957",
        "cursor": {
          "ref": "3543d6c5-8548-4e78-82b5-09d933afd758",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b7d14820-2823-4b0e-a33c-4f773561d0b4"
        },
        "item": {
          "id": "62fc5798-ad9b-481f-823b-d6ac162cb957",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "baaeae51-3d75-4144-9be1-79362549cf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c918779c-d0a8-446e-85b7-69505b5b01cb",
        "cursor": {
          "ref": "334730c7-622a-4dc0-8d56-aaf5f81baf94",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8f3bed91-1aea-41ea-98b3-9d41bccb0930"
        },
        "item": {
          "id": "c918779c-d0a8-446e-85b7-69505b5b01cb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e8798e5a-40c0-4f18-be27-9cc601033189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2c4054-7912-40b3-a9a5-42b43f493d39",
        "cursor": {
          "ref": "81fb69c4-e81d-4834-b5d8-85329e784d11",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "226d9e71-ef10-4bae-ad73-b8d5405d834d"
        },
        "item": {
          "id": "1d2c4054-7912-40b3-a9a5-42b43f493d39",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3e635bc1-d5ee-41d6-a4ee-f367c15421bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15683f6b-ad4f-4a09-8596-37d2f789629a",
        "cursor": {
          "ref": "c34ec005-e1a9-4e94-8376-fa808fba76ba",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "44a0e330-e76c-4c72-8b6e-cc4c9b045dfe"
        },
        "item": {
          "id": "15683f6b-ad4f-4a09-8596-37d2f789629a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dbfd3d31-a0e8-469c-9537-403f619e5cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c0792c-4bfe-40f2-b0e1-f917614900c1",
        "cursor": {
          "ref": "76ecff79-d835-4924-8ac6-80dd944a1093",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "18802d42-69f1-4576-98ce-d1d76ed4f884"
        },
        "item": {
          "id": "23c0792c-4bfe-40f2-b0e1-f917614900c1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "584d153d-b96d-4fc0-b718-d8ec734c3db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3f522-c608-471c-9f24-b28f5941fb62",
        "cursor": {
          "ref": "0132c269-6ba3-4999-b1d8-5b99e2130e31",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c86775cc-34f6-4855-a498-91e12de0ec63"
        },
        "item": {
          "id": "dfe3f522-c608-471c-9f24-b28f5941fb62",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "473997db-b2f2-43c8-acdf-10e6c140fde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935ac9f5-f939-496b-9f8a-44b225e5ec30",
        "cursor": {
          "ref": "909dbd37-8eba-405e-8448-4a6f0248a0d0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "78632fde-caf8-4a84-94ea-52dcc68f3cde"
        },
        "item": {
          "id": "935ac9f5-f939-496b-9f8a-44b225e5ec30",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3734a74b-951e-4567-ab5e-b96d0acdc0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997325a8-888b-4e08-82ed-525a60769d20",
        "cursor": {
          "ref": "5860183b-4b8d-4867-9b49-8ac6a28c0085",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4ab96dfe-b1c6-4be0-9ea3-b4b05cd46a9e"
        },
        "item": {
          "id": "997325a8-888b-4e08-82ed-525a60769d20",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "262abf8c-4b86-4682-bedb-5f9bb41e9be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d6275a-71c3-4af1-9aef-f023403261db",
        "cursor": {
          "ref": "5e4c7d6c-919d-48a9-a01c-75d0a42c65cb",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50b8a4c9-d69f-45b2-a3cb-c0dd8de21027"
        },
        "item": {
          "id": "06d6275a-71c3-4af1-9aef-f023403261db",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8745c291-2048-4445-b891-7fb4b92eac28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efab4821-14cf-4097-bf1b-6f57947e3454",
        "cursor": {
          "ref": "28e6ca40-e571-4409-9118-14556f3effe5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "131ec729-93dd-4047-bc84-7a24725eac0d"
        },
        "item": {
          "id": "efab4821-14cf-4097-bf1b-6f57947e3454",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9981ff5e-da32-460b-862b-86d8d9e0ca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec2c1de-de3f-4611-a2e6-897feeafd08f",
        "cursor": {
          "ref": "be87fc4f-b7e5-48dc-97e0-fae258c40719",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd8f4789-4ffa-45a3-8b75-75a3b7251f1e"
        },
        "item": {
          "id": "3ec2c1de-de3f-4611-a2e6-897feeafd08f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e58f42b2-c6c8-4d5f-a602-4bcd2d1fc209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8876cb17-18c9-4e1e-9026-ee53cb675231",
        "cursor": {
          "ref": "3d359889-aaad-4119-b914-129f4ff4a725",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "13deab9a-0e54-4039-ab12-57f17e1892c0"
        },
        "item": {
          "id": "8876cb17-18c9-4e1e-9026-ee53cb675231",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fb5f6903-9adc-4b35-a980-011b45bddec9",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4484d475-1ff3-415b-b597-8280594e9a71",
        "cursor": {
          "ref": "1cff3a6a-b47e-4cbe-9c55-dcff8d164a19",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1a37b2e5-3a1b-4158-b0dc-cea49526c9c3"
        },
        "item": {
          "id": "4484d475-1ff3-415b-b597-8280594e9a71",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa6a77e2-eb87-45b7-8422-d27ab738f171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fda961-6d4d-494f-9c55-c3ccaa7820bc",
        "cursor": {
          "ref": "5bbd4985-ebdf-4d38-96a2-047cd84c121d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "953df1e2-aabe-4b9c-9beb-17a0ac515236"
        },
        "item": {
          "id": "35fda961-6d4d-494f-9c55-c3ccaa7820bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e3e0d95e-cc7d-448d-a21f-9b7bec3fadaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc567851-6534-4309-9222-7426c61cdb07",
        "cursor": {
          "ref": "47d246d0-e651-4b0d-95cb-57caa44c4500",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "65743894-f0af-4a62-a7a2-c3f861512b8b"
        },
        "item": {
          "id": "bc567851-6534-4309-9222-7426c61cdb07",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e84958ab-b011-4c23-8f9a-1b1c70c9a6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932c32bf-26dc-4577-9f30-1955465cf3bf",
        "cursor": {
          "ref": "0aea7088-4675-44a1-b529-06108eec0f3e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "793bd549-f875-4196-a582-21034a1c6abb"
        },
        "item": {
          "id": "932c32bf-26dc-4577-9f30-1955465cf3bf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6b1105d7-e8fc-46a9-8f14-6040c7a08c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a7a39e-7cf0-42c6-ade3-664b9c096891",
        "cursor": {
          "ref": "5e9ad49b-adb7-4c9d-9b11-814aa7fde852",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e159314b-1c45-403e-88d0-a694fd139238"
        },
        "item": {
          "id": "19a7a39e-7cf0-42c6-ade3-664b9c096891",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3e5865b7-679e-4005-8517-d970f2eb70d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d487c2-cd64-46f1-920a-a76cd50e0fe2",
        "cursor": {
          "ref": "4931f376-718b-4029-82a6-79b0fbfd4370",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6e745e5a-0281-4019-b7f5-c8bf1f3f4e8f"
        },
        "item": {
          "id": "01d487c2-cd64-46f1-920a-a76cd50e0fe2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6871028a-68c7-4f43-a901-a090e0c61fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf26c7f0-4ab0-4b97-9755-16497b968343",
        "cursor": {
          "ref": "c571caa4-73da-4120-a0b4-a8e0001915a2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d4c36f37-ca16-4c41-a42f-eeff114f27f7"
        },
        "item": {
          "id": "bf26c7f0-4ab0-4b97-9755-16497b968343",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a4d1bd6e-92f3-4fb0-ad3e-23fb4f3d92f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3b5bb6-5f4d-4953-8d45-483deebe3c89",
        "cursor": {
          "ref": "fbb8698c-3025-48eb-854d-5ac28ae2c8e3",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1e236148-cb8a-4efb-97c1-5505cd0e905f"
        },
        "item": {
          "id": "fe3b5bb6-5f4d-4953-8d45-483deebe3c89",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0a4c0c42-ead6-46ca-8205-3c0f6c06e0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96d8156-ec58-42ec-beeb-362abc723471",
        "cursor": {
          "ref": "a2272be2-a536-4431-adac-4770b8e66372",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7052ccb3-92bc-4bb9-98a1-7b142f8747b9"
        },
        "item": {
          "id": "b96d8156-ec58-42ec-beeb-362abc723471",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "958f1ce1-53d3-4a55-95b9-2d6748e89984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034d0df3-7126-4972-9312-73784d21d203",
        "cursor": {
          "ref": "eaa483a3-2845-425d-b450-404225e4957a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f4691704-7160-4ced-9932-b2ceaead3a5a"
        },
        "item": {
          "id": "034d0df3-7126-4972-9312-73784d21d203",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b8157b7b-9c46-4a26-93a1-92e9df31c6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ac0278-00c8-4375-913a-3f5c564d501c",
        "cursor": {
          "ref": "61fa310c-79a8-42ea-9939-7f3812d0a515",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "622b11be-2a9c-444d-be0f-a4ce3bfd3904"
        },
        "item": {
          "id": "e9ac0278-00c8-4375-913a-3f5c564d501c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7d8a5275-cd17-4a43-b6ac-4a62b952d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8674fe1a-25b2-4b08-8ae3-169596e74e37",
        "cursor": {
          "ref": "b5ee636f-edc7-4633-94b3-01d707621ff3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e2634173-5475-4c94-9933-e1471e4cc3bf"
        },
        "item": {
          "id": "8674fe1a-25b2-4b08-8ae3-169596e74e37",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "63361686-e0c1-4555-92fd-1cc5f2e752b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45a5fb-dbfc-472a-bcb5-3d4bce4e8cf6",
        "cursor": {
          "ref": "5697da9b-d1b9-4a70-89d7-ae78a9980938",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d96327b8-2a3d-40be-89f5-fa563f15e7e7"
        },
        "item": {
          "id": "9a45a5fb-dbfc-472a-bcb5-3d4bce4e8cf6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b3078c19-63ec-4ea7-ac3f-89b72e5f6713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e60913-facd-4072-be4b-75ef3fa60c04",
        "cursor": {
          "ref": "df762f89-2335-4158-9ab1-8c388501b87e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "af6302f9-7be0-4e6b-a39d-1c6b6edc1ee9"
        },
        "item": {
          "id": "88e60913-facd-4072-be4b-75ef3fa60c04",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "df043c58-208c-4c26-9781-7748d362ff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f192e27c-03f7-4dd3-ad77-9569416bfe0d",
        "cursor": {
          "ref": "3a2784f8-a7b6-4795-8f34-15f3a154b159",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d54305dd-df8a-4ac1-a308-c12aa6f57ab9"
        },
        "item": {
          "id": "f192e27c-03f7-4dd3-ad77-9569416bfe0d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "948398cb-fd4a-410f-be46-b62e761af6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa90058-7a2f-40a4-95ef-796a4d58f9cc",
        "cursor": {
          "ref": "1cd57eee-a1dd-4295-b4d0-608202a0443d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "da2ba03c-0fbf-493c-82a8-24fe3c6987df"
        },
        "item": {
          "id": "cfa90058-7a2f-40a4-95ef-796a4d58f9cc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c731d8bd-d6b9-4d17-93b7-d8b9c08a7b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a2d19e-36cb-4963-9c5c-db69507fce72",
        "cursor": {
          "ref": "76c6fcbb-7ec1-4405-9934-c6882b549584",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8f644ff8-0c57-4d1e-bd88-47d864d94caf"
        },
        "item": {
          "id": "d2a2d19e-36cb-4963-9c5c-db69507fce72",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bb0e27fc-63de-495a-a5b6-8692d15f5ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f40244f-a70c-4447-b954-5491ce40cad2",
        "cursor": {
          "ref": "d5420817-83f0-4380-b9ff-63a1ebfc2de7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a60fcc1a-18b0-4f93-b1e1-d973e68f9119"
        },
        "item": {
          "id": "2f40244f-a70c-4447-b954-5491ce40cad2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "adc555c6-4ae2-42d1-bea6-f974f11af553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80f68e0-4c8f-43cf-93f5-7e5335086668",
        "cursor": {
          "ref": "8348d919-96e9-470a-913a-390904d5c040",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7b64b891-3a70-4241-846b-56f9e624949e"
        },
        "item": {
          "id": "c80f68e0-4c8f-43cf-93f5-7e5335086668",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "75e71432-3d83-40d9-a2fb-374b6c1c9c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c6c31f-c012-432d-a6ad-e7a4814e5268",
        "cursor": {
          "ref": "be05e928-c6bf-4962-b2e9-26e8f218a095",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "203bd6f7-d9f0-4bdb-bda4-644651240bed"
        },
        "item": {
          "id": "50c6c31f-c012-432d-a6ad-e7a4814e5268",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6c552832-29d0-4399-9049-0966b61fd231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609094be-c745-4575-827a-085b7ba806aa",
        "cursor": {
          "ref": "8c9f28e1-ec25-47ad-994b-f0f3ee11b321",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "69adcc0b-9032-49f7-989f-8db417f0109c"
        },
        "item": {
          "id": "609094be-c745-4575-827a-085b7ba806aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "12dbe328-9653-4220-8044-8bd934c91b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaec5d7-2524-4a13-8ac4-9f59cba79ba2",
        "cursor": {
          "ref": "e1b83a0b-f4a9-4343-9189-88aad3291e9b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dfb90698-4176-4d22-a7c6-f736caf619c9"
        },
        "item": {
          "id": "3eaec5d7-2524-4a13-8ac4-9f59cba79ba2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e1562f9-b0b4-4349-9479-bc7662a56e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e474610-1ce6-4ccd-9870-bd9fb12d6949",
        "cursor": {
          "ref": "4edb77fb-b48f-4476-9b5e-a30df1e6e121",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3b3f65ed-8496-40c6-87c1-3860d6d06208"
        },
        "item": {
          "id": "2e474610-1ce6-4ccd-9870-bd9fb12d6949",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c4c38d20-b551-42b0-9ef4-7ec13573793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2ae3ca-7988-46ca-b965-e9f645dcc9e3",
        "cursor": {
          "ref": "f3b977d4-dd7f-40a0-822f-9d7e3431923f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f71b03b1-99dd-41bc-9736-547e175e5b6a"
        },
        "item": {
          "id": "6a2ae3ca-7988-46ca-b965-e9f645dcc9e3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e5f2bd41-9ec3-41a3-9bdc-e2df0b2aa7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db6007b-2729-4fdb-9d9b-9eaed1019f3c",
        "cursor": {
          "ref": "77d1aa1c-96a5-412d-9643-0204e56e7e99",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dd668b82-eb45-4125-aa4e-b6290f77a695"
        },
        "item": {
          "id": "0db6007b-2729-4fdb-9d9b-9eaed1019f3c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "48fabcde-2e2e-4b62-89af-4ed3928af596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3adaeb-7d22-4a3d-b2d4-a6cb7b286c26",
        "cursor": {
          "ref": "fc0e4366-ef02-4598-b81b-75ea4c76b2f0",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4e3eca88-57a5-4f2f-8e0a-0b0533df1e75"
        },
        "item": {
          "id": "cd3adaeb-7d22-4a3d-b2d4-a6cb7b286c26",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b588b41c-ee88-45d4-8931-40de996de19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2e2349-07a8-4934-b39c-1d455dadddc1",
        "cursor": {
          "ref": "e93e053f-6d75-4744-bbbf-873a7a06a669",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b21026b1-e420-4add-8f5d-a78ff32d7772"
        },
        "item": {
          "id": "3a2e2349-07a8-4934-b39c-1d455dadddc1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ef6e57dc-ba49-4980-bbed-f6b5c5d74462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30951097-bd20-4ad4-8be9-4513bf76e384",
        "cursor": {
          "ref": "635e9ce6-4ab6-44cc-b5b7-5d3edd9b2993",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4bde7c62-1f60-4c94-9d50-ebbaa4d5f1c6"
        },
        "item": {
          "id": "30951097-bd20-4ad4-8be9-4513bf76e384",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6f17dbd2-06a6-40d8-9b0b-d416d94f4855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25719e74-016f-40c7-be1a-71f4e5416f19",
        "cursor": {
          "ref": "b60ec208-df23-4e5a-ab61-2e533e27202f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c2196ed2-da3a-43b2-8e79-2ab57ccbf21a"
        },
        "item": {
          "id": "25719e74-016f-40c7-be1a-71f4e5416f19",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1da8ca56-fbc8-449f-b3f2-be155d794d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9406e-4142-41b5-9ead-bb3cf24850db",
        "cursor": {
          "ref": "316397f4-ffef-478a-9539-4597b22b61a1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a46ba642-c445-42e5-a177-a7661e51a4cb"
        },
        "item": {
          "id": "00e9406e-4142-41b5-9ead-bb3cf24850db",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f29b9b5-7cff-43a9-aa49-61ecdba69bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745821f3-84a9-487a-9a2c-d29318954aac",
        "cursor": {
          "ref": "f0df5bed-46ce-4d34-bf68-3bf9b837b0d7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "caa08ce4-7e51-4c58-9edb-54b1af61d589"
        },
        "item": {
          "id": "745821f3-84a9-487a-9a2c-d29318954aac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "63bf3d28-6ad5-4f04-a39c-bfb72a1fea30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8fb858-e143-4e49-a2cb-e6c42cfd7087",
        "cursor": {
          "ref": "e449f8de-8ed7-4691-a370-826d1a5b91a2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b11b2c15-fdea-4cde-bf6a-706d1a1e1bb5"
        },
        "item": {
          "id": "9a8fb858-e143-4e49-a2cb-e6c42cfd7087",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "91124891-6d2d-48bc-874f-b56dca76103b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb35a2e-e5d3-42af-a11f-590fd6bf0f2d",
        "cursor": {
          "ref": "2ccc56b1-9d0d-4f0b-b7f3-75aeddc8dc80",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a22d3f66-8732-4b63-8522-8497b107fe18"
        },
        "item": {
          "id": "feb35a2e-e5d3-42af-a11f-590fd6bf0f2d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9fb70493-e5ac-4aa7-b918-4626235ebcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698df62c-f1d1-4853-b116-f702facb6202",
        "cursor": {
          "ref": "6bc0b007-ab0e-4fe5-bd30-f8431d1c9405",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c5fed8f5-7079-43c2-b7c0-5728ff78e434"
        },
        "item": {
          "id": "698df62c-f1d1-4853-b116-f702facb6202",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "96194ee1-b03d-44af-8983-d9c975701f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e0033-b6f5-4518-81dc-7cdef89e7d7c",
        "cursor": {
          "ref": "02d09ba7-30a1-4dab-ae97-6447668faf68",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8546e175-7ddb-42d9-9ff3-39e8466324a9"
        },
        "item": {
          "id": "0c8e0033-b6f5-4518-81dc-7cdef89e7d7c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "899045f3-78d1-45c5-b9b4-49c0ebfa1083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c6d898-9ce9-4fdb-8ecb-55eece229d67",
        "cursor": {
          "ref": "aad5b97c-8c8c-4421-b9a9-b6247170bad7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dbaac644-9e61-4ba7-89b1-a4a7705af2fb"
        },
        "item": {
          "id": "15c6d898-9ce9-4fdb-8ecb-55eece229d67",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0fdd5d3a-0493-4924-820d-f4d98c2832e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1321cab-7afe-43c7-bd69-cab7af7ed39a",
        "cursor": {
          "ref": "bf1175d3-1811-473b-817e-4719617e9f8d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4fa71a26-3b37-4b98-9024-aeb5135fafbd"
        },
        "item": {
          "id": "d1321cab-7afe-43c7-bd69-cab7af7ed39a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7ce97b0a-0c1c-4ab6-90e0-cb79f57c70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82aacfb-12d9-4d9a-b80d-aef3c5910bfb",
        "cursor": {
          "ref": "c6c45e5e-163f-4397-a371-178e9d5a9076",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1782b6b8-3b39-4566-973d-cd0ea28f5b2c"
        },
        "item": {
          "id": "e82aacfb-12d9-4d9a-b80d-aef3c5910bfb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c8f8e6c5-2b30-41f6-afdf-d4946ce9c83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ffcb53-d0bb-42a0-9961-b2385a2b4db1",
        "cursor": {
          "ref": "788d18c4-a515-4a4c-ac2a-bbc837808f0e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b5a2d080-fc11-4859-88b9-4ddedbf5367c"
        },
        "item": {
          "id": "d4ffcb53-d0bb-42a0-9961-b2385a2b4db1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f26f4ea0-c1c6-4a9c-909c-541e7dc308cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e526042-af26-4465-8a02-df9d613f8cc1",
        "cursor": {
          "ref": "8b4ee129-e573-45ba-bb19-edd4515d5771",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "df19047c-758e-4baf-ba76-496458e1fd7c"
        },
        "item": {
          "id": "5e526042-af26-4465-8a02-df9d613f8cc1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eda3672b-aabf-42ba-8730-06fa50563cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae0063-c0b5-4c5d-be64-bf4582dfe11a",
        "cursor": {
          "ref": "68ad8de9-647b-43c9-a748-5dce0e6b36d5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "22911301-f3ca-473d-8cda-81acc94ff1cc"
        },
        "item": {
          "id": "48ae0063-c0b5-4c5d-be64-bf4582dfe11a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0cbb9139-e12f-446f-a150-3ce06c90720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867739d0-f34a-497d-ac48-5b5b4fc238b3",
        "cursor": {
          "ref": "e9636cd9-e41e-4925-b0d2-acc6964ce7b7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1b67c129-b9a3-4a07-9028-1a49e86b7a2c"
        },
        "item": {
          "id": "867739d0-f34a-497d-ac48-5b5b4fc238b3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb6abf4f-8227-44d5-a972-9b71d511acc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f952c3c0-a1db-46a6-8a2e-0b0a1ac82bda",
        "cursor": {
          "ref": "878c6610-f0c0-44b8-843a-deb44c97a305",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "75d90d7e-82cb-469d-aa4f-b1eefe1c2388"
        },
        "item": {
          "id": "f952c3c0-a1db-46a6-8a2e-0b0a1ac82bda",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "75a26b40-e217-4400-a816-ecd0040442b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148c927-bf97-4e51-b51b-a76b72851459",
        "cursor": {
          "ref": "bf9f6ab8-0a02-4858-94bf-7b55b3124227",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1a9a859a-17de-407f-8c50-fb0d2cb72306"
        },
        "item": {
          "id": "f148c927-bf97-4e51-b51b-a76b72851459",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8a177126-50ea-4c77-81c5-cdbe017714c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fdc5cf-d2da-4953-9f26-a1828fce2d60",
        "cursor": {
          "ref": "a06a24ad-e565-4ba6-bfac-e9cb59c462fd",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "14790b43-c931-4c29-991a-77ef1bc2bed9"
        },
        "item": {
          "id": "c4fdc5cf-d2da-4953-9f26-a1828fce2d60",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bf32ab1e-d114-4d63-a0a9-afa1382de40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd1161-7fba-41cc-bda8-a8e4cb55dd13",
        "cursor": {
          "ref": "41dcb863-06db-4285-bd22-165bb2964621",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a3dd16bc-bc51-4430-90ba-354c966689ab"
        },
        "item": {
          "id": "7bcd1161-7fba-41cc-bda8-a8e4cb55dd13",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "966e05a8-ee90-4110-a2fe-f81d9a5bc8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc5d4fa-6c8b-46a5-812e-15e149a78af7",
        "cursor": {
          "ref": "f73fe888-1d4e-42fa-8b9e-663448a83aef",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6f8fcb9d-6e89-4bc1-a68f-f34ecadc2de5"
        },
        "item": {
          "id": "2bc5d4fa-6c8b-46a5-812e-15e149a78af7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2a9579d6-8f1f-44c3-9f58-9c69dae98917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadd5534-ebe1-49b8-bab2-84113cbf1999",
        "cursor": {
          "ref": "082ba93f-93ef-443d-9a57-b6b49f05e49d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "500f5b56-aef3-4f32-a58a-14c42d7ae5c7"
        },
        "item": {
          "id": "cadd5534-ebe1-49b8-bab2-84113cbf1999",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "641b4fa8-a528-472a-8a32-4d4310e3ace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189a2624-38a4-484b-a822-a333957419dc",
        "cursor": {
          "ref": "76f22377-8f91-4a38-83a2-36a20e1c34b2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6bc57bd4-4c2c-4d55-9a46-9d67a9ca1f47"
        },
        "item": {
          "id": "189a2624-38a4-484b-a822-a333957419dc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d646de1f-cd4d-4fa5-a69a-54888068f7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41695fb-c0bb-4ebc-84d1-38b2d55bb5b5",
        "cursor": {
          "ref": "ee56fc7c-150c-43fe-9a7f-1587a3d7347c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "eb6c77c2-5689-443d-891d-af294a36e950"
        },
        "item": {
          "id": "f41695fb-c0bb-4ebc-84d1-38b2d55bb5b5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "63fd2d90-b663-444d-a805-2782dcf0079b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bd0d0b-2168-479d-b965-9743b24ac8cc",
        "cursor": {
          "ref": "e6936f3f-19ee-47ea-b9fb-653828d39354",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "76cec111-1449-4f32-bbd7-4d22077583f9"
        },
        "item": {
          "id": "76bd0d0b-2168-479d-b965-9743b24ac8cc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8ca350e6-3b3a-4ebb-9058-1c87e675b3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fafe942-487c-43e9-9803-ab1dd10f572b",
        "cursor": {
          "ref": "398dad2d-d2f9-420b-b534-428c8c1648ce",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "32464262-f1be-4686-b81e-3617e20b5012"
        },
        "item": {
          "id": "6fafe942-487c-43e9-9803-ab1dd10f572b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "44ae45da-ed72-48f2-8c3f-0e24d6065e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2360554-4c5e-4106-863c-fd36eea3ebe0",
        "cursor": {
          "ref": "60a2fd9b-26f3-420e-add1-67180c4002b9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e01bd4f-6feb-469c-b552-4f79dfd00ac8"
        },
        "item": {
          "id": "d2360554-4c5e-4106-863c-fd36eea3ebe0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9eb5a02a-1cc5-4710-990e-58d5b583dd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4c257f-9881-4ccb-add4-82b8326a0863",
        "cursor": {
          "ref": "3e5ea8a0-1cef-44fa-807b-adafbc135340",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b4479c10-8fa8-4b89-9cf7-dd1e3ae11468"
        },
        "item": {
          "id": "7a4c257f-9881-4ccb-add4-82b8326a0863",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1a3fb5d6-cef6-400c-bdcf-f86e79c2d682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d331ba-8de7-4082-96be-2cf1e2d1cf06",
        "cursor": {
          "ref": "ae27f2d9-a57c-4f2f-9422-5f88369c74c8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7bf3163f-464b-494a-bcee-43d59cc89c52"
        },
        "item": {
          "id": "a3d331ba-8de7-4082-96be-2cf1e2d1cf06",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c46de444-59bb-4feb-bf96-0b6b094e4b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4db1a00-cb22-4fd6-b130-90d57d278d40",
        "cursor": {
          "ref": "c91eeb97-a61f-46b5-8474-0b9cf6205578",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "63032cc2-bf7c-4263-b96d-829fb09eaea4"
        },
        "item": {
          "id": "c4db1a00-cb22-4fd6-b130-90d57d278d40",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "075f2fe6-d138-4787-81bc-d8fad75ca119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14febc6-9561-4b30-9374-ed2ca07012e6",
        "cursor": {
          "ref": "96ed337c-9f3f-40cc-993e-250504fc8b2a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d45046c2-c1c6-452f-8cc1-c4fb8a190b3d"
        },
        "item": {
          "id": "c14febc6-9561-4b30-9374-ed2ca07012e6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a85be86a-7a2b-4d88-939f-be7ffed75829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867eff44-b92a-421c-8641-8a3d516c7ce4",
        "cursor": {
          "ref": "223475bb-5ced-4e36-8652-a7c09f7ea000",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5ff0078a-6512-4f27-88f3-04a544e452f4"
        },
        "item": {
          "id": "867eff44-b92a-421c-8641-8a3d516c7ce4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "061a654d-8aad-4b78-afee-25a52aa3c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1bfc85-e4a6-44e2-9b53-3bd1004b9bed",
        "cursor": {
          "ref": "b8083c54-90c0-444e-a9d8-67284418cfd8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7152397a-9b5a-4018-ae70-417dcf0bf3b5"
        },
        "item": {
          "id": "5a1bfc85-e4a6-44e2-9b53-3bd1004b9bed",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d47eec12-d2f3-48c2-86c2-c6d4ff91c235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fbf887-af52-44ff-adaa-82b7cf00737d",
        "cursor": {
          "ref": "94375519-ebb0-4d9c-a893-8350ce962b54",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fdebb79c-735e-46c3-ab56-e075ea46789e"
        },
        "item": {
          "id": "39fbf887-af52-44ff-adaa-82b7cf00737d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "524ce1d2-3b5b-4107-afae-fde0a0ee7024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1245c4bc-8086-48b0-8a39-529507be47bd",
        "cursor": {
          "ref": "62cdc628-fd3e-4ff3-83af-e7a82bff1efd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "74cbc318-5ea0-4eb9-a80c-6a91cf9b228f"
        },
        "item": {
          "id": "1245c4bc-8086-48b0-8a39-529507be47bd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "59a651d4-2f16-4e90-88a2-0f9aa96e0fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0564b3e7-92d3-45c8-a6db-83200542c091",
        "cursor": {
          "ref": "5b4d18ac-3a58-4588-b145-d2bf4fd15a79",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8c61b8a9-7e19-48fd-8e0e-b2fe7d5496fb"
        },
        "item": {
          "id": "0564b3e7-92d3-45c8-a6db-83200542c091",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5201be47-d57b-48ea-a5ae-b7d76da5dcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff5d6ad-1fa5-4ed0-b8d7-9fe6f731beeb",
        "cursor": {
          "ref": "74a18dfe-33bc-49c5-8e0b-047f957c40fe",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0fde314f-1709-41bf-a51d-29aa6432d5d9"
        },
        "item": {
          "id": "1ff5d6ad-1fa5-4ed0-b8d7-9fe6f731beeb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b825be89-244c-45db-a3d1-e6d25f8554b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319334c8-1a7e-409b-b416-39c73ccc5277",
        "cursor": {
          "ref": "d4123c49-a9a5-4ce3-b8b5-c613db33911c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "be740907-c7e2-4a3c-9e5b-9ef499b9fdda"
        },
        "item": {
          "id": "319334c8-1a7e-409b-b416-39c73ccc5277",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6af493e1-3728-46a8-9475-c3a456738996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fab215-923b-4606-b751-3175b7908da5",
        "cursor": {
          "ref": "b5d68e4a-d49a-4697-9772-349d39e959ea",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ec02e41d-ece9-42cc-9f3a-2e74799922e3"
        },
        "item": {
          "id": "35fab215-923b-4606-b751-3175b7908da5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c6d6b16-586f-494e-bd7c-463e916397c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97aae64-120e-4e37-a831-d3b13aa7c023",
        "cursor": {
          "ref": "fa0207e1-c0ff-47e5-98d5-fab21189ea7f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "14349bcc-a8ca-4f2e-b395-39454b82f0f2"
        },
        "item": {
          "id": "a97aae64-120e-4e37-a831-d3b13aa7c023",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e33f3a7b-d313-4584-970d-8bdb3f292886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa500440-d14a-43c3-94c1-e95a9d96e16d",
        "cursor": {
          "ref": "1563c9ee-dce5-4d4e-aacd-68b8ac7f7322",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b0d8d11b-8655-4f96-b1a9-689d5e98e11d"
        },
        "item": {
          "id": "aa500440-d14a-43c3-94c1-e95a9d96e16d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "76fcbb6d-0097-42ea-82ac-830c58d0689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84516f2f-6dc5-4f2a-b7ea-55d9fe637f1e",
        "cursor": {
          "ref": "7f9b39fb-b16b-4f81-b726-a5eaf03f03cc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2ae2c71b-bcbf-49b0-bd71-930437c6ed4c"
        },
        "item": {
          "id": "84516f2f-6dc5-4f2a-b7ea-55d9fe637f1e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "685d14fb-fb51-4165-8ec1-edb491313aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbd2de0-591a-4069-8787-fa65a98930d6",
        "cursor": {
          "ref": "12de6419-a258-46d5-9d67-522445e8551f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f62b4579-9d5f-4c8a-bd86-383fbf4cf6c6"
        },
        "item": {
          "id": "dcbd2de0-591a-4069-8787-fa65a98930d6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7279908a-1455-4f90-a860-58d59e662aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6d7584-7307-4469-8c72-0d4f5f4a14ca",
        "cursor": {
          "ref": "31a1365d-d619-482c-8f3d-1944e83146b0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "545132c0-c3d3-41ac-8a7c-f34bea116d01"
        },
        "item": {
          "id": "fb6d7584-7307-4469-8c72-0d4f5f4a14ca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "618c2a79-586a-4fce-9953-99cfd1756aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a298ce14-191f-4e96-a1f2-0e7bf8edcbed",
        "cursor": {
          "ref": "f939d10a-9c53-4d0b-9254-220f991d67d7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6dd1208a-1c2d-4b7d-9f54-036203491b54"
        },
        "item": {
          "id": "a298ce14-191f-4e96-a1f2-0e7bf8edcbed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a7ee8d9d-a4a4-42f2-8927-50e09df4e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b64b24-c8e1-4eea-9b81-1f50a2a356e1",
        "cursor": {
          "ref": "490e8541-69ba-4200-b16d-96a0013b1d85",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "64a98759-a513-4818-867d-7cdb171f0ac1"
        },
        "item": {
          "id": "63b64b24-c8e1-4eea-9b81-1f50a2a356e1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3db58bb-0837-4eab-a735-c9eb998c4963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a3d155-63c9-4fb9-b96e-b43f5cb691ac",
        "cursor": {
          "ref": "d1e2fa8c-c382-4a4f-b6c4-a0bd7f07975b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4611d473-244c-4c70-b7d1-518f49535a0b"
        },
        "item": {
          "id": "48a3d155-63c9-4fb9-b96e-b43f5cb691ac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9cf38654-0e7c-4566-aff1-ea075adaf670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b19aacb-b7a2-45ce-94b6-45e3b87b6578",
        "cursor": {
          "ref": "5e82c787-170b-46fc-9e44-ef22081ad273",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cbf8530a-8f2a-4769-b9cb-dc4daff2043c"
        },
        "item": {
          "id": "7b19aacb-b7a2-45ce-94b6-45e3b87b6578",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aed2a596-ebc0-4fa3-b969-c8ee91310a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56617b08-f652-477e-affe-1938eec3a21c",
        "cursor": {
          "ref": "b4067da5-3437-4c6a-9d14-7b636f367dc7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d72559d9-69ae-4913-9c2d-6079fb336af0"
        },
        "item": {
          "id": "56617b08-f652-477e-affe-1938eec3a21c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5b096c05-abdb-44ee-b7b8-ccef939b5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f448998-364b-47a8-8797-530e13f14535",
        "cursor": {
          "ref": "ac4eb5bf-c363-4817-b660-4098dc4706a2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7b9d23fc-4f77-4bbc-872a-d543c260f3fe"
        },
        "item": {
          "id": "0f448998-364b-47a8-8797-530e13f14535",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cd31105d-cde4-4e9b-b54a-863020493a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b92058-2ce8-4a0d-904d-bd2145c852bc",
        "cursor": {
          "ref": "4c32e7d5-834d-4859-9265-6e482f295b12",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f27d30e2-61fe-4694-9c2b-36648cfd866d"
        },
        "item": {
          "id": "16b92058-2ce8-4a0d-904d-bd2145c852bc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db18d5ad-e5df-4d6a-9325-e2a4e00d8792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9760402c-5766-4666-bcd4-debd02338f95",
        "cursor": {
          "ref": "9ea4c11a-7382-44a5-824b-d6f857634d26",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5f2bbaae-786c-42cb-9e52-096992b5453b"
        },
        "item": {
          "id": "9760402c-5766-4666-bcd4-debd02338f95",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f25f67ec-2019-4d66-bc54-4524e00745a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d525c066-3341-460a-b667-9eeac1e129c4",
        "cursor": {
          "ref": "4739a531-74cf-450b-a9e9-d0cf6ed97ad8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "65381db6-21a1-4fdf-9d4a-b1dd73eca597"
        },
        "item": {
          "id": "d525c066-3341-460a-b667-9eeac1e129c4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b4b4c1d5-b7eb-4c73-a551-9e48f74b39bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53dd0c5-1911-4fbd-be17-6ad4c6549366",
        "cursor": {
          "ref": "2d104641-a24e-4aba-bfcb-36e1b7058f75",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b303e2b-18dd-4c2e-b0f4-2f82b140c47d"
        },
        "item": {
          "id": "a53dd0c5-1911-4fbd-be17-6ad4c6549366",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3e2599d4-d76f-4c0f-b7f7-80e67caecefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ac8d18-2e82-4a83-bb58-8eb08c04f70d",
        "cursor": {
          "ref": "0c7ad18d-663c-4142-bca1-aa1134050d01",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5eedc686-3c09-4e75-a22d-2fa28f282242"
        },
        "item": {
          "id": "c1ac8d18-2e82-4a83-bb58-8eb08c04f70d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ff840c47-38a8-418c-99e1-85bd4a725057",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b780a88-b787-401e-a3d2-6bcbb188b998",
        "cursor": {
          "ref": "e07e4388-9438-405f-93d7-8cf38d8b1ab0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8762aa4f-8e13-4d45-a018-4f8374bab229"
        },
        "item": {
          "id": "3b780a88-b787-401e-a3d2-6bcbb188b998",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f904c065-325f-436f-a821-94a816afe6e1",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a488c59-ff88-40e4-bbd3-a2f172733a80",
        "cursor": {
          "ref": "0080ad62-614f-4dd6-aad7-29675d5823b2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0d349923-1d1c-4c70-9d35-7cabe109c1d6"
        },
        "item": {
          "id": "5a488c59-ff88-40e4-bbd3-a2f172733a80",
          "name": "credentials_verify"
        },
        "response": {
          "id": "42fad929-9911-4227-9e4e-985993f9a8be",
          "status": "OK",
          "code": 200,
          "responseTime": 3530,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afc7469-7daf-43cd-84f0-db5d0ac7d4a0",
        "cursor": {
          "ref": "77e2325c-f742-4551-bb30-81b8e1795366",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "217e9033-5c3c-4783-b840-98e68d5ba94c"
        },
        "item": {
          "id": "1afc7469-7daf-43cd-84f0-db5d0ac7d4a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba273e51-c635-4fb4-80b0-57cb10e31a88",
          "status": "OK",
          "code": 200,
          "responseTime": 1999,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1935b4-a069-4137-b698-55fc918dc93f",
        "cursor": {
          "ref": "72d13ea7-184a-4f23-9356-18f263d3bd7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91bb7853-841f-4876-a856-fdb488ef6cfb"
        },
        "item": {
          "id": "fb1935b4-a069-4137-b698-55fc918dc93f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da45f72a-cd30-4c3e-a254-43e178ca48ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1935b4-a069-4137-b698-55fc918dc93f",
        "cursor": {
          "ref": "72d13ea7-184a-4f23-9356-18f263d3bd7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91bb7853-841f-4876-a856-fdb488ef6cfb"
        },
        "item": {
          "id": "fb1935b4-a069-4137-b698-55fc918dc93f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da45f72a-cd30-4c3e-a254-43e178ca48ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a784df4-6b61-4c37-802e-08eeb6cb766a",
        "cursor": {
          "ref": "0fdeed6f-2bd6-480e-a7e6-bd69df4c5ad0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b6f28c7e-b677-4dc4-86cc-956fe658789f"
        },
        "item": {
          "id": "1a784df4-6b61-4c37-802e-08eeb6cb766a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b91d28f5-d973-4369-a1cc-aaf8c11ecc04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaabd1d-95a5-4b14-b017-9f4e7b659bb3",
        "cursor": {
          "ref": "7654834a-9218-4a12-80f8-d69112541020",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "86017945-daa9-4cde-afd8-681ac8f8723e"
        },
        "item": {
          "id": "0aaabd1d-95a5-4b14-b017-9f4e7b659bb3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e95f3620-afdc-4939-a4a3-a7f7d8799210",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}