{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b7b09602-881c-4185-8a37-f18111fdb519",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b0cb2f10-3089-4e4f-9e5c-2e24e1eaccf5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "146a9533-c0f9-48e0-883e-e4be3498b7cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a54cae6c-f4c9-4e47-801b-8be1cc86e2e2"
                }
              }
            ]
          },
          {
            "id": "4c57c44c-eef2-4f19-aa55-bd1de9ee3e77",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b97a20f9-addd-49a7-8c9b-d21650ad930b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34d00f0f-7e32-4e45-929c-c4257294fab6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cdde72d8-c831-4798-8388-ef019ba62026",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "64cf6870-4e9e-4196-9feb-a9952c481698",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9099cd5c-56ae-488c-ac5b-027eb14b9698",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38a4253c-24cb-4076-9592-5ed38a2ff48a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b40c35aa-b7d1-4b20-8ecc-c062f750d675"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12dc4e14-088d-481c-883e-e6d6af766d3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa08b39f-2f8f-400a-810e-4da5c2e1cec8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2bbac08-3625-418d-b4e8-0bab45371070",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec1d468e-f894-4292-8bf8-8c0d0f051a38"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5404d3b5-1a02-475a-ad13-a7d6a9f5cd41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "70c571ad-b326-4af7-b0d1-be7f06442341"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "501c20b3-590b-4752-ac98-4a3cf9773cea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecd16ed8-4d39-426c-b0c5-495e0b2371b7"
            }
          }
        ]
      },
      {
        "id": "8dbbe81d-afb4-4b6f-872c-5e61ce3c01d4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "19ff3781-a663-4cbb-9bdc-938350dea98c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "487dfc6d-98d2-4f09-83cc-1461629dad10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64d54c9e-4f0b-418e-8815-240088336bc2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072856ed-6808-4943-a593-3455af94626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11c06140-752c-43b0-a291-00fb305ebd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416afc99-e4bc-4d26-a7a1-ddf0265c48f1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea94a0d-d8a8-467b-a1f6-f31926178c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b60980c0-b086-48b2-a27e-7281770df147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c968532-e59e-4d83-ad3f-b6eda72194bc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15271ca-5842-430f-a41f-b323ad80758a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e46c1ef-b06d-48b8-b38d-82b4e88b3118"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63a9782a-f5fe-430a-a963-9e6156ae6246",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b345304-414d-475c-ac33-e0835c5f67a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e58c9a-95c8-450a-a0fd-022bb5867faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cdfe152-8c01-47b4-b665-fa7c3454d732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c75cf5e-6610-4e92-9f57-d486757f9c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cc3338-9ce9-45bc-b903-40e631b03a5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6bea8128-9f68-400d-9c3d-ffdadd874395",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acd40b79-6cdd-42ae-ae01-f3c922033c9e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "702899b7-2ed0-42ac-adf1-9b150c819b16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8966f67a-7838-4c76-83dd-5b808ea82736"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fd264e7-7f0f-4869-97bd-b7e071b4c8d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1356acef-ba05-4fcf-8176-97f0d60b519a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c05798ca-3220-42bb-8a56-ebbc10a80d26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf806c45-4460-468b-8ccf-cd902429e514"
            }
          }
        ]
      },
      {
        "id": "a11ec74f-fdf4-4cd5-aa8a-adb47a43e82b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f4e9c360-d110-4e39-82bf-c0e21dc0f16e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31282b8e-6bcd-4834-8945-30b4377f83e8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1f8bd043-7589-4edd-a9ac-d4430a0cb1da",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bbfe68-bc5a-4629-8177-c0dac6953976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f8aaa8-2a09-4a32-b9d5-fe7872b5a7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68703ec0-ae4a-4d3f-8f55-1417008f167f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b96e8e0-1616-49e3-afe4-4867a01c01c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8727c708-f70e-42a3-9779-c8126571f5be",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa944126-4d78-4906-89bd-efcf3f0a6fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303ecbae-4e3b-4efb-9b34-cf47e31291c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9920973b-5a05-4ace-9e8a-fd662706933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee957247-7f7c-47af-954c-316665da4b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4e6c7d-64fd-4e93-9608-1c5fcd4dc771",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5264206e-a149-457d-a9c9-b1eddd9ad35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd72bcf-ad1b-4683-8230-606b2ca07f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8d4df8-da02-4a8c-9313-c6a9c2693701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a22919f-fb44-4af7-a80f-b1757decc396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b392a5c-719d-4905-a405-8dad849c7a8e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3089a9-d22d-4f14-92ef-6de5ab5d1f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11746f0-a931-4fea-b277-8b07758e4702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3153989-f33f-4188-903f-87fec91b5691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9289aa14-d526-4a90-86d1-7488b431e7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d31257-12aa-479b-992e-8d7abdee998b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d685742-89b5-4b17-a63d-f7f1206d3f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4588bcc-a9d0-48d2-ae31-8318e81cabd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0978d6d8-189a-4dd1-9386-c3be8c10e29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47f57aff-b8cd-4891-b2a8-e116a3f013ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef39dd55-c418-4ad1-be7b-e774df40397c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9055d6a3-8458-4112-b6ba-7d0ee934848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8e5684-520f-4d09-8164-39bd557ae9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f672bf-be4e-44ad-9aba-2701d3be8ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8e9d3a3-94c6-4ce9-ad4a-4794100d429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2ae0d2-2b15-4aad-8c11-61cea66f3aec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69641d29-5b5f-4d77-b834-1227b279d1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4da4392-55a4-4370-960e-31fe6aa0dc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b73422c-fd1d-4f77-bf33-a29864a96fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "399f30b9-c2ab-49b7-886d-e14ccc3a8669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268b145a-23ea-4e39-ace5-9353253040bc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a88157-74e6-43d3-817c-88acd353a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a5c40c-4d0e-47e1-a061-947a73a3b412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa904940-dd4b-4e91-b3da-a9223982f5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c5805f6-c74d-4345-83b9-e25a4f88df8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7499129e-582c-4ebf-9485-bfca5e851ebd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6585ed1a-9326-4241-8bf0-3ad91d128a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fb8cbf-3ece-4997-aa63-0db39a17b3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbe05c7-9182-4082-b16f-0c0b80e3e2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23aba966-c8d5-4f02-912b-c8a35e0d10be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee474c9-d186-49db-b34c-334acb6ca305",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7dfd2-c3ff-4349-96b7-1115fbac4c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd630a9a-6cfc-4f5e-83a6-60cc64f6adad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e557af1-1dd8-4f49-b2f9-bfd8d8d1c5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dab54819-6b6b-427c-9a6e-45e41fd7b970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b3a87b-bceb-4b35-913d-e65600f30fec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726d26b-f6e5-495c-b586-dbb3c0cfe348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd61e96d-0bc7-433b-82fe-b86463b020fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb4bbfb-d9a6-43c5-8fd6-ad6872e9eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea81c648-2248-4ca9-8cef-1697f83ad326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738e8620-e514-4530-ad6b-37c6b959ddc7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12555a21-167f-4b3b-93c7-b69d29450edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c5c952-3c2f-4934-b25d-66cba5a3a4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc966925-ccb6-4293-a9a4-a280635925dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ab11b08-3722-4cea-8817-af86f2a9a186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaef0f7-c135-4b4a-99e7-4ec3380f294b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2059a18-fc77-4a89-8e30-68cb79bf01b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e877ce18-79bf-4b16-b7ed-ca4bb1217653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48fe159-99c0-4ee6-90bf-47bc6ea878ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321b675d-f0fd-420c-b62d-806a3c5d7c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84702420-df71-4205-8031-6e3c69777907",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f39258a-125f-4667-970a-a7ae05737fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e920b6f7-cb21-4d69-8d73-2e14833aa4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e7bc77-02c3-4412-8300-53dd7de1c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ec6bdb6-a0c5-4dc0-8e62-d8b5ce19944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720b0253-4f15-4562-ab67-3cedc7235f15",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568e7f0e-c110-4f39-8c21-c901bb57b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8bc664-2bd6-4214-a82e-b712c2379201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093c2c47-0755-4807-8213-8e5e840ead4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc8bdea5-a691-46a6-a58b-98e3d61ebb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2afc98-9ece-4f1f-b0d5-e848b4241bf5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4998cdfb-3425-42da-9437-217d7cf852d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e18538e-9708-4fe3-b3e5-338528cb16c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dda5ac-3d23-4d18-908e-2daae46edec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f56209d-3cc2-44fd-9836-8ade0285126f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037e09d6-d534-4016-bf90-7437f459e3bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0ad0ad-fd85-47a9-8521-5add5849f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b09b04c-9bdb-431c-bf6a-e142a5811c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715f08e6-0d44-4b1b-aae9-bf06420e0070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffdef40f-4bb1-458f-a4f4-ab163486aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c3b2d-d467-4590-8ba1-4ab8b3948b2f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bb7b6a-5949-4708-b02b-a293459a389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845b76bc-3785-4afe-86fc-c5ea72c95f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879d926f-c4aa-4829-a50c-07a0dbe90188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace7bcaa-252e-4a33-a307-8e9ddda9539c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c844b922-e0e8-4401-b950-24329121987f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04c36a9-07a5-4f8f-91af-6441fe5d9d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bda77f-a123-4166-a85e-e93adb7f59bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950672bb-5186-4500-9433-c09064b814df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f9ad14-1cf9-4865-bb53-bffd0d095008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255f18a-7c14-43a0-998b-94abc10e54a9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e27a20a-eee4-4d77-9612-fc3c3ca06e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558a0423-b2f2-40d9-8816-7e6b94e70d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47de0e56-110d-4948-88fe-7443cecefe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f741a9-906f-449a-bcd3-b27fb4ee605d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504e1304-485b-4426-9f07-beb0302ada45",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ef536-131d-40e4-97c3-3f9fb0ce588b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44346d77-8381-4b9d-917d-2f51d7d06be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39868d5-7497-448e-9dae-81cb14a47fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caff8b0b-be27-4c4b-b7db-5ff6dd3af86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115ea343-393c-4b52-9ad4-308efd028520",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdcbb2b-5afb-4686-bee2-9ca8a032fb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afd601c-2118-4133-958d-851a5538c4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3c887d-781a-4ab5-a556-75ef494758f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe25063-5afc-48c2-bdb9-deac8a2562b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370458ee-5321-4786-893c-fcddaa2e3045",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778d260a-b48d-44d5-bc31-12e0f33eb30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725ee60d-be5d-4ea5-a416-28976db87f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8470cbf4-ac55-4e88-bbda-e2a63c7b243a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a48a2bce-c346-4064-89db-c964ddea4e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251b9ff4-c032-4bd8-8f02-1674e00b4fb9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fdd750-4d78-44e4-a0b1-c0752b43b080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca493e22-505c-4623-89dc-260f53379dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69e94c9-c11e-4f46-822d-d90a6e28274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf547e7e-4deb-4d06-bef6-665b89dfbb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f45b43-61d1-42e2-a1dc-4c23e5be71f9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b372bcba-a072-402a-92aa-4971f9cff042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6639b55-de9b-4f6e-a2d9-a50a53713415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1700d894-e3ea-4ebe-a412-a0e432c88a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdde5663-43b8-4761-93a9-49bf3ef84dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a714dbd-79a3-4e05-9cde-4db466d2d704",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0694f80c-1a11-4f9a-a834-59e335c9b0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c40c309-3af6-4882-9b16-c5884486c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbee1001-c8e7-4395-b8ce-6b0a8651907b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "075c1619-59aa-4768-bbef-35fafcb402f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67060881-40c9-46c2-9644-4e2318f58514",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb61778-e5d4-4224-9627-f24686e2545e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b04e12b-dc31-4d27-8fd1-f660750fbb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5655f436-825b-44f9-a78d-630060cb8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "735ae347-367b-41c9-8b25-b169cc2788b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0dd252-99bb-45d3-9a8c-6bcd320f8d8b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bef35fa-dad8-4003-9fc8-f616966ee441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8896bff-27b5-489f-9d55-8d3db546d597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff013bb-a1e6-48f9-88a1-51405af22aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "523160bc-db3b-40a2-aa19-afb994b76de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0942fd-6a51-4c51-9d8b-7d4daa7b186e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa57d7c-0864-4020-9e45-7de477e07ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056a0625-473e-4bae-86e6-d9a864e8aaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b483a9e4-5fc6-4225-b78e-085f71d94ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "650f0da6-c3a6-4fd1-9d5f-481c1600a622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a79d4-02cb-404b-b647-26a8d7158137",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72199f35-46ba-4f3b-85b5-2957aa47177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa780504-3515-49bb-8124-2848a249742b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154890b-6156-47ef-afb8-6ba14ff638ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abcc922-738c-4e2a-b301-1458af1a412d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6bb177-1b10-4710-ab45-ffa30f499c15",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a8839f-b252-45db-8104-c19059368364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58384cbe-b8ad-4f58-b66f-706c90effc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0bc190-3bf7-45fd-a44c-724070f129c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8617012-2e00-4cdf-9902-b609abdb35a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ace058-1f86-4f7a-9727-8ef6b85fddd4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5682ee3-c51f-4e6d-9ee8-18ec40f6b1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b868f654-7cb9-4ddb-b0fe-ad6f02bd36c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19136d8-71e1-4c2a-80f3-adf329dbb5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc87371c-c0cb-4dde-aaac-0e27a2702c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81330422-44e8-4032-a11a-dc5abedf6bd8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b335be0e-8e1f-49bc-b7b8-127ced6351bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3c559c-82be-4076-b997-4c8a12914e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da66f93-5af3-4346-bbf0-9a07b1cb90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bd39b6-37fa-499c-b574-e9d46b07fcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c0c0cc-aada-4018-860a-d0103c74c635",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcdc2ec-bb25-4d31-9f3d-20ee8a313ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf83a6cf-ac2b-4d4c-afa9-2abb03ef47b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74e5630-3331-40b5-9e46-e24fac390933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "965cb3c4-797e-4503-a0eb-9bd933ad1709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a86535-ce5e-47ed-96e2-d0fc13c753ce",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dacae0-8eeb-44cb-b6f7-6a8bd1f22911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a5a540-f7c9-4e29-9930-5d29373155aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5df6a-ddc9-4a91-bc7d-d9a254eef6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a0021e-7b5f-40b7-8197-f07b53baa6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830f3727-ee4d-4e5d-bfff-2a5b9e2dc607",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cddeb7-c5db-4fbb-8782-e10147a8814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34320f2b-ee9f-4bf5-b6f3-8b8d62322820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c67dcb-bf57-478e-afbb-2bdc23554762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18443e1e-b995-4ebc-98b3-1374c2d3d3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7b88a0-b5e7-4e78-98c1-e6466dda739b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66261bed-2c7c-44b6-b3bb-d9867f8bd6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74230fe5-0c7c-40e3-b36d-0f776074a6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66daec0a-aa31-4b99-9b03-3bd7b11b4ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a36a9197-c380-4776-9b25-f3b2527e1d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafd1b47-8cb7-4669-9644-a61c6f73d712",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd10e041-c058-4dec-9dd9-a14f5fc786d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d0e224-f749-43fb-b5a1-96f2e72cb062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21c7b6-18db-4474-a324-0d2ecdc9e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b1253b-e01a-41e6-a3ad-31aca7732311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5036dc9f-b2b9-4e59-b529-5c24ee97ef4a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4561eef1-e980-4286-990e-b70ed40329bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f73a646-89be-4877-94ce-3f90e57fda09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3cb253-0f69-4810-8e03-a6efd995814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6d24f2-067d-42fe-93e2-bc7a83d2907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889bf41d-0fc3-4591-914b-c41770f01966",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640dde63-23ba-4156-90a6-7f8891fd5251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215e9b5b-0f7e-49a3-8576-cb8ff10c4e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb451c0c-3fde-48ff-a25c-e4efbba71e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5910a0-b42a-429b-ad9f-a234f3a3c6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f2af16-e446-4d74-a228-24055f20c945",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed3f0b-fbf0-4722-adec-1ff43197cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1566dc31-530d-42fb-92cc-9d16cbe40d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884a293d-37d5-40f7-a7a4-982392f56be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceedaa0a-b38f-4284-9278-80517c337864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb57b57-a27f-4c24-a99f-89dba93edb04",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe103f0a-7a3f-409f-af5d-bc37b214b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292d8650-376c-42ee-821c-1a91a3b186ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbf177f-cee1-47a6-beac-5bb2fdb38c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ae7abd-e238-4c9b-a1bc-539194febfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265607e6-2a75-4294-84b3-766349a0cbe7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ecb99d-8d40-425b-b30e-5bd835d111fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdb38e3-bad8-4670-a6db-5ee49a33f20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f09a66c-e6a9-4a26-bf44-ad0554215b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0fd29f-ba61-4d4d-bf19-30b6d6966a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46227978-faf2-4f37-81f2-c35010d772ab",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549f58ae-a2af-4544-abb5-05122143848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e735ed-e614-40cc-8ac9-6a7802c5d7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e330c05-baea-4125-8bcc-1dcbec39a077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5144ed19-03c0-41c7-a710-a8f29dbcded3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bd55c0-8df9-4675-be4e-21ff4a3f65db",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b4edcd-4cec-471e-befd-29f0bb9c7f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e2a9d2-46c9-44f3-847a-3b8c73986992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4c04b6-b6b2-4e98-9ebb-c9d68e0dae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99146b7a-d4e2-48e8-8f4b-e577377d0234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a230382e-0c5b-44fb-96a6-c33bc7a1ff59",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b2af59-2785-4949-946d-c2ed703a3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0667a1-5171-40a6-ad44-7d2b8d75fd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5482d9-8060-4d0c-bd66-a76b33d2a876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d875223-3d50-44ba-b3e3-3b062d7ac855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e85ed18-ec99-4bb6-9758-40e0fa536b1f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0efd0c-71e6-4897-b824-592d655b3e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f1419a-b777-444f-89c0-cac6547cbbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49378cac-65a8-4f9b-8c7b-643d280db02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c839a2a-a131-4c45-af6f-d6de235d7ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a74d5d-4bcb-4fe4-be6f-86e68449e99b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb9b8e4-f15e-43e2-83ee-30c73f843b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d95212-5b65-40f1-8509-81ac5a781e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d78512-9bda-4885-93e6-c66f12dcf1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24db2cb2-2f0d-491d-8541-1c38f9d402f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9462fba2-4359-4050-8f85-514bfb444509",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d93f2b-5541-4cb7-a5c0-8db8d78377ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c1a082-58da-4224-bb23-ece82dbdf990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ef567d-348a-4826-b6d8-4f49d1ab36af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b66f01-dd3a-4fad-b5d0-86e2b7e53fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c99ba01-6828-4fd9-a70b-0ae1295263e9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500bee10-03be-4e3c-804b-431b0ab9af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fd4186-72f4-4e9c-9400-8840f1781e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac40a871-defa-4c5c-9ca3-c11ee8da5b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e62c1bc-61f8-497b-8648-ed3c787d18c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e78c140-5f16-48e9-8663-23e56fca94ef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bba07d8-d994-492b-8aab-da6086ece640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74997941-90f1-4813-bced-6e218d37a93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef79902-47d5-4056-8692-ad3dfe443a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efa1d81-3361-4545-b513-73fabe94d165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac899edd-ae89-4d56-bb46-6937d7dba3f5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cbc6c0-022e-4547-9add-b1940a60493a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc950334-b748-4ce3-8a85-7aaaee201123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a51211-fce3-46d2-87e1-98509126b14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b012fa1-9e2e-47fb-a41f-d234ab7a8c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40222193-1b09-4ce4-89b0-e0373cacbac5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587d4353-0c1d-48ff-a397-ec4baefc2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838a147c-f575-4655-9442-9c945f5e5848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4c48ac-ee2c-41e0-bd25-998fdd8853f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f969dc8-5af5-4692-975d-4c5cb9f0c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163580e7-dcbe-47e5-96b0-f2c5510aa41e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf045ec2-e687-45a6-b92d-33bae6f4bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a8b96c-f682-440f-99bc-03c195ac6a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d27e2f2-94e5-4756-8519-522165613f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72a51f6-8aaf-4bb2-996a-aa17bb69a936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec6081e-1e87-499c-8c0b-5be4ae1ec3a3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf665cd-b821-422f-ad05-14d19eaf660f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab284ac-b4c6-4e03-ad58-2344dbd7ef81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3fdf9b-39c9-49c1-90f6-851288bac916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ca0027-c441-427e-8113-3b55c3bba792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceb3f7c-0899-4b4a-8609-bf7b430e4e2e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848300ba-3920-440f-8bd2-77f9993a97f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f0cbbb-3792-4ab6-91f1-9eecf1625fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438449b7-581a-4d01-bda2-4807668d85ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d39acf93-e07b-4143-9d77-0bea0dff2406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acc4097-1a30-4ccc-b84c-75c17ef3e4a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908ac980-41fc-4a9a-bfe8-25910b3dd35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695831c8-d942-43fa-b47b-fbee9af1740c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb53de0-133f-45ee-b07e-ec4e1de718b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f770ed1-6bef-4d2e-bbc3-59c69a9afb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5bc00e-c322-4e01-bd94-67236d576165",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6239c625-ee44-4c69-9ebc-41ad3253dbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b52971e-755f-40c9-87c2-f2c0aef87db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264c15f6-d005-4cb6-9156-0b8bd70980c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "daa8881e-b07e-4455-a9c5-9d1e5e00edfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fd1c14-0f37-41e6-907a-0c3d9939f8b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4845c1ea-7f25-4eb9-9edb-2420e4bfcca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618fdcf0-af62-4a30-a620-dabb5d2f604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3735ea70-82ae-4a3d-803f-f37d3d17ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4be9eb-9ca8-451d-b0e0-d2ccc4672722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ad45f0-e1ab-4645-9ffa-50e72952a42f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977b763f-6523-47c6-810e-18dc4ad7e966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a1bbf1-44d4-4b6b-9cb0-ff89d1e4ab26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb7a739-ee9b-4e4e-8887-f31bc11a6bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce959ea-347b-4703-bd4a-dd74a313aeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee24e2a-e273-4065-8665-7f9d6b0afd77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64960ef-137d-46d3-9145-01f31c738f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a94a407-6be0-4952-b3ae-58b420f97936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3db0518-b634-4084-ac7e-08811205c4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a5d27a-e078-474b-9d9f-0e9716df416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dd74d2-73f3-47d7-aafe-d77f7c78e673",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f521e2a-8104-45ac-8978-5b4e0e6a613d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4138cc3-662e-4aed-81b5-73a1accb3cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ce264b-a220-47c5-8468-b10a95f9234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78ebfa4-94d5-4eeb-8e46-aebb5634bf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e267fff4-1491-4cda-97ee-1c6641323825",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c4133c-e600-46a2-af67-39c011186ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6ad606-19ea-46bd-8182-25a87cf4dba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b22228c-78de-4509-965a-49e26a63d824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "246f0419-d715-4ae6-883c-d723394dbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6270df-9f88-4913-969f-12346bf6b45f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc426c2f-ca8f-4556-b67e-2452b8fc825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2f626e-fdb7-48f2-8124-b28dd97f12b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8b2717-3d73-4fa9-b357-d6b78d8dc299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42586d7b-da0f-49b3-b49c-db190edf1efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bfb08f-3dc4-4591-a81e-66677086a61d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83642dab-a24f-4c98-b185-c56a66dd4b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eb1312-4843-4ebe-a6ef-f2c6dbd69639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3518233b-a96b-46fe-bd0a-4cd3060780cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63ef022c-f0fc-4320-9e99-716e099ef6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789fe995-19cd-47a4-8942-eaffa5011918",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbe882a-7206-480e-9f3c-cab0a2a8c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70514fb1-51ac-47e2-836e-31035a24e08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f405bc14-b3fd-4daf-b181-5ab2f9bde7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac6fa01-7278-4e74-b5e0-9c9dcce195b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d380787d-d801-4883-9e31-620f504008a2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fbe586-c39e-4237-aaf2-159f4361f89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2433842-c506-4dcc-b92b-af8ae9e9282b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc419d6-9330-4c31-89ce-b1662090ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8ca93c-17c2-4fc0-89ce-a8ae692e8369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb21e895-4297-4be2-a4f9-b36775412698",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5457556-2317-4d14-aee3-fb86db8a9585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2fa9be-5454-4530-86d4-b45e2957fc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd3d2c4-7039-49d2-91d6-030a3845b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "deaf4b78-6d79-467d-bc65-e7559a719b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33271f3-2bc0-48b9-b7ce-8d177196a970",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25dee6f-a443-4294-bfbe-253f0147f386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6426d02-e5f3-4781-ad94-7a4292471b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9eaf34-924a-42cd-8525-3647ec5b63c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2aff90-c734-467b-835a-2c6742236ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ec0260-cfce-452a-a1a8-53256981ba14",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902778de-548d-4e19-b996-28eb607a087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446ffaef-73f3-47e0-9f84-24f18e966177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9ea894-e0d0-4f5a-809f-2b7c3afda3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "155c6fbf-cdd2-4bba-a9cb-c0e8e2d09049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f28ca1c-87cb-4fd0-8f67-189ea1afc5a9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340531b9-3865-4222-b128-bf0ed38666cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f24c1d-ae3a-44db-9889-42128181ad12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9faa51-62b6-4cd2-9e7d-d35f937dcc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d2a44a-8b55-489c-b4c8-2c710564ada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8725d4c2-87a5-4843-bd38-ac1851e98a3a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f94db8-a8ba-4011-ae8a-7d1a5eb41a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf6bfb0-10ea-49cf-9df7-29843129f0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550bd346-838e-422b-b596-2661d34ef60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85224720-c8e2-4e2a-9041-f770618739d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3894ad7-b1cb-4fdf-8f58-e60f6165f5af",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ccc990-a3c3-46a0-a176-1a60712fab38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41320237-7d87-40cd-b5a2-a32ac77c7cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0200328-2f25-4858-aaae-dec28b41076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaec91c-6a92-4305-89a0-05106f8a8c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b166d4-c0be-4ddf-9873-1725592ceb08",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17beba1-cc2c-4671-a80d-11ac1bdae0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26c0dd8-c348-4dce-b94c-f5002f021479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840e0033-a802-4794-ba5e-29d1ff4f5bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37cb8ab6-5244-414f-9ada-b5783afb0b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883bc305-149d-4470-9128-a2c76ba62065",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e887e0-0aa8-4c14-b0b6-990d4e606f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f96f96-4556-4320-92a1-4b2c5e4a3222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694de3ab-1a89-4941-889d-b6ddfb0fedee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0a781b-7545-496d-b852-cf937bb038dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc26eab9-7f1a-41c8-805d-d35a013eaaae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8b421-5ad2-45e8-861c-a9c8f09d7730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c7187d-0e89-4937-8949-af66939b8144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da4e66f-5fbe-41ab-ae94-141341907dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "819c4743-07f9-4b69-a508-234fef132adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f883851-c6c2-4068-bac5-0dc9ecbbc3af",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8184a6-dd68-4141-85ea-6d7452ab9584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c872753e-9360-4f10-bbee-e41e8d4b5acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab63895d-1f94-4140-a55a-44d279de695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "217cce88-dd79-4dab-8f0c-c6a9ca211ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a02bf0-da32-48a3-bd59-0d868058bf43",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8de6fff-50ec-4de4-b93c-fd29c171a394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494047f4-b0cd-46c2-b8e8-b67aae84dccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ba1ed-028f-427d-b023-03437e79b16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d199c9-6ffd-41cc-86ab-e5ce8a836caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4263dcda-f9b6-49df-8288-562421d5bcc7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47991a54-f9eb-45a2-8ce3-83d7070fbaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06160531-658e-411a-9321-5ca3d3c8f733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d6fc5d-069b-4e26-b7b2-e6f1d22ee9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c93a9a33-63cc-4c9b-84c2-3c2f35b0ba05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb53bb16-9c06-46ce-b0a9-04012f39b831",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a3e140-d912-419c-97d1-f36a19b02261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c3155e-4cb8-4d87-a821-7f148b1a86d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af5ba73-f982-4adb-88bc-53ee0c30ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3c9079-c1f2-4a16-94f2-9c09c57c0029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e4a8d9-7c85-4820-8042-a8b30110c5a8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8a11bf-2cf4-4bed-9186-c9abe66149f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f45f91-4298-42da-95cb-7491b324de1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ad979d-11dc-4372-84d4-30f1188cad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "919b237b-0b27-4f01-86f8-89a9525647e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f281b51-669c-47f8-b8e0-b9a5796596a6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b2f5d4-a152-4413-af01-09fae53fd02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d1aef3-f2be-4294-ad72-d4209104641e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff111e-dfb8-40f0-a74c-6a70d0f94075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c326673-fecc-4f08-b78f-5f67bd94941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405063ae-52cb-4cda-b218-d86fe80b87aa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8ee2c4-f84e-4b37-8185-397f1297b245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004ae99a-43af-4d93-ae71-6b5efc8dd268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6031137-46d7-4080-af9c-3427262aaf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e17702-cd60-4d5d-b5ae-d516271d0f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358c13ed-054b-488c-ae46-a8ee40a16345",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b8f1f0-0124-4505-851e-9da547394988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c599edfc-8a1d-4856-bc2a-385fb1af9968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1f66c-8abb-4a76-a4b9-9630ecd450c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d9f9d4-3d00-4cbb-8716-204971b4ed67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dcd08c-9438-479a-8df1-b17603766c58",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcf8b6a-9000-4756-b01c-b56381a064da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad9a415-eedd-4f28-9d56-5f6682aba59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7abb71-efb5-4637-ab39-e147c678f11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3000436-fcd6-4f5a-9e65-c1a63c604b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5b25f0-b5e2-4a66-8207-97e17413f90c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d649c99-66d5-424f-90eb-da2379d59a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc6e047-a7d5-4978-ac44-950054fdee44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbdbd25-a7f9-41ea-bd50-9cb2dbdbd245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a768ca04-da49-4ea6-a4ac-0e650c9d0f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8626287-dac4-420c-959c-f10b40aea3db",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a854eb33-ddc6-4d34-acec-c2fa123fc79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8573da4-2e4a-46f2-b652-8976361c7dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738fabe8-e47d-4fbe-85dc-ced5ef305e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "61c1eb68-a8c4-4bc9-b068-11bae2bb6de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ee97af-d41f-49da-b325-f648eaa1ff85",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ab421e-8b79-4c07-8399-8bc69b1b04c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01e70ff-f724-4084-b710-456c9d82fc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04316753-d92b-4d11-9f43-23e94cef77ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f33b1dfb-42c2-4dd6-aa61-1027801b3916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cff989c-b922-4c7a-b50b-e700a167a4e8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c228a9f9-26b6-4102-ba20-c2758e7f94c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878410fe-1c1d-4bb7-abee-9ef8f69aca23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704fe838-9000-4ab9-ac2d-9df801139710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce951f7-0771-4ec3-b1d7-1f9165b21ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048637e5-dd90-4b3a-9b5d-98dd0cda2bc2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c680564-4602-49e1-8647-4b9279770b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6226d3-36e2-444f-9863-9c1a282a15a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d52033-ee65-4c6d-add5-26cf9831dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0b1ce9-ba92-4a3d-9808-a7fd2d7fb29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447ec4f5-84fd-4b59-8e97-58fab4fe5f7b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefc7fa8-af87-4ee3-b3d6-02ee6ed4bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8504a4-73d7-46af-be59-ee8a5e962b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51be6bfc-8a54-4cd4-a0d5-f3924d231364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d682201-8571-4f57-ad88-3c73435fd01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a592f630-0edc-48dd-b514-c9b91fca4256",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db83a3f-a832-4a53-9dcd-68f38989ec15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fe2852ef-6905-44ff-8b66-98ac72a275ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe650e80-3e40-43f1-bb99-9b21211c9f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97bb5920-7c0a-4e11-877f-f5a1fb873683"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17d9aeec-8bde-4c67-bc3a-1e96e1c79819",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d73c392b-a1a7-443e-b624-0c5dbd6ec71b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7677d692-83ac-4946-b226-dcbe3977a1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7de48f9-1391-402c-872b-8ba5c0ed6783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155175b5-13bd-4296-9b66-48106f4e6e9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "773b0ba6-0e1c-44cd-a6fe-792a7a8c4472"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbc42ab8-28d8-45f0-a9e7-1b114b511882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "649b7f01-a483-492b-9dff-e7843c968647"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37614e1f-acfd-4dfa-ba35-5d5dad54465f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3883a160-cd63-4c7e-ad60-3845a7f70231"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3dc255e8-0225-4b64-880c-df6e6f85e49b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f0f4835-9fe0-4e2e-8fa2-0eb76279be89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a1b3c54-656e-45e4-9e90-037ab94832a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd913412-ea9b-434c-a5d5-ae2bf9153099"
                }
              }
            ]
          },
          {
            "id": "101b26a6-e8bb-4564-835e-fc8d461dbf94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9a58352-30b1-48ad-9b9b-a82e39beff0a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c78ded-ffdf-4233-9728-87ad2250b8a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf5d50a7-da63-4c2c-8263-2c380d98e36c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648b6df8-6b16-4ad8-8abc-05e3a6f3265f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "109d0720-97ff-4fae-aebd-8beeceba3f09"
                    }
                  }
                ]
              },
              {
                "id": "36fd38a1-53a2-414c-a9d4-393f5c461479",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5addb190-cb52-4111-b731-e88a7febe84e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cd51b3c-4406-46b6-9947-d0a652676031"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d48d5c54-be80-4bd3-a85a-b27c5a0ceff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcfc3ca4-5482-461f-beab-be0cb123aea0"
                    }
                  }
                ]
              },
              {
                "id": "688f37af-0552-4e93-ae26-74ca189bfe07",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "869e7c9a-14fd-4913-93ea-b9e974289162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a18b2974-3a00-4f5d-9dae-2b1d80415ce1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6de77afc-fd4f-42b2-8971-abb9fdc68c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f0283a8-4eb7-42f6-bf4c-6310cbfb3944"
                    }
                  }
                ]
              },
              {
                "id": "91f3a3bc-0880-4ddf-9a57-4be46c8b0750",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "219a8143-00fa-43e8-a0e3-0765d21b1c4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e4bec97-8b4e-4114-b9f4-4a436d35267b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f2f0154-493d-4459-a48b-0ff26d6ba328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "170ace50-6040-4e80-9d8f-397cb0f65506"
                    }
                  }
                ]
              },
              {
                "id": "48e6057b-5b6f-4437-a366-d08ad13979b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80567fb1-ced3-457b-99f0-9a861082f41e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c828e2ad-c988-40a8-aede-b198b0de15f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28af71ca-b8cf-4111-8911-73007812ccc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b6a7a6ae-e46a-4929-9196-03ed6bf9a906"
                    }
                  }
                ]
              },
              {
                "id": "9a18a89a-85a9-4620-af69-5c9e4b3a44f4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "767a99d6-0e15-4f5a-afac-1294f843872f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d6602cf-be96-4458-93e2-2c50c8a10127"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e174fa6-112a-4d0a-b052-366b0ae330e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9daa185-55ab-4f1e-8f8c-88d69de303fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c11f4bd0-2ded-4acc-883f-b0910db94b55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "502f7510-0ae0-412f-acd1-6c0bae13550d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c397cecb-1bd1-4b09-8bac-641b4158f1ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9cbec7f-3d0a-472b-bec5-0dfbca43356d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d8114a1-921a-45f3-a406-462bc6618d97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b9066f11-3a6b-4923-9e27-51433cf854d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cc742da-bfbd-4557-9186-13c2a5aa5cfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03323bb1-bd8c-46da-8b95-77b69bbcca52"
            }
          }
        ]
      },
      {
        "id": "e6eea4db-b0cb-435c-bcd2-6f61f606263d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a7b9ebf7-0817-40a2-8e78-1b8970f2f149",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f0cb93b-1222-489f-830b-de2d51a2dd5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a841398-8c13-4967-a0bc-4c12942b73a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c491fc41-ce38-4a4a-b4b3-a7e5c9862705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23f4b63-95c3-4eec-a854-cc0064387b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cc847c-2c82-4fae-8165-6f9df9d829d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5466a6a8-ee2a-4b3d-8e22-a9b6fa5f7368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd50adf7-1af4-4dc0-9112-27073f26957d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a443d8d6-9ecb-46e7-9e4d-17da3f8a2064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463ce8e4-2fa2-4cb5-b445-bad6bfe4c397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a316d89b-8bae-4fb3-be87-d2c7e86ca070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4538445-b528-4a9a-8a50-f2e5f07d9290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b6c3b7-4abf-423b-9995-a7f0b65c20d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef14755-2cd8-4c9e-9443-dd3e3a92c020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e68ca68-954b-4ba7-95b5-a204012ca0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b59c2c8-321c-4c00-91d1-7ac591a8c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d03542b7-e4a9-4d32-b89b-b4e79cfae55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3666267-0bc6-4c33-8522-e3e5fc04859d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d148ba15-bfeb-4525-88d3-6e5371f2d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc4fcab-3735-4da7-9169-ae2f8988f71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c81cc46-46eb-4512-bb77-c7f238fee256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82794236-0aa9-4647-b7f1-f8b787cee43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a025f0dc-cb66-4ec0-a863-6fd1c09c6e1d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6477ec65-cdfd-4283-98c7-eb1abea1772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa9f12d-c036-43e5-8a49-acd73b47db96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b23ad89-49fe-4666-b201-4ee60b3605d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3488da4e-cc6a-4aaa-a7e4-b09211e7df3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0c23f7-3a66-47a4-9eea-6e47f26bae0a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d892918-3894-40a6-bd77-5560916d036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c104610e-84a5-49df-ad2c-2495bb69a18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb741ce-1801-4f16-b828-4cfbaa84cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54cd173c-773e-4c06-a4eb-0ba995fcecd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a05610-9658-4507-9134-7f7d5de9d9ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26521f1e-a96c-418f-a16a-249029cf1e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38663b9c-e1ed-4ce1-a8f1-b475c8be07eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e696dc8c-119a-4295-86f2-f6376550c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "04570dfd-3d56-4102-9c54-3288e1db368a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27efa1a0-9006-4c4d-bebb-2f5a57cc911d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b195f4-a03f-424d-9780-e721f10be12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edb1c02-a3e4-4553-84bb-46904475150e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c14c66-7ccd-4865-b23c-965459b65150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b20814d-53c5-457a-b2a2-f563747d6aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33c7dd6-4e32-46fb-a44e-0a72dc4150d4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcee9168-ad97-49d8-a2b2-bc018c24612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a482357d-5085-49d2-83a4-9d7dec6833a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5b7d48-9546-48c4-b961-030cafc7bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ea511d-1cc5-402c-933c-a6ac68d0e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df20fd9-6226-4f68-83b5-9bb73f50f791",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174934b4-21a0-4faf-9c14-17f7f0c2ac90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7280d910-5808-4f0f-9bf3-1aa4d2afb80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d21aba-e187-48f0-99d1-f10768a93fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88cb0641-6f3c-48f5-bccb-85dd23e16df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032244d5-bfc1-4cc1-ad21-b59cd3e260c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8393a61f-5359-4cfe-868a-6b17403c982d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5247a00c-4412-4740-b380-19f99ba2a7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f595b94-5a7b-425c-8d61-cbd21b884b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4833605a-5a39-4ee6-a39e-0acbff591431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4b3858-7f15-4353-aaf4-1b7ebe8d3940",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df368c44-6c10-4ee0-86d4-b86e4550f4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df04033-26ef-473a-9609-0804cc308614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4dff42-b4e1-409f-9a1e-02b98fe26310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a8bb70-4ded-4d00-85ef-799e5bc4478c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887278e9-8bda-4357-be96-0c6822a58563",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9de6ac-528e-4dc0-b0a4-ec7475fcbb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d094e4-aea1-44b0-a886-ed245174c110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35301a7b-aa4c-4f28-b13f-dac2115e07f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a326a3c-1212-46e4-ad77-8bb722369182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0b252-bc9e-4a2a-a3a6-fb6ac1c5b365",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7c71cb-1d5e-469a-b448-c63d1dc29492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db2f190-ab04-435a-b36e-a3bf37f737bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf19fe3-e2f4-418b-a42e-51aea06a51c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7294cd36-e7ae-4f62-b130-da88e74e4b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29d85a-2d34-4fbb-be6d-b69c7cafc49a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d51faf3-d68d-40c5-a255-53df95be36b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790045d2-4840-4111-8061-0aeeba9433e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de0be2c-afac-4d4d-a659-87f36662455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "72384171-d279-4e1b-bdd7-027a3d6f1fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df13efa-9f39-4a35-b35c-8221bbc15c42",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7595ae-4a24-464c-844e-87ad203139c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bd4b85-0d2a-4109-9290-ddd684639225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1056b2f7-ab48-47fe-bcb1-5e095aefa092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6890bbd-9dcf-445b-b3ff-dd98d602ecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d07801-6a91-4a52-b940-c714821fd837",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327cdd82-7b5b-460f-9818-7f7a2bfe0952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e04d38-c21c-4d38-8acb-6a45714ca699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cfd810-c1e6-49ce-ab18-0302f05f4d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3135e5c4-4752-4389-9390-f8846d8b81be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd22eb8-746e-438b-a606-7d98d3caac21",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec262e7-d1e1-4088-8eaa-29ab9036213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8e86b-c55e-46b2-b5a5-f4df01abf339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29e61ce-9c97-4018-a14e-0dcce26a2d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3822261-e46f-4e17-bb4d-28f13927f195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e8f9ad-d267-4cc4-8988-29ce2b5460d0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2178a-1726-44e6-8b11-78b2dd57dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a83de60-fe6c-46ec-a4e8-c49c664a33d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f5fa64-b359-445a-aab8-7f0189bd1225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cca186e-314f-4951-a311-f43b4a32f98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af97a088-8f09-4860-a582-4c83073f976f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de6b14d-13c6-4315-af01-2d137e13b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e0c478-953a-41d3-af51-d30cd50277cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44856ff-72a1-400c-993a-2d31526134a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b54d55c-162b-4171-aaa1-352cc062ae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8024f68b-cdce-47c3-90c3-b6dca51262ba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265dd182-4a6c-4e99-a63d-d39e8271413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568445a7-3bed-419a-aff8-19f1669704e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1896d54f-0395-480c-9e37-28c01056841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37715799-be34-4495-ab16-a0039f782f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db80871-8126-45b5-b9ae-7ff21d72ce60",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f62bc-f23d-479b-b036-f42e22eb3b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e78973f-6138-469e-a29e-3ee34c9d31de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb2baa2-8a57-4c44-ae64-4ccd69eddb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd869e6e-d02a-4ca8-8b78-22f49539e6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4403677b-7490-41c8-af18-347a469d6a67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce2294-965f-4f5c-b1e8-83ec1de60bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac82d34-969b-49c6-820f-4c9f92cbe2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e793b3f-be4d-4425-9115-cbc90444b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed2f322-2668-4d1c-b3b9-e9a925289bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9337e8-b4db-4160-854e-f0ab581017f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507749cb-7ab8-413a-8002-68c09f625fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e59cc9e-60f1-4318-92bb-fb637acc5687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc7c826-e7ff-4f45-83d6-9aced56391e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aeaefa7-e8f1-4361-b4b3-bbdaf7ec80c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4652fa92-577e-426a-9d9a-572c06c88ff4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2d631a-a31b-452a-b8dc-ca7268ed250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c038e2a1-0177-4fff-a8ec-11ff35d2b7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52525e48-2fb3-49fa-af39-faa3d687caa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099e0c01-e028-40bb-8b21-da455684aa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9118cfb-015b-4727-b4ac-0d8bdd05140b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c9fc22-2f24-4254-893a-bc192b8796d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0074630-cf6f-46fb-9ae9-808c2d78d45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a42fa8-658c-43e5-9a46-523e7111d45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccf9088-6367-4c05-bed9-086449dfb960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf45a24-c8a7-4cd5-b630-25437ba1851a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0ae479-741c-469c-ae2b-52606616c868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913854af-5989-4d81-a4da-c12563d60fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d941d02-3307-4871-a677-5cd51b720863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9ac86b-b2ac-4e1f-9e31-73f46d7067aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d67d5c-0629-40ee-93cd-b7fadd235786",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ef2def-aa68-493f-ab2d-3118ad4d1807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99032cde-c9c5-4da9-8418-62e278028eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed44d2bf-5656-4cb3-bb00-2dea8a15fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "540ff019-62d8-46d0-898a-980a41e988a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dde457-7984-40ca-97fe-d89ccc8bc0ce",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dce052-78c8-4050-ae73-356091c65e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb7f382-49e4-4add-a843-4d0e84b0d6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97108c47-f6d2-488f-ae1b-20b7ed196e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d43e9b-d12c-400e-bc87-15587250ad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f256c1f-2bbc-41d9-8dd4-39e1e4ff76b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545e57b7-5c1b-4b29-b347-0abfc2b70a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be63d893-7e24-4847-9bfd-04e5a61f7baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db944703-f0a4-4903-aa4a-f27696e4dc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb115295-5290-4d8c-be9f-e7aefa3e8bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d67b0e-8b11-43ac-a42a-e336ed63d3d8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e98a3bf-3323-4269-8f3f-36a25e1df2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2caefd0-abfe-4bcb-9d6d-a9e40cffef2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a61bec-eca1-4122-bccd-56dfd70d46a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40808d13-9e23-4d7a-b689-066b04cd0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfa251b-17b9-4d36-88d6-305c9f430e9d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a997dfd0-b4b9-4b06-bf1f-b0b660e5ca7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739eebac-cfce-430b-b51a-9ec306304432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbda4316-4ccf-4ee2-9959-142c4a73c759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d3a689-be17-49f6-b807-21e144aba72d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b143b11e-3e2e-4208-9cf6-43eae8e81672",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02a1b3ba-5765-48c3-8cf6-7ea2743d4315",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6904a1b-1b09-40de-8cb4-4bc7d9250455",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aae017df-cbbc-4e64-8293-45fdf03dc696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72499a7-78e1-4add-88ca-8d116c853070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42cbf15c-be91-4ea9-9bf6-a0f17a389302"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abaa140f-b9f1-4030-a86f-ac0bd2dc7836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eb45d76-14ea-46fd-884e-faef8799ed78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "359c1b0c-644d-42b1-a562-bb50073cdf58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c7288f6-8bf5-4143-af68-a9c098fc4632"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba44ccf8-0a35-4295-a0f0-6a5eaf06f0c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba49b842-4b6e-4446-87a2-92d4d626922a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab2cb814-a35c-44f3-8046-2d1407c3b425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "050bee62-046a-47f7-a34d-8c42f7921e5c"
            }
          }
        ]
      },
      {
        "id": "cc9d5382-c89b-4377-8090-a70cd7a8eb73",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "849458ae-6279-45bb-9814-2617602824e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c069ebee-126b-4d27-ab53-51e663421c5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c8bf835-4e92-40df-a37f-1eeec5456e6b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9103e1-c8d3-4d7f-8f2c-a0d9f8fb7ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a56b0d-9a1c-456b-bdca-78dc5bb64b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765dc702-6444-4940-992d-8a74db9be092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1b6aba-e488-438b-b582-4c30ef33d640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18474ddc-5198-444d-81e3-eaa87c1a9bb3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2a1a5a-f579-4a63-8d98-500b017ffc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d390fa20-e886-4edf-9def-6229f735f325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a601f710-a78b-44e7-b4ce-15490455c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be15f5d-16a2-48d4-83e2-55749b9f02de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe0133-03c4-4aa8-b4a3-e81441f92fea",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a165250e-bd10-4280-a1b5-dcb2501c128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b7e820-fb34-4fe6-b9c3-40a13883babc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a386d2a0-da0c-4b13-b746-3475c4a7dd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caec8d20-93bb-44d0-be42-ab276cf9485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c343060c-cd35-4c12-86ec-6088ea6d17d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d10425c-6369-4c3e-b06d-12117bf39d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ca5440-06bd-4731-b1c7-37b9764e83df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd59700-c605-4915-9e3a-9b00e2e21f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec41a855-fd70-4ac3-b831-a4956a38abe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869aecad-005d-4d9d-9d97-c8c26b2bb05c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7342d1-8fb2-43c0-960a-0f83d84b664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c7efd0-1980-405a-893f-c588f3fbcf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506eb0dc-cfbd-4d94-841b-62689b28321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4dc59e-5b5b-43d0-94ca-6ee1b9947197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c6c9ad-4082-486d-ad16-1afd4fb27b74",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddfef68-7f90-40c9-bf1d-154e90f8013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60da94ec-7012-4469-a6d7-f1101aefbf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d36197-a4d3-41ba-8cde-764b42c47190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2262fdd7-a739-46ff-b118-3b19d9e58ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4891a5-0cc5-4935-84a5-c6b1fd159d0b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cc41b1-1788-49cc-a7e7-a2a57564239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3755d884-ffd3-4591-a1f4-b86202d349ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eda9a1c-91c2-4d7c-843c-aaec6365c0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "42437963-f36e-44d9-8fb9-d2bcd8f3be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c32ee23-5b8c-4d00-b59e-978ec1477eec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff03537-ae26-4196-abd8-6912fdf6002a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a77e80-6829-4697-8c08-9fa45df0a6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5b59fd-f46b-4b37-89c2-54686915902c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23ac2a5-b49f-4200-9df1-559e34ae6fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dca702-3518-4a8e-b374-314193f8518c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3334b5a-15c3-443b-8578-538673905170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b592c70-0393-42a0-a38e-c1a775bb85e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bbdb00-34a2-4a49-bcc2-af8721d9f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ef3935-2054-4636-ac36-104b06f7b1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494db547-158e-4019-b5a3-530e7c2d4cae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd8832e-0704-4b95-920f-758a9b8b5505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3221ccaf-a104-40ad-b084-16bbc3fb3c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7baebf-5bed-4d23-9c43-ee0b351cd76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18563e54-a1fe-44e2-bd4f-e784f6ef9a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60cc83d-12e1-4a36-8892-6c4c49d75a2e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b48347-3edc-44ef-9758-b7ac020c00c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a73e0f-c0c4-4923-b89f-913d2bb6e9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1042d58-c995-43ec-8c8f-c23cabf3eb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "63d07870-ea20-46fa-8507-5b8f420752a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731b6c3e-5700-4734-a6a0-a957441cc58b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0be8a4-e710-4151-913f-6738d086d969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b707b7d8-a19f-4020-a680-cfb4ccf06fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5adff2-67ff-40ab-b83f-89b4184644ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b9c2cb-62c0-4807-8b08-dc0235ec50b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fc2b98-192a-48f5-93fa-c558b43274d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef375e-3668-4f69-9264-7716ac6fa443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041d49a8-b65a-425a-a20d-1ad858012dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b402c5-5bef-4c33-9319-b937bc0e0e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca9e3a7-f83b-4bb9-b09a-f8126dde94e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923cf91e-7f1a-46f5-98e8-7971ad2d6392",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e6dec1-5f2f-4d05-918c-961c6acb28ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad848161-5320-4d4d-886a-fa63fb89a449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad355028-cf18-4529-bfa9-b25399d2642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef25f0c-9905-474f-b8fa-480580dd7883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb88166-a93c-494a-9c98-582dee58b544",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db297755-1626-4f92-b40d-106e24011f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307432c0-19ea-4d5a-aa6d-6d460b9f32e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e8df6a-1183-4bcd-89cc-b865f22b35f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c98248-7799-407c-81e1-521f06358328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aa377e-0b7a-4cd5-b542-fbe53d0ee77e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd3fd4c-6d61-4d9b-a523-2d0cb8e59362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d40ffd8-9b55-473a-b9c1-929f56cc01ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a05677-c266-486f-801f-a457eafb109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d232357e-c956-4d80-83ef-cb047b5ee52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86b5bad-5713-4712-b61d-6ffebd418f38",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda60bcf-8ce5-45d5-be09-d3fb42c94d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78670066-6008-4b26-b6c6-0736af989f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f47f808-7f9c-412e-bd60-a86a55d644ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef97b9c-b964-46bb-bbb9-047d8fef176a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8205de-fba1-4b48-ad5e-d95fb722d8e3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b8c77b-6efa-44ae-8e52-fdc7d383a252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b8715c-51e3-4035-8f92-c9072b7ec8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd664cc4-0d8d-495a-8c17-e776beedfcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f885779-249f-4169-8e71-fa1e33146c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c361ea45-369d-4039-a197-10f02a9a8159",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a9ceb5-8c67-44d9-bd11-e0ad497d0800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0687a8c6-2708-479e-b6eb-67c9f5fc5811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7016f3-c3ef-4579-baf2-d2c004fc2eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bd1008-bd45-45ab-b4fd-40e6812df50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b167497-7560-4710-9361-7488b837759e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5dd356-b913-4388-9b1a-54512ccd26e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfa17e7-7684-46ff-bc2d-8395f8a8108a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edca809c-fc3d-42d5-a0c4-f6959312d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5413ee94-b4f4-4c9b-8d2b-d0137a41d92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20149362-02f7-4836-a997-ff8b48e1d6dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d414b0c0-fae2-465d-8076-3fbbafe83030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b85e19-af7d-4e06-ac86-c9b33e259787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ac289e-e3df-4a9b-a3eb-4a53f72c1041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddccd1e-c8aa-4166-b932-b2c9869a1dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b96385-6371-4de2-836e-fee061401f20",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1847b3b7-ca60-4507-b8c7-4d8a5af3b543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43702cbe-2b0e-480e-bdf4-c1cd1a1e9d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497ffb1-7bab-4db1-b9b1-3b037c21284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b1413a-7505-428e-a1d3-b9f4987a58da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285d2575-7791-4ddf-b26d-16a6eeb4faa6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d49d29-aa20-4605-83f7-791a054b8b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249d8ec9-74c2-4ec0-a40b-20a406afdb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d12ef-ddca-4ecb-9404-be48b2b0ebb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043059c1-879b-4fc8-8bec-78abe329b22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf853c82-4d99-4029-aa82-e32b9a391ee3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf326795-4897-44d6-b678-752ef863b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866901ea-737b-4105-9ca7-f926b2355db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5699815-198b-4263-988e-eb245793bcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f929b870-fb9c-4aab-a4df-320dbcf5870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed99215a-7f3b-49d0-8697-e017c883e136",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a72846-dbd5-41f1-b4c3-95225718a034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6426f291-40a3-4683-bf46-2419675a9f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b49505-d0c3-4168-bfca-9d0c652ce615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f4d128-a82c-4a20-9e65-c9919844b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92f85a2-404d-4afc-bc55-c651e7051715",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305c5f27-ac49-4fe2-a10f-c134239a51db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5720e168-b2fc-49d7-86fb-ca633468337a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f252c3-0ca3-45e6-8e94-9a5ebf3ef1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc81dbde-9e6d-4bb8-80f5-ac555a3a4291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18fa0b8-ff09-45f4-a555-93a4ab78c33f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dbbfd7-52c7-4b00-a563-747d7ff4b1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66511848-0e1c-47c2-bb8f-538442a6abd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c4a120-c4fa-4670-b83b-1289947d81e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d7d8b7-aff0-4d77-84f2-cbed57b690bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38359f7a-2302-4b3a-8050-733326dc3720",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd11192c-661e-4ca9-9061-948f3e18abd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f820e724-3286-49f2-a691-50b408f343f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e68e6e-4698-44c2-8cce-839fb5ca319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b5c734-466f-4a5a-84c2-cc095b1b91cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac34a30-bb4f-4779-a1e0-989cecf407c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed1e88a-6ee7-4546-8f77-715349642906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c54480-a83c-4a6c-af31-f734f2f07260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f800bfb-269d-42b7-b81c-9037903d125c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abfd5c5-a9d8-4a40-b496-a9661db2ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4d3213-4810-4255-9cb9-f24c0ff33336",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a69fd9-3ef7-4e5b-a42c-2c92d6089551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3233c6ca-565a-4c63-a835-ebfca1943a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5dbaba-40d6-4277-a1e4-1dee8997903c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd64f5f-c0ee-4d37-a7e6-bc72a6940ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428fecbd-b40c-446c-8af3-b7022dcc5ce3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d0443e-5303-4a77-b852-079e2943cd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d131b3-0e3a-4dfa-bda2-5ca70bd58d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1272b11-b75f-44d4-9862-5a16d6e9e83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f85e11-b32f-426e-8f87-d9b114a8e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b70bebd-ed9b-4511-bb8e-ef297b2c71e3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7ca456-d3ac-4734-b23e-850bd5b1c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abab4af-a58d-4b38-9c1d-ecbf0818dd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e9eef7-92db-461b-8e5f-24705a7bb408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64344037-5638-4e31-9bd9-ed237a4d994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a8cf7-3f0a-4f82-9db6-c21820d61fc1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba4afa1-5ffc-4bde-a67c-5c9b82a28501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f0cfb5-5c71-4016-993a-624d3756463a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c9a83c-bebd-468a-9466-dd74d0c04c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aef462d-01ee-41f7-b638-148d9c362dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc397c87-430f-4a44-b699-d0532c325e06",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e5b7f0-6dd9-4dca-8aba-28acd19980ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ba7af1-95ec-4a45-98db-e0f4322ac67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3004a0a7-a0af-459a-8b91-a691a9db4490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "596048fa-d39a-4786-8d71-08561b53eb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0288f8-9687-4959-8f44-ece3cea02c9b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b212ee27-7d37-4024-b6a8-83553cfc7b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0afcd4-3da6-4653-99f2-e142cd35d8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f2451-8442-4c85-b193-1193cd9e5d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffba6a1-c944-4fdc-962a-7f7f0a9127c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab664b6-bbf3-4403-a486-40d657d87da2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c007ae-d56f-44f3-9f55-83684e2a6fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e46aca-26b7-476a-8136-bd7a88ad5526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9749a7f6-f356-48d8-a4e4-498626d34ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e362470-0f13-42f1-8e84-1c30d0231cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e1627c-8847-459b-b719-2e8475955c46",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedd2175-e26b-4047-ba8e-d0f18a5eee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86746591-32e1-491f-a5e9-7e8b3b499ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7e3b30-bc24-4479-a547-65328ac3b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ab7937-2dfd-436f-803f-8b604ef82f99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74ea63f4-dde0-4c45-86a5-6ae2e6633aad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32753136-834e-4c0c-b66c-ebf284a31f8d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce8b382-9d67-4517-8048-58fa7fffd9b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4f853c0c-52d3-40c7-a5db-a3f39cc98909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd551833-02df-416e-b818-3d36b4d20f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "683845fe-e3cf-4f81-8aec-3cddb1ba0f33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf8d186-bb2d-43e1-b067-481ba7bb2bbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f639747e-6469-4675-bce4-faaa2b0f8451"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "082391e0-fbd3-4f32-99a3-554365b5ec64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90910a4b-20d9-49d5-b0b8-eb1889c7a233"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4dc49c3-c64e-476f-82e9-03ba3fd44546",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59fa4235-0805-4960-88d2-14e51744cccf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88fbdb3b-e50b-41ca-9a22-fb1d00614c7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a964813a-fbc6-4486-863f-49c6183b509e"
            }
          }
        ]
      },
      {
        "id": "0aa5ea7c-366c-47e4-838d-10163c9621b3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dc190342-285c-407a-8c2b-996479996e73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9210557-4399-4afc-b12a-421ff914a1c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb12c741-7dd6-4b98-a116-bb0996d055fd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaa8076-c23e-4565-82d7-b5173fac0394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edf4e3b-f150-4979-a5ea-d7ad489dbec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9564b0-6c50-4b6a-93c4-22d688d2ab2a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287347e1-62e9-445a-ba01-e3d399f72923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96e0256-ed70-4ad3-8581-534bd2353c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76081820-5204-4c1d-8caf-572587a892e0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e20579-7397-4e35-918a-738d3ffdb73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42ba1c3-ad71-4959-aff8-ba526f8246a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c390d051-0c3f-49ac-9148-286aded40e1f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f576ea7a-7ef1-4a28-a0a9-19eb9c4954eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e463e9c-7ea9-4120-ab6c-4d7084872f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23e7a47-69ac-48f1-8474-508400c5d966",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e597d-d35c-4c37-8740-a1e06a666a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcf4cf9-bae5-48bf-98db-49468f828911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe46da15-5879-477b-95e2-53c0aa2b3a7f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454a8112-78ae-4a0d-aee6-09a6214a010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaddc28-6386-4d6e-9f4a-d5964229c0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aef0756-d5a8-4ac4-b18e-3ac45614ada0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3fd957-253f-4d7e-ac3a-c3005f7627a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2868f10c-231a-45cf-b83b-08e528328f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8609385e-278e-40ea-bfc2-cf4b523048ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4164668a-edb9-4f72-a97b-a4bfec346f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f19413-1c1d-4746-8c22-c997d8a70a96",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df0e4fb-a234-414e-9d78-7ea57e6a9b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a3d220-79bb-4726-92d6-ebae130f40d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3de3db5-14ae-42f9-af2f-587acf10d179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52bdae6-0ae7-47d6-b587-b63c2b794eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b056bfc-9a5a-4a3a-8a13-cd0c5b24fada",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdec186-1406-4f9e-993d-ce38c11964a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22c7e55-1ed7-4b52-8a04-750226899df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb18e98-bd3d-42ce-99f9-ec93908f27c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0759415c-a4c9-43db-b4cb-f33bbcce4ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de613d87-9042-45b6-b26d-89fd1f1c6090",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8178914-1149-4927-b342-618a50099bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a44457eb-7a5c-449d-a0bb-d560c54771a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fb2d2e-5b30-44d9-b7cb-bd5acfa3ea4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d83736-d4c8-4f0d-9495-9ce5a65b6162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aa65b6-7ba6-4a45-abd6-a1ca17ffa35d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c72894c-1b81-453c-a3e5-54bd02beefae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01b2c5f-36ed-4f02-8308-b7bf72f569c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93caeebb-35dd-4c58-892d-587a354c7572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51faa585-0c76-4350-801f-f7af69ed709e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e864d6f5-1beb-4096-a21e-cab23b253707",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5f3baf-7aad-4da2-ab60-b914507553fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b607ec-7485-4252-b90b-19c575a590b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c7986b-807f-489a-8bb1-42ba280a7735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a9655-9900-4685-8504-292db7c1f7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d765a7-a6c0-4a6b-bb62-09181a10142f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac87220b-c31a-4c72-a7d8-9cc37019730e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2a05f6-9075-48ee-857e-3d386a29a093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf46222b-964f-4bd3-95c9-13ba7e32316a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d10a536-e835-4854-8a0c-4e4c0c709f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f188c5-0f2c-4d06-8a77-427b47a1c2f0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452a066-7718-4c23-b9d6-9486638a23d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "374dc012-8181-405e-8b1f-9c6c153028dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a01e78-a287-4b01-8188-b6d6d946a11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d511736-a329-4e8f-8c25-7f397c34e073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3b096-df05-4a3e-aed4-80f6fa576434",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f396467a-6a64-4b53-9128-191ec530a6c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b534872a-3541-4818-8aee-54ba20c37664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5761ff95-8b12-4373-a9c2-f8423cc679c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f48831-50ab-4cba-bd9d-bbbb3e7c8e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f81e6f-c16a-4380-aa9f-4cb6c89e552c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffff29e-8bf2-466b-a4ea-9c4b2f340522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c333e1-8dad-498e-998c-24cae8096bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d5f42-735d-4113-b3dd-2b8909776863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad6d315-3268-4daa-a806-46b0f270be89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b12947-fa0c-46c5-b818-9093d31ac79c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb899c4-f250-4c69-b2e8-d7390fb7fd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e89ddf-3288-443c-9715-e00bc4ee8894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9247f3-368e-4b91-af08-8da279114cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ab984e-6bd7-4848-9826-88b8ef8f1dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377e91de-4fb7-493d-94fa-cc8bd81dc04c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2bcd11-3c26-458f-b5f8-46e37b5d6451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5879d4-127d-4c8e-a57e-3f61fa9cf7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b265f48-dc89-4d44-9560-ddb1b4ab8e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d0f879-e169-42b2-bf23-f0e10aac6c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b99b6-122d-4053-a908-17d706fe0c2f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f7b82f-8aac-42b6-8177-97ced07f4430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bd14ff-0d21-4136-93f5-48bebdd5c7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f249e4b-07b1-4d76-971d-70209982381c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0f93e1-f3b4-44cb-a1f3-b2e1b7335be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307ac868-ffc0-48db-8304-14bc9789beef",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0524b5b-afb5-4d8a-a527-7f8c13659b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ad1180-728d-47a0-8d06-8ec1c5f11403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1956e7-7efd-49de-b085-5d5ed5a0b6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ce25c7-3100-44f2-8ea7-3487db482c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d630dcdc-194e-4853-8239-4035c26a78eb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cada58-0b45-4c6c-8b77-c5ed897ff7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cc57d6-c98e-4180-8f87-6b80c8e459e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42532c-7045-4c9d-8152-755cd2fb2547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb3b7da-448f-4837-9874-e8d9b1f6bb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1893db87-bbb7-48c8-b3d8-46f5ed6048f3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d7cb1-7fba-4d6a-882d-5c60dac7196d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c708b9eb-0c7f-4e80-b73c-31e40da96ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0259ac68-0309-47f5-ac6e-aa7f260244bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e966736-9d44-4e39-88a0-c5897f809fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d7fbd6-2dd3-40ef-9a05-beef69dc543f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fb75fb-d023-480a-943f-a6863bc06f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ce039a-7453-4f31-97c4-758f22f343c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d107c838-817f-4716-8af4-00b193d7de04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbacf0ff-edf4-4205-93e7-e37c26372266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65d3863-555b-4721-8552-fe788deb8e54",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81772aa-ed59-4e85-bccc-80ebb06b8162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5790ed45-5c4b-49ed-9bb1-6bb086baa2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2d81f3-4c23-4cb3-a7f5-c2c05d9abdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4b4e56-5794-46b1-964e-53fdd5b7b805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9bcd6c-b230-47b6-a10a-a181de870daf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8464132f-ba3b-4b03-a003-b42acab6be9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b714fc13-1ebb-4259-8a25-dd8a5ebd17f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fec5bcc-e345-41e4-a910-a96907de89b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5cd43a-a2cf-4867-9b3f-faefbea7c625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee66b273-c0c4-45c2-b229-bbbe7493bc6b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d3e7b-f5de-4de5-8ea1-caf04cf7fad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b52e6e5-43d9-4f1b-acfe-81d810de37d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccb7d8c-2a01-4355-a76b-9f2ea3f6cbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff406f43-ae95-490c-bea0-339bba1111b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f31bfd-4c94-449b-bc8a-f421b152420e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8227e86f-829c-4ce7-b720-d3ae1136218a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e6b4b75-f68a-4e73-b53e-aee053e6fd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0204be46-9c82-49d5-8f4b-ce40dab801c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b21261-af6c-44d2-8f11-d0d42fd9ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fa5c77-5559-4e56-a716-799218e2cde7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4694c5c4-8683-464b-a215-9b87fe898ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5840d63-4282-46fc-97b0-c71426547069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501dd855-2b33-4486-8052-516437e16b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c70ed4-a855-4529-bca8-1c9965b15a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29050923-5c25-4bcc-a033-01086dff1313",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53009fa-d274-4ce1-bedf-088829254be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "472ea657-3eb5-4c65-9923-b32944400ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5954801a-95be-4b3b-8c62-e9bb26fc0848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f4e5d9-949a-4658-94f4-1d713a99ea64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9ecc7e-e5e6-4e71-9840-f3a6e3c429d9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0443c038-3082-4d31-98b2-ff3c1c74da38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddad6582-4f24-4af4-b7e4-c261d181a68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a6a929-beda-464d-8d1c-98ac4534fd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1d1576-cc44-4110-bad6-77d2e4280da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5363eafa-8e5e-46de-9300-c90478089ca7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce29c7a-5a0b-430d-83d9-7be5ccc37c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae65777-76d6-44ca-9117-7359992cc79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb75bdc-a6ff-444f-9d8e-8604570d30d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8bfd74-453d-4b06-bba2-3e6cb6852e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e068d134-f1fa-40d1-b5f4-cf862d68c36c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9aa0e-5da3-46d7-ada1-07ca9cccaa3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4505a207-36e8-4dac-b0f2-355566d273dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ad51a9-0128-4deb-9226-fe694eecfc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f463fa-4b29-48c2-8d34-f5df719fc4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72b59f3-60c9-42a3-9248-11f65671afeb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba70bcd-bd8e-467f-877d-2a2b70d79d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96c2ac5-54fa-41eb-873c-594bb4f8ec54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad5bba6-8d66-4149-85da-4e1611475217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee9f1e8-fe9a-418c-b74c-14c7d1866f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3494c538-5f97-42a3-8526-a6c527aa32c8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3d7e75-a714-4510-a78b-f4627f3b1b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951a2ccb-42be-42ca-90da-e744bca6c449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55a6602-2e01-4c92-ac7e-41c7a7c9cfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb1be1f-a68d-4571-a87c-f65221fb8e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da085cef-4754-452f-a645-419526d6e85e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1894e-e8cc-4912-87b8-ff31034a3b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c17840e-044d-40f7-9ac6-7c28c94dcec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c35911-bb32-419f-b701-8126d0ab9748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ddc2d0-ac04-42a4-a203-581f6c344288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ac86f-6b2a-40b4-a37d-bed5b1ec950d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0235b137-0e42-449d-9fdb-bbb1664099a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e99e12b-1211-4d98-bbdc-f8c4ec67cea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5f6a95-cf3c-4297-b0b1-161750473a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82008c76-09c2-4b06-ab25-d91491ac9476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb1c93a-961a-4362-868e-82dd7e6ae439",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f68df39-99ae-4003-b98d-f972ee71b3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9503ea57-cd52-4c05-840e-6e9c6f2a8ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ce6a44-fb77-4e10-832e-35c24fae9217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7e4fc9-583d-4a5d-94be-d1a60390566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f600ea-3f65-4f6e-b910-3257f879b043",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e449574-cfe2-4fcd-98d4-2510c0a10d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782474ab-9aba-416a-8fb2-c8d3a2a9689c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215cfd1c-9a7f-4656-88ca-7cbb0f8dd795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5169777a-3067-4c49-a5cc-23752071a355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9778f832-3fff-4870-bb70-02ffc3b0dd83",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1af5f5-0361-4c73-abae-7785697b1267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb56b7a-3d3a-4632-8bf2-d7b20369c153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65a8807-b889-4ad3-a7d0-99a15673466d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b523685-8094-47df-9d8d-4a2d8c86c3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071e8321-2d9f-4343-9c91-c9912a0b9f85",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4853778e-7118-471d-b891-ff0cdd4fc3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f0767e-59ee-48f8-8645-247073c7fb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e80bf74-cea3-42a8-9418-1469a095cf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6551ea35-7a18-4552-b9de-301c3a360134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373f36c8-636f-4ec3-9464-8b925e7bb879",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe4af1c-010c-4024-b685-f9e632244f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf10958-fb22-4d00-b3a0-b5ac1578d680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff712ba9-7b7e-4d6f-abcd-440322139167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55446e41-1f1e-44a5-ba56-8050dc72ac02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6da899-8de3-45df-ac7a-e24c9aa145ef",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0620eb20-e235-423c-9aa6-2e509dac0b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82bdda6-f3f2-4a42-98d7-ee3611fc119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e793abf5-e73f-45be-a114-5c2612a07751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3858c47-0dba-41cb-9ed5-e223457de5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6fc052-804b-4800-a1ea-b1c8f3d4dfe5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb72d93-768c-4ea9-bd7a-4256b2c14c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29a8161-744a-4b33-aec6-2fed87120072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5a0e7c-7ba2-4383-9e32-3fff6a091d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7e8cb4-a040-46aa-9ef7-4d7adbd44ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a00d29-056a-4512-87be-504b7e3dd6d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd601209-bfa0-40ce-bbf3-f263602b7589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a36073b-56b2-441a-93dd-62db3d48f647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa50c295-246e-4c44-8ff0-54615b64e92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fcba5e-2c1f-41d4-b39a-c9ed5a43ca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a232cbbc-9265-4dde-bccc-4ff1d2cd1a6b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b3bd46-b191-47a5-8784-977530e4d80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa58a95-7bf4-433f-8100-8880863f1543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643bb441-bd5f-4b63-8909-09d663d37752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e33af9-1c8d-49aa-9490-1c3a0afa65ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dfa72d-7b35-4d93-acd1-048b7cd1a84a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de1ac5-85af-4394-9256-5937d6aeca75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fb01cf-8583-4eac-9214-ce70d2f6efb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c3b042-afba-4139-89f8-fccb6746b801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446eb865-9b63-4bda-9c00-5e6f3e1b38dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceb3cf7-acd1-4598-beee-0b45ea9dc7c1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa14a504-96e0-426e-a72a-bf0a1ebd6e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ceabd8-6a2e-453b-abbf-45ac9771d8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e5bb06-c470-456f-9f46-b7fa6ba0f604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c59b64-4d09-475c-ace3-82fd5c9f39af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454a74ae-dcef-4419-8b39-872c0c2f5711",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865300df-0aa2-4b9e-9ff8-d4c05cc67037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54344b16-a0da-4f46-9be3-5985be43c8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29374994-21b0-4626-b594-5f8cf896dc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178421aa-84b4-47bd-8d46-ddce59864291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d2dec9-6b4e-4a84-820c-6c6b73b396ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f309505f-31b4-40ee-83f7-03b2d7f4cbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a1062d-b983-4403-98d9-faf787792e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ed98be-a484-4054-abce-f399e863aeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c98d129-bc0c-4a6a-8e99-1e8b2b335841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bda7a3-0230-40f8-aa0d-13dceacf0d98",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9265fb-7e3b-4373-b10d-3f33cfeb365e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e436f901-cb97-41b3-a109-f689f6646ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0266966d-0a16-4a6b-b640-4ccd44233f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da146a14-0387-4caf-b059-d19fc0936956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dba844-31b2-4504-bc9c-7cf374cee322",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff81245-5149-493c-b1b2-7c50d0b6b2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50fe7fc-878b-434e-b29c-c9fa7a860767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634377a9-a82b-4c83-8e27-741bd1f118c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0480b7ae-1136-4c01-bc5d-5d307031b810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1fa24d-a6fa-499c-97ac-ee2c985118fd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9782f8-0114-4f82-a0c8-f01512e68a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4832d1ff-b089-49e0-9859-f18584ab2538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f23d55-b924-4ea6-bdb2-6223a68ef342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc71d03b-f506-4503-8349-1b4ae257114a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc1ba70-1158-4ef2-bfa4-04f55fc37a02",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6358d2-42b9-4dfe-8c35-be839f856b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34adf92f-f3a5-4d69-9d11-bdf58c5e8536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7298349b-48f3-4e35-80f5-a52077ce2bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05eaa9ea-deaa-4ce0-8612-55583142a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0807ec5d-5b3b-4e7f-9b68-14dc34a665fd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e889a80-238f-4a73-8390-348f0bba6668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d69211-d596-4252-aa01-e53f6db07876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead33eed-e082-40e9-9700-8ceb456423a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d43b251-c0dd-4353-9bed-a8ba7aeb5e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe7308-eac3-455f-93fc-1b05241430bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a756e7de-5f66-49e9-a960-34359d994a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f429fe60-8061-472d-aada-1b173b3720a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429538e8-a6e8-4618-983c-dee6c6b72f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1c22b4-95d6-4851-bf75-098f4ea42100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e2b765-dc59-47d6-9dd3-b39f0a21050c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af87bc01-231d-4082-911f-5debad4e500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d354121-37b9-4158-80ac-af7bb2674fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dc1318-c1e6-41cf-aa0b-c6c456c9cd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06027202-f091-457a-8f26-8bbfdc97bd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799aa887-ee35-402e-804e-b4eec777a795",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de177e1-9bf6-4b1a-9991-759126b34cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5fd66f-e47d-4981-bc4f-610ba9f8eddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003a9503-fb52-4ead-9d36-bc2d030650b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca18810-3c01-4eb2-93bb-a345909e0de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5767ea77-074c-4cd8-bb93-608a976f0676",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4736d02-2c64-49b2-afb4-50792e8aa2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcf0449-525e-4244-8af6-6fb9f1dcd91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b046257-15d2-49f7-ba9d-77f7f280150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff71db88-c3e8-4d4c-b57f-a83dfae8e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342f3001-814b-446a-acd6-fd74cacba633",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6b3e1-bac0-404c-bbea-fa93969a75da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b757b9f-c821-4398-bc46-4be25db92ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3befea-f07e-4dcf-837a-59a04319fd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e65215-0a82-4094-8d23-3a3d2b2643cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf6a486-7a32-4947-b8e7-ac2afd02bc30",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930b175e-3da3-4765-a25f-9566005d2022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608476ac-52e5-4956-ac25-0db8a3ad0e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb94941-b68c-41cc-b10d-7a6f29f35715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a1bc2b-0080-4a6b-bf0c-a17690e3c4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274148de-eda6-4634-a3a6-864f295e1682",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1ab8cb-f6e5-4b84-8eac-e040a3429dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53829463-fecc-4e70-a635-746d0db97187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbe21b3-0a1d-4bed-979c-25463b6291dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8798d97-ffaf-491e-a28a-0a6d8b0554c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98042343-66d9-4860-8b97-e136c6d064b3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf273ac-8830-4171-a933-11fa851420ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c02f69-4789-4af8-bca6-479f90191c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62539f0-b9e1-4e5c-b01d-f33b823ce121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efa6e04-97b1-4b7c-91db-72f8b1e15677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b633d19a-a7d0-460d-adee-2313bac8cf3f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919cd43-5f60-4274-aff9-523e19167d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536c74f9-551e-4800-a9e0-2577f5752b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329160fc-5cce-41a7-93fc-f49904171b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6235e9-40e8-4f6d-aa33-cb3d74ed8bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe75376-b367-479a-94f8-c7784d5c0f21",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304054f4-8fd2-4188-9d73-7827fddcb6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ad67b8-5f43-4036-ba15-ab90b7035364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b0d593-05e9-4fb0-b3b0-2536cdd1c695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4980107-d0d1-4725-8841-a77fca49654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5473e589-59c3-4ad8-bbf6-05359a401169",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3397f903-687e-4cad-89ab-75b7a11c003f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39110340-8469-4163-a7bc-05b90d215f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2beca4-c249-4c59-822f-9bfbbb2bb765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20525bea-75e2-42ca-bae1-b145e5d63dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e58f2b-2e0e-4109-8348-079e4ffa3ac0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b673c276-f482-48b4-9404-88f17e47b290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7985ea7d-4fbc-4ac8-a06a-0b87354c2c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8c9c0f-8f17-457f-816a-07ec47cddfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1895cdab-b12c-477d-8142-e31347786332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee003050-4593-4eb1-ae64-225f976429d3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbf49c5-55a3-490f-abdc-3f909c65caff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57928ae8-0ca4-4763-9110-583d7f589197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9efbfc0-8881-4974-a111-0dcf3798849f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37758510-ea6d-47e5-81ce-38d21994b445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6756e51-7093-4344-b03a-2551b78f1764",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a880ae6-6321-4c4c-9f1e-146dd63aba01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bde4400-0c6d-4b57-896b-28dccc3ef421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d26a6f-2b82-412b-853e-bcc8e57e3426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b531bf85-4b7f-4de7-a811-c14a6a7eca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf591282-2bc4-495a-8426-145073f98f0e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9b3446-e430-41c8-87ca-ac8fd56b4b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea346f1-04d2-42a2-8f84-36fc6e7e6dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4853b4f3-26ea-4ae8-a54e-bf598840f8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c6447f-a007-4871-9039-a4d2d20c0b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45ac491-0e4d-48f5-bf04-3e4b40ee086b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5200f1a3-e2d2-48cb-9874-50f04de76aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0676dac-3a7f-4267-a4c5-f82f8fedb667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97565b88-f79c-46eb-8dbc-cfd14792588f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2ac762-fbdf-4c00-bd0c-c9b65850dd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeeaeff-d92d-4a8f-b947-090a1b668b0b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62daf998-dcec-41fe-9915-ed42b235b06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45168a9a-44eb-4199-8b8b-8eb3fbe11c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de7d8df-c37f-47e2-87e0-2577018f6209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac2f9ee-0a66-4e4c-add7-4eedbb3f6aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f4155a-9457-4111-8bfd-edd85377fe22",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f1783-c8c8-4ed7-a669-c93cd16c8a0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee2aae7-e9b9-45f2-8351-a10d819c6e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c992eda9-d428-4a0c-a5c0-4caba9cebca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd29d29f-391a-4650-b8d6-738573b6aa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9da6e3-ca66-4c66-910e-472be4c30574",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df17615e-2f37-4d70-81c9-5cb500eff3ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1782f0b4-d921-4819-8287-305abffa732b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6e9586-21d5-47f8-a1da-72b5d3f7d930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e239e66-9cb5-4915-a3e9-b848ae41a035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19699dba-fd2e-4b14-a1f6-bbf9caaf9197",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0729d2-6938-4f26-8e36-9a053c7e0a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c5965e-e998-4e2e-94a8-25d4b2d60786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0479445f-a057-4b18-89ab-cae401b833cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cc5c66-d470-46ef-a7b8-0b8b5a941850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052a1a7a-21c7-4b51-805f-40eb1691ac14",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd3c85e-d07b-4e60-9f96-61e52c3f9444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91722cd-d8fa-4088-9a61-459b48065639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e80f7ef-4ae9-4c0a-aab5-72b6a1e0f0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ca7d85-c607-4066-8b54-484cd3131095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16933d10-3979-47ad-bfaa-72f4c9a84c12",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba48a2c-6e4d-4bbd-9d90-df88debd4704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d74f08-9ab6-417d-bada-18636123ef7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d318ae-907b-4d7d-a7af-02b446548fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f042f7d-a949-4c3c-8a6c-88b3d421193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a06a8f6-7ec4-4e46-83f6-a5a60ce56fec",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7062d4c6-a084-4fed-a3e3-74173f15ea68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262429f9-e983-4074-af44-aaf093808699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd93195-3a75-42d1-b2a2-105084279303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cf690b-cb09-4c58-9e81-c7e8efb064a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba99bf-7faf-478e-a274-dda946c250c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5d1a0e-f6d6-4f5f-863f-d91fc4498b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2c3e41-8655-430f-a481-25ff5259a1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7804e81f-e97e-4720-93a6-8dfa032a581a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7448524a-0f9d-4c19-a79a-f0c0f8aa088d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36940da0-c917-4213-8866-9794ed4261a2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3ec177-6da5-4be8-908e-e7188fa034fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72d61a3-71f1-45ce-9ce1-e380c2f96793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0688106-d21f-4083-a6f6-2d0387b66dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92eeba2-57df-45de-af6d-f6f05e0f572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c83775-12f2-47c8-bf79-9faf9a9c2770",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a3b9a9-909c-42d4-ae85-ff7619200c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa6df89-3e11-4851-b16f-541f4d9bf50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221a9538-094b-428f-9598-6494a7ca53e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564a550e-a9b4-4ee6-a2b6-dcbba20b0d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74159e38-eb42-4e96-9ea5-2b9096cbb1f8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1621bd28-ed0d-4443-88db-44058a10f556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13810a8-3c5f-455f-a154-dc7cd4e69238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c5b720-a57b-4be6-b940-77c5f9975fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e9d695-149c-400d-9e04-6231e5f61cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e356f95-f14d-4f00-80b4-d205da12f0e4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fcfeba-9384-48e1-b32b-f9082b26a4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc6dcae-4fd1-4869-82a2-afcce41a8c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e81f52-a0f4-4732-ad86-bcf5e79cc0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f12722-ec83-48f2-b7c7-86d24825b315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb006b9b-b782-452d-9a26-b7448a8ae17c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc06cb93-650c-4f9c-afe5-dc8145091b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda25efc-0625-408c-8f21-12f28b35b001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f70ef7-0f0a-4591-a8ad-9aaa5e29b8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961898a4-6b0d-42ab-8430-caf219fd879f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab9de0e-bae5-4979-a5d2-9b491573f054",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443724f0-e961-4458-8db2-5481055dd8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d030ce63-570f-479e-9bdc-791782aa64cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765556e8-cb4e-47f6-9f67-ab8e307de6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07da502c-19a8-461a-b6f2-929b66edd129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15cd202-a649-496a-aea5-87522dd4b7a3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d254bb-d291-4bd7-94f2-42e5b218839f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88f02e4-e33a-4cef-98bd-a0a86685c4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1121270f-7e76-4302-82a0-8a1bf1bbde85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98adb46-66e4-4227-a0c3-2c32973747e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14964297-088c-4ab2-9f7b-2dd969df8f96",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed4b19-e95d-43d3-8c4b-2f966e06f32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf1e12e-9247-4cb9-9231-dda0aba4e8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d312352-a885-4ffb-9c53-76489cd8eb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d11799-73bd-4303-bf20-189f27d282b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159e6520-6464-440d-954f-53cabe7d7f3d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c62e03-94d9-48d4-bf5f-da1880d02681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66180a3-ce80-4f4f-86df-b349e648187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0233461b-f7aa-4642-958a-aa1e2bc74039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96167bc3-c4f2-4cfc-b6ef-6b383052fe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a78efd7-7533-427b-9c4b-d4ba569b4ed1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19b05a8-de4e-4e83-bc2d-4493daf03eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e107c32-b93f-422e-b9f9-83fdc49e2b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81cf9dd-08db-41ba-9b83-5862ca04c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be33b89-8993-4c87-9ffe-6db3ab8959e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a64dbc3-1a0b-4f37-87ad-52ba147ceb76",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a66af2-4d04-462c-ad7a-62027d7acbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15df7fba-06cd-4742-b6fc-b622ef06a2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d63363-5a98-429c-9529-e690b9ade8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b066e6-2114-4dad-bb30-f34e6f2da594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c32c2b-9cec-441c-b7e1-d9349480e401",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3703ef6a-0106-46f8-95d1-136a17de2884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978d3957-0797-486d-baeb-5bae65c7f37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d367a9d-2bf0-4df8-bad8-db85ab3387e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b91ce43-4636-4323-b500-15ee76a46600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e005b02-8456-4d22-b7a9-4a80d3f50824",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0428c6-82c7-43a6-8946-dbae47291b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7d326f-f9de-46f9-8cae-68f1eb13c243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75714551-75f3-4d82-be64-adce112fbda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2820e4-ae15-46d0-ba05-b96f4e529938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d7370b-9f7b-46f4-b2bd-d3e1d8ca4474",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6a20de-2612-4d3f-bb78-c75e4c404459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48bd7615-feb2-44ee-8153-1e1709429970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364d1bda-c247-40bf-834c-1c908b26d9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6120b898-1fba-4883-8f85-05e8d2cac741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99924a74-b52c-4154-a21a-3d9bd9d31d67",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd272d-80f2-4276-aadc-9efc0646c645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e3f2ee-a524-4c4a-bf7e-18276e3a91d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd6ba18-54d9-4bf1-8214-e8cc68abaf11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eeba41-7562-46e3-a23c-34f1654fa77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d221843-00eb-43f1-a844-1fbb8f8e856d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4245537d-6628-4915-a2f1-c83310284cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba60edb-b62e-491a-8588-1033d9923837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69c989a-876f-4dbd-812a-d65dbc005bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfdd0b5-049e-4a25-98d5-1f13e5e452f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e222f8-15cf-43f2-89f5-3c5a250ff0bc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2484826d-fe95-468b-bfd6-d50dd4a30598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24932372-8f0c-4d5e-9bfd-cc5ad1b61559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac97d02e-ecdc-42d1-8c7e-656781929819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becf8de0-754a-404c-bd48-5c37deb95688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b749802-c6a0-407a-ad50-2cff2f833f7c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bca25c-11f8-4ae2-9cd0-a4dea36dcd23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b9fa1d8-073b-4d14-abe5-6876d66617db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f1faf6-cd4f-4866-8803-084ac1231fa7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20188aeb-b0cb-41e9-920f-e68e6abef939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5cf98b-bb2d-440d-980b-c2660c682edb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cf4cab-912e-4eb7-910c-a64f7b0ada24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8069ed5f-1e76-40fe-bc57-4bd2b1183bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35fb566-94f7-45ac-a635-340c822870d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2193ff-887a-4da8-b7bc-f02ed421ea17"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "213b98a8-5647-4552-bc14-11f857541a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6071fc8c-0e5b-49ad-9997-de0387c957f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba585973-20d0-4d5c-994a-27096c01ac34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26bfa0ca-0d23-4014-a9bf-02caf3a622a7"
                    }
                  }
                ]
              },
              {
                "id": "93552fa7-5e94-4d59-8a90-968dd02856f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d22da23f-ccb3-41e5-8330-0fa9b8b79d0b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fb3681-21b0-449d-a63b-ed65dc5b22a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c4e401fe-d768-44e3-b8d3-51a49fc23fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e589ad9-2757-47d9-985b-8a1e5631bd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "486cb07a-21f5-4bac-b618-2b0fc3fc21b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a60dcf8a-8b9f-4093-b978-60a3832106a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa9f5d26-2c98-476a-a98f-b8b812f9c36b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e6d8748-7019-4780-90fc-58bf3a88a493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55f196cf-a380-4916-a5d2-20c58705eadf"
                    }
                  }
                ]
              },
              {
                "id": "ecf29488-3f8e-4f2f-adad-3b8eb7b87801",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "02b35304-04a1-443f-8f92-75be59e0f464",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a06b55-7ebe-462d-9f88-fd79416fe5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4c51e59c-5da1-45c9-ae17-514cac7fa38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1114df8-bd34-48f6-8f21-4000801e7e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646fcca0-a963-484c-a145-284ab4f305f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21376f54-7ad5-40a7-9b79-34312d5ed9e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38a84b5e-46e1-43c3-9dc2-2ae0fd481442",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b77316-177b-44fd-98fd-d1f44b08f2f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75db0a3a-11d4-46c0-bac8-a9d54d63ceae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c64703ab-e0cb-4ecb-9ae2-39f9cc73c261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15623aa2-3ff3-4d24-b482-84fcb8e612ff"
                    }
                  }
                ]
              },
              {
                "id": "de212003-bc6d-4eb1-a0ee-1bebe66afd30",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a715bcd-19ac-4c09-af4e-a0497881d3f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1e687be8-83dd-413b-b362-bcb91d9f3dd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7539a08-ff03-42ce-bc00-5d233ab27b00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffbd30df-d516-4096-a19a-d6560fe9178e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bf0edcf-1304-4628-8606-d6720ec2fb6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3664802f-da13-475b-b407-ae264f7741e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e32920a9-fc5a-4f31-a075-5fabf2f80a0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb250447-45bb-4e6a-b4a5-e1bc917367ab"
            }
          }
        ]
      },
      {
        "id": "aec8660d-8289-4c07-a20c-26bf8f431de3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "28445812-dda2-44bc-a761-fefe06ee3b99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c3792e6-9cef-4c72-a1ce-61c0e93f9860",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a16b511d-1f31-48a8-bd91-0d5fcb3784e5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9d8bc1-dd0e-44d6-8e93-59ce8ad9f220",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "755d386a-5143-4fa3-aae3-ed0dea639236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89cb615-6bbc-48a8-9883-f97e68dd08ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1cb30d0-43c3-4439-a9eb-7f4d623d30db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b63f6d8-de10-4693-bd25-9eff91820a56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34bf92a0-1f7c-40c4-9aca-8a72c282dfad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce77a292-7167-4a8e-91e3-8614388f0b0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72dca430-a722-479c-91da-a915d9ae1809"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9b87974-b94e-4d26-a741-62a052b5c4da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bab05c12-1bf3-4de6-89cf-d8c2f70b1462"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "541150ca-09b4-4e4e-992e-066c94f2d182",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb132a54-71a9-4c92-96d3-ca96b4137d4b"
            }
          }
        ]
      },
      {
        "id": "c1482049-cfd0-4641-9388-9e45f1350ba7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "859874c6-0c01-4d69-bbb3-16db645d5fc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "089498f1-6abe-4fdf-aab1-bb36c6fdefc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "905376fc-da67-4143-b434-c9b944eb549c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d7c99e-299e-4125-a841-3d1629f606da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "119bcc5e-52ae-48c6-bead-12154264a24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4c90f5-728c-4c7d-b98d-7e208ee43d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83f8dd09-aa42-4556-8911-665c8794c937"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acb4be55-42f7-4a6d-a8a1-e6e91b64a236",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0860b87b-f10e-4153-b34b-9cef874eab5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15c132f7-3ad7-49e3-ab7b-86831f470002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65b9bc40-5e82-4e38-8fb0-a8bca7309c61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc6ec8c2-94dd-40d3-8647-604c938d15af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc10eb41-7f77-4253-83a6-7e4f6c3547ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "393e27e4-11e8-4194-aa03-4152d0157441",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "863dbf10-7733-4b76-b0a2-b18f7c6a885d"
            }
          }
        ]
      },
      {
        "id": "e679d3d0-4d33-40e1-8e83-78b272b361e8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "52c32844-c4f6-4aad-9591-43b3d3a57561",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58f2a7b9-cf64-407f-8989-d6ae2a9b77b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03e3c127-91e7-4639-bd8f-e4fd9990b031",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5424b8c3-be81-4271-9b79-681ec3127cee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b2827e4-71cc-4647-861c-985c07f52356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720b9b05-9960-4200-83bd-20033a9c0a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "371fc963-de38-45de-8bdc-55fd42dda8e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6432ca37-2fbe-4452-a5b6-2a1634850b6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dca11fd-b3fc-4efc-9f07-3b8457d86bf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbc13c9f-b730-4609-b44f-f2b65ca62ba7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "729abd89-7f3a-4ce0-921f-e05b6b77650a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7eb3fccd-78f4-4b8b-b611-54d1b800756d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb82cc64-00f0-475b-8647-f3d2cb161e8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d632fe5-1ad9-4455-8cf1-e2e676ec6703",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfffd345-8566-4554-aaf2-2bfe81853994"
            }
          }
        ]
      },
      {
        "id": "017728b0-19e4-4225-bab6-abdff1761e5b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61011094-d109-4bdb-bb5f-018538bcf3e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "357bee89-6940-422b-b46c-ab469c009eac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ebdb5ae5-cf70-415e-aee5-608843214b05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "453cfd4f-03c8-419e-bee4-e5c8b7e4ec12",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3e001ab-dede-4f02-b30c-884701951abf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 354.26056338028167,
      "responseMin": 21,
      "responseMax": 7496,
      "responseSd": 904.820016960632,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694737989965,
      "completed": 1694738102852
    },
    "executions": [
      {
        "id": "b0cb2f10-3089-4e4f-9e5c-2e24e1eaccf5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ccbb0d6-0dca-4229-896f-1f4978a87a19",
          "httpRequestId": "3fa901e6-5288-4c34-8202-46768e801d80"
        },
        "item": {
          "id": "b0cb2f10-3089-4e4f-9e5c-2e24e1eaccf5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8f431c4c-5812-49a6-8cb8-178808f7d00c",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 0
        }
      },
      {
        "id": "4c57c44c-eef2-4f19-aa55-bd1de9ee3e77",
        "cursor": {
          "ref": "e9c9ee37-245a-4a4e-bcb3-bf2f137262b2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "90b126bd-eafe-4dfa-a1ca-312115fc0b2b"
        },
        "item": {
          "id": "4c57c44c-eef2-4f19-aa55-bd1de9ee3e77",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cb7c6677-b6fe-4d0a-9b65-8431d5ceb963",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "9099cd5c-56ae-488c-ac5b-027eb14b9698",
        "cursor": {
          "ref": "b31e7d06-85d7-4dce-99bc-8d4463bcfa6b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "915e4f53-d112-4914-ba97-f4a434aeb9e0"
        },
        "item": {
          "id": "9099cd5c-56ae-488c-ac5b-027eb14b9698",
          "name": "did_json"
        },
        "response": {
          "id": "918ea559-f3cd-4a0e-96f2-f2f0343b7a27",
          "status": "OK",
          "code": 200,
          "responseTime": 1813,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d54c9e-4f0b-418e-8815-240088336bc2",
        "cursor": {
          "ref": "918344dc-b340-4340-86b3-31675b0235ab",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10661541-929e-48c3-8dfb-951f4e59e9b6"
        },
        "item": {
          "id": "64d54c9e-4f0b-418e-8815-240088336bc2",
          "name": "did:invalid"
        },
        "response": {
          "id": "3bbf8a03-60b8-4339-9a38-da01b01a3477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d54c9e-4f0b-418e-8815-240088336bc2",
        "cursor": {
          "ref": "918344dc-b340-4340-86b3-31675b0235ab",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10661541-929e-48c3-8dfb-951f4e59e9b6"
        },
        "item": {
          "id": "64d54c9e-4f0b-418e-8815-240088336bc2",
          "name": "did:invalid"
        },
        "response": {
          "id": "3bbf8a03-60b8-4339-9a38-da01b01a3477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416afc99-e4bc-4d26-a7a1-ddf0265c48f1",
        "cursor": {
          "ref": "2bbb67c0-d4e8-44ec-9090-f7ae670d577d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "399789a6-1609-4616-8099-24ec61f01485"
        },
        "item": {
          "id": "416afc99-e4bc-4d26-a7a1-ddf0265c48f1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "58afda07-2189-49ab-9a38-deee51b4d8f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 327,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c968532-e59e-4d83-ad3f-b6eda72194bc",
        "cursor": {
          "ref": "9656ca40-dc0d-4293-973b-84985be69ee0",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c0e40440-7df4-4a0d-8310-c58b52520839"
        },
        "item": {
          "id": "2c968532-e59e-4d83-ad3f-b6eda72194bc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c6b3dcfb-672b-4d38-8084-a66f5e714d4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 286,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b345304-414d-475c-ac33-e0835c5f67a8",
        "cursor": {
          "ref": "88987f3c-05f2-4679-b3f3-f64270c9297b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "15d57297-dbcc-4921-ab6b-949c0a7534f0"
        },
        "item": {
          "id": "9b345304-414d-475c-ac33-e0835c5f67a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c2bdf83a-8a7b-4c95-9d8b-f2a4f4523794",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd40b79-6cdd-42ae-ae01-f3c922033c9e",
        "cursor": {
          "ref": "a50a17cc-71f2-4093-ab82-bbb3364cc7be",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "544918ca-0ad2-4c09-bf71-5937fe19f4c8"
        },
        "item": {
          "id": "acd40b79-6cdd-42ae-ae01-f3c922033c9e",
          "name": "identifiers"
        },
        "response": {
          "id": "fefb8823-bee2-4bc5-bea0-60b9657c006a",
          "status": "OK",
          "code": 200,
          "responseTime": 1473,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8bd043-7589-4edd-a9ac-d4430a0cb1da",
        "cursor": {
          "ref": "b459bbaa-4f19-4d28-baa2-bfcd76f1564e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "67bbd6b7-b8f9-4211-b886-9fb779b7a498"
        },
        "item": {
          "id": "1f8bd043-7589-4edd-a9ac-d4430a0cb1da",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "684d0741-a222-47f0-becd-8009fafe0c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8727c708-f70e-42a3-9779-c8126571f5be",
        "cursor": {
          "ref": "0f7269e7-72c1-4acf-a1d5-850dd5902f63",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9fb1b73a-672d-4f7d-a146-67ea448695a1"
        },
        "item": {
          "id": "8727c708-f70e-42a3-9779-c8126571f5be",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "38247311-a586-4e72-8ce0-a803f10384c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4e6c7d-64fd-4e93-9608-1c5fcd4dc771",
        "cursor": {
          "ref": "697228e2-4ac5-4d91-b71d-49730453fbee",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "29b7728b-ebdc-4906-bae9-680b9184fba2"
        },
        "item": {
          "id": "6e4e6c7d-64fd-4e93-9608-1c5fcd4dc771",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "670b18cc-38b5-44e3-b4ed-6ac120492c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b392a5c-719d-4905-a405-8dad849c7a8e",
        "cursor": {
          "ref": "5c6c046f-94dd-4e23-8939-c3ff586c2a4c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "75ee29be-6c7b-4dd7-b65c-cd84db10db85"
        },
        "item": {
          "id": "8b392a5c-719d-4905-a405-8dad849c7a8e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "905b9115-c7ba-4ece-acce-8217d280d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d31257-12aa-479b-992e-8d7abdee998b",
        "cursor": {
          "ref": "3288fb28-eabe-416e-9328-7c4f45c9bcc4",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ca0a8e4f-6188-435d-9604-56fc0e13066e"
        },
        "item": {
          "id": "86d31257-12aa-479b-992e-8d7abdee998b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cfd638a2-4ec9-4dd3-9df0-dc7b42d2e683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef39dd55-c418-4ad1-be7b-e774df40397c",
        "cursor": {
          "ref": "487b6e7a-79e0-4ca1-a30c-d818442478e0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f974ed13-6387-4860-b0c9-939ac722c2bd"
        },
        "item": {
          "id": "ef39dd55-c418-4ad1-be7b-e774df40397c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f225169b-c121-43ea-83b9-c74850fc326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2ae0d2-2b15-4aad-8c11-61cea66f3aec",
        "cursor": {
          "ref": "b5cb76fd-6af3-4fcc-b47d-188394671f29",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5d456ae1-f46d-4178-b274-66b8427c989e"
        },
        "item": {
          "id": "fe2ae0d2-2b15-4aad-8c11-61cea66f3aec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "86134da0-c1b0-4166-8cc2-db99fc4d5fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268b145a-23ea-4e39-ace5-9353253040bc",
        "cursor": {
          "ref": "9cacf0ba-819e-4b6c-8871-31ed95c9d737",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "94a9c303-79f8-41e6-81b8-d5e04c7565e7"
        },
        "item": {
          "id": "268b145a-23ea-4e39-ace5-9353253040bc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5f8f6b77-4639-4ea1-a468-c708a7fb5d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7499129e-582c-4ebf-9485-bfca5e851ebd",
        "cursor": {
          "ref": "a599b383-0a73-4bf2-a8f9-903d3710eba8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b9e5c1e5-7251-4384-87e0-dfe35743ef43"
        },
        "item": {
          "id": "7499129e-582c-4ebf-9485-bfca5e851ebd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8cf04cb0-b82e-43ef-8b18-4bd0574d2b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee474c9-d186-49db-b34c-334acb6ca305",
        "cursor": {
          "ref": "e147a47c-b738-460d-bd9e-d7f1eb2809ea",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0954358f-e813-4cfa-b733-4d539b527eb6"
        },
        "item": {
          "id": "5ee474c9-d186-49db-b34c-334acb6ca305",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f19c5930-ff5d-4da7-aaa8-ca093e0f7c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b3a87b-bceb-4b35-913d-e65600f30fec",
        "cursor": {
          "ref": "8e813d2a-e315-41f6-bafb-ea514cd8d31d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0b6d43cd-f650-4c89-90ca-18a85d20c46e"
        },
        "item": {
          "id": "71b3a87b-bceb-4b35-913d-e65600f30fec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "62be5ddf-97fe-460c-8eaa-438c37438a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738e8620-e514-4530-ad6b-37c6b959ddc7",
        "cursor": {
          "ref": "4aac0380-0d29-4efd-8368-738a69fb9c55",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "495c9e4c-4eca-4be7-8cf0-1dc55f45708e"
        },
        "item": {
          "id": "738e8620-e514-4530-ad6b-37c6b959ddc7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f051d7d2-917a-45fd-99fa-1b474fbaa4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaef0f7-c135-4b4a-99e7-4ec3380f294b",
        "cursor": {
          "ref": "d319d3d1-7dde-47e3-ae14-43f3f1b59fb2",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "79a2ef7d-bfab-4798-8139-cfd4ad4019fe"
        },
        "item": {
          "id": "deaef0f7-c135-4b4a-99e7-4ec3380f294b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b39d004e-206d-4284-9cef-a11a60f2a76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84702420-df71-4205-8031-6e3c69777907",
        "cursor": {
          "ref": "8352aac9-1619-41c0-81ea-df92910628e1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b76cbb1-638d-42d7-bdbd-e3ce4d977a78"
        },
        "item": {
          "id": "84702420-df71-4205-8031-6e3c69777907",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "edd4408a-6423-4ed0-b0b5-72ccbe749ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b0253-4f15-4562-ab67-3cedc7235f15",
        "cursor": {
          "ref": "9dd277a8-df4b-4048-b893-cbf27d34c861",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a01e3b53-0364-48b3-9706-eb42584d7a0e"
        },
        "item": {
          "id": "720b0253-4f15-4562-ab67-3cedc7235f15",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fd162e2c-e5d9-4729-b1e0-cbc289a505f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2afc98-9ece-4f1f-b0d5-e848b4241bf5",
        "cursor": {
          "ref": "e46dddb0-ade5-4806-ad9d-3e24026ea8df",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8dd5c364-3f71-40b9-a807-465f9a0b2dd3"
        },
        "item": {
          "id": "6e2afc98-9ece-4f1f-b0d5-e848b4241bf5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8713883c-2a8a-4baf-a438-07183a03ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037e09d6-d534-4016-bf90-7437f459e3bf",
        "cursor": {
          "ref": "9277d0dd-8660-42f4-86f6-a50cba993922",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "015cd977-04a1-4eb5-92b8-9eecfbd278c4"
        },
        "item": {
          "id": "037e09d6-d534-4016-bf90-7437f459e3bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1e5b521a-596c-49db-bd80-5cc309698313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c3b2d-d467-4590-8ba1-4ab8b3948b2f",
        "cursor": {
          "ref": "b918de36-71dd-48c3-8fdf-25ff26ed361a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c66d8b63-d64e-486c-b688-400574bad9af"
        },
        "item": {
          "id": "075c3b2d-d467-4590-8ba1-4ab8b3948b2f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0d154ac7-7c69-4cf7-b804-d792651b3d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c844b922-e0e8-4401-b950-24329121987f",
        "cursor": {
          "ref": "5da0f526-d8a5-4aad-993a-d75551b54567",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1f57d3db-d363-4fa2-b811-0e5500aace75"
        },
        "item": {
          "id": "c844b922-e0e8-4401-b950-24329121987f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6ae7377-78fb-4946-8bca-f4fc23218499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255f18a-7c14-43a0-998b-94abc10e54a9",
        "cursor": {
          "ref": "9d58eeec-dc6e-4941-bbce-1d1b362d156c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4667fcba-04b3-450f-ac51-ab219a8f3cf9"
        },
        "item": {
          "id": "c255f18a-7c14-43a0-998b-94abc10e54a9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6c1d75a6-1579-4a5f-85d2-88be15533d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504e1304-485b-4426-9f07-beb0302ada45",
        "cursor": {
          "ref": "dfa071c8-93a1-4b24-a269-3524b34d0abc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ee458848-a9d6-48a2-931a-c13a53e95efe"
        },
        "item": {
          "id": "504e1304-485b-4426-9f07-beb0302ada45",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eec83cc3-303d-4e1b-b3ef-b8b9a9bcc0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115ea343-393c-4b52-9ad4-308efd028520",
        "cursor": {
          "ref": "fc8f0474-9701-403c-9e26-a85dc1df4bf4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0b830d8f-ee12-4319-9eec-cea701a433e7"
        },
        "item": {
          "id": "115ea343-393c-4b52-9ad4-308efd028520",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b5cb6c3b-b330-4caa-8132-6512e5ae9227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370458ee-5321-4786-893c-fcddaa2e3045",
        "cursor": {
          "ref": "396b12b4-d2e4-4aae-979f-724cdb807759",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "24061a59-986f-4664-a315-8c22d0ee84e9"
        },
        "item": {
          "id": "370458ee-5321-4786-893c-fcddaa2e3045",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5f9c43f2-3be5-4702-affd-2e1723109b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251b9ff4-c032-4bd8-8f02-1674e00b4fb9",
        "cursor": {
          "ref": "1b04b553-d2e5-4b40-a7b2-46c54e1e21da",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3d4b202d-e784-4d7e-8f7c-53e304e1cf9a"
        },
        "item": {
          "id": "251b9ff4-c032-4bd8-8f02-1674e00b4fb9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f797122c-1222-4b05-b82a-ee03891823f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f45b43-61d1-42e2-a1dc-4c23e5be71f9",
        "cursor": {
          "ref": "7969db83-5a3c-41bc-bd38-1d1eda35858c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c2c84086-ba53-486c-b8d9-da52bd079479"
        },
        "item": {
          "id": "a5f45b43-61d1-42e2-a1dc-4c23e5be71f9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a4a63bfb-9514-4eb3-b3ef-9c61efdc51e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a714dbd-79a3-4e05-9cde-4db466d2d704",
        "cursor": {
          "ref": "fbb06d76-9f35-4da6-9837-d5f70265f4be",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "57cef55a-93a5-4fc9-8997-bd4d7a7e05f4"
        },
        "item": {
          "id": "5a714dbd-79a3-4e05-9cde-4db466d2d704",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "77b5ddf1-31f5-4225-a7d3-a05a2bee2871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67060881-40c9-46c2-9644-4e2318f58514",
        "cursor": {
          "ref": "4989617b-b09c-4a2b-a2f7-ccb5ffe1e510",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d7f336dc-1018-4f97-bee5-6bd9e0e4da2e"
        },
        "item": {
          "id": "67060881-40c9-46c2-9644-4e2318f58514",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "929d0e23-c0bb-4e01-9f76-302fcc5f8096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0dd252-99bb-45d3-9a8c-6bcd320f8d8b",
        "cursor": {
          "ref": "b6578d91-005c-4e46-b9f6-62eb60d56c87",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9f20e8f6-4ce6-4580-b1f4-1a06480a3fec"
        },
        "item": {
          "id": "ac0dd252-99bb-45d3-9a8c-6bcd320f8d8b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5c32f710-aef6-40ee-bfe6-12983d1f2c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0942fd-6a51-4c51-9d8b-7d4daa7b186e",
        "cursor": {
          "ref": "5213675e-a8cb-42d2-ae72-24c1754db351",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ca9f9a86-0385-491f-9ffa-3704927def58"
        },
        "item": {
          "id": "ce0942fd-6a51-4c51-9d8b-7d4daa7b186e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e7431bd2-669a-4c1f-a69c-3dae94292bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a79d4-02cb-404b-b647-26a8d7158137",
        "cursor": {
          "ref": "23a1c4c8-f640-4d66-9409-01701cef4b3c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a89d133-0028-4d16-9787-cb68521ded4c"
        },
        "item": {
          "id": "a37a79d4-02cb-404b-b647-26a8d7158137",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f5f85f11-3168-4cbc-a1ad-28fac07cff97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6bb177-1b10-4710-ab45-ffa30f499c15",
        "cursor": {
          "ref": "291bd927-3f35-4a20-9b1c-20553b4506e0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e6ddf099-7ca0-4616-8ff3-260970e9082e"
        },
        "item": {
          "id": "1d6bb177-1b10-4710-ab45-ffa30f499c15",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9ab08bbe-170f-4b8c-9cc0-a9221f315d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ace058-1f86-4f7a-9727-8ef6b85fddd4",
        "cursor": {
          "ref": "4373ccc9-1f8b-44e2-b913-fccc30f37ac0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4dc2a5d-6748-4e2d-acf6-565be7282229"
        },
        "item": {
          "id": "26ace058-1f86-4f7a-9727-8ef6b85fddd4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a97083a2-d961-401a-acbc-f1e97b006744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81330422-44e8-4032-a11a-dc5abedf6bd8",
        "cursor": {
          "ref": "6d114585-b71f-4a6e-bfb9-42b62736d307",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41ab161b-b5d1-479d-a7ef-6fea90e69c8b"
        },
        "item": {
          "id": "81330422-44e8-4032-a11a-dc5abedf6bd8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "44a30695-210d-41bd-ab7e-d6d4973e56dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c0c0cc-aada-4018-860a-d0103c74c635",
        "cursor": {
          "ref": "e892195f-15da-4a1f-944f-c03f7f7483cd",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44cf69c3-535d-4155-a5e8-cfdc920ed6aa"
        },
        "item": {
          "id": "e6c0c0cc-aada-4018-860a-d0103c74c635",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d7d3b89-b978-4dc6-b0bf-d021a4adaca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a86535-ce5e-47ed-96e2-d0fc13c753ce",
        "cursor": {
          "ref": "595053d2-5acf-40b3-9647-03827f08015a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "33d6ed89-424f-4d2f-add5-925eef7fd1a5"
        },
        "item": {
          "id": "04a86535-ce5e-47ed-96e2-d0fc13c753ce",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c40d86e5-c169-419a-9d7a-0ebf4516cbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830f3727-ee4d-4e5d-bfff-2a5b9e2dc607",
        "cursor": {
          "ref": "7bab0ac4-c6cf-4cd7-b38c-df0b016f34c9",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "820b9fde-782f-415d-b41f-0151050b1783"
        },
        "item": {
          "id": "830f3727-ee4d-4e5d-bfff-2a5b9e2dc607",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5039b98d-192d-4bf5-b418-9cca9a2f5238",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 649,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7b88a0-b5e7-4e78-98c1-e6466dda739b",
        "cursor": {
          "ref": "6d94f813-50df-4d97-878d-afaf7e1d6485",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "412c3f89-4275-4774-b116-cef081069757"
        },
        "item": {
          "id": "cb7b88a0-b5e7-4e78-98c1-e6466dda739b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0bfe12ca-32d8-4474-97b6-21f8cf76c5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafd1b47-8cb7-4669-9644-a61c6f73d712",
        "cursor": {
          "ref": "4638d4a6-309f-4c60-ba8c-d97a53637307",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "45b19240-6580-4a6d-adf4-8359640b0369"
        },
        "item": {
          "id": "eafd1b47-8cb7-4669-9644-a61c6f73d712",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ed9d3f82-3d74-453a-8f30-750581ddc5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5036dc9f-b2b9-4e59-b529-5c24ee97ef4a",
        "cursor": {
          "ref": "cf8ea3dc-9fe7-444e-af5a-7e3544af0d3e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3dc954ab-5dc6-4869-afbf-423992ac0de1"
        },
        "item": {
          "id": "5036dc9f-b2b9-4e59-b529-5c24ee97ef4a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0e28ec0a-32d5-461e-a7c5-8acfc8fb661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889bf41d-0fc3-4591-914b-c41770f01966",
        "cursor": {
          "ref": "b3fd41ca-4afb-44ea-8614-06ee7fb54d54",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "57bd258f-4b36-4252-87b0-deb981717d84"
        },
        "item": {
          "id": "889bf41d-0fc3-4591-914b-c41770f01966",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1ac0e2be-445e-4298-84a6-dda0937b1b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f2af16-e446-4d74-a228-24055f20c945",
        "cursor": {
          "ref": "0b721f99-d866-4f67-b73c-280176281f2a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b04ed69f-ab18-403d-945f-f3d8252dd2d7"
        },
        "item": {
          "id": "03f2af16-e446-4d74-a228-24055f20c945",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "76dd49ea-42e2-4dd4-af0d-f9bed1f70ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb57b57-a27f-4c24-a99f-89dba93edb04",
        "cursor": {
          "ref": "12f93a85-5cd9-471b-94bf-976a4dbb27c1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fb83096d-6573-42ca-82d5-2f71dc98bf2f"
        },
        "item": {
          "id": "fdb57b57-a27f-4c24-a99f-89dba93edb04",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c8d21019-9b30-43c2-9641-ac8c23ca6f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265607e6-2a75-4294-84b3-766349a0cbe7",
        "cursor": {
          "ref": "8eed5f00-039c-4ffc-a36f-1176e6fd0715",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d334d039-d2ab-4214-a3a7-69db45883241"
        },
        "item": {
          "id": "265607e6-2a75-4294-84b3-766349a0cbe7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eceb1284-cf59-48bc-ad57-070ee4fc0e95",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 646,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46227978-faf2-4f37-81f2-c35010d772ab",
        "cursor": {
          "ref": "75968999-76ec-45a3-ba2e-79763af049df",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "516c0ada-0f42-4b1c-9ec6-194d42a05e01"
        },
        "item": {
          "id": "46227978-faf2-4f37-81f2-c35010d772ab",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2fea51a9-7d74-44d6-b5c6-ce1b45c542e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bd55c0-8df9-4675-be4e-21ff4a3f65db",
        "cursor": {
          "ref": "be71ddc8-9cd5-40fe-8df5-613fc0cad2ec",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ae992475-a1ff-4ef8-8838-2cd661c828c5"
        },
        "item": {
          "id": "e7bd55c0-8df9-4675-be4e-21ff4a3f65db",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e9261cbf-e060-4e7c-a1c8-7d30c3cde830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a230382e-0c5b-44fb-96a6-c33bc7a1ff59",
        "cursor": {
          "ref": "5b56b898-562e-4172-9827-5ce49d1f6280",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "88742538-cd75-4980-9eec-3736bfbdd93e"
        },
        "item": {
          "id": "a230382e-0c5b-44fb-96a6-c33bc7a1ff59",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "efbb3610-9481-4194-833d-be6ea8182f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e85ed18-ec99-4bb6-9758-40e0fa536b1f",
        "cursor": {
          "ref": "eff2e273-4dd9-4bf7-9328-db5201a0e0d1",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "83a14fa7-e6ea-4c38-8372-ac7c98f5e5ec"
        },
        "item": {
          "id": "5e85ed18-ec99-4bb6-9758-40e0fa536b1f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2d95693d-d5d2-4757-a2d5-d60cace1d4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a74d5d-4bcb-4fe4-be6f-86e68449e99b",
        "cursor": {
          "ref": "50861584-c535-46a3-9b9d-80ed79c76352",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40848a42-0612-4651-b7f1-9279f287899b"
        },
        "item": {
          "id": "c8a74d5d-4bcb-4fe4-be6f-86e68449e99b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7188f63b-a914-4b09-9411-addcbc73406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9462fba2-4359-4050-8f85-514bfb444509",
        "cursor": {
          "ref": "236f233e-b5fb-4fe5-8c04-f590d6a88bea",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "98336e36-e5e3-4589-b37f-52f469a75abc"
        },
        "item": {
          "id": "9462fba2-4359-4050-8f85-514bfb444509",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "38150693-915a-4698-afbb-69798a74966c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c99ba01-6828-4fd9-a70b-0ae1295263e9",
        "cursor": {
          "ref": "e60f600e-71ed-4563-a16b-79082c6e12c8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5b5782b-4fa2-4187-8aca-8b75955ea971"
        },
        "item": {
          "id": "9c99ba01-6828-4fd9-a70b-0ae1295263e9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "704291f0-2416-490e-a7be-28c6051087b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e78c140-5f16-48e9-8663-23e56fca94ef",
        "cursor": {
          "ref": "e2576f84-44fc-495b-86b5-5e2fe24bb0cc",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "33776642-26bf-4e19-840b-505f0f22679d"
        },
        "item": {
          "id": "3e78c140-5f16-48e9-8663-23e56fca94ef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "097d0630-58be-4257-990f-7cd34d42809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac899edd-ae89-4d56-bb46-6937d7dba3f5",
        "cursor": {
          "ref": "e8d5ab48-fcc6-4cc5-9cae-6f9f170f7666",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "892fa355-c0de-4f5c-99f1-f8113bcbc034"
        },
        "item": {
          "id": "ac899edd-ae89-4d56-bb46-6937d7dba3f5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "00c14c80-5fb7-4120-97f2-3bcba37e52c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40222193-1b09-4ce4-89b0-e0373cacbac5",
        "cursor": {
          "ref": "df12e2eb-a2da-4eed-a381-2677b144d4a3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3c5f1e2c-dba4-4900-bdf5-a60c8f919a8e"
        },
        "item": {
          "id": "40222193-1b09-4ce4-89b0-e0373cacbac5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97bd9090-55ae-4fef-a3c8-5124b760122b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163580e7-dcbe-47e5-96b0-f2c5510aa41e",
        "cursor": {
          "ref": "e4beea01-dbbc-44b4-83bc-6cc7256ea959",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f0a4fbbe-abcd-4664-b77c-aa8d477cd271"
        },
        "item": {
          "id": "163580e7-dcbe-47e5-96b0-f2c5510aa41e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "10cd5d29-7fa4-4a70-8410-58ba75cd0477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec6081e-1e87-499c-8c0b-5be4ae1ec3a3",
        "cursor": {
          "ref": "bc8c6dff-06ca-4cea-925f-7be6bf32ed89",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dd762fc5-ab2b-4715-bc72-72a8fb8a69d1"
        },
        "item": {
          "id": "bec6081e-1e87-499c-8c0b-5be4ae1ec3a3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "76d4e65e-a078-4c94-ba06-73db69e4bd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceb3f7c-0899-4b4a-8609-bf7b430e4e2e",
        "cursor": {
          "ref": "01d3096c-4686-443d-9ae4-a649b81e55eb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b7671d9c-d8f6-4066-ba78-e58e6f9fb7dd"
        },
        "item": {
          "id": "bceb3f7c-0899-4b4a-8609-bf7b430e4e2e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "94a4840d-056e-4446-aef0-950b0fd7f9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acc4097-1a30-4ccc-b84c-75c17ef3e4a6",
        "cursor": {
          "ref": "8cc572d1-1f68-4109-bfac-c7b97625424b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9adc19f2-e131-4b63-8849-7c593ea55bb3"
        },
        "item": {
          "id": "3acc4097-1a30-4ccc-b84c-75c17ef3e4a6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e514fb07-8ec0-4100-8e86-e665345a9357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5bc00e-c322-4e01-bd94-67236d576165",
        "cursor": {
          "ref": "3300f107-37e9-4386-aa55-123665dc2e98",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9f976189-1df0-4687-a68b-3dfbf00eb1fd"
        },
        "item": {
          "id": "3b5bc00e-c322-4e01-bd94-67236d576165",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "725e5f15-d043-4fe8-b932-1076ff1bcdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fd1c14-0f37-41e6-907a-0c3d9939f8b9",
        "cursor": {
          "ref": "d32658d5-ecfc-4d11-9d77-0b4e5c37fee3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e25ffe38-9f99-456f-9385-10f01ccf1275"
        },
        "item": {
          "id": "a2fd1c14-0f37-41e6-907a-0c3d9939f8b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "61fa5fd4-3105-47c3-9965-5f8ab36d625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ad45f0-e1ab-4645-9ffa-50e72952a42f",
        "cursor": {
          "ref": "e18a1d6f-6a5b-4da0-b63e-b3906e62ac14",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c24e184a-3ea6-4efc-bd2d-cee2f195e8e7"
        },
        "item": {
          "id": "25ad45f0-e1ab-4645-9ffa-50e72952a42f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "30dec766-e398-4745-91eb-911c3743e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee24e2a-e273-4065-8665-7f9d6b0afd77",
        "cursor": {
          "ref": "7c2a61d3-adfb-4776-913b-8d08523e37d0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ab3cf3a-3cfc-40bf-bd9d-67b37551caca"
        },
        "item": {
          "id": "6ee24e2a-e273-4065-8665-7f9d6b0afd77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "38ee50e6-3d31-4482-9ab5-79bab824c803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dd74d2-73f3-47d7-aafe-d77f7c78e673",
        "cursor": {
          "ref": "e004f811-3f52-4455-9df3-c34b8102e4a3",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4fb3dd97-b148-4b39-9b2e-24150079d844"
        },
        "item": {
          "id": "f6dd74d2-73f3-47d7-aafe-d77f7c78e673",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4f2a7f9-0ffb-48da-aa5e-2e3819bd08cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e267fff4-1491-4cda-97ee-1c6641323825",
        "cursor": {
          "ref": "c0cb7ff7-e7a6-46f0-aa82-70ee3c81dcfb",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9b1e5ece-276a-4915-ae98-d7ce69a3a649"
        },
        "item": {
          "id": "e267fff4-1491-4cda-97ee-1c6641323825",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b4ba5f5d-fcfb-4233-bac9-d0a5dfe11652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6270df-9f88-4913-969f-12346bf6b45f",
        "cursor": {
          "ref": "6c10ba67-d98a-4eff-950f-4ab864ec5a71",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f163a5ac-00a0-4e0d-a488-4ca1692b7e5e"
        },
        "item": {
          "id": "ff6270df-9f88-4913-969f-12346bf6b45f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cd0dbf22-36c9-461b-97ae-e82e25857a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bfb08f-3dc4-4591-a81e-66677086a61d",
        "cursor": {
          "ref": "c17ba44b-032a-4559-a465-f334d4d5aef5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "13d41c22-7b6e-43cb-996a-73b71378bc5f"
        },
        "item": {
          "id": "85bfb08f-3dc4-4591-a81e-66677086a61d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "816bc4c4-6d01-4c50-9775-c0a260d633fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789fe995-19cd-47a4-8942-eaffa5011918",
        "cursor": {
          "ref": "7b83a943-5e1b-499e-b1be-4f63e0dc03cb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bf35dbad-8b53-48dd-a30b-e1174da1947d"
        },
        "item": {
          "id": "789fe995-19cd-47a4-8942-eaffa5011918",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6ca02b52-b057-40f1-87ea-8d7e4990b4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d380787d-d801-4883-9e31-620f504008a2",
        "cursor": {
          "ref": "2a93074f-fcc6-4b17-917c-cb0f899a46d0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d1c78266-3ab4-4219-a47e-3dba30b7425e"
        },
        "item": {
          "id": "d380787d-d801-4883-9e31-620f504008a2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "38120579-a775-4535-bb23-412617fe8140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb21e895-4297-4be2-a4f9-b36775412698",
        "cursor": {
          "ref": "31783744-06a5-4855-87e8-d4d11d64ad09",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "40cf7b49-0fda-44a8-9fbb-ddc645acf5d7"
        },
        "item": {
          "id": "fb21e895-4297-4be2-a4f9-b36775412698",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "101e199a-30d3-4c3b-8bcc-707506f2059b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33271f3-2bc0-48b9-b7ce-8d177196a970",
        "cursor": {
          "ref": "1365199e-9a91-43e5-8904-261c1f46c29d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea16544c-e60e-4c82-a616-55148b261093"
        },
        "item": {
          "id": "e33271f3-2bc0-48b9-b7ce-8d177196a970",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c1a1e8b5-6d9a-47c9-a19f-1b6e84c608ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ec0260-cfce-452a-a1a8-53256981ba14",
        "cursor": {
          "ref": "54f9ecd8-efb6-4149-aea9-dc4d96050bb9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9385bf6c-aae7-4164-9e6c-18e3f967ac73"
        },
        "item": {
          "id": "38ec0260-cfce-452a-a1a8-53256981ba14",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6eeffa0d-d1d2-4601-8797-a8e2afe831aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f28ca1c-87cb-4fd0-8f67-189ea1afc5a9",
        "cursor": {
          "ref": "948d201f-945b-4d6d-bf14-c4629addc7ba",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "334c2d01-25e0-4b29-90d7-17d90b573b9d"
        },
        "item": {
          "id": "6f28ca1c-87cb-4fd0-8f67-189ea1afc5a9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "124ba1e3-b516-457d-8031-7c430f41e767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8725d4c2-87a5-4843-bd38-ac1851e98a3a",
        "cursor": {
          "ref": "a5689eb8-0bec-4c42-92ad-5c96b902a994",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4ff5fc66-88e0-4391-a786-ddd3ecf9bfdf"
        },
        "item": {
          "id": "8725d4c2-87a5-4843-bd38-ac1851e98a3a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1a37b9cc-cf9e-4286-8fff-9b7250441165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3894ad7-b1cb-4fdf-8f58-e60f6165f5af",
        "cursor": {
          "ref": "c0bc1463-4936-48b1-a7e0-5bd814de699b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a8e78e5e-392c-417a-b32c-8aabc290d050"
        },
        "item": {
          "id": "c3894ad7-b1cb-4fdf-8f58-e60f6165f5af",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "86a0a71c-9df7-4f3a-b839-3b33413d94a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b166d4-c0be-4ddf-9873-1725592ceb08",
        "cursor": {
          "ref": "effa5598-e73d-49d1-9fd1-e7c70f096a05",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "87584103-0f40-4fe4-92f9-4cf44444b4c0"
        },
        "item": {
          "id": "a3b166d4-c0be-4ddf-9873-1725592ceb08",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "05aa240b-cea7-459d-ad22-db832ffc0962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883bc305-149d-4470-9128-a2c76ba62065",
        "cursor": {
          "ref": "ef46ad5e-cd0b-47d6-adaa-6a527d1c4c0d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "51669d05-63df-4b3f-8945-db19fb96f067"
        },
        "item": {
          "id": "883bc305-149d-4470-9128-a2c76ba62065",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef6d554f-a908-4fc2-bd22-a7811212492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc26eab9-7f1a-41c8-805d-d35a013eaaae",
        "cursor": {
          "ref": "5ae94da8-a960-4bf5-b598-7e091b5377b1",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c84782fa-0dd9-43fe-9031-7dcea7654c78"
        },
        "item": {
          "id": "dc26eab9-7f1a-41c8-805d-d35a013eaaae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "629ffeeb-5733-4a88-b933-f5513a901dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f883851-c6c2-4068-bac5-0dc9ecbbc3af",
        "cursor": {
          "ref": "545c5d21-c6d9-4b9b-9a55-80259abf0e4e",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f306f94f-a38d-4dff-93c6-eac61fb3d27d"
        },
        "item": {
          "id": "9f883851-c6c2-4068-bac5-0dc9ecbbc3af",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8604c0c8-db8b-449b-b06a-4b79ffbcf292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a02bf0-da32-48a3-bd59-0d868058bf43",
        "cursor": {
          "ref": "b87fb1f7-990c-4a19-937e-6bd06c190f50",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b4dba74b-06d2-43fa-9129-1bb2a69c5540"
        },
        "item": {
          "id": "f9a02bf0-da32-48a3-bd59-0d868058bf43",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "64f42366-3f88-432d-a00a-1933d47f4b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4263dcda-f9b6-49df-8288-562421d5bcc7",
        "cursor": {
          "ref": "be2afe7c-4072-42b6-986f-0a0acec19eb9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "edcd8e26-cfba-41db-8802-25f4e2325ea6"
        },
        "item": {
          "id": "4263dcda-f9b6-49df-8288-562421d5bcc7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "738d4bbd-121c-4abe-af3e-0687e50f2eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb53bb16-9c06-46ce-b0a9-04012f39b831",
        "cursor": {
          "ref": "bf3ef882-7e52-4f6e-855e-d01fb6f1a957",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dc64de7d-8eaf-4407-a5e8-10b5fb543307"
        },
        "item": {
          "id": "fb53bb16-9c06-46ce-b0a9-04012f39b831",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9445393e-2c42-4ea5-b869-05dff96f7072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e4a8d9-7c85-4820-8042-a8b30110c5a8",
        "cursor": {
          "ref": "1ec35ff0-8b0e-4b5b-b7f4-7bf189780015",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5b65ece2-6788-4d64-895d-2748a7857cc7"
        },
        "item": {
          "id": "70e4a8d9-7c85-4820-8042-a8b30110c5a8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "86df4273-f9f3-4e70-be1d-0785938049eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f281b51-669c-47f8-b8e0-b9a5796596a6",
        "cursor": {
          "ref": "b2f8ddd4-559c-4990-8c4f-f8fc32d3f893",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e01797b8-8f6f-4705-b46d-e9f256931240"
        },
        "item": {
          "id": "1f281b51-669c-47f8-b8e0-b9a5796596a6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "65854fda-4942-4c53-9396-ca717aaee149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405063ae-52cb-4cda-b218-d86fe80b87aa",
        "cursor": {
          "ref": "0a155e39-97a9-43ec-a040-39ba2ea98f01",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8520e9c3-e749-4df0-bd12-886ebef1f310"
        },
        "item": {
          "id": "405063ae-52cb-4cda-b218-d86fe80b87aa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9069eac2-854f-414f-a4fb-fe263d1620a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358c13ed-054b-488c-ae46-a8ee40a16345",
        "cursor": {
          "ref": "3a83b277-0069-4aa0-ba3b-3326159f3043",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a8265a4b-504b-480b-ac0b-2eb7d30ce46a"
        },
        "item": {
          "id": "358c13ed-054b-488c-ae46-a8ee40a16345",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "392f9bea-dd96-458c-8200-2766e4c0e68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dcd08c-9438-479a-8df1-b17603766c58",
        "cursor": {
          "ref": "1d96dad9-f3fd-4e65-bb02-3088e67f3935",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5bef9adb-19fb-433d-9ea7-ab6ad0493672"
        },
        "item": {
          "id": "78dcd08c-9438-479a-8df1-b17603766c58",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "40151412-eaf3-423d-b5d9-749069b0b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b25f0-b5e2-4a66-8207-97e17413f90c",
        "cursor": {
          "ref": "8ccbbad8-28c3-4dd0-b819-674bb97fa9ab",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dec60bef-ac00-4e98-836e-2d9e1aca4a5d"
        },
        "item": {
          "id": "ed5b25f0-b5e2-4a66-8207-97e17413f90c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c8fa57f-cd3b-40f5-b798-3d968a780384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8626287-dac4-420c-959c-f10b40aea3db",
        "cursor": {
          "ref": "aac1d36e-e829-4f15-bd0d-6e6b4ef2308b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "671740da-08ba-41eb-a8de-9442d90b761e"
        },
        "item": {
          "id": "a8626287-dac4-420c-959c-f10b40aea3db",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f24ada73-4a93-43ca-b9b1-128adec2917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ee97af-d41f-49da-b325-f648eaa1ff85",
        "cursor": {
          "ref": "9c03f9d4-87d3-4e30-87c3-44a549c2ea62",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "534ac548-2242-40b7-a74e-b3276b3ace3c"
        },
        "item": {
          "id": "f7ee97af-d41f-49da-b325-f648eaa1ff85",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2af1a02c-bac0-4b3a-8f5f-208112defb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cff989c-b922-4c7a-b50b-e700a167a4e8",
        "cursor": {
          "ref": "78042307-8de2-4008-aef3-f6da6b70fc9c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91473e4a-b5a2-4478-8f40-126e8f18ddce"
        },
        "item": {
          "id": "3cff989c-b922-4c7a-b50b-e700a167a4e8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "225712a4-e1ae-4576-9121-31e0e738adc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048637e5-dd90-4b3a-9b5d-98dd0cda2bc2",
        "cursor": {
          "ref": "4c6fef7f-6b1d-4049-b587-ab22a07d34f3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eae790ae-4ab5-4657-a435-8722f95f4e12"
        },
        "item": {
          "id": "048637e5-dd90-4b3a-9b5d-98dd0cda2bc2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4a6e5c09-2c19-4d7a-a621-4f7d5500d7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447ec4f5-84fd-4b59-8e97-58fab4fe5f7b",
        "cursor": {
          "ref": "4fb07d64-abb3-413a-8414-3a826b9e39ff",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6dfd6ce7-5d1e-454d-b433-2845bf973b6d"
        },
        "item": {
          "id": "447ec4f5-84fd-4b59-8e97-58fab4fe5f7b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d10c22dc-df2f-411c-b6ff-54c68f439767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a592f630-0edc-48dd-b514-c9b91fca4256",
        "cursor": {
          "ref": "87982f31-96fd-4d95-94e1-c2991683334a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "65213f96-5d62-485e-84e2-307a2f6ebe4e"
        },
        "item": {
          "id": "a592f630-0edc-48dd-b514-c9b91fca4256",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6dc17f3b-17ae-481f-8025-50cea840e084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73c392b-a1a7-443e-b624-0c5dbd6ec71b",
        "cursor": {
          "ref": "70a94988-396d-48de-bcd3-b4d99cb686a2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5f4bd1b6-3991-4837-a0ef-a727c3a589ec"
        },
        "item": {
          "id": "d73c392b-a1a7-443e-b624-0c5dbd6ec71b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eae99896-a130-421e-b640-a0b1103a6c0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a58352-30b1-48ad-9b9b-a82e39beff0a",
        "cursor": {
          "ref": "1de19fad-bf9c-4daa-90f4-16992b48995d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "731576a6-769e-486d-88db-12b5abcd832d"
        },
        "item": {
          "id": "c9a58352-30b1-48ad-9b9b-a82e39beff0a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c6bcc22a-fb7b-4a85-ae67-571f2d5e99d5",
          "status": "Created",
          "code": 201,
          "responseTime": 7443,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd38a1-53a2-414c-a9d4-393f5c461479",
        "cursor": {
          "ref": "8efbd0a7-a22d-4c0c-b11d-846998fead4d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c8953c96-fd3d-4a9c-8134-668af39e6d20"
        },
        "item": {
          "id": "36fd38a1-53a2-414c-a9d4-393f5c461479",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "43e0d2c5-ef1e-4a41-abd1-83166ad5c4ab",
          "status": "Created",
          "code": 201,
          "responseTime": 6303,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "688f37af-0552-4e93-ae26-74ca189bfe07",
        "cursor": {
          "ref": "8f4b31cd-d68e-4a4b-9ac2-32ad369cb619",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94765286-d381-416c-90f3-45975e08ce71"
        },
        "item": {
          "id": "688f37af-0552-4e93-ae26-74ca189bfe07",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5df9cc3c-f7df-4bae-846a-92cf5c6b5af6",
          "status": "Created",
          "code": 201,
          "responseTime": 7496,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3a3bc-0880-4ddf-9a57-4be46c8b0750",
        "cursor": {
          "ref": "2b9c74f7-2045-446d-add3-c63de12be896",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d81ca0f-bbbd-49ae-b647-0cc4001bbd71"
        },
        "item": {
          "id": "91f3a3bc-0880-4ddf-9a57-4be46c8b0750",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d8b6d51c-097d-4594-a0a2-86e8081d4f31",
          "status": "Created",
          "code": 201,
          "responseTime": 6286,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e6057b-5b6f-4437-a366-d08ad13979b6",
        "cursor": {
          "ref": "b5c04844-457e-43d7-b803-710c3fde2958",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cd2eacb4-fd0b-4758-916a-9f30bc4e1f62"
        },
        "item": {
          "id": "48e6057b-5b6f-4437-a366-d08ad13979b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "89dbc877-5daf-44ba-89cf-ba90162a67e5",
          "status": "Created",
          "code": 201,
          "responseTime": 7010,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a18a89a-85a9-4620-af69-5c9e4b3a44f4",
        "cursor": {
          "ref": "44e2e994-6166-48ea-a0ec-a2d2adde156e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a7595b17-ac1f-4812-b6c4-fd9505d74088"
        },
        "item": {
          "id": "9a18a89a-85a9-4620-af69-5c9e4b3a44f4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "56ae5f0b-a0d9-4a01-9b1d-385204da9d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "5a841398-8c13-4967-a0bc-4c12942b73a3",
        "cursor": {
          "ref": "70405660-b00d-48bd-8a39-e7224525f5b1",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "70b486d3-adb8-4729-8141-0cf7fd532279"
        },
        "item": {
          "id": "5a841398-8c13-4967-a0bc-4c12942b73a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77fd7ff2-e156-4dd2-baa9-881664779453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd50adf7-1af4-4dc0-9112-27073f26957d",
        "cursor": {
          "ref": "b56c66cb-8596-4ec8-9618-d7bd52a8dff0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ee8034ec-ff4e-4456-8c86-a5ced4c94d99"
        },
        "item": {
          "id": "cd50adf7-1af4-4dc0-9112-27073f26957d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "978d5d04-d6d9-41b0-b07a-b245e1d590ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b6c3b7-4abf-423b-9995-a7f0b65c20d0",
        "cursor": {
          "ref": "850b2738-5f05-4a67-97cf-2c5c1b5bf2af",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c77dd15c-1b80-461e-9aef-77655134a514"
        },
        "item": {
          "id": "07b6c3b7-4abf-423b-9995-a7f0b65c20d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6623ba1-245e-4831-9989-027eb65b7902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3666267-0bc6-4c33-8522-e3e5fc04859d",
        "cursor": {
          "ref": "1e803b35-3ae2-4a30-afb9-b70df5ff87cc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ebc096fb-9580-43a1-a87d-a9c23a073044"
        },
        "item": {
          "id": "d3666267-0bc6-4c33-8522-e3e5fc04859d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9016c85c-aa6d-44eb-a6e7-9fca794415a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a025f0dc-cb66-4ec0-a863-6fd1c09c6e1d",
        "cursor": {
          "ref": "650336a0-f896-4bb9-9bc7-ba35995f9799",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0fd840c7-1764-45c0-82df-5cd99ccd598d"
        },
        "item": {
          "id": "a025f0dc-cb66-4ec0-a863-6fd1c09c6e1d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fd2088c3-742b-488b-baff-fbb0f2336f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0c23f7-3a66-47a4-9eea-6e47f26bae0a",
        "cursor": {
          "ref": "9c4a1c7a-b32f-4fd3-ae90-61d503fb883e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4b8a9097-3afd-4dd4-af1b-54bf39b44d9b"
        },
        "item": {
          "id": "fc0c23f7-3a66-47a4-9eea-6e47f26bae0a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "98fd07a2-fd81-47f7-b57e-7b46fb38b1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a05610-9658-4507-9134-7f7d5de9d9ea",
        "cursor": {
          "ref": "69a47da0-df12-4941-81ab-f342f46ea9cc",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c43d8287-9a6e-4572-993b-86135e4b599b"
        },
        "item": {
          "id": "29a05610-9658-4507-9134-7f7d5de9d9ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3df1c923-f035-471b-b036-fb2204e43aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27efa1a0-9006-4c4d-bebb-2f5a57cc911d",
        "cursor": {
          "ref": "1532b8ad-5f26-4296-97ac-97aa09079b7a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7aca898a-6d70-488f-81e4-93c9b40ede3a"
        },
        "item": {
          "id": "27efa1a0-9006-4c4d-bebb-2f5a57cc911d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b69fd8e1-a176-475b-bedb-56530c5672a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c7dd6-4e32-46fb-a44e-0a72dc4150d4",
        "cursor": {
          "ref": "cc7dad91-c930-485b-ba89-5007a8657ad0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "87137eec-461e-4f70-b76b-b3697d975140"
        },
        "item": {
          "id": "a33c7dd6-4e32-46fb-a44e-0a72dc4150d4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "75a73310-4cfe-46ee-9382-2dac295b6ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df20fd9-6226-4f68-83b5-9bb73f50f791",
        "cursor": {
          "ref": "cd07df5d-4e0a-409e-ab94-a15b69c90581",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8f1ae9a7-a74c-4077-99ec-22d09a7c3a11"
        },
        "item": {
          "id": "9df20fd9-6226-4f68-83b5-9bb73f50f791",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a3f5dff-9ea8-4a6b-a059-454e2a51a872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032244d5-bfc1-4cc1-ad21-b59cd3e260c8",
        "cursor": {
          "ref": "f50be19d-6043-483e-960a-6bff18753ee7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9df8b917-583d-4321-bc7f-36c5ff857167"
        },
        "item": {
          "id": "032244d5-bfc1-4cc1-ad21-b59cd3e260c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f59b07d-12dc-43f3-a227-221f88ad9915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4b3858-7f15-4353-aaf4-1b7ebe8d3940",
        "cursor": {
          "ref": "d5bd58f4-5a1b-4ed9-943e-e13f047abc00",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75c7528d-f07e-4263-9f63-4ca7a30f4cbe"
        },
        "item": {
          "id": "bb4b3858-7f15-4353-aaf4-1b7ebe8d3940",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "862e2da7-bd10-489c-9f15-d74d299ce5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887278e9-8bda-4357-be96-0c6822a58563",
        "cursor": {
          "ref": "500e9de4-c62e-414a-8037-47cae25f6923",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b3c4c3bf-0b1d-46e4-a57d-a997a3755922"
        },
        "item": {
          "id": "887278e9-8bda-4357-be96-0c6822a58563",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c24200c9-96a8-4c7e-8a96-ece6e886a0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0b252-bc9e-4a2a-a3a6-fb6ac1c5b365",
        "cursor": {
          "ref": "d3cceed2-6e35-4355-a61d-053e3e82b2c1",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "201360be-1349-4903-9124-d68878c53273"
        },
        "item": {
          "id": "f1e0b252-bc9e-4a2a-a3a6-fb6ac1c5b365",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c52c2d2c-0597-4c6c-9e02-b8c324c9fd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29d85a-2d34-4fbb-be6d-b69c7cafc49a",
        "cursor": {
          "ref": "12f7b6c7-0ab2-49fa-821f-b31c427760eb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "652bc9eb-a4a9-4dd0-9d14-7c727547ec9b"
        },
        "item": {
          "id": "9c29d85a-2d34-4fbb-be6d-b69c7cafc49a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ed330cc1-e588-4c01-94e8-d8eb49d507e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df13efa-9f39-4a35-b35c-8221bbc15c42",
        "cursor": {
          "ref": "4cde995f-2b1d-4f7f-ab56-6d931c230ef7",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dec7d9cc-8eb4-459e-b033-b2ccdbd209ed"
        },
        "item": {
          "id": "1df13efa-9f39-4a35-b35c-8221bbc15c42",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "35519075-faf8-4665-9567-ab4b2b5c7f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d07801-6a91-4a52-b940-c714821fd837",
        "cursor": {
          "ref": "034077a5-9cf1-46f4-9ba6-d0b92f79e053",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bb6d4a3c-ebfe-45dd-9ffe-6fa6ce2b1dc2"
        },
        "item": {
          "id": "d3d07801-6a91-4a52-b940-c714821fd837",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8706fa69-1a86-42db-8ea0-60424d4a2db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd22eb8-746e-438b-a606-7d98d3caac21",
        "cursor": {
          "ref": "b21af201-26a8-4345-9f27-5d10382817b6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "daa619ff-0996-428e-a435-8213caab6218"
        },
        "item": {
          "id": "9cd22eb8-746e-438b-a606-7d98d3caac21",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7a80174b-d27a-4a31-8970-4bb4a0825f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e8f9ad-d267-4cc4-8988-29ce2b5460d0",
        "cursor": {
          "ref": "8a803981-9591-4450-b807-5ece1735dd11",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "44917a06-90c6-4bcf-b90c-c6e5bcd80382"
        },
        "item": {
          "id": "73e8f9ad-d267-4cc4-8988-29ce2b5460d0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6c58c1db-39eb-46a6-8aeb-28b3b1d22dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af97a088-8f09-4860-a582-4c83073f976f",
        "cursor": {
          "ref": "e2be7e32-b37b-4448-a58f-66734cf18c09",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0e220800-8a80-4d30-9d2f-21cc65a313c7"
        },
        "item": {
          "id": "af97a088-8f09-4860-a582-4c83073f976f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5596169f-f9c3-45df-8aa3-34cbaba00a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8024f68b-cdce-47c3-90c3-b6dca51262ba",
        "cursor": {
          "ref": "b37e7ed2-2905-4a45-aa56-e821fd0148e3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1c0c81ab-311f-441c-b6ea-362a8021e71b"
        },
        "item": {
          "id": "8024f68b-cdce-47c3-90c3-b6dca51262ba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ce480df4-d001-457a-9e45-6e571442e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db80871-8126-45b5-b9ae-7ff21d72ce60",
        "cursor": {
          "ref": "55d11bb1-94aa-4993-aec2-8270c0f3816d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed8b98e6-a6c0-444f-831a-7415d3b21d0a"
        },
        "item": {
          "id": "7db80871-8126-45b5-b9ae-7ff21d72ce60",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "32c3c213-b5b2-4ecc-b79d-4da802ab1597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4403677b-7490-41c8-af18-347a469d6a67",
        "cursor": {
          "ref": "8462118f-44ab-4bc2-8c62-00f38c474ef2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "77304e79-468c-44f4-83aa-c5209b5fa601"
        },
        "item": {
          "id": "4403677b-7490-41c8-af18-347a469d6a67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "613a502e-5f2f-4da5-8647-fb1f037bbb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9337e8-b4db-4160-854e-f0ab581017f8",
        "cursor": {
          "ref": "7f2a17e1-3b2d-4a3e-95a6-2962e32f358c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e5aa774f-8e5d-4eb6-a79f-27a848393cd3"
        },
        "item": {
          "id": "9f9337e8-b4db-4160-854e-f0ab581017f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9a09c39c-b08d-41d2-9e05-ab0c9818ed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4652fa92-577e-426a-9d9a-572c06c88ff4",
        "cursor": {
          "ref": "03c0ccea-29a3-48ed-bd25-5f26d4616fa3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "63b4fc66-e686-4af4-8ee0-bef0ddd51366"
        },
        "item": {
          "id": "4652fa92-577e-426a-9d9a-572c06c88ff4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1c560145-6797-4c3b-82c4-e344bc7e2a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9118cfb-015b-4727-b4ac-0d8bdd05140b",
        "cursor": {
          "ref": "322d0f62-0ec7-4fc6-9364-d144eed4eecb",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "44c804cb-fbdc-4e83-aa08-81a54577af6e"
        },
        "item": {
          "id": "a9118cfb-015b-4727-b4ac-0d8bdd05140b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb8f4e5d-cc18-41a3-b71f-1a34ddaff04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf45a24-c8a7-4cd5-b630-25437ba1851a",
        "cursor": {
          "ref": "2da2a44c-47e9-4ae0-a18a-66be0999d3ab",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "417f5e4e-39a7-42dc-b26e-37ee5e91a488"
        },
        "item": {
          "id": "abf45a24-c8a7-4cd5-b630-25437ba1851a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac86b34a-9a33-44ed-9e92-ec1a985be393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d67d5c-0629-40ee-93cd-b7fadd235786",
        "cursor": {
          "ref": "5be9c02a-7105-475f-b8b2-64d82fd134ab",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17674ab7-f430-48df-862d-a9ffce316c25"
        },
        "item": {
          "id": "d2d67d5c-0629-40ee-93cd-b7fadd235786",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f8b1082b-fd92-422c-a133-5e93061f31e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dde457-7984-40ca-97fe-d89ccc8bc0ce",
        "cursor": {
          "ref": "ce11db9b-3e10-43c5-9bb8-7ea4d8953421",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe0b3e33-a089-4668-82ba-088c37c0e47e"
        },
        "item": {
          "id": "29dde457-7984-40ca-97fe-d89ccc8bc0ce",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2c964197-e4af-4e0a-8118-68e46c1478bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f256c1f-2bbc-41d9-8dd4-39e1e4ff76b6",
        "cursor": {
          "ref": "1e2cf8c3-d250-45f8-8e3a-9c2a58a5a2ea",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b005b914-c36f-4006-966c-3490128487d5"
        },
        "item": {
          "id": "8f256c1f-2bbc-41d9-8dd4-39e1e4ff76b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5d7bd20c-a41a-4e7d-9ea8-f102cfc65d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d67b0e-8b11-43ac-a42a-e336ed63d3d8",
        "cursor": {
          "ref": "787519f0-6ac0-4d53-81b0-1332db1b1bfb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "69b6eea7-a89a-48ca-85f3-1aa59220bbbb"
        },
        "item": {
          "id": "39d67b0e-8b11-43ac-a42a-e336ed63d3d8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "39a86a00-7c95-45f3-913b-575b5a6d73f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfa251b-17b9-4d36-88d6-305c9f430e9d",
        "cursor": {
          "ref": "59b90a5b-e9da-4b51-884d-48de7a91e048",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f632f449-0bc4-4f89-862a-20e2b1d85b2f"
        },
        "item": {
          "id": "dbfa251b-17b9-4d36-88d6-305c9f430e9d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a250d1cb-2ae4-4729-b259-2ceb97fb836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a1b3ba-5765-48c3-8cf6-7ea2743d4315",
        "cursor": {
          "ref": "53429d3b-7c01-49df-9300-bb2dfae873c2",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc3e302e-2267-45c9-9a74-107cf894463e"
        },
        "item": {
          "id": "02a1b3ba-5765-48c3-8cf6-7ea2743d4315",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "82807169-4ec5-418e-8fe9-77d5f932e219",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8bf835-4e92-40df-a37f-1eeec5456e6b",
        "cursor": {
          "ref": "b4e80609-e8f4-4203-be56-ae6c17b074b4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d3272b39-ee7f-4001-9bf0-a25c66f89a4d"
        },
        "item": {
          "id": "4c8bf835-4e92-40df-a37f-1eeec5456e6b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "25e01b48-9917-450d-8480-78bb2e5f4e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18474ddc-5198-444d-81e3-eaa87c1a9bb3",
        "cursor": {
          "ref": "6b35ef1e-6468-4c89-b6c6-a116370aea09",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "14e21ff4-e145-4e73-b714-5175d2ec5b6f"
        },
        "item": {
          "id": "18474ddc-5198-444d-81e3-eaa87c1a9bb3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8e9ed4dc-88f8-4e6e-b580-fa4549295c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fe0133-03c4-4aa8-b4a3-e81441f92fea",
        "cursor": {
          "ref": "ae84af85-0f76-4fc3-81cd-b50196e362a9",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c38c899a-c241-401c-a48b-f507ff741234"
        },
        "item": {
          "id": "42fe0133-03c4-4aa8-b4a3-e81441f92fea",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67348404-81a1-41a2-86ba-cec5ee123364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c343060c-cd35-4c12-86ec-6088ea6d17d0",
        "cursor": {
          "ref": "c4482dba-6117-4a46-ba85-c303409aefa2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3775e188-f69e-4ca2-b143-5857311b561a"
        },
        "item": {
          "id": "c343060c-cd35-4c12-86ec-6088ea6d17d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "359078e0-4474-42ac-884f-559315703dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869aecad-005d-4d9d-9d97-c8c26b2bb05c",
        "cursor": {
          "ref": "2afe24d2-906f-4a25-9dcd-71781b98d074",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "18778f18-1796-4397-a18b-0394f388a0b8"
        },
        "item": {
          "id": "869aecad-005d-4d9d-9d97-c8c26b2bb05c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3fc409aa-08a9-4a0b-a2f1-5ddd125c7b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c6c9ad-4082-486d-ad16-1afd4fb27b74",
        "cursor": {
          "ref": "7eab635a-9098-4c80-99d5-721aa1bd231a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "91756977-ec01-4965-9fe4-5caa8f0884c6"
        },
        "item": {
          "id": "e6c6c9ad-4082-486d-ad16-1afd4fb27b74",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "59499b0a-f79c-48d7-99ad-67edd7ff7574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4891a5-0cc5-4935-84a5-c6b1fd159d0b",
        "cursor": {
          "ref": "2a1af082-50ab-4bea-bb64-bdf8f00b4794",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "701a5865-c5bf-480e-a5e5-9cf0240b879a"
        },
        "item": {
          "id": "cc4891a5-0cc5-4935-84a5-c6b1fd159d0b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4c536d83-bc06-4cea-ba5b-0085480c32b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c32ee23-5b8c-4d00-b59e-978ec1477eec",
        "cursor": {
          "ref": "681eacef-a50f-444a-95e1-ec1bd651197c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "28e73364-573c-44f1-acbe-e9acbcd3dab2"
        },
        "item": {
          "id": "2c32ee23-5b8c-4d00-b59e-978ec1477eec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b648e23-91cd-48f7-b06f-70381c17e6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dca702-3518-4a8e-b374-314193f8518c",
        "cursor": {
          "ref": "5ffbe27b-fa02-441d-8c10-e4522c0bf348",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2eb1cdfe-63bb-435b-8ab0-de5e7f17f24e"
        },
        "item": {
          "id": "c1dca702-3518-4a8e-b374-314193f8518c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9488ad05-230f-4156-b993-7a0e469da58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494db547-158e-4019-b5a3-530e7c2d4cae",
        "cursor": {
          "ref": "07dace70-febe-4d11-8b6c-faefdf3fe80f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f8b746d3-41b2-44b0-b48d-023f75612fa3"
        },
        "item": {
          "id": "494db547-158e-4019-b5a3-530e7c2d4cae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "70d6dcbc-42ae-4edf-93cd-62a0fefb2fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60cc83d-12e1-4a36-8892-6c4c49d75a2e",
        "cursor": {
          "ref": "2103debd-51c7-4ac4-8a05-3ce62e18f3d4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e885b49e-d04c-4230-b0cf-ee87db8404b6"
        },
        "item": {
          "id": "e60cc83d-12e1-4a36-8892-6c4c49d75a2e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5b3f69ca-6c41-41d6-9430-7cb363ba5976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731b6c3e-5700-4734-a6a0-a957441cc58b",
        "cursor": {
          "ref": "4f5d14f9-f459-4d46-9498-7bf1a18e2e7f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1c16f6ee-46ef-4617-9a0e-7c038f81dee2"
        },
        "item": {
          "id": "731b6c3e-5700-4734-a6a0-a957441cc58b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "850b9435-babf-41ac-b296-e60fa43ec664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fc2b98-192a-48f5-93fa-c558b43274d7",
        "cursor": {
          "ref": "be53d989-b39e-4b01-a175-886d1d571cef",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "16300e64-c9f8-4817-8aea-2141821152b6"
        },
        "item": {
          "id": "f8fc2b98-192a-48f5-93fa-c558b43274d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "46f56861-d5f3-492b-b28f-d670c0296b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923cf91e-7f1a-46f5-98e8-7971ad2d6392",
        "cursor": {
          "ref": "38067809-ad8d-4708-bad7-4a146bddabb4",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4f7478cb-a52c-4e71-8103-a60e54f9ad2e"
        },
        "item": {
          "id": "923cf91e-7f1a-46f5-98e8-7971ad2d6392",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e43b645d-15ea-44fd-887d-9f83e711eafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb88166-a93c-494a-9c98-582dee58b544",
        "cursor": {
          "ref": "58e3b72a-3b87-4fb8-90b0-8409babc803f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1ac39d62-f7cb-4e8c-af5b-5a9b54e09a88"
        },
        "item": {
          "id": "8bb88166-a93c-494a-9c98-582dee58b544",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3ad31403-d96c-4b3e-8af1-35a3ccd21a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aa377e-0b7a-4cd5-b542-fbe53d0ee77e",
        "cursor": {
          "ref": "b2774d3a-a6c1-46a3-944c-2d820ab0e416",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a1e239a-0729-4ecb-b22d-58652c8c0352"
        },
        "item": {
          "id": "48aa377e-0b7a-4cd5-b542-fbe53d0ee77e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec2c344f-6e10-408a-86ce-d4b867a00486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86b5bad-5713-4712-b61d-6ffebd418f38",
        "cursor": {
          "ref": "f82c188d-f12d-4dd6-9e94-318f8a68adb7",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2f929251-96b2-48a4-9fe1-52ed748dd2ea"
        },
        "item": {
          "id": "e86b5bad-5713-4712-b61d-6ffebd418f38",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb153746-3a46-4679-abc3-1f94bbe22159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8205de-fba1-4b48-ad5e-d95fb722d8e3",
        "cursor": {
          "ref": "2d72bef6-bf6c-40bc-b5e0-fba52a40b1a7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "902e0da4-344f-418b-b1bc-96cefb1eedd8"
        },
        "item": {
          "id": "da8205de-fba1-4b48-ad5e-d95fb722d8e3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d0eafe4-f6b3-4801-a3c5-00fc11d9dc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c361ea45-369d-4039-a197-10f02a9a8159",
        "cursor": {
          "ref": "c351cb3b-cc83-4bc2-b066-f143375a381c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d58abe78-2ceb-4879-a87d-a8cea9399789"
        },
        "item": {
          "id": "c361ea45-369d-4039-a197-10f02a9a8159",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f6a8d9de-9595-4c39-bc6f-4e22c1834e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b167497-7560-4710-9361-7488b837759e",
        "cursor": {
          "ref": "f8d95d02-d4d6-491c-aade-10f522942c75",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c6a4fd64-6266-4aa5-a03c-ae4f84ff02c9"
        },
        "item": {
          "id": "2b167497-7560-4710-9361-7488b837759e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c24c9f9e-5d7b-49e9-82c9-ad11dd5cd1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20149362-02f7-4836-a997-ff8b48e1d6dd",
        "cursor": {
          "ref": "25b8a8e1-d6db-4c61-bd64-516adaf7d433",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8e2ed43a-222a-4e20-8d1b-7fc3a9786890"
        },
        "item": {
          "id": "20149362-02f7-4836-a997-ff8b48e1d6dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "de206a4b-3670-4294-bba9-93c624f3be77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b96385-6371-4de2-836e-fee061401f20",
        "cursor": {
          "ref": "518381e6-e61c-4265-917b-7fb859241b95",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ae958821-6448-4db3-a8d2-f0594734f248"
        },
        "item": {
          "id": "33b96385-6371-4de2-836e-fee061401f20",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fdda5ee5-2915-4ceb-ba4b-9dc4e54952f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285d2575-7791-4ddf-b26d-16a6eeb4faa6",
        "cursor": {
          "ref": "070ff1a9-eb31-455e-869c-588e3485a17c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4170da5b-c3f9-4073-bc60-53238c12bf4a"
        },
        "item": {
          "id": "285d2575-7791-4ddf-b26d-16a6eeb4faa6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a939a613-044c-4cce-a951-05957978c25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf853c82-4d99-4029-aa82-e32b9a391ee3",
        "cursor": {
          "ref": "f0b6a644-f8d1-4a86-b20b-67de96643854",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e268f9c0-83db-4956-a117-0002c874e9b7"
        },
        "item": {
          "id": "bf853c82-4d99-4029-aa82-e32b9a391ee3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b7d3886-1d92-40bc-b932-a086de0e6ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed99215a-7f3b-49d0-8697-e017c883e136",
        "cursor": {
          "ref": "57fd7425-b4d4-4d24-9db6-2f6e774e6a8d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b8e8f959-1d90-455a-bbfa-26c2aa29d16e"
        },
        "item": {
          "id": "ed99215a-7f3b-49d0-8697-e017c883e136",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "44eb20ba-3a10-41bf-a136-08c3413a5b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92f85a2-404d-4afc-bc55-c651e7051715",
        "cursor": {
          "ref": "281f224f-5cc4-4555-aeea-967c4914e5da",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7887f8c6-b829-4fd0-a944-b523ad316f12"
        },
        "item": {
          "id": "b92f85a2-404d-4afc-bc55-c651e7051715",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dce0638b-f1cc-41bc-8926-0678bb5e6436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18fa0b8-ff09-45f4-a555-93a4ab78c33f",
        "cursor": {
          "ref": "92469d5b-385f-43c5-94a4-7c3c34812d6f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a5378c8e-0c6f-489f-85ab-c03c607f13f1"
        },
        "item": {
          "id": "e18fa0b8-ff09-45f4-a555-93a4ab78c33f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "358218f6-4992-4117-aada-078d73db3adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38359f7a-2302-4b3a-8050-733326dc3720",
        "cursor": {
          "ref": "ebd8fc08-fb13-4777-a8c4-f8b97c09f50a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "17a3a57e-b1ed-4057-b111-96a104684645"
        },
        "item": {
          "id": "38359f7a-2302-4b3a-8050-733326dc3720",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e55033f-8206-403e-825e-10e58d3c4b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac34a30-bb4f-4779-a1e0-989cecf407c3",
        "cursor": {
          "ref": "34ca0dc6-9204-474f-b057-9681a44934dc",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4adefb21-10b5-4aa5-87d5-5bd861f49450"
        },
        "item": {
          "id": "6ac34a30-bb4f-4779-a1e0-989cecf407c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3413848d-6930-4e3e-838e-2adadaee0d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4d3213-4810-4255-9cb9-f24c0ff33336",
        "cursor": {
          "ref": "89dd4045-d4a0-4660-85ac-6891836a1781",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "90a8a4d8-808e-47d1-99a4-21e2cdd40b7e"
        },
        "item": {
          "id": "8c4d3213-4810-4255-9cb9-f24c0ff33336",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d232d71e-c544-4c90-bba4-e4d694a8a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428fecbd-b40c-446c-8af3-b7022dcc5ce3",
        "cursor": {
          "ref": "fb834c5b-746d-4aba-9cac-6ce6d2e4a10f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f3d192bc-693d-4d11-a3e8-b5f901dbeb4e"
        },
        "item": {
          "id": "428fecbd-b40c-446c-8af3-b7022dcc5ce3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "edf81cdd-0558-4321-bb35-e5b6c8f71689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b70bebd-ed9b-4511-bb8e-ef297b2c71e3",
        "cursor": {
          "ref": "2fe67a32-6514-40e4-92ff-d16e8e3cd538",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c9b4d38a-a5ff-4932-ab69-3f9c848175b2"
        },
        "item": {
          "id": "2b70bebd-ed9b-4511-bb8e-ef297b2c71e3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ead82d5a-13c5-4176-ae65-780b5d3ce117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a8cf7-3f0a-4f82-9db6-c21820d61fc1",
        "cursor": {
          "ref": "925eccc5-bd3e-44ca-bae6-8c740c8ccd1e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ed391508-c02d-4a41-92e5-5ede742cdc9a"
        },
        "item": {
          "id": "1a0a8cf7-3f0a-4f82-9db6-c21820d61fc1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9404626-bf3c-455e-a6d5-6624ef022629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc397c87-430f-4a44-b699-d0532c325e06",
        "cursor": {
          "ref": "9c562f6e-e9ac-4644-a270-2bb49bae79ca",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb556b61-f98d-4880-9342-87f9fabd1c81"
        },
        "item": {
          "id": "dc397c87-430f-4a44-b699-d0532c325e06",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3eef2e70-1534-4603-a906-29cdc497d7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0288f8-9687-4959-8f44-ece3cea02c9b",
        "cursor": {
          "ref": "232a0fe6-a8b7-4fba-82c3-e2005f2b9542",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7ccd5546-f2db-49f6-a20c-f917148263b9"
        },
        "item": {
          "id": "fa0288f8-9687-4959-8f44-ece3cea02c9b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc3e8042-b26c-43c1-b191-be576e38360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab664b6-bbf3-4403-a486-40d657d87da2",
        "cursor": {
          "ref": "052e6633-f7fb-4211-b356-d0e9cf0fde55",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c4f5af83-2e03-4bd8-af3d-e5002dfc0dc8"
        },
        "item": {
          "id": "1ab664b6-bbf3-4403-a486-40d657d87da2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6cc496e4-d155-454d-b0c7-e65b47e1b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e1627c-8847-459b-b719-2e8475955c46",
        "cursor": {
          "ref": "90b87541-4c45-4bb6-bddc-1b302f039f5d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e63a6b4a-a4db-4303-a68a-10637f924ffc"
        },
        "item": {
          "id": "65e1627c-8847-459b-b719-2e8475955c46",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2bb13355-0c40-479e-a0ea-ef9bec393dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32753136-834e-4c0c-b66c-ebf284a31f8d",
        "cursor": {
          "ref": "30f74447-5318-4cd9-adef-0b8102fdc695",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "01e0a092-105a-4e17-a2dc-c8190ccd064f"
        },
        "item": {
          "id": "32753136-834e-4c0c-b66c-ebf284a31f8d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f78cc162-9b8f-4751-a7fa-124c8211d187",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb12c741-7dd6-4b98-a116-bb0996d055fd",
        "cursor": {
          "ref": "8f004280-9f92-4274-acec-6f22d81e7c2b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "97b4b2ef-d5f9-433f-9ad6-e65335d8ba4f"
        },
        "item": {
          "id": "fb12c741-7dd6-4b98-a116-bb0996d055fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "48584175-430a-4444-a140-34ec25046331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9564b0-6c50-4b6a-93c4-22d688d2ab2a",
        "cursor": {
          "ref": "6b67a59c-84c8-4777-b2ea-62c9d69f881b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4630bc2e-8de0-4b58-b118-742ac30a4cc2"
        },
        "item": {
          "id": "cb9564b0-6c50-4b6a-93c4-22d688d2ab2a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bbda5c33-ff3d-4e58-af6e-759eec49f5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76081820-5204-4c1d-8caf-572587a892e0",
        "cursor": {
          "ref": "f3d80917-3661-4221-acb5-50f6d01bf930",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "81f8cb02-b560-4988-8af0-a018ce567792"
        },
        "item": {
          "id": "76081820-5204-4c1d-8caf-572587a892e0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "247715fe-f805-4827-af21-b74b182bcdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c390d051-0c3f-49ac-9148-286aded40e1f",
        "cursor": {
          "ref": "af6029ad-dc36-4b62-8918-34b3bf046998",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "71daebed-7953-4362-96a1-869610bf36cd"
        },
        "item": {
          "id": "c390d051-0c3f-49ac-9148-286aded40e1f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a51294e6-d1f2-456f-b866-dcf4a775036f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23e7a47-69ac-48f1-8474-508400c5d966",
        "cursor": {
          "ref": "3067856e-e661-4e48-8ca1-278cef3a7ca2",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "caef1cb4-73a4-491b-bf7c-a6e4c76c7fb2"
        },
        "item": {
          "id": "f23e7a47-69ac-48f1-8474-508400c5d966",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c80ed80c-fe64-452d-8b68-93aefb4e3763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe46da15-5879-477b-95e2-53c0aa2b3a7f",
        "cursor": {
          "ref": "7acc28e0-dcf2-4e3c-a4e4-307bb9dfaa55",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "175fb675-107b-4e5d-9b8b-e77d0a22a051"
        },
        "item": {
          "id": "fe46da15-5879-477b-95e2-53c0aa2b3a7f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "babb00cd-ded1-4997-8981-7328dd170738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aef0756-d5a8-4ac4-b18e-3ac45614ada0",
        "cursor": {
          "ref": "20aa85c5-e012-4395-9541-b8eb8ab908f4",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7459917a-e595-4d9a-a850-56ae52863e04"
        },
        "item": {
          "id": "7aef0756-d5a8-4ac4-b18e-3ac45614ada0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6e86d24a-ee6d-476f-8834-83e8e5197dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f19413-1c1d-4746-8c22-c997d8a70a96",
        "cursor": {
          "ref": "206b24f5-2d8c-48ad-9aba-09486e17f0b1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bfff7207-7e8e-4787-bffd-06d4721d0ccb"
        },
        "item": {
          "id": "14f19413-1c1d-4746-8c22-c997d8a70a96",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "76adb0c9-d8ff-4dae-ac0b-a056b9b60a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b056bfc-9a5a-4a3a-8a13-cd0c5b24fada",
        "cursor": {
          "ref": "a53b9483-57b1-4aad-8f16-8d962af21a9d",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3d06d6d7-88c3-4af7-b02f-df353d45e03c"
        },
        "item": {
          "id": "5b056bfc-9a5a-4a3a-8a13-cd0c5b24fada",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a45657c-fce4-46d2-85ea-afe283f3bc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de613d87-9042-45b6-b26d-89fd1f1c6090",
        "cursor": {
          "ref": "7d843384-08df-4078-80aa-1ce5da71d27c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be247cea-7281-4ee3-ae75-4fa52eb5a228"
        },
        "item": {
          "id": "de613d87-9042-45b6-b26d-89fd1f1c6090",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "97ff34e6-33df-4edb-8540-535bcbd1f0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aa65b6-7ba6-4a45-abd6-a1ca17ffa35d",
        "cursor": {
          "ref": "627d19ea-0c24-43a8-8099-fc66dac245d8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dbfd60a1-0f06-48b8-b29d-f1e4f1f2e603"
        },
        "item": {
          "id": "86aa65b6-7ba6-4a45-abd6-a1ca17ffa35d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "df01fdb4-8cc1-457a-90ce-00a95022b7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e864d6f5-1beb-4096-a21e-cab23b253707",
        "cursor": {
          "ref": "09a2e861-c690-4694-813e-c827b35dce4d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "59fdecaa-f145-4c97-a19b-6566c8beb36f"
        },
        "item": {
          "id": "e864d6f5-1beb-4096-a21e-cab23b253707",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e6c90ad8-bc3b-43c1-9789-6afeda5e044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d765a7-a6c0-4a6b-bb62-09181a10142f",
        "cursor": {
          "ref": "28880450-273e-476a-a882-b77278861d60",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8823cc66-5029-48bc-b016-773651c45422"
        },
        "item": {
          "id": "50d765a7-a6c0-4a6b-bb62-09181a10142f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2024b344-59bd-48df-80a9-286447777c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f188c5-0f2c-4d06-8a77-427b47a1c2f0",
        "cursor": {
          "ref": "4306c865-44ab-4a6e-974f-c0ba3146473f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "73ce325d-e02d-4dc1-ba87-dccebd7d27fa"
        },
        "item": {
          "id": "37f188c5-0f2c-4d06-8a77-427b47a1c2f0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "de8e9a29-0d79-4235-bcea-c35847214f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3b096-df05-4a3e-aed4-80f6fa576434",
        "cursor": {
          "ref": "6d01ead2-ce53-4eb5-b452-9930e63f307e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "945b2818-832c-47a9-a75f-7d87b67b85a1"
        },
        "item": {
          "id": "8cd3b096-df05-4a3e-aed4-80f6fa576434",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "80f91cee-1170-4e1b-9d49-ef8dfdde23d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f81e6f-c16a-4380-aa9f-4cb6c89e552c",
        "cursor": {
          "ref": "d884d9db-b68f-4423-a7ea-225a9a8d77cf",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cc135c18-e4fb-4dbe-a851-8bf9853c64a9"
        },
        "item": {
          "id": "40f81e6f-c16a-4380-aa9f-4cb6c89e552c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "619cf0b8-467e-43de-a233-5b651fe4f691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b12947-fa0c-46c5-b818-9093d31ac79c",
        "cursor": {
          "ref": "2ce5ca4b-eb15-467a-8fee-3ddd3a1fc96c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bfa41d19-cfd1-4dc8-8f0b-777d7b4df387"
        },
        "item": {
          "id": "58b12947-fa0c-46c5-b818-9093d31ac79c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c18323b3-4d8c-48a5-88d6-dbebda5d395f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377e91de-4fb7-493d-94fa-cc8bd81dc04c",
        "cursor": {
          "ref": "fb209229-a6f7-42a5-99b3-5e0a7a1629f2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "76257745-3c89-4c55-b874-cde0714ab7ed"
        },
        "item": {
          "id": "377e91de-4fb7-493d-94fa-cc8bd81dc04c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "655cd1c9-cab4-411f-985b-1027f2dc2b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b99b6-122d-4053-a908-17d706fe0c2f",
        "cursor": {
          "ref": "c2110879-cffd-417c-af94-664d27a6b139",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c99a8162-41f0-4bde-9462-47903122c97f"
        },
        "item": {
          "id": "aa5b99b6-122d-4053-a908-17d706fe0c2f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "84e8968e-d15f-4d59-9e58-0b300989e837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307ac868-ffc0-48db-8304-14bc9789beef",
        "cursor": {
          "ref": "ff9c57c1-114b-4c3c-b881-40bf2677f121",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6ed35f76-9b0e-433f-a2e6-adc8976f29f7"
        },
        "item": {
          "id": "307ac868-ffc0-48db-8304-14bc9789beef",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d765655a-e916-42f0-a16b-48e57de21f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d630dcdc-194e-4853-8239-4035c26a78eb",
        "cursor": {
          "ref": "db9b83e2-e114-4de1-bd4c-02627112c3a0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "30a375b9-5f78-43de-8b94-17cc37db5ef2"
        },
        "item": {
          "id": "d630dcdc-194e-4853-8239-4035c26a78eb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5d2fe692-49fa-4909-b508-82dcf5abf134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1893db87-bbb7-48c8-b3d8-46f5ed6048f3",
        "cursor": {
          "ref": "ff96b0ac-8d24-4383-83f0-66109a8fdd10",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "843e4d0e-2f2e-4dcd-98ab-af5a12549c82"
        },
        "item": {
          "id": "1893db87-bbb7-48c8-b3d8-46f5ed6048f3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "09b41722-d2f8-4b9d-a0f2-88ed28d27cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d7fbd6-2dd3-40ef-9a05-beef69dc543f",
        "cursor": {
          "ref": "f720b05a-b58c-4bb0-95e9-506af977d34f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8a6b4284-2133-4070-8004-74fdcef740c8"
        },
        "item": {
          "id": "a0d7fbd6-2dd3-40ef-9a05-beef69dc543f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4dff53ed-faf4-439e-a137-0cdbf2b25aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65d3863-555b-4721-8552-fe788deb8e54",
        "cursor": {
          "ref": "55f340c0-6aeb-40ca-a419-cfb752b10c2a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f48f401f-3340-408b-b15e-653177674a3b"
        },
        "item": {
          "id": "e65d3863-555b-4721-8552-fe788deb8e54",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b8c8d022-2e65-425f-8814-4ee596a70537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9bcd6c-b230-47b6-a10a-a181de870daf",
        "cursor": {
          "ref": "cdea4be6-983e-47e0-a269-fc0aa4cd72e3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9d284235-cc5c-452f-9786-f249b0cc7c02"
        },
        "item": {
          "id": "eb9bcd6c-b230-47b6-a10a-a181de870daf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "972fb16e-4c24-47ac-9ec5-7cc299b449b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee66b273-c0c4-45c2-b229-bbbe7493bc6b",
        "cursor": {
          "ref": "277d8537-cc87-4faa-afd1-16f2aff068b4",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "12bd9a82-af47-47e2-8d25-b88670ba6838"
        },
        "item": {
          "id": "ee66b273-c0c4-45c2-b229-bbbe7493bc6b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b6215a40-8a03-4f36-9933-3cde3d069e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f31bfd-4c94-449b-bc8a-f421b152420e",
        "cursor": {
          "ref": "c704fc57-b2f6-4f5f-8a92-81e40ae511f3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0207f404-70b5-455f-a481-26922c28e443"
        },
        "item": {
          "id": "52f31bfd-4c94-449b-bc8a-f421b152420e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "97702aab-c230-4e31-ab54-1e638afefc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa5c77-5559-4e56-a716-799218e2cde7",
        "cursor": {
          "ref": "67f950a3-5d83-4499-9a2a-6591daa41859",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77ccbef4-30a4-49e5-b8c8-0fcb1b424b99"
        },
        "item": {
          "id": "65fa5c77-5559-4e56-a716-799218e2cde7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6cb95f5f-6792-404e-8f1a-6a6aecccb282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29050923-5c25-4bcc-a033-01086dff1313",
        "cursor": {
          "ref": "9c86c64a-9250-44cd-b426-5c111b9104ae",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dc56ee6a-547f-4ce5-a4eb-c321ba88192d"
        },
        "item": {
          "id": "29050923-5c25-4bcc-a033-01086dff1313",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "da53e28f-07d2-4ff7-bacf-ef06da30582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9ecc7e-e5e6-4e71-9840-f3a6e3c429d9",
        "cursor": {
          "ref": "88ce72a1-ba3d-4201-9731-01e6566b1a10",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ac04f3fc-e347-49d7-a30c-6d3a9d2f79d1"
        },
        "item": {
          "id": "fa9ecc7e-e5e6-4e71-9840-f3a6e3c429d9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ba10796c-88db-4b0a-809b-7ae738154d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5363eafa-8e5e-46de-9300-c90478089ca7",
        "cursor": {
          "ref": "03a0ec55-5325-4997-9751-c3a1ad3d4812",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "317a389e-4b0f-4d75-8b8b-fea390f9edb2"
        },
        "item": {
          "id": "5363eafa-8e5e-46de-9300-c90478089ca7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a09aa8d2-6edb-4467-a7c6-865f9410acbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e068d134-f1fa-40d1-b5f4-cf862d68c36c",
        "cursor": {
          "ref": "bf6519ef-9339-42a9-b797-e89da3fb4936",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f8c2d45b-51b8-42e5-86d4-ad86ef2398a3"
        },
        "item": {
          "id": "e068d134-f1fa-40d1-b5f4-cf862d68c36c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "23db139f-0c30-489d-bb36-81344696532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72b59f3-60c9-42a3-9248-11f65671afeb",
        "cursor": {
          "ref": "c0399e2c-0508-4257-a5e8-bedbc5ba6f78",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fa31a69c-cf95-4d9a-9839-9bf918f16cda"
        },
        "item": {
          "id": "a72b59f3-60c9-42a3-9248-11f65671afeb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "337b1397-976d-4210-909f-c3e16875c866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3494c538-5f97-42a3-8526-a6c527aa32c8",
        "cursor": {
          "ref": "e1698077-34e8-4b20-946a-6f39e45e651e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "553c9801-becf-4349-924e-4aa41f32c497"
        },
        "item": {
          "id": "3494c538-5f97-42a3-8526-a6c527aa32c8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a794326b-e0a1-41e6-9508-7469c76edae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da085cef-4754-452f-a645-419526d6e85e",
        "cursor": {
          "ref": "1b2b90b1-69a9-4fbd-9a9e-a3b6a3a14bba",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cb636729-42b2-49fc-b766-dfa977882cf8"
        },
        "item": {
          "id": "da085cef-4754-452f-a645-419526d6e85e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "46023c33-0aa8-46b5-822e-55628f8cbdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ac86f-6b2a-40b4-a37d-bed5b1ec950d",
        "cursor": {
          "ref": "496d4a96-91e5-467f-9e98-ce311975a3cc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "79b631aa-9033-4d71-873d-63f104c26387"
        },
        "item": {
          "id": "5d3ac86f-6b2a-40b4-a37d-bed5b1ec950d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eb1cdd78-0a17-4c4c-a6d2-059775a639f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb1c93a-961a-4362-868e-82dd7e6ae439",
        "cursor": {
          "ref": "8f93d124-ebb7-47e6-bd62-baa602bb0513",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f962755c-bd85-4c54-9841-42a4f74b25a3"
        },
        "item": {
          "id": "6cb1c93a-961a-4362-868e-82dd7e6ae439",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "777ad906-45a1-43ab-b3f3-f0d98e6d850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f600ea-3f65-4f6e-b910-3257f879b043",
        "cursor": {
          "ref": "d6173386-3e19-4d50-8e38-68913bce0691",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "73d914c3-0715-4ede-bd72-a889623928bf"
        },
        "item": {
          "id": "24f600ea-3f65-4f6e-b910-3257f879b043",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2c9b776d-2825-4cce-b0e8-c5bcfad01a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9778f832-3fff-4870-bb70-02ffc3b0dd83",
        "cursor": {
          "ref": "64e8dcf4-0ad0-4f0d-bb65-ddf34eb2fc77",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9a781827-4f4c-430c-aa97-2460a94cbbc5"
        },
        "item": {
          "id": "9778f832-3fff-4870-bb70-02ffc3b0dd83",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c78aa73-64eb-46af-8453-d4e587ee6461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071e8321-2d9f-4343-9c91-c9912a0b9f85",
        "cursor": {
          "ref": "2c7ba83e-f6fb-49c5-ad42-166f4e78d5a5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cc125379-eeda-41b0-abcc-0008fe1a762f"
        },
        "item": {
          "id": "071e8321-2d9f-4343-9c91-c9912a0b9f85",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "899692e4-1a6e-473b-b512-e01a965c01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373f36c8-636f-4ec3-9464-8b925e7bb879",
        "cursor": {
          "ref": "c2602290-98f2-49de-95d5-dfc1db02dc04",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01ad056c-9335-472b-8800-36a567214dcf"
        },
        "item": {
          "id": "373f36c8-636f-4ec3-9464-8b925e7bb879",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "23fd0d79-f10f-4743-911f-5784ebbfcfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6da899-8de3-45df-ac7a-e24c9aa145ef",
        "cursor": {
          "ref": "77079c67-3384-4e67-bc63-6f31922f99ac",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4e213027-5be7-43cc-bb9f-1e9a549c4f1c"
        },
        "item": {
          "id": "fc6da899-8de3-45df-ac7a-e24c9aa145ef",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9f6a7411-525d-4cb7-942a-fb542cddba89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6fc052-804b-4800-a1ea-b1c8f3d4dfe5",
        "cursor": {
          "ref": "f6f02693-1039-4a7e-a5c1-3a31434ef087",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3017c387-6ceb-4c02-9fba-610ea49b809f"
        },
        "item": {
          "id": "3e6fc052-804b-4800-a1ea-b1c8f3d4dfe5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d4b27562-27e6-4fd5-a92e-42f2e5b280b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a00d29-056a-4512-87be-504b7e3dd6d1",
        "cursor": {
          "ref": "4810ce1a-45be-42c3-b254-d4c2223e2994",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c86d199a-73b5-41ef-8576-7a227e27ac80"
        },
        "item": {
          "id": "05a00d29-056a-4512-87be-504b7e3dd6d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "55d58b2d-c98c-45b5-91f6-ac3831df1ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a232cbbc-9265-4dde-bccc-4ff1d2cd1a6b",
        "cursor": {
          "ref": "830f7022-e90f-4f69-95d4-10a18f4c4dfa",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0b776a3f-05ee-4a61-9c0b-230dcdb93742"
        },
        "item": {
          "id": "a232cbbc-9265-4dde-bccc-4ff1d2cd1a6b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3172509f-b335-49a9-94ed-24f2b47bbafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dfa72d-7b35-4d93-acd1-048b7cd1a84a",
        "cursor": {
          "ref": "c6728c4a-4180-49a7-8ce8-53ecd7abc518",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "df1e5217-1854-4201-8172-b484c8b01df0"
        },
        "item": {
          "id": "54dfa72d-7b35-4d93-acd1-048b7cd1a84a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3071ca0b-09b0-4f55-ba09-8de888b76313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb3cf7-acd1-4598-beee-0b45ea9dc7c1",
        "cursor": {
          "ref": "531d8cf1-0408-438b-aee3-f7f0a62acd5c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dfc42b91-6931-4f91-b5cf-e03aa882249c"
        },
        "item": {
          "id": "3ceb3cf7-acd1-4598-beee-0b45ea9dc7c1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1afcc9c0-e707-4c43-b3f8-4624391af4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454a74ae-dcef-4419-8b39-872c0c2f5711",
        "cursor": {
          "ref": "d6005607-1c74-4721-a62d-223b1676ab7a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4c1d47f4-fb98-4719-8829-ed7df816f5c3"
        },
        "item": {
          "id": "454a74ae-dcef-4419-8b39-872c0c2f5711",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d95d5950-f8a3-420b-a2a1-74cc4c765092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d2dec9-6b4e-4a84-820c-6c6b73b396ce",
        "cursor": {
          "ref": "299b1168-6dca-4538-9dc3-054cdff0ad7f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "92e23509-c728-4715-937f-0dc2eddb21a0"
        },
        "item": {
          "id": "17d2dec9-6b4e-4a84-820c-6c6b73b396ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "141048cb-febe-4e05-9d1e-7116595409f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bda7a3-0230-40f8-aa0d-13dceacf0d98",
        "cursor": {
          "ref": "81f402ca-b27c-4717-80e5-1e851352a4ef",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5823b217-c16e-45cf-8d9d-351fbd4d070e"
        },
        "item": {
          "id": "e9bda7a3-0230-40f8-aa0d-13dceacf0d98",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3e1f6177-64d9-446a-9b05-875d79ca8de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dba844-31b2-4504-bc9c-7cf374cee322",
        "cursor": {
          "ref": "30b30434-2d37-4fc3-81d3-4b31c50986c7",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d285af8f-8222-4806-864c-a92adfa6b51e"
        },
        "item": {
          "id": "92dba844-31b2-4504-bc9c-7cf374cee322",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0ec84388-5a84-4a3b-819d-4a948bcbd12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1fa24d-a6fa-499c-97ac-ee2c985118fd",
        "cursor": {
          "ref": "f1eed6e4-f4d2-4aea-ac81-3f5bef875a25",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6a260e08-7d25-4b89-84e9-c2a3081a9302"
        },
        "item": {
          "id": "be1fa24d-a6fa-499c-97ac-ee2c985118fd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6b441938-8502-479e-aff4-dfb7cdbceab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc1ba70-1158-4ef2-bfa4-04f55fc37a02",
        "cursor": {
          "ref": "802def84-212f-4f81-be7a-55fdff44562d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "78a90fec-2cca-46c0-ba23-ae23555c7b3d"
        },
        "item": {
          "id": "4dc1ba70-1158-4ef2-bfa4-04f55fc37a02",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "979a10ed-d885-4e44-9154-37caa15a6f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0807ec5d-5b3b-4e7f-9b68-14dc34a665fd",
        "cursor": {
          "ref": "1c967fa6-c368-46ac-9885-e71d6df515af",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b63db24e-9024-4aa4-9487-7bebceb14981"
        },
        "item": {
          "id": "0807ec5d-5b3b-4e7f-9b68-14dc34a665fd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f72f3d0d-b243-4273-9cc1-9e662a72c9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe7308-eac3-455f-93fc-1b05241430bb",
        "cursor": {
          "ref": "66f0fd77-2a6f-4630-ba89-af0aaa0cbf0f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "488d4dd5-5aad-4872-82d1-d0e1bb53327a"
        },
        "item": {
          "id": "abbe7308-eac3-455f-93fc-1b05241430bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3081b6b1-efe8-4910-bc9d-510c6987d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e2b765-dc59-47d6-9dd3-b39f0a21050c",
        "cursor": {
          "ref": "89451bd8-7f20-4059-9a8e-c4c79418fe58",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fc21d97a-a862-4630-91b5-1b3ae504da83"
        },
        "item": {
          "id": "53e2b765-dc59-47d6-9dd3-b39f0a21050c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "61e06a8b-f1a5-4e36-beaa-ed4528409945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799aa887-ee35-402e-804e-b4eec777a795",
        "cursor": {
          "ref": "df3ddfef-4a6d-4fe3-94c9-d0f023293c1a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "33cf255a-9aa9-428d-b887-674c13b9f972"
        },
        "item": {
          "id": "799aa887-ee35-402e-804e-b4eec777a795",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c38096c6-f509-4c2c-805a-0fa948c9285a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5767ea77-074c-4cd8-bb93-608a976f0676",
        "cursor": {
          "ref": "49a0a1da-f7ee-4e1c-822d-3b76ab7348e9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aed6ab63-cdc9-43df-8f35-c6514852ce2b"
        },
        "item": {
          "id": "5767ea77-074c-4cd8-bb93-608a976f0676",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0e9595c8-90dd-4c2f-83b5-30712efde427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342f3001-814b-446a-acd6-fd74cacba633",
        "cursor": {
          "ref": "5b57139e-58d4-4651-97d3-52f0a8de6bc0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4fd895ad-a64b-4c2d-9e89-9a125704c46d"
        },
        "item": {
          "id": "342f3001-814b-446a-acd6-fd74cacba633",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "59560afb-4ecd-4400-a6fd-193b3e648034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf6a486-7a32-4947-b8e7-ac2afd02bc30",
        "cursor": {
          "ref": "d32f5370-5332-40c7-8f29-089197df4c25",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5a3bbe6d-83c1-40ea-996c-edfe86efc5eb"
        },
        "item": {
          "id": "cbf6a486-7a32-4947-b8e7-ac2afd02bc30",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ea48aba5-62fc-471b-afac-c96e0aa2cdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274148de-eda6-4634-a3a6-864f295e1682",
        "cursor": {
          "ref": "1bfc4934-89a9-487a-8def-71b9ff052325",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4c6813e7-5f2f-4bf8-91df-dc9869e02c4f"
        },
        "item": {
          "id": "274148de-eda6-4634-a3a6-864f295e1682",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1d4c26fc-dfe8-4a13-8577-43f658c3e578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98042343-66d9-4860-8b97-e136c6d064b3",
        "cursor": {
          "ref": "77945cc4-ca15-4470-8e9c-1cc26cabecf7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a19cdd43-c7ad-49f8-abaa-2b6c16f66541"
        },
        "item": {
          "id": "98042343-66d9-4860-8b97-e136c6d064b3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0c484e85-a3e3-4af9-bea5-3e081b7dd6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b633d19a-a7d0-460d-adee-2313bac8cf3f",
        "cursor": {
          "ref": "7b36c668-f9ac-46a2-a9ec-ea1492047e5c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6c3b4d3c-beb8-49bf-b93f-22a2d4c4816e"
        },
        "item": {
          "id": "b633d19a-a7d0-460d-adee-2313bac8cf3f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c1f7d6a7-f709-456a-a601-19540974102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe75376-b367-479a-94f8-c7784d5c0f21",
        "cursor": {
          "ref": "27a802c5-a028-4531-8e0f-c8e444c05cdb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a38b75d0-0e1a-4485-be1c-6d3f050604f6"
        },
        "item": {
          "id": "cfe75376-b367-479a-94f8-c7784d5c0f21",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "189fc28b-bca4-459f-a345-b21e8328767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5473e589-59c3-4ad8-bbf6-05359a401169",
        "cursor": {
          "ref": "84f05896-7706-42d3-b4a4-d1f5ae5c20ef",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "828e6f02-1d00-4474-bf35-724706f0b5a0"
        },
        "item": {
          "id": "5473e589-59c3-4ad8-bbf6-05359a401169",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9a98d91c-c3bb-4d4d-bded-0aa1bfbef77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e58f2b-2e0e-4109-8348-079e4ffa3ac0",
        "cursor": {
          "ref": "a919cfc8-f77a-4c72-b224-3500c90f73c8",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6fe511ce-249c-442c-b60c-da6bc6906b36"
        },
        "item": {
          "id": "c8e58f2b-2e0e-4109-8348-079e4ffa3ac0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "08aa4c31-4952-4396-933f-49a1f202472b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee003050-4593-4eb1-ae64-225f976429d3",
        "cursor": {
          "ref": "7fe07a32-cfd5-49c5-830c-034cefde0c31",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "03873ad4-c567-4f2e-9a82-3ec771ea3617"
        },
        "item": {
          "id": "ee003050-4593-4eb1-ae64-225f976429d3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e3048ec8-97b2-40b7-90b6-0db21c12eced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6756e51-7093-4344-b03a-2551b78f1764",
        "cursor": {
          "ref": "3b0890f7-4ea8-4749-bd9b-ef90d9cc8a73",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "13edfb90-966d-4754-b321-7c130bbd45ec"
        },
        "item": {
          "id": "f6756e51-7093-4344-b03a-2551b78f1764",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1fb795c1-5578-461f-b2d2-179bd4406009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf591282-2bc4-495a-8426-145073f98f0e",
        "cursor": {
          "ref": "9cbadfff-35a4-4511-aff0-9d2c5c2fce79",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7227e865-adf1-4e5f-b568-e988d57da35d"
        },
        "item": {
          "id": "cf591282-2bc4-495a-8426-145073f98f0e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1b3f8547-cc42-47e3-897b-73897ef6b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45ac491-0e4d-48f5-bf04-3e4b40ee086b",
        "cursor": {
          "ref": "e8533bf1-9c99-4fcb-8e06-e082eda2a619",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "82af4cec-f2b5-4f69-9fe4-6003bd341f76"
        },
        "item": {
          "id": "e45ac491-0e4d-48f5-bf04-3e4b40ee086b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f41a9846-028b-484d-952a-854459f30479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeeaeff-d92d-4a8f-b947-090a1b668b0b",
        "cursor": {
          "ref": "2f54da50-a24a-4cec-bdee-e8d31682d6d2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a54c52ad-27dd-4339-8e46-2c822004aca4"
        },
        "item": {
          "id": "7aeeaeff-d92d-4a8f-b947-090a1b668b0b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f968e6e9-845d-443a-86a2-5a0b021d0e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f4155a-9457-4111-8bfd-edd85377fe22",
        "cursor": {
          "ref": "b9f92df1-3f43-4d26-88c6-1febf8e5ccd2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "73d9cad6-700e-46e8-a4ba-4a0727a989ce"
        },
        "item": {
          "id": "42f4155a-9457-4111-8bfd-edd85377fe22",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d76bacf3-ff43-418a-97af-38de6de81af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9da6e3-ca66-4c66-910e-472be4c30574",
        "cursor": {
          "ref": "12006876-4b6a-4221-9d33-de1b15387069",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "32208647-f974-4905-a06e-7f33099a7b89"
        },
        "item": {
          "id": "6c9da6e3-ca66-4c66-910e-472be4c30574",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9b192738-f119-4d4a-988a-a32fca2dd2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19699dba-fd2e-4b14-a1f6-bbf9caaf9197",
        "cursor": {
          "ref": "0dd193dd-bc15-4990-8b95-e15ce8e4058a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "142c2a17-3975-49c4-9ee9-76fe93768ada"
        },
        "item": {
          "id": "19699dba-fd2e-4b14-a1f6-bbf9caaf9197",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "28e2384f-ad0a-4cab-a6e8-ce756a5da1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052a1a7a-21c7-4b51-805f-40eb1691ac14",
        "cursor": {
          "ref": "101bac3e-0492-4d74-b8a7-7d4b0a136cf0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a2e11589-4945-47fe-b747-22551e652e82"
        },
        "item": {
          "id": "052a1a7a-21c7-4b51-805f-40eb1691ac14",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1a6dfd68-03dd-4310-a996-0c05e20650d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16933d10-3979-47ad-bfaa-72f4c9a84c12",
        "cursor": {
          "ref": "b91c1731-3440-407b-ad24-6b49b97b131f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a036b9cb-dc97-46a5-a6a7-2c3b590d3fad"
        },
        "item": {
          "id": "16933d10-3979-47ad-bfaa-72f4c9a84c12",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e5f6592c-ccf7-4b00-b8d2-b5200f904290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a06a8f6-7ec4-4e46-83f6-a5a60ce56fec",
        "cursor": {
          "ref": "d989b327-ceb9-4239-a719-e9d67a2853ef",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7ea8742e-e62c-45c5-b49e-d328cd33d6e1"
        },
        "item": {
          "id": "5a06a8f6-7ec4-4e46-83f6-a5a60ce56fec",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d837504b-6d9b-40e7-8e2e-e81dc99e4b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba99bf-7faf-478e-a274-dda946c250c0",
        "cursor": {
          "ref": "78d1716e-23d0-4cea-9206-2975f8eed39d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c086f755-da21-4ab3-af67-586de5418978"
        },
        "item": {
          "id": "ecba99bf-7faf-478e-a274-dda946c250c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fd0a1335-34d2-4f77-942f-6b31e55179ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36940da0-c917-4213-8866-9794ed4261a2",
        "cursor": {
          "ref": "0375f154-da4c-4325-a337-feac4aaad292",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "764361df-1715-442a-af56-78ad531e9a93"
        },
        "item": {
          "id": "36940da0-c917-4213-8866-9794ed4261a2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6a41a16c-31e4-424c-ad6d-4daab6cdf4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c83775-12f2-47c8-bf79-9faf9a9c2770",
        "cursor": {
          "ref": "a46873f6-07d4-4398-81f1-c5f90ca11c40",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "59d9fc8b-f5a2-4305-87a5-6a5903300c8f"
        },
        "item": {
          "id": "c8c83775-12f2-47c8-bf79-9faf9a9c2770",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "64a79747-f4d3-4200-920e-054191d529df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74159e38-eb42-4e96-9ea5-2b9096cbb1f8",
        "cursor": {
          "ref": "103ebe49-0b88-4a7a-ac80-286ad0d6baf4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a39cf467-4961-4d7c-95b1-905a8069c2b5"
        },
        "item": {
          "id": "74159e38-eb42-4e96-9ea5-2b9096cbb1f8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "748c6e57-a70f-4658-a34f-43e7b4797616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e356f95-f14d-4f00-80b4-d205da12f0e4",
        "cursor": {
          "ref": "49ff9edf-eb52-4657-b05e-41d06ebce3dd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9ea8db87-034c-4dde-837e-6b4c7cce3835"
        },
        "item": {
          "id": "8e356f95-f14d-4f00-80b4-d205da12f0e4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7cfc65ee-e803-4737-aabf-4816ede69858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb006b9b-b782-452d-9a26-b7448a8ae17c",
        "cursor": {
          "ref": "342e4ee3-7b29-45d1-bcdb-6bb0958959b7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6dbdb5b1-8225-44a3-8292-b01b231cb0a7"
        },
        "item": {
          "id": "bb006b9b-b782-452d-9a26-b7448a8ae17c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9be3f96c-eedd-4ea2-9267-a81f3cb76b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab9de0e-bae5-4979-a5d2-9b491573f054",
        "cursor": {
          "ref": "bd988e54-1bee-48ee-96cf-665588b4674b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8549833b-5e2c-4ceb-a3bb-c8ef8c02faf9"
        },
        "item": {
          "id": "dab9de0e-bae5-4979-a5d2-9b491573f054",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fdd656a0-e676-47a0-822e-06e6b08ef973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15cd202-a649-496a-aea5-87522dd4b7a3",
        "cursor": {
          "ref": "2bf51415-dc2e-4c18-90cc-1d0f0a69d9f0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b34d403a-81a7-4be1-8fff-e1e27aec63fd"
        },
        "item": {
          "id": "f15cd202-a649-496a-aea5-87522dd4b7a3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ddbe16b3-738c-49a2-a41b-03a04cf676a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14964297-088c-4ab2-9f7b-2dd969df8f96",
        "cursor": {
          "ref": "05c09207-e032-44c0-a84d-044e25318274",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fef44dd7-4415-40e6-8850-dcd625e83518"
        },
        "item": {
          "id": "14964297-088c-4ab2-9f7b-2dd969df8f96",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e2674e00-4e29-430e-8d50-b078265a0eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159e6520-6464-440d-954f-53cabe7d7f3d",
        "cursor": {
          "ref": "a7236e42-009e-4287-ad0a-57ce37376a12",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d19ade65-6ff7-4603-93da-fbf063f7ae2f"
        },
        "item": {
          "id": "159e6520-6464-440d-954f-53cabe7d7f3d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38b3cc1c-fa22-4586-8e31-c479a9011416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a78efd7-7533-427b-9c4b-d4ba569b4ed1",
        "cursor": {
          "ref": "da1a6f1c-29d2-4075-911a-6810df0e788f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "03829c10-a3c2-43f4-b5ac-d10355921ae4"
        },
        "item": {
          "id": "2a78efd7-7533-427b-9c4b-d4ba569b4ed1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3851d003-15c6-4b30-84f0-f96e4eb63194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a64dbc3-1a0b-4f37-87ad-52ba147ceb76",
        "cursor": {
          "ref": "c0dd96c5-7a43-409e-a0ae-d5563f17cc15",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ef75e4d5-e009-40ed-aa5e-c1e112ad8541"
        },
        "item": {
          "id": "9a64dbc3-1a0b-4f37-87ad-52ba147ceb76",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "71da394e-4fcc-4e80-a920-e75b009e32d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c32c2b-9cec-441c-b7e1-d9349480e401",
        "cursor": {
          "ref": "3c87a135-28f0-4d2d-a8f4-53bfb3d4e3ed",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d6de99ac-f523-41e1-973f-346bee79cad4"
        },
        "item": {
          "id": "67c32c2b-9cec-441c-b7e1-d9349480e401",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ece64235-0845-4dac-a126-6cf14ccdb6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e005b02-8456-4d22-b7a9-4a80d3f50824",
        "cursor": {
          "ref": "cf23b459-1a2c-40f4-b560-71f572f0ce5a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b592e90b-adfc-4650-85ea-e5c31d15343e"
        },
        "item": {
          "id": "9e005b02-8456-4d22-b7a9-4a80d3f50824",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7955ed03-0c9b-4a3a-976f-bdfb0b97a78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d7370b-9f7b-46f4-b2bd-d3e1d8ca4474",
        "cursor": {
          "ref": "cbada916-f337-43ce-a175-5d465a5d1208",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9fe51665-7ba0-4ca6-9278-ec6171b6aab7"
        },
        "item": {
          "id": "69d7370b-9f7b-46f4-b2bd-d3e1d8ca4474",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2928bb16-0b0a-43bd-8bc2-a25aaccb0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99924a74-b52c-4154-a21a-3d9bd9d31d67",
        "cursor": {
          "ref": "0c5e7fa1-c0a5-464a-88bf-1bf25fe84c60",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9bb60f88-64ad-432c-8914-7c04b397cbf4"
        },
        "item": {
          "id": "99924a74-b52c-4154-a21a-3d9bd9d31d67",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "988b680b-f365-4019-9163-3c6011cfd5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d221843-00eb-43f1-a844-1fbb8f8e856d",
        "cursor": {
          "ref": "4fdca373-70fd-4608-9eba-608ca9c4ce97",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7d2e269f-8434-4a3e-aded-2e3064c4931c"
        },
        "item": {
          "id": "3d221843-00eb-43f1-a844-1fbb8f8e856d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3483f60a-e0b5-4103-b04d-9b4b6d409e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e222f8-15cf-43f2-89f5-3c5a250ff0bc",
        "cursor": {
          "ref": "1f3ff931-e1ac-4382-8ca8-3180f0cf1fe8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0a5b2a9e-7d3b-4e6e-ad50-ff335b14a7f8"
        },
        "item": {
          "id": "43e222f8-15cf-43f2-89f5-3c5a250ff0bc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "da300145-0090-4967-855c-7d3700888abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b749802-c6a0-407a-ad50-2cff2f833f7c",
        "cursor": {
          "ref": "b8e633ec-bb39-499a-ab2c-233b0c0399a2",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4466dceb-773e-4028-ba9d-c8db268b94a2"
        },
        "item": {
          "id": "1b749802-c6a0-407a-ad50-2cff2f833f7c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "149e1f03-3440-4b37-85b0-2debbbfc1d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5cf98b-bb2d-440d-980b-c2660c682edb",
        "cursor": {
          "ref": "c9a9a414-ed9f-4526-a4e5-d9e9a5f2f551",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "da462d93-0857-4333-94e4-2b710cb65fe1"
        },
        "item": {
          "id": "2e5cf98b-bb2d-440d-980b-c2660c682edb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "90cc8d34-0646-4a65-bc42-df8dbc01f9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22da23f-ccb3-41e5-8330-0fa9b8b79d0b",
        "cursor": {
          "ref": "7397eaf8-0141-4f91-9916-fca4b08276c1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "07f49bcd-dceb-44d0-9d34-e248ca1aae1d"
        },
        "item": {
          "id": "d22da23f-ccb3-41e5-8330-0fa9b8b79d0b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f304cc93-9160-42e1-9986-f1bd36c07a9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b35304-04a1-443f-8f92-75be59e0f464",
        "cursor": {
          "ref": "40d47e21-b9ed-4508-b3d6-b407eaa86511",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "46475968-7cb7-4d69-b7f6-56e4ff1f8597"
        },
        "item": {
          "id": "02b35304-04a1-443f-8f92-75be59e0f464",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2f3ffd2c-dd21-4ba4-8bb6-3bd9329921d2",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a84b5e-46e1-43c3-9dc2-2ae0fd481442",
        "cursor": {
          "ref": "8a6b96c0-eb11-4a1f-ab84-ea6a383f604e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dc9da609-b310-4169-8404-b0b34b1ed970"
        },
        "item": {
          "id": "38a84b5e-46e1-43c3-9dc2-2ae0fd481442",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c28fe382-60f7-4823-9b5e-8dbe62123bbd",
          "status": "OK",
          "code": 200,
          "responseTime": 1691,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "de212003-bc6d-4eb1-a0ee-1bebe66afd30",
        "cursor": {
          "ref": "b0eba85e-b005-4583-8621-093c11f7d3a6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "53e7d902-2c65-450f-ad63-6ac4ccaf2ccf"
        },
        "item": {
          "id": "de212003-bc6d-4eb1-a0ee-1bebe66afd30",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6533717d-9f2a-4a4d-b203-7b96e3aec907",
          "status": "OK",
          "code": 200,
          "responseTime": 1544,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16b511d-1f31-48a8-bd91-0d5fcb3784e5",
        "cursor": {
          "ref": "4b5c4e9a-a232-4f5d-bde5-20b8c9ff81e3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e2821f1a-4a72-4fd7-9ebb-391f8385ec46"
        },
        "item": {
          "id": "a16b511d-1f31-48a8-bd91-0d5fcb3784e5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a74997d3-0b39-42d1-833b-b8cd09e8cf9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16b511d-1f31-48a8-bd91-0d5fcb3784e5",
        "cursor": {
          "ref": "4b5c4e9a-a232-4f5d-bde5-20b8c9ff81e3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e2821f1a-4a72-4fd7-9ebb-391f8385ec46"
        },
        "item": {
          "id": "a16b511d-1f31-48a8-bd91-0d5fcb3784e5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a74997d3-0b39-42d1-833b-b8cd09e8cf9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905376fc-da67-4143-b434-c9b944eb549c",
        "cursor": {
          "ref": "94910256-f53a-4dc0-9246-92f550f32bb2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "61cf171f-2255-4cdd-ab0a-e4b9af04e5a9"
        },
        "item": {
          "id": "905376fc-da67-4143-b434-c9b944eb549c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efa22448-ccfb-4897-9524-f20a6881140b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e3c127-91e7-4639-bd8f-e4fd9990b031",
        "cursor": {
          "ref": "93ed9aba-e6f7-4708-aa58-316850230050",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9c7d6862-7141-43c3-9e36-69e05a0ca1d2"
        },
        "item": {
          "id": "03e3c127-91e7-4639-bd8f-e4fd9990b031",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5a7ee1ef-4dd6-4a56-8719-766d999f3ced",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}