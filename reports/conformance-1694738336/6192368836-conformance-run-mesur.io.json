{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4fdef0ae-427b-42d3-a0aa-600af8039ecd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "88ef4077-22b2-4929-b18b-aa8017450de4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2527a39-dcf6-4f98-aab8-c3fe699401fc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e9bd1787-b510-45af-859c-9b9bf2895629"
                }
              }
            ]
          },
          {
            "id": "6088e969-7608-42ce-ad3d-99a6a8d4dc46",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09adbdec-bf59-4efc-a4ae-14bbc501e99a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d378d6b9-fd6b-4a6d-947b-40b4cfb0bad9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f3dac777-b3a8-47ac-bf0c-2711508fb160",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "24918325-c88e-431a-951c-897c22ef9390",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a95d5ae-bb03-41cf-84c5-777f3e99e83a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71a600af-fd02-46e0-a200-f5abdf4a33c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6290bd4-7440-4944-b7f1-02cc9e4bc5d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d31e55b-342c-475d-89ed-a79f3c2a5402",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f013dcad-1292-473d-8067-ad54ab9ad6da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c8626bf-d7d4-4c46-ba21-21112a3d8bdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11873d2b-e4c0-427a-bcec-62d783779495"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab8f6a45-ed67-4e00-ae0f-5bb7ca492902",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8df25de6-226c-41fc-9771-f06fd8109046"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39e1cca0-6736-49fc-b0c8-03fc447dd173",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0e23174-3256-40aa-9381-df399d3e883f"
            }
          }
        ]
      },
      {
        "id": "a197e2e9-ed89-49c5-b350-6ab985b628bd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9a656b95-d48c-46a8-9804-9026b2d8ed69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f6c1e97-c488-4180-b183-571d57a429f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6cb8bc24-16a0-4db8-b3fc-427669a57696",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c0a38-3ab8-465c-bdc6-90ac71062c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9967f01-8b9d-417f-ba3a-d8f7611de08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47f16bc-bc5d-496b-9518-5873c019f113",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a30508-af0c-4797-b50b-edf0d3ae5d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58971d13-d862-4dfb-a93a-792e91d0dde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d19212f-de62-4066-bb96-235818992ead",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6b18b8-b88b-4d87-986d-796a6f86f715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02cd1b59-e8e0-48bd-96d2-d4e98c33b67f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f6703e9-fe15-467c-b167-c19b042e8d0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b06db65-c5f5-4a15-880c-891fd682ebc4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd14e57-4803-4eac-b42b-011be3561937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90bf7b8c-4b17-4980-af2e-ddd075362c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107a7e82-36ff-482e-8b0f-a9f2998d0601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687f2c89-23ed-4f0d-aee8-c833f6f0052d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e0d1ccfb-6933-40dd-8e0e-9109d8dae1db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdf5083a-3b1f-4dc3-8f83-7ebcfe604e95",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "964c4321-335c-48b6-a890-c55fb11c78da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1af5f4f4-4406-499a-9be8-a26c24ee395c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efbc7df5-ed7c-4985-92f5-ecc03243c17d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "09f11589-8e40-4d76-898b-e348bbdd093a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e42d5d3f-6d37-4fd6-8b36-a41ec0bdfb6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94b85d52-60ff-4221-8640-0b6d8ae2a7ea"
            }
          }
        ]
      },
      {
        "id": "f28940d7-f931-4f61-98cc-fa0937f51dce",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "700c2fd6-277e-4acd-b638-08368559c35d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebe7ff5f-14a7-4fde-8a9e-7e26b012b655",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1f13b388-aa21-45bd-bb59-05c13b60e030",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bd638f-4f37-4bf8-bf2f-bca3c5894bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02371c5e-171a-42bc-be80-3b94a647a503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb1b666-53c7-4ba0-9de0-0b0e1be32018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a743fcf-ceb8-4c8a-8827-5c388c0de381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7647a841-8b50-4034-a9e8-5d414f88e933",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ab5b03-4499-454f-ab5d-ce36ce6d8d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84431d27-9c0b-4c19-86ce-a38d2c4c530d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88137e7b-8ae9-4893-af43-06583a89f767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11f77b16-f414-46dd-b18a-139ab11b47b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49660864-0dee-4479-81ee-32b4b0fe0dbd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5142ec24-a4c0-4a2d-bd39-bad618bf7d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9c392f-2947-414b-ba5b-b1e37681f445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddc01a1-285a-4ea7-aa1c-8296bafb86ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea6fa99c-72f5-4476-bfae-9b52d7311792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19c8da-4a20-4e78-b00b-a7b44f22eb30",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea65b68-a67c-4492-9b91-277f63df1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f87809-e074-4839-9a9f-c675eedc10d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5582901d-024b-4359-9ba6-9ce15a790772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887d397c-13c3-4f1a-92f6-b97e98cbf1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793dc43a-43f8-412c-8fca-579491e99501",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb93a03-3149-45b7-acfd-cca346def0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b54a24b-649a-4e46-9c91-2883ae02ea91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625ccb28-d217-47cb-8f67-df40e4dac8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c9b526d-4562-4e89-be8f-d7646bc2227d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df35ca1-df66-4152-9b41-fdd6c8955b44",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd57625-ce8f-4e09-bfa1-2847b96b113e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eca37d-b555-49ec-8551-17dedce66b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6a12dc-f3d5-4fdb-adeb-413c54126037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "261adddf-af3b-42a6-88bf-a5b6558727f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03340a9-799e-419c-b57a-aff2d844bcbf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e6ff92-10e6-4585-90e8-f93d70d5a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90b17d7-8427-45a0-8b8b-f1de65f1e1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ae351f-309a-4e21-ab87-39e87dcd3221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7767c537-d38a-4ae8-9a6b-9438b969235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cdfa31-6025-47ee-bdb1-30976d4322c9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b689f60-9a49-44e4-86c9-0de8f89de4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad07e31f-bd95-42fb-8d4b-2a7b01f57194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d2660b-a53f-4551-a36f-9a6d621f9897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3f666e5-d0f2-48b8-8fcd-60005b391615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6afbbe-6be6-43d9-986e-52f99e26b01e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df18170f-9bbf-4d2f-917a-3e5af3860c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812a3e08-c6f7-4145-8467-0b8c750dcd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be88b5-aba3-4f6e-9ac7-39e293026d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df9cfa1d-ea36-46a8-af9d-1acb37feba52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c25fa9-262b-4927-979f-d6e76d4fd331",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f126ab33-d867-4225-b0b1-69c153a05722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7657ec4-d0ba-4bf3-b303-c4fcd8dd68ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b807c-6865-41d0-a5fb-998328515149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ec5c452-e156-4f6d-a455-964be4e41531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb636df4-cc02-4e7f-8d6d-e1ce0af4527e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ab055b-8066-4f44-8dc0-2ff6a293d809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42130cf8-e090-4407-b284-5ed856ccdca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13abdd85-c9a5-4fec-afea-643a79f8671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d1e473b-e511-4317-a121-b2a513ed8ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cb2382-3119-46a3-be6c-d464bb7c2528",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4174d87-61ac-4bfa-8bcf-5312a369e505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266456fd-3a12-4cf9-af89-562d0cb782a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453b989b-4240-4a1a-beb4-b6e5d4d006ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c400eece-0eb3-421b-a170-238a71da20a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1332b548-24a5-4111-b692-194b8d421327",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7a91b8-8ba9-4206-8776-387cf3344315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ac1ab2-28b8-437a-b506-48e1213f5732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f09de7-b8b7-4a90-b846-6dc4cc8b9ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68c560e8-2768-498f-8a3a-167c719a1bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb0007c-c07d-4a90-b63c-ae8c2790dd3d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da208e0-ab9e-47cd-a729-835da77283c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1deeaefd-0cb9-43bc-b067-3c55a4e07373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c3eba5-2e9f-4a74-bb02-58260325d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b56ef07-3821-4f98-9036-a529d0664e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d3879a-4059-4732-87d2-d74b1f5d9a6d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b35e3-d8b8-4de2-941b-74faafd8f974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f95c647-33e9-4250-b09d-daa613b3debe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f587752-6908-4856-89fe-e9356c3cc015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d238e4ab-eb56-4ed3-b3c7-bc1bb8fe24e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd1fc4c-4a02-4d52-a910-e7dfa6e057bd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8416f5ba-4607-424a-81e7-8d397c415ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40210802-92f5-4527-bca1-be0df0bd8cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3477fa-aeef-4029-8a5c-6b4e279920e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4efc4029-37db-4532-a715-ebdf51e098d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9239e8c-3b0c-45cf-a02b-2e3a0f7e2bd5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944663ce-273d-4b5f-870d-f5dbb09b10ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc1dc0c-7269-4bdb-abad-49821d428c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d21bb3-2a59-4d62-922c-6c64384a18b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe7dbcc4-f1d4-4451-b62f-9e6c4aeba451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b042cc2b-be96-462a-9993-0d30e0e43119",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add0d249-86a3-4a13-b197-52264fbdf85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d628cefe-fd63-4bca-a921-90858bc471c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dcd7d3-b246-4d4f-8d11-e7237e03d2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "718ecadb-dae6-4332-bcca-a4421812a5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3437620-d7b3-4ee8-90fb-52f2563d7287",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb18f722-f5fc-4741-b858-fc1dd0aa9321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a781a5-981a-4c76-9d85-2969550a186a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e111f977-bea9-42e3-97fd-0dc08a76b6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da7ee8b-06a8-4cdf-8a30-7ff1abe7b1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7efe44-3bed-46a3-beff-df196c8bc386",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61faa1e9-0111-466f-9f79-44c68068dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cb7f0f-f2fa-457b-af9d-0754ecefcc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73301301-b85b-4a5b-b5bf-ad9f41d4ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef01edd-8f8a-4897-ad53-529ce1825862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454b7971-be18-4d12-86c3-f6e2d6bfa38c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baba1a5d-ab11-4bb2-9d45-db238d2158b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8467385-b8cf-47d7-be50-66fffd165288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c778a9c-7f47-4566-a69c-bb43d1135470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c016e467-a8b9-437b-9a8f-22cc0daea178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c60e7a-e1d9-4e1a-b584-df5a95f803b3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b2f538-e346-46db-88c5-9d6c136c8816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991f4a24-da05-4d30-8212-ab48ee578deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55da732-b734-4987-a213-6eecb07482ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ef46ef-f014-46d9-9600-277a85dc8199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c02a22-78cc-475f-9d55-dbdd4a2047ea",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045e4019-8b33-44a3-8be5-9739dc551c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c24d7e-34ef-410c-8fff-93c2fc0f9b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc73c7da-55e0-480f-b3c6-a4639b4a1a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78e1ea85-c7b2-450b-8bcc-1693863db37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27305a4a-4c0b-4aef-9d9d-f054a586e65b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3f4ca4-5380-4ef8-99d8-529df4424e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ce6ceb-75a1-412c-a632-266233b0320b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a86ea89-ab33-42a5-8aff-ea259357e014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f7e3be-2135-410f-8576-3bf6abe29d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac24242-cce2-47fc-9c9c-74976202b47b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e643d9-fb27-4bbb-9576-366b7f50706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5362daf7-fcdb-448d-a4cb-5241e7b8e319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3814b588-fbf9-4903-8599-bff51670a991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f06317-61d5-4f3f-854c-efe9b9dc388b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb19172-bb69-409f-afa6-f1b70df8eb32",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56b325c-ae50-45c2-a662-b299833e9819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb360c54-4577-4e7b-958d-8c7732d25c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a0aa29-9df7-4d13-a2e7-0f26f79b369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccfddd8-af55-4836-a3f4-ec1dd71a3f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c112e27-adf6-4325-a74e-384f2a659bfe",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8974a3d8-bada-451a-ab80-05af4290e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd2060f-27a7-4a83-9ffc-f02b40ca35e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a5af21-ae1d-47bc-a03a-da65b3d9f966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa63b9a-5dfb-458c-bf54-77694d44f455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3822e1bd-5e68-495a-adff-b2314ef35b19",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57f2e65-0cec-4142-b069-6d88b420758c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caab6b5f-fa2c-4c44-ad84-559e42b3e40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81085c0-d876-40c7-b330-05af9171fe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bcc89e-9646-4144-afb6-674f21c43af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1ea29d-8015-4710-ad04-944bf56f014d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b67e709-b7ce-4b1c-8daf-8fc080c767e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55d8690-6b82-4380-863c-290389e954bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485b900d-bb74-46d3-a696-40e1bb620f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9d1cd4-1488-4ad2-ba34-f8b13aa159e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208d7d31-5f3a-456f-8c58-a3472ce22dc5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30981155-1580-43b9-9fa2-76cc8ad6cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb2d0c2-c876-431a-a79e-e830947adb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e27b1a-f7af-4251-b39f-beb6c9c4e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd5a4e2-49e7-4431-91da-650c5f77f5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bf0685-087f-4559-90bb-a54f0b0c918c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a950f7-ea19-47ba-a8fa-91955d0c196c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3610b8f2-e850-420e-beb5-df7d4a59180d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc6ef6-1785-4c94-a446-fd69cc2e6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c1070b-08e4-4927-b599-31f6a65c7e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9667f560-5b55-4faa-a74f-72b15c82c163",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c431bec-23b9-4609-a6ed-108588cfb63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb17920-24f0-4c86-b225-2609264c2029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead1f3ac-4e7f-41ff-a768-f5c9aa0380d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc241116-f960-48fd-aee0-099babd0efe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fa1b75-7111-456f-b22e-c1f30414999d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae1c34d-a333-40fa-be58-33070f989126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feda285-588b-42d9-bda2-c0e64cd1ff3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e624526d-98f2-40ab-8400-de0313fa9a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e92f5ec-920d-4254-a5f3-39db050f1311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6f371c-68bd-4e55-9c40-493a8ba9a64b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbcee69-50c0-45e0-84ca-e845edca4f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e8d2e7-f9f8-44c8-8ca1-792ab644b3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010f77b0-8e26-400b-ace1-f6a518663862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b03b6e-3c7e-4333-a37c-b9dcf904915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106a5457-10d3-4578-adaf-169682d9a218",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a44abe-775f-4f84-91d7-8c36327304ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259a76d0-99f9-48cf-899e-c0754287bf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacef6d-2e3e-4cdb-8f29-7664a523c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bed4f3-6768-411a-a122-d72c37a03e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd28f65-ea6f-4963-99a9-e694fb134452",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce79165a-41cc-401b-ae55-06847ae92beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9749ceae-bc86-4f52-8610-7c7c6be2b9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbc744c-df79-4f01-8e48-e756791d9de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce1e3f9-c957-44df-9db5-f0cf87481802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482080e-86e9-4455-b3fe-31b76eff3b07",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9530a78b-9dd1-446d-8227-ec39b3bb8290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f62b05-f1e5-40c3-8d06-0b95826d642d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72947f6-a181-401f-bb6c-f14acc9e83b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "450fd577-8e19-4b0d-8294-a8545f181eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0485d2-0b81-47c3-8589-c603971c679e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a787331-dd84-4959-b58d-46a3e638a7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2d95ad-033d-4482-ba0b-454e872feddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9e1488-74f4-402d-a470-64341dc38772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a77164a-2ea4-4e00-b85f-534443b94d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0989aa2a-1e32-4fb8-90b6-65b2d25ae674",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4fc7fe-2f1d-4581-bded-2feb0d28b48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041cd974-f4ab-4963-8985-67235ddcdb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c96b2b3-3944-4342-9f98-7624b3947eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e5b2f1-d619-400c-9720-ac20639567e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bc4c0a-f1fe-47b4-bb3d-b0ada01075a2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96651850-9df1-4259-b2fc-635a384973cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f458255-e865-4b04-abfb-b0c90211662e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158b92b0-ee2a-47c0-a427-58ae15a7d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "630ef790-c5a7-409f-af6b-d23ce51a106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba5a4a5-9d13-4c99-9681-374879cc024d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e737f92a-7030-4956-95cd-e5d2d673ccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa2c8ef-6692-45c5-a69b-d4d3dfbcc0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62ffc5-0c61-45e8-be38-d8c018f82adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "923c1e5e-f566-4127-9662-6e314edaa440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6666bac8-1ec3-4ac2-a998-95b0eae93ed4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff5c6c3-1324-4534-98c5-3215b6936f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23c2d97-c4f8-4c34-bd69-3b81cc6e7d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114e039c-795c-4038-8642-75e52e54b829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b53bd08f-e4b4-46d6-b248-cbda5e8a9c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6580a6ef-2b3c-45c6-8214-f4a62746f5b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9907ccf4-2664-426b-a611-ac6df7ee82e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a578cfc-dd2a-4eb5-8c23-c3ca50e44019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58465ed-dde6-4986-a70a-7adb5554451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e86909a-434e-4789-9d87-00d18f7d2af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee15ac3a-4ba5-4f23-8827-3d5871509da1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d47658-4d47-4b76-ad73-0f6bf2a0553d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78724fbe-c0be-46fe-817d-c453ad2e1510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7543d7d1-91e9-42c5-8287-d63e80476ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e860d2-600f-49eb-af6c-48790b2fd00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa4d94a-b612-46e5-b41d-2f4dd0b7dbfc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1328194e-e93c-4641-b47a-941f75b94ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c22e3c1-e81a-4fd0-8e3b-67fadbd4e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec361786-4046-45f6-bf6f-b65ebaa713e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1eaad01-c906-442d-9efc-49dd4182b441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154aff02-d3bc-44d1-a761-71e6429dc5b6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6fec5f-f701-4943-8772-6cdcee1dc242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cccfa5-938c-4159-9a5f-a00aa4c01c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b72957-29cd-4250-9bfe-9106a703db9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ea7978-cd20-4206-b7a2-33d23b48e456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a571873d-bce5-418a-b653-3d5c06fb8c0e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202f0784-c497-4d09-8011-e712e45a26a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb320c47-e6e8-4e00-b920-86450dec856a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f83bd84-83c6-4b7e-b6ca-5dd0c0bf632b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc13e223-cdbd-4f78-a775-810d2ac25dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fe0b00-f1e1-4992-ae78-6724f1e5b54e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce72694-7801-44d4-b525-31423ba521a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240a7b61-9ae7-42c3-a71f-3de766316ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7987d6d3-ea91-4317-9c8f-4eddd22f1e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd473c7-3f91-49d5-baba-63583a58066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd55870f-c65f-4a21-9ce2-27082df6625f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd045817-da95-4847-9368-d677a742fd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e3f8a1-1b30-4ecd-8d14-dcff28ba43a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9fea8-e5f7-4c6b-9653-a1755981fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3634d9d1-ee3a-4ef7-86a4-8199e9a7d1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5eb2f4-af68-468f-a983-28175e00badd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6819eea-3134-4631-92aa-1d06775ef28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db13e1d-93b8-4cfa-9e63-2a1288a8d456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e9c9db-d998-4f3d-a479-2df70bce100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b87f21e-5ae9-4093-be92-85250f6f8d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e090ba-0dc1-4866-bf10-a18064c209d0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2917d76c-2afd-49e7-86f6-8dd976ef07d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b19e7b-a6da-4957-9d30-eef7282add79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c808f3c-8220-414a-942c-a3f430d22370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f17316d-63c8-4d21-bcad-870ea5b65722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4a06d8-6ae1-42b8-b321-80632b304ad0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd81854-b026-4ad2-b6a4-b7b7ec1076ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e44e65-e6f5-404a-b9f3-cb8d0d9030c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e42d0-3667-4860-9bcf-7853ff7d24fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d25f1f-ab20-45f8-856d-822832f282a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5d95ac-2d30-4506-966c-5f53c855d0cc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ec9d5f-8c61-4d4d-a0bb-ec600f975b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea929e2-8335-460b-a45c-6bbcbb2329f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa77daa-04a4-48db-886c-d18c4f6a3f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad33e76d-ec13-4702-b1dc-b45e72756887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54023a4-c4f6-43e6-9871-53c524c7b3f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f681d79e-af60-49f8-a3bf-cbe0f6dacae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ab9b5b-86e7-478d-a0c2-92ab5865fb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d1e1e5-da00-42b8-b79f-18a750e8f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29ba6ed-e429-4cab-bc75-26be2871b939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0bca19-a5e3-438b-bfcd-abe06c6c84ec",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba353b8-23dc-4979-8dda-8efa054546df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15907ee4-22bc-4bc8-a2a6-aba06c222d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c5f6a2-f955-4c70-ac40-9a65a3e475da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d79fa4-f86f-4355-83fc-fb857f85a142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbfe710-4c94-4734-ab29-65c2179f2395",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de0d6c-c3f0-494f-83e1-9e5c07693dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3016202b-d59a-42dc-91be-4a4fc0db6f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c8f448-b5d2-4290-81ed-69531cfde28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cecee6-a740-4fd8-810e-d052a60ca27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad81065-3b2a-4b09-b589-3cba06fc15aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fd556e-b327-455f-a27a-4875b52ad479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3ce065-930a-4b8d-8414-f4073561e9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df13a96-48d6-431f-8631-010b4f1421d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01568c94-92f3-4b2c-9c81-780e7077ea9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefd0953-56e1-4477-90c6-257324ae4a3b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4918f207-056b-4efd-ac34-864e4dac833c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796e8d6c-25a5-407a-b083-649a66263026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eccb31-f73f-4e60-902e-35576e5e3d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72e02d5-8251-467b-a427-f4626df91a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f355e4e-a1c7-4e7a-b774-eaf19a66fe6a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a056f03e-f766-48d6-b985-d6a99fe5de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000bad6f-04b0-4a8e-8c36-9f89b2940ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278686b4-1b14-4519-8b04-46274b038e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b98ec3e-c6ff-46aa-a917-5f3beac07b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e079811-0b7a-4420-89d5-a6ffc3629160",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d394dfd0-0b4e-49ac-a63b-1f6aca6cc44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0789d2f0-0ed5-47ca-a5df-5c07172a01c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19ef95c-5af6-4df8-8493-ae09075b07ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35403561-5c1d-4a1f-8ef8-f00a957b60ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386f44d-4161-4016-94f3-198808afcd7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59066941-dd55-4025-ae4b-a1046cad618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a581acd-4807-4cc3-9ccd-3acefae8614c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd2587-58e4-492d-8cdb-943956232745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d00a2156-7a49-44a3-a736-7c495283c2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16b1e2e-80bc-4405-b622-3cf953f49e74",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bed2bf-83c9-44f9-a8e3-3cce8cb8be46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67648587-5f21-4b71-af54-ff65c1d814ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821dd4a6-8f9e-4440-82da-ea643cc53bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ec63a0-55bd-44f5-8c70-b0c848c4d84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cbb35b-cd4c-4bce-ab2b-aecd45d466b4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dbdff1-2106-4506-82d6-a71eea2e8603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b3bd2a-6768-4e55-b5b9-b96de385779f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d151744-2088-4e81-8af4-28ea77412d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6847b7-7b13-4ae0-bb9c-ece3d7c14555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7807916c-d0e4-4c87-927b-8459b1806860",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513ffe5e-5c54-48c2-b87b-510976535ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93ed720-4cb6-4add-b695-d6cbe28f175d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de4da69-db49-4afa-b4c0-0de1cf0342f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d10055-b67c-47bd-83b4-11f87d25d480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ded6b3-69ae-4453-9db2-6fdd5956c34a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34886dab-a115-48fe-8887-e4f891cc16c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87b3a5d-d0e4-4b59-8eb0-f3fa427d6f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7985ee11-3b06-4107-9e5c-c9db5dd8ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5598f85b-b2e8-4b12-b92c-7f1d62eccd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945a901-0471-4d65-95e1-4dba76a3794d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a8fbf3-606f-43c4-ba19-82d2b049afdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313724bb-4215-4a5d-be4a-1132e94f200b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405e3e21-0160-42e7-87e1-eab6fb97fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a9d3d0-2a72-4538-916b-d9da3e276ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61a1031-adfa-4759-a71a-4137dbe41eae",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27815f17-09bc-49c7-8aaf-c288132de65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a136acd2-b69b-46a6-9ce8-008e5cdcfedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986707c6-6f51-4180-b2de-210b409db4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7307b79b-c053-44c4-b10e-0b608bd1f38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bc8d76-0218-40c5-b5c6-b67e59771984",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76055e9b-6986-4319-b9df-c7203c77d9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f59817-b2a6-4255-a2f1-ee9ae6fe55f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7327f7-5aaf-45c3-8149-aee4bec78406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d106072a-8929-416a-a62e-3f3c2a9079da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454260ef-e037-4acb-b8fd-da5ecb6e6439",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9218ed7-fc3f-4020-9bf9-2bdfef3cd58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb3f92c-386a-40a5-9680-17d2a73f1a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4684df5a-9bfd-4b50-9e31-07c269843b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ee0ead-8200-4bd6-b819-5545f0a177e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afee3220-e5f8-411e-ac56-834db708f378",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a025f31-6d6e-4aa1-9518-49ae1a296f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf15271-efba-4d8e-8837-024e4a91f1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd69c8-8d07-45cc-a179-850d7aac4e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9681f72e-a0f4-4981-b59c-aa34868095c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc768cae-1f8c-400d-831e-3382ec21afa8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd256a54-b1a2-41be-b15b-1f2467da464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d17542-2245-427c-9fcc-129fe9c78093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53725599-01de-4f11-b961-b24ca756df2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9e9bbd-e9ce-41f0-b555-7fe8d93c5c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b5fa30-fc44-4ed7-b010-8304e3e8f353",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e3468a-3e1b-4184-87d4-2c1e4c9cec9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b946d-3b66-45a3-a81e-d49223426eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00b9cda-2328-4834-8811-4eb6a302a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa6ce76-1e3e-458b-afd0-511346939a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4c5fce-1e30-4941-9667-254fa00f92df",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84ba33a-52aa-4f06-9ba0-fad1cbc60047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d80eb4-1c0a-44cc-ae94-acf481185c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf0066e-b161-4c74-a232-87065218b236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ded72eb-9a58-47c1-ad1f-3d4419afced8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea92552-5c17-44f4-a782-6e823825f105",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e7912b-145b-4858-919b-87f2962993e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1774dedd-4022-4d2e-ac9a-8d6066681577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbc61e6-fe25-4381-b3e2-52462eaab5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d48ba222-c19e-4d70-b643-6b0eaf3e8a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68913985-7977-4641-a5ad-6de844a61bae",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3ab438-dc92-4c5c-bd06-1f76ee63a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407d7e60-e5d0-4251-8086-026cfc26c8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa4a821-9cea-40c1-822a-02478db5eabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39330ce6-b591-4696-b7a8-e3c56fee9784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af96a8c0-5fca-4917-8eee-3673df764f11",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6e064d-278a-4483-8b03-cebf153aa498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e569b2-b515-499c-badc-a5c7d5a10729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9dddc0-e978-46f1-9c14-1b7cf32d4853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a7e070-b7e3-4b18-8afb-90d242824ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da650ca0-f543-4aeb-9778-b0f61a5f0672",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6999fa7c-36ea-45ab-9bb8-d3dffb86c224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680c4d2e-a100-40e9-911f-3a3a1087db43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889803c7-88d1-4473-812c-9fa85bc400a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b6c19c-3a59-49e5-89bd-8742d111b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88218389-f21e-4af8-be8b-955f3fa28818",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08d7bf6-d02d-4354-891e-40ac2c2d7bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc89b0c-99aa-44b9-9600-b743ee61788e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da089602-c582-44f8-8486-e4c51f53c7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62272f1e-dcef-4060-ac3b-8922815348a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862d1c2f-3253-45f4-8930-c71297b4e87e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b90f21b-6dec-4a7c-8b70-21794c4bf084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a25263-c3b4-48c6-b8b5-9c589c7e53ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c92eca-87fd-4703-9e32-e5a5d61eca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9af9659a-1367-42ca-80a2-1b81e4eb0974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244bcb49-30f0-41b9-af8a-c1b9b772c395",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4594f9-7162-41c9-b282-ed04916a980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd2787d-e9b1-4afb-811b-8a99830b32c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a172421e-5e28-4949-b089-751284cce067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c77386-3b05-49ff-bb82-bf64d0b5d098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab13681a-321d-4e87-9c69-4df9e4a8ec0a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7c754a-2e15-43ee-adef-d9562331c9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f225b23-360f-42cf-a77c-f876b959a44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0ec336-9b27-427b-9825-fe93ebb732cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18581610-51c0-4f39-b470-dbfe9777a130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f701a6d-0b58-4c52-82cb-f04f655ba86d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd728a72-a536-4bb7-8cad-fe0542ba7d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce56968-4f63-4dd5-877a-67af44aff8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71a12c0-dabb-49ce-af36-b04bd4926516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83ea542-eb22-4a3c-8d2c-35cd307af71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aeb83e-b900-4523-a4d3-4dceeb4c1674",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca77230-abb0-447f-a61d-f12cb4fbfd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d69ecea-0135-4aef-9af9-bf0a9b8f27ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f764f7-4947-4ee6-becb-e293532f24ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67789af7-75a0-4221-9732-5ce33ba971e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655559bf-f8ff-4790-afbb-de59b808fc48",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24714cc3-ffde-4ba3-80f1-108eb9c5ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4726b4f3-bcd7-4f58-9a9f-0d39075acf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6a3274-9d64-4fbb-9f6f-4e525ab90732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c3df25-be1b-4687-ba0f-0a56344632b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01196446-75d4-4a1e-9d1c-40e1f932e366",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed33ce3-8113-45bd-91b3-cf19ab30d2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8333127d-7b31-4ca8-a633-171284392b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc6ea32-d181-4c7b-8c61-a012af72a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76a66e80-1f06-44a1-9ead-c84eda9e8912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf6a2f7-7a1a-4515-b89e-f264f32b8b49",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca9e0c4-dc4c-4d87-9bbf-2063e307fd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5028996a-eeb2-4881-8911-91b592ecb2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6310889-c09b-4406-9b41-7411a26ab3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e617c62-3fd4-44b7-8853-eea6755f483a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12087931-b1f8-4cc0-b4b5-b876b14f0d39",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec023937-654d-40ba-b5de-b0c1d1e07ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ec0627-07e1-40c6-9bed-7bac2a76fce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4c8b76-c404-4206-8c5c-67594200235c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6359e6c8-609f-41a1-933c-0b2075f8edd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f53fdd5-decb-4f4b-b025-a92beab28e77",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598151dc-8a48-4d29-aeef-acc306a7f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acebb7ac-8476-42c4-a681-48e838b81613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a678c9c-d405-4d59-8a84-8ede7aac97a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55f0d4ab-908d-4e16-bd99-560e8faf5a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187029fd-6397-41ad-9c5a-8956b20814e4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e1ac68-43ae-40cf-a619-473a2a719762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93343f4a-ab65-48bf-ac7a-f9429d84b18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ea194-34d7-4097-8488-2aa9469518ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ea7cb7-6821-402d-ab72-33826eb93938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b716ea99-1932-4310-ba50-0041ca319b56",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54d6112-9829-4ecd-93b1-fb5c5f8a5c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a937be-f805-448d-9d89-b080262c461b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8fa1f2-7405-40cd-b27d-f3b0350f76fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcd586b-9bd8-4925-b043-2c79991a5d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35893c78-dbde-49fd-96f5-dbd47f082501",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951ecbd8-18f0-485c-a83d-877dbec0deca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ca1492-1ab7-4f16-8bec-5e8d8b50a7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c2df03-440a-41b8-b130-6a1de2c8a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a86c00d-7f44-4b89-a8cd-23bc990ffa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2d8aab-2f7c-40f5-8b3d-80c95a5baa7b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0b7df1-049d-40e8-80d2-e6b3eb631eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "508f2e87-b289-497c-aa0f-e11cdcb7ff7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd64bd8-18ff-44ec-b7ba-0cf77d5868d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76abca68-0f68-4ca2-9fc9-195fabf31c4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0ff4a16-cf6c-4d69-9d09-9edd8258cf49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69690a84-415c-4856-89eb-57680cc24c8c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d58b8ef-54dd-4164-b22c-1518fbb1a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd03ea8a-ab33-4047-b109-3ade51a82e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0120d754-cde5-4693-bf0f-4643b3a0a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b95998d8-3300-40ce-9c43-87d7a3fa211f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccac9a8b-6593-4851-8346-abfb7ad9d2ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1c902b5-e4ef-4a41-a838-37eb3ba1d79a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f5d532e-c67f-4750-890a-4edc9e4db9e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aeda4e2-858f-4bdf-b9a7-7c05a7653ffa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe141962-c6fe-416b-b91d-0a2fef6499af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df9c6cef-27f7-4b4c-8d42-29e1491b4732"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8d69e57-ed4d-4c08-ae61-403d034092cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02e751dd-2bc4-4d3b-93f2-75f832a6f5c3"
                }
              }
            ]
          },
          {
            "id": "517aec92-2ad4-4aa7-8ced-39d05e5646ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "036ef140-89a0-49c7-aa94-184ead45f76b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "948097ee-0072-4e41-b150-714920d4845a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b75c15e-b98b-4684-99ec-211c7af7dece"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e2863d-224d-4a6a-8225-06d95ef2e571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abeae9a4-97e0-4f42-a11f-398bb71ebe41"
                    }
                  }
                ]
              },
              {
                "id": "c60a39ed-1258-4ca8-a388-77d3bf57f7a7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be04dfd2-4ef9-41fb-be1c-2a52eea7d364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3c62728-f8c7-4b94-8fef-ff4435a6fd0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b84875e-2d98-4a57-a54e-ddd1072efd8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cb45777-238e-46e6-afea-cab96e51476e"
                    }
                  }
                ]
              },
              {
                "id": "e43baca4-992a-4bfe-b39e-239dfdbb433b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1ed7f67-bd39-44c5-8d30-7e2b421d7de9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ce5e42d-7bdb-4265-91d6-e04a3f20931a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef3c1c46-af4b-4817-bf80-00cc22a88343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ac080ef-de8e-46f4-ad68-d32b5838cf44"
                    }
                  }
                ]
              },
              {
                "id": "c7e5bbd2-d13f-4226-a1ee-a84668a82ddf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50172c44-5bb5-4bc1-b289-439480f94ca3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcf9f78a-1d73-4569-b193-7419ee1e2413"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60771849-36c0-44c3-8d3f-6e4a3885532a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4ba82bc5-4727-45cf-85dc-5de17e2edbb3"
                    }
                  }
                ]
              },
              {
                "id": "76ad008f-78fe-4912-84af-3eac1bd11bea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1db2979-3fdc-4166-a31a-7329fa983c14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7868d2cb-613e-4360-86f7-c22a35f96523"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6844ff4-2a5f-40d0-8aa6-c15f825385fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7450e82b-81a5-4af3-a935-8140ae09cf99"
                    }
                  }
                ]
              },
              {
                "id": "c3af1c70-65c1-478a-aae4-533570df00ee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "105166cc-4c53-4a10-a788-cc8c3120048b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa549c0a-31a2-4f22-99cc-8b95cc6ebb81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13dc8cb6-7ac2-4393-989d-6207db808deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03a5761a-2021-4203-904b-06b1cc2c9b4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3478659-fd59-42dc-a212-532f708a3429",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34765292-5aa6-4173-a6bc-3ddaee94d992"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb57cd1b-0282-44e9-96d9-5fa410fb2d23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c48aa7e3-cf3b-41f0-9cbd-9674c7cbdd42"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3b08e36-4739-4c73-ba6e-279415bbf7b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9669114d-acfc-4a8e-b054-57fb133a742f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72aa3325-2f31-4fd0-8006-c53296b0d129",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20b66e5b-8ac8-4607-bf08-624cf66ef7ed"
            }
          }
        ]
      },
      {
        "id": "65c966ae-578d-4692-92e9-387d6a622237",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "38b2dfde-a548-4826-9ed0-f763ce348b98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baea18af-cea3-4825-aae5-a84f91e40a32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6754721f-f37e-4c2b-9c96-79e353939786",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e15c0c-6529-4daa-b0a7-defd58d9fd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69baeff1-b8d7-4bc9-882a-0a225e25707d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f645a47-7677-4d81-adae-45f57eab9c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "32fdd33e-7f44-4122-8d89-ce93c9d1402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82c3092-bf1f-43f8-b18f-48534258a95e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0363a662-adf6-4fc6-a905-7b2f733823ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c32969-e09c-451d-99ec-261feadd7563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af57ca4-63f0-4232-8255-54f392bed88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc17e0e-fb97-4b49-8395-0f98d9014770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841b1711-f0b2-4d9c-8051-8e6acefb7265",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db2074a-1339-473c-a326-583eaf7da7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459e7c1b-30f2-4289-ad0d-8cbe761a5746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6f18ab-b3e6-4805-896e-265e33d9203b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e8320e-9553-49a8-8564-3f3724d16922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2915af2a-e04c-46f4-8fb1-f269a3c10cd7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c449351f-d119-4a63-912b-5b12784b2b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fa2b0c-e0a5-4b23-8f4d-3133c5583654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395b10e-e1b2-4228-850a-61d2a172424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2361d272-d2dc-44c5-a630-e8196c688e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3395b6ab-efab-481f-a920-d7fa6086920a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01e1e63-9ef1-464c-85d5-1c394b171961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ded2c32-722d-4286-a531-c8d0f68eef06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c75bb-e5c8-4292-a6db-60b4b9437315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4703c13a-f181-4c8c-9704-3825fd35ed8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3513d849-4379-4d9c-b5a9-dee8d1815a53",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4defaaba-a5f6-49cf-a431-1e2605b0d5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a9e391-69f4-4711-930e-32604e38363c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9605e5c-1fa5-43dd-a80e-a8460f250672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aabfd657-fd0d-4c12-ae5f-5f4452e3e46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63359081-7f44-42dd-9e67-13b5d030da7f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2f9102-2d9e-4941-a5df-40a6cc187743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094cffe1-5baa-452f-932b-8802b776eece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678db90c-1889-41ed-a286-4f50ea4d46e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd000ac-cfc9-4396-bb69-9b326b7b0deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea90602a-855b-4b5c-88d5-ec3d6dc0be89",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12526879-03c9-42fa-86ba-fb484a146c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4736ae-ca3d-46b4-977d-1a9189c2832b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5992813d-a5d3-4c3d-ac84-cd0c2c48b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f42ecc-53cb-4172-835a-0c2823be4496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e17e162-c6a6-4810-b8dc-913fbfc52fd8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c97b5d6-72ee-4a0d-922b-6c34fbd53c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a4be9c-55ab-482c-b5f0-887950b38472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e793ad-6f92-4176-af2c-f5796d9b32ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5124150e-d9e5-483a-b8c4-294bd56d0ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e22b45-0198-40da-9f40-10e0f3ac90ad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc811434-24ae-4f14-aff3-c239e30b02bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81038e25-ca81-40e0-94f4-79e5bbf30e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6818e32-9bfa-48d8-9877-12f1430a7195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f470634-b0b6-4f19-a0a6-b6c8fef21d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3199b9da-34a4-4acd-b02c-93ffc1ee9482",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a05a3a1-9485-4495-8c3f-d90752a495c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2c5883-bf30-4df2-ada9-c8eeb6441199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc615cf2-4ba8-4f34-8189-ace349626302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e359c205-861d-47e8-beb9-4530ba4bfd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055a0317-6c8b-4ecd-80b2-ab1a958daadb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294c6541-3290-478c-aba6-a53c692b5df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522063a9-1652-46a3-8d45-612a869ad76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0898ab5a-7b7d-46ee-ae75-0f9b950c8546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ecf961-95b5-4fee-9397-72274ef0ee07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e07ca-e89d-41b8-ace4-5f24729eb3bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f83280-38d1-413c-8dd9-bec410c70147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17480e1e-a1d8-4f61-adb9-3c994931af28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aca38c-9ed3-49a3-a294-3c574f2a42b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0373de0a-3825-49b5-85f7-2c12b69a9152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a17dc32-7c3b-4bac-980b-6d63aab7ccf8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6374e-bf60-49ab-9da6-b6ca3553afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ca514a-086e-4f70-a213-ac0dbb470cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f60e39-2580-4aca-b14c-fa2fa9ddf96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53c308f-683b-4103-bd8f-473fce195689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c205d6-4dc7-481d-8fcd-e507b50fbd77",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebcc298-8873-4f5c-ae0e-5fb2db72c0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9168d4-cdf4-4c9f-b59a-11e5ad4181be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f382b122-bd43-4b6e-8b1b-1440265e34c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66248551-abad-4ea2-8c90-6137d0655ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f99d938-19e6-4216-9d3f-6d544711eec6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac93239-51a9-497f-8799-79a5b604702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0989db9f-f20b-4200-8b2b-fefbc6b63c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84a38ec-fef1-40fa-a132-4550956e5e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab58dc-5954-439b-ab01-dba91a9aed7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb70f2a5-eabd-4a98-a9d3-65f489894579",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22bbc05-b8fb-4c42-8426-4b37a04b5d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7839c408-f596-44ee-9324-f8c406d4cc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991c5745-46c2-433c-a392-7a3842294d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e527410-3d79-4614-8a1c-fc0baf3395bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687a1f18-fc7a-43a3-8020-7491919dd1f1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098adcdb-d2fb-48e3-b7bc-6693cb03a8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288a2f4f-53ef-4067-8f41-8cc217f31f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a62f366-8325-49da-ab42-ba83990b0596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e00469-fa13-4dac-a627-6ba5591fdbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa2aa6-68fe-4253-bdcf-dea9445d8e1a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5f8e97-17df-4e73-a3e4-7495d2f91f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064d1718-84fb-4352-b6f9-31ecd8c3dcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450dba05-17f9-4d22-a032-58c545c9c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9667b794-27bf-4daa-b90c-b9709fde7bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada822c5-6b38-499a-8212-9f982efaae17",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd07b43c-4f1e-4d3c-ad1f-557bc0fe69ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6f2756-3db3-4d20-a3d0-e264809ffaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba7db0c-ad16-4179-9a61-89d16a6c2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b6b0ed-6dd0-4fb1-9629-71fdc820c38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de892a4c-a61a-42a0-a811-8cc74c359853",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53254fa-d0bd-4c02-999f-eee9278129a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91161f0e-a0e8-4a9f-bc88-6ba5003b5230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a7403-3072-47b6-a045-381efb2cd860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b8c9eb-4994-4907-8ff0-877e13dc96a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e9532f-aa19-4f4a-8b0b-eb4c4451c921",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f13899-11b2-4327-87f6-465094165c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b30281-9687-4bca-bd80-e8ce0c87aef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac069cda-e086-433e-90d5-5bb5b30b74a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f959d1-e6a9-4778-a881-54cb6cc35ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914f1b37-9a2f-4ed7-b003-ecd63c0a9fec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6bb895-a798-4b22-975c-2cf6b3b1f2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbd010f-5edf-4503-adf0-d768ff4b1190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54e50f3-d38d-491d-83a4-1b62260c535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a8a48a-4de9-4f9b-85ee-edca82d3b91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6bf9a0-721f-4f2f-ada3-e6f40ee78943",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c0d0ed-a363-4e03-9c87-72cb9904a941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e953e918-eec9-4b03-ae04-06183c642fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b4d898-06b6-4fc6-bbac-9f497a3f5d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b4f828-d3fc-4323-8ba7-b7086d546e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7767d5dc-2886-4d7c-949f-6ae35f9fb814",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86befbd2-c9c8-4788-b642-e2b593938bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f903613b-a197-4451-b24c-8e14cff92dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314b5061-346a-4431-a518-9decb4c04585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "233b46e9-37da-47e9-adc4-b55eb339ef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7500a6b8-6f9f-4411-83f8-8d06b96b90bf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81327c33-cb70-494c-913e-82f2fec367e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e191117-0e2b-455e-9b15-43aa4e4f2234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230c6404-3ac7-446c-bd2f-171ffc36a394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "174466f0-77d5-4048-bd55-9c814df7cde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ade3fb-307e-4355-8276-8816958bba30",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e620d5-f6cd-4bbc-ab27-93b5205395e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572f3aa4-3bc9-481c-83eb-86b2253a36d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dab07eb-430d-4097-81b5-97091e1d5baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122a90a1-44f1-4ba0-8879-6c256286e647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a010589-4249-4902-b2ca-2623eff34ba6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b48f8-9859-44f1-885f-4d69fc47a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da3fafb-ae04-4b24-87ef-fcb4141eb3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a815cfe-6754-4ee3-b7a5-299f7379b4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bd0f41-c169-41f9-ae97-53bbf550511f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf33528e-5191-4f37-a997-edc21f486309",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67f35a4-7810-4dee-9daf-c3bb29abf42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cbbe63-be3f-41f1-aa8a-89e01f4412d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab1caae-1ba8-4f93-9739-f3343cfdcf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0395e9fe-b571-45c1-9ab2-d156eaee4084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e537da89-17d7-4941-b0cc-12fb9ccc8dad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f6e7a9-d6c2-4feb-85bf-d278cb832caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec5b66a-72a1-4989-94d9-c3fb57bd8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6601bfcd-6c00-4608-8723-11c149f45e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de356ba-eec8-460e-ab65-2b360678d13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5db5b0-bfa8-4c9c-9f5c-3c08c2129585",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bfc842-a62a-4b0f-8a34-ae6f8f72f099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fac9f80-4d68-4fc9-a932-c7c7e1378b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dce3b8b-ad23-4b07-8e96-4504a921080d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8789837f-0f8d-4ba1-982f-7948147baf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb59b36-22e0-43a9-ba9c-5eea0464ec1a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382230e4-b429-4b55-81cb-803f9e85155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3984e9d5-b48e-4643-a265-c1f38a520f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dba1507-9f10-4510-8fa0-b3da82fc447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cfb12e-40ec-4eb9-af12-81a8b5794160"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c97bf48e-169f-41b1-ad91-4082279d393c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a926b0d4-9698-4d95-bcd3-87b81df4e8bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96625e3-f734-4970-b12f-d90733f80d8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "71b13714-c5cf-4062-a446-ad9f56992d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179726fe-23ba-4cda-9704-5c37a7a3fb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1979a8a2-829d-4271-a489-e578599c8b29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "019cfaf8-615d-4d68-90a1-74ebfa49004c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0228566-25ff-4beb-952f-00f7b92ac7ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb3871b2-1f11-4b2c-8509-372e333cf0d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0362a11-44f5-44a4-a6f0-39cf86ab1438"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d37c81ac-ac6d-4af5-9459-79a621931931",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d432911-6fd7-4703-8f78-c1a8f4861a9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81dad46c-90f1-4eb5-a938-570d4b41438b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43005827-d094-44d1-ac51-4802da076937"
            }
          }
        ]
      },
      {
        "id": "ffe41697-19a5-47bf-b666-dba740d4a97e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2e1da8a2-0226-464f-af03-b61fa2bf4685",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e587ece-7aef-42ed-bd99-60dcfbbbf656",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63a9b500-d6e2-4a73-bb36-e7e9a363d15a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f147a86b-6cb7-4cc4-8e08-6c1e6602a19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf5b085-09e4-4aa0-9ad1-68ce73701039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe95eae-ecec-400b-bae7-bf855b865125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe362d96-6d74-4baa-9b15-6ce1e7f8c049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953f21d-2e90-4c02-9d6b-287e041dba55",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0d7674-f85b-486d-8c38-a3a71e6a1ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb959a08-a36c-4056-a4f9-f03cc2d8100b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34a6be0-6226-4687-9539-49398745197e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ac1a1b-6c95-4fdc-b03f-26b54493d65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbc8716-2e20-47ef-bf62-609540ee6f87",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4077578-7038-4f1d-8cb0-4a1ffd2ba3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916243a2-c239-48e5-a42c-163563a5cf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffaf383-98df-43f2-b396-9b64ede13fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0a4a20-88e5-4d1f-ac50-b13c5a0ef9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43aee8e-4795-41fc-bcdf-1124302d530e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cbdb9e-3e6b-4e2b-baf7-039e12cf1a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df479991-96ed-45f8-9626-aa52598e9b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4ba181-c63b-4cc2-b982-76dd8c202d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a8c979-98da-4114-83d3-1ef2d5ecd517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f16127-c299-4599-8c30-b3f3973f1fdf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720011be-ffb1-424c-aa00-baab8cd96815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532c146f-4fe3-41dc-baca-06a0ead1deb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f971390f-aacf-4c20-ad22-bf73cb30cef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8260e236-c85e-43c7-b938-c4d7126601ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198860ca-20e3-4caa-905d-51949670e243",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e0a565-fbd9-4994-8e6a-6a62c17bd53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9b56a6-8f88-416f-816a-54f3e6d7d788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba533b81-7e97-491b-b475-cbfe1bb5316c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7045f3db-0b9f-4eb0-91f7-13c22fdb8e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f74b75-8679-443b-93d3-72b75a3bf06e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1462aee6-aebb-4f1e-af50-e5808961efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2747440d-8ae2-4137-a2d4-40d71b6d7ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baaa7be-a0c9-443e-91fe-dd9370a20dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e1d98a-f8a0-44b1-bb85-b75490b4632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fe9e43-5de0-45f4-a080-99ae4bd202f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee3e0d-55b0-441a-886a-a0454a0171ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c54a5e-2510-4893-bbe1-aef5f560ec33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea291d5-d958-4eca-ab95-58a2424ac328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5f78d7-b214-441f-9b2c-334fda3a3193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c925121-769b-4b6c-95a2-761a8bc12121",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6377a7f3-f3f1-462f-a43f-3c7d826a12e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9267477c-9af6-465a-a501-21802a4230fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5315fe9b-197b-469e-bd56-7989989e512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db4931e-279e-4ac9-a477-8076295d9cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78be5f6-12c6-487a-b4c7-f390184ae65f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aad821e-1921-4cce-b1fd-fa222a105d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbc46c7-9302-4d18-a458-b0f1d91512ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b234b0d-e8f0-4e42-987a-8c1db2391613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6762652-a006-4df7-8ad2-6a63e73535c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d678499-43e1-4cfc-a8ff-25ac6771da0f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150d5bc-cd20-45f6-a453-591f967b67f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8726e4-f8ef-43be-b88e-0e31ef68cae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce6a52e-6d76-41f2-a4c2-c49d04bf145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4bca8e-b94c-41bd-a976-4ef5227030b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c163b00b-7c19-4119-b615-656a685558fa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd811f1-2c47-492b-a79c-68012ce9d31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf85c2c-fff4-44af-a23e-ca4545997694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70446e44-558a-4e1e-a35f-1ae1e6fda86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf831ba-5728-4876-ac79-83275404dd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe52c98-1040-49ab-b616-793c1005523f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03a9e8c-eb57-4600-86d1-5554f99b9fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53309a0-2194-4ab7-9f3b-56fca2f97b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33bfb02-7417-49e0-9efa-c06ef494eff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07a638f-717b-4fc2-95ba-9e8ab662aa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bf407c-66ca-470a-af66-4d5aa1d40987",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d02b53-919f-4da5-b7b1-a8167102a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f999fe50-ecb7-4065-8f41-a6f3a056027d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73e631a-832a-44a8-8d0a-010d50773942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c06efa8-02c4-4c21-8033-cc91d1a1219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69df61c4-4977-4b27-a834-e7f7252a1a3f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35222204-c5e7-4b70-9f72-03f1de9545b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b49ee1c-4b47-4d17-ada1-22b66a1a62f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a8c427-a7f9-4b05-97aa-fd297c5852a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e149ae-4e12-4f45-9d3f-650d79bd3365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010463c9-e6b7-429b-976d-94848503ef16",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1630ad41-2026-4879-aac2-2ba93f5052cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba318a2-e269-4365-accc-801b61cc3c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755bbe74-177d-4abd-8887-acb74a6489dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4deaaef8-c9d8-4876-b973-eb49d7c0e7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78214490-9c5d-45d6-a16d-b316b10ef4c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268c5b43-764f-4dcd-84cd-364345418b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be74d7e-7520-41fe-a408-baa3d2882ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fd3e16-334d-4481-80f8-797737f2bd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56183ad6-fa8c-4096-b991-bd03b9cd22d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60d2804-85a0-4ee0-85c4-c7091b2ab886",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192478f8-d7a2-44ac-8f56-db8d593524c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6e6c6a-0bbc-4030-a9b5-b08002f8c6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dcd578-6736-4abe-893c-3b4bb9d98134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "270de171-0400-45f4-b46f-756ef3dc99d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b2e5ad-c126-423d-8d19-5a5dba5d3dbd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20988dd-f2c2-469c-b933-88ace0eb246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c5ecf5-512c-427f-b7a5-3b72bfd34e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a257d4d-9c42-442a-bd5f-d8cc372f7e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d398f3d-284a-4a1f-8059-ae674a8e33fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacc58d3-6d39-436d-8b82-87761263ed7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f108187-de59-494e-a12e-48b30c87ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e049d920-1e81-4327-89ae-4ce5fab813ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7340bcc0-5a71-4b9e-b864-33535ba75c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac93a75c-73a1-4551-81a3-a23b5faf6087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034e7a1c-b69a-45b5-a46f-2617cd73fa6b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05970077-bb38-47b7-b5ef-e8ff4be3f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ad8577-733a-47f8-b707-d50b01a27d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694358ac-6d8b-4125-bde5-39237762b70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a65a64-2144-43fb-90a8-0c3662af66ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31f0f86-ea02-4c88-93e2-7517e36990cd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8bf5b2-0010-4477-9d3c-396520fe48fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fb8834-d71d-4f22-83a8-4c725ac5af8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4452fe7-bcfb-47a8-88ae-d8f42fdeec65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ff356c-381e-499b-a3fe-cb41a0c7987c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5308fd85-9224-49f6-a94a-2fc41491561c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b3d71-74de-4939-95f5-7fbd1ce10259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef91302f-7c1c-4daa-9eb8-48fe82f633d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cedc6a-b41d-4666-8545-00e68fb8f664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef66ca7-5f43-4576-b9f8-a4b909c60cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44716c5-5dd9-4ced-9d10-9f5bc2ccef19",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce176017-e1b2-4c86-93c4-aa2debf132af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71e298f-1b0e-4e3b-a81f-b00afd2d5581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aa6624-1eaa-4b8f-b847-1312f190cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2976e6ba-eefb-4bcb-8dd9-3e469431ae58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f5c828-62de-4e49-b854-98d92972d3ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf317a6-f429-487d-a13d-cf9fd4e069ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00613a90-3dd7-441f-80b9-c2b1c18576d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaeeb81-100d-49f2-b9f5-05145d02e62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe5f43b-a33c-4e11-b776-5ede17279c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adf2db4-173c-4076-83a1-b6023b610e3c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea8776f-8f9a-4f9a-8fe9-0a8564f15b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b3d41e-b99a-4df4-b573-c61a3fa9cda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e872db-8de8-4358-bcd4-441227a9f2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b99e8b5-def6-435f-b3b4-6012c7661662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1d7784-a1cb-4db0-8287-4f480e8309e0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3a1822-e348-44aa-a080-327adb502352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfebbd48-7697-49fa-95b1-2640a2ccc1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffb1112-6971-4b07-9206-31ae2b8d62a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30eb11a1-82df-4289-98d0-0ce433c8ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde99c71-49e3-4f64-a98e-fb1a17f6da1e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc2d7ee-9790-4f08-a4b8-c06378d3a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e239fe96-b417-4bb6-9180-977cc3e48c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b576c8-b905-4214-ac50-e691717d3a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c084dd4c-461e-43d6-b036-1e282505fabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4e37ec-833d-4965-8018-869b337e9a17",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf3b8d3-1686-49f7-a5cc-c051dd72deb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db45b03a-08e3-49b6-99c1-f73709eeff97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5495497c-b283-4ceb-9f99-2ce1f9d1dec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23d9a94-19f9-489a-926c-302f1d20e168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c23b45e-4ed9-4942-9e15-4e2f876ea444",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9176d720-4315-4d26-98cf-8461d54c7dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b79d900-0598-47de-aa9c-56ba80ba6a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e495c30e-911a-432c-a00b-0d16ecd3e315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aabd5550-0837-4cc3-b597-2a1e2264d83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea3d8c4-0493-4772-8761-584d6de1e5b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae28265-aede-4a77-8929-d8040cb90bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2353bd2b-4670-42a7-8404-0ccbb525357d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eda784-0f6d-4077-8460-16879970b471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "379e5008-5330-48a8-8c10-f09659a0df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4f5685-5b69-4c7a-91bc-2c3f3960e779",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a13755-2e43-49fb-9a20-a20d187adbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8180844f-72ab-492a-a96a-bca79bb71052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1d2f4a-0e83-448e-8751-4f7e1510cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac192a95-daf1-418a-a3cc-84a821950649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dec04a-d9d5-4055-a239-6e799d7c1455",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad5f723-4eff-42fc-90ca-d6147920c3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a6a54a-dd3d-4e95-812f-ceecb5d8312f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577cafcf-1291-44e7-b7c2-6c4aa9e133be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b63ca5-c4a2-45ac-b48c-edd2d6542fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6af0c45-7477-47f6-bc51-3b1d8b9b72c7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8621abf-5d0c-4bdc-873d-88c27ca79e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb69e7ab-c27f-4b58-8181-3efa55ace558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d688cc00-712e-483c-ac65-d828803b01c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7382d3-d43d-40e6-9bd8-2270bdd9d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af1d2d-5012-46a2-811a-8619dc5bd90b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfa4b5f-5641-4497-82a6-80e758b36ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41dccb0-6071-4e45-9f84-a35e1eb926e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b70572e-47d0-489d-a83e-b7b78d1f140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1508d6d9-b738-474d-aad5-340e5de31f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e7b723-18c1-4d81-a7c5-c57e337923b9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1189f2a1-76cc-40fe-8439-36e8e18c863a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adef5dae-de1c-4d77-8acd-879cb0aa72b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71073eee-3cd9-487a-ab0d-87f602107604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe0c647-cab0-4bde-afa0-529210fd835c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc0015e-d190-442c-b6b1-851d1174f44b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9548e77a-44a4-44df-ac29-adc50ad442d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76abfa05-f16e-431a-a442-6c414271d020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340bd7d8-acfd-4870-8563-84b420a4ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a869b86-c2a3-4602-968a-d1f119f077de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c127b526-39b2-44de-b660-15e300db315a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75f0e783-9654-4cda-bd9a-c65ecf8587c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5feb10d-aee7-49ba-a7b9-483dceaf0654",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "544be1f3-7980-4f19-b366-b45a84dd0265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0748615a-df82-48b6-8280-566c08a186f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21a3557e-07b7-427d-8cfa-3cfaaa198b01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86c11754-3010-4735-9696-280a6a886393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0230d364-cfa5-41c4-86b6-a570c0937b64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff24948a-8c12-45f8-ba34-6954abb8858b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "374f464a-5432-43b9-87f6-46a62bd92f33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4e61435-7396-4505-8bf7-283cf8005f70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a1f14ad-21cc-42a0-90d3-095249aeda27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0802d18d-a4a1-4471-b3ab-a7afc739904f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e62719fb-2dd6-4133-be77-b473b4a4f03b"
            }
          }
        ]
      },
      {
        "id": "68af0950-c958-45da-a868-2db1c5c4158b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5883248d-5c9c-43a0-a602-7d1dbe56de38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7000d9e-cee2-4fed-a715-e422254670bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d20087a7-f333-418c-8a55-ae3dec41816b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e9cd7c-e4dc-43aa-b099-f39283d515c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4599a-43cc-4615-864b-3ae4c9c0ae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f71130a-fa93-47e9-802c-d9ee8db6d1c0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058b1f2d-9b8d-4aaa-aaf5-e917b7490740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a896f09-f260-4555-851e-1b1eb6c2f56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a396e5d9-a9a8-45bf-befb-3bd7d92a6dee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469ff8e1-1261-48e3-80b3-b3104c2145ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbad625-2b89-4223-8333-d2cc2bd7486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3b4437-1ddb-4387-9014-992e5a90c51e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfd42a1-7be5-4112-967a-d51f4ba8f37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8876d09-9e21-4cb5-ae0e-5a2cbf6fdb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccba83de-4fe2-4d1e-8077-2b2bda1af419",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f7dc9d-ae70-4f39-a9d7-2a2a1a0d107e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4befa27-abb6-4292-a3a3-ff662e38a63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edbd9d1-e4c5-4940-9852-61a0224a3e3c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e3359b-39a2-4755-9d0a-f465b4b6efa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453419f9-7fbc-4b76-8b4c-6c019519c185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682e403a-d60b-45f7-8ea6-732ab3ec72cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef23a3c-037d-4a87-8fcd-66f2fa15194d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b375caf-ceeb-47fa-b8b5-c2fa51e03aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f04bfd-8a54-45ca-a7c2-3764ea2e74dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d28343f-31c3-4f8b-a2a1-d17b15757e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fa42fd-9add-4abb-a333-df394a2a7592",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16adab29-4915-4bb9-92c3-995a05feac23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1a6e03-afe0-46eb-ac23-fc32ce2d29a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee1c1ff-a559-4b09-aeb9-7a73a64940c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802679d7-b1c9-4771-83a4-f48485ee2afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997fdaee-0f6d-4537-beec-e0be09a88ce7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbcb815-424b-4c3c-a554-010940704622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c09979-0cd9-45d7-b244-c07580bb3c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eaaaa0-9db0-478b-b51c-ef2d2c0f9ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1834136c-83ff-406b-aa46-60cbe0545ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be408797-f80a-454e-896c-3a3236719634",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc44d910-f486-4d6e-9e84-11007c3c8256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cce7618-2e14-40c0-8946-0d5224426ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c30647-49eb-46de-91eb-e4f150472da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3f40e6-e6dd-4b93-b9d9-d86aae836276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e72bec4-63aa-4d0f-b6f6-099024317dc3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216f5e10-bb99-4324-9551-5fc579dde6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7062be51-52d6-4458-b26d-a0b5ecd5b1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefd1f5c-9bee-46f5-82b6-e5c2b7192f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7da9ba9-2019-4c5b-8595-49c25692c1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc97a1fd-b8df-4733-8b5b-3445e45780d4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3683e7cb-88c2-4675-a0e1-1bb1c723f48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e41a13-f50d-4440-8941-d022d6cf472c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce0a8ac-855f-4abf-956d-56cc0844bfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eff307-65db-4ee5-90cb-ce19be48c8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98af1587-7385-4be5-a465-0c7546ea3109",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb01ce1-d087-4ebf-a83f-be011c034468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab301f3-d7c0-48a9-be09-3cbc7e054daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3c06c8-6fac-4456-86d2-b9d8dc2bc1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa1db72-9175-4156-a1e8-686933a3ab54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8762f78a-e009-4bfd-acf2-c9da72860468",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d222a8d-bd58-4bed-af29-ddb423c70301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07fe485-91ec-49c7-82b1-a16fc780ce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5eac90-cd5b-4ff5-845d-9c53327782d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9486ee-543d-4d96-9fc0-da15e99f5624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b937a47c-0929-4a67-a960-763296ee2aac",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af84173a-b544-4c76-b712-2e8b3b262cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f23c0b-9211-4e32-849b-81efa97c8a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb39b08-864c-41ff-96cd-d7f3d56e3588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79f3609-59a3-4e75-9c47-7975d97598cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2a312f-b91a-4d9d-86a8-1a6b78988ea5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef04d76-5627-4e38-a1f0-96c71cf069b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c4d255-b34c-4aea-ba62-252b3920f121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052c9bcd-e769-49ab-a349-8064c462ecc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9cb633-8830-40ba-8328-1f03b625fb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddaf0a3-c0e4-4c4a-950d-fec54dcf88df",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c459435-e58d-4230-80de-6a195e17775d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cf641f-7e01-4c79-bb0f-d68b98a4ad22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7eb071-7b78-4bf7-894b-2f10f7d37681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cde2a89-b317-4a12-a750-417831988145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca93b00-b3fd-4f0f-80ba-a967377b1651",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89779c0b-2ab3-49cb-9fe0-4046d0531109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4d20cf-37af-400c-8be3-277f91cb9976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdc4031-efe8-4e62-a6b9-d73bd594566f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee675b41-98d1-42d7-a03e-c908abf4076e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5d951e-8b5d-4448-b346-302103e347e1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9867c550-5f0a-4da2-a78f-0216bba20ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee594f3b-af72-49ae-9e74-25a919246021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18cd32d-4dd5-49b0-b6cc-0b8f8c7b711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3894cc-9edf-47e1-8892-bc1c54705ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22e4569-3eaa-494a-a027-830f9552c6dd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8f3dbd-4cc0-41b8-a5bd-2e568c4fd55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb4b49e-ceab-4a0b-9f97-27025a3a4706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd6fff5-c7ba-4807-91ad-4c766b9a2dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ac758c-e79d-4c39-9532-0d5c69e930ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ae4ed8-dccb-4631-992f-f4957997b3ea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419f06d1-7c6c-4d34-a687-a46d036ff45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262c99bf-e971-4916-80da-90cad7d35478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a90a76-5ce9-4320-adea-de52ebaed533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bdb7a3-daed-45d2-9c9c-2a32c50698de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939ed8be-f32b-473b-b5f7-f570b9a07442",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b2ada-a9cf-4724-9284-669cc08b03ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce238d4-a0bd-42c3-89e5-2dc7eb7f55ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd44e5-5394-4d5e-92ee-fe66aa3ba144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9a646b-a220-4a94-877c-fc6bed5e80a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1097c78-e75a-4090-93d2-93d80a89edd6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e0b25d-0fcb-4332-be5a-1c2ef1aba30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093765bb-d984-4173-b90e-3e78f68dfb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183012d8-4ce2-4a08-89a0-09c09953947c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad3f8c5-beda-4e79-a72b-403b02063f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b268a10b-da6f-47b1-ad53-0939278901f7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e8fd23-dc25-4ff0-a713-53da13d42818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de123c4-5fb0-4de5-9d61-a2a8333a1ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c5ba19-9313-45ec-876c-2af219765438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928a9d9e-334b-4059-b0c2-826c64ed4fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109e84d9-b1fa-4377-ac05-b47498ccbff7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fce0fd-66ce-42c0-b207-b9fb846ece87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2894e5-b8e0-4b31-9a5f-0eafaf5208ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaedd95-49cb-4547-bc9a-e652db0d8e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0232df2f-ae10-4387-87f2-f136c6214505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc70a5b-1c33-4aad-92f7-3460fb6eb98f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b000a36-fd07-49a0-a75d-eb75397180d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf15439e-6edd-431e-9809-01cf9ed9d52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769d9f96-f4d1-49a1-856e-86958b37cb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3318e333-19a8-4249-8b66-ddba1a22524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5dee87-2f06-4d25-b8fb-45d4896b7b4e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8659bbfb-90a8-4262-a7fc-b1ed75c985cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a734fa87-c87d-4fb7-9fe9-0ddbb13c7f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7990da2a-a654-4eff-aeab-e1af75b67a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d8160c-8508-4201-9b80-2ed6194289b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19da9326-e128-4094-b9d6-d2e1781aa5a0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514fd585-545c-42da-ba1e-7f3f6be5098a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90967f71-7bdc-424b-a739-fca7951de8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd0684d-4c27-4e5f-9716-d13d46880a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d76bbcc-4b48-4fd8-842f-d05df0b47521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa31c594-c124-44ba-a5a2-e41b101b33c6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade0bd87-04b7-464e-ae18-92f5908917c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd1e3ec-d422-40a2-ba26-9bafeed4d50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a6c6c-c673-4f08-9883-f584ec4c557e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae431d7a-2e45-45b1-8050-ddfadd8e467f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e1509b-7983-4bb7-a9e0-b3a3414407a2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abb8059-dffd-4c43-9beb-2f677b07f59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53cbf636-987e-4ece-8937-396acbc4d953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bd80d9-f22d-488e-ae2f-f6c19e5c007b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc176989-1f47-4875-a82c-9e85069226aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5728b1-37bf-4771-b7d1-a7475acdd3a5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb4c41-05a4-4c89-a0ce-02ca674a4905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8d5c48-c88a-4efc-8b61-fcdd7ea92d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077e3846-5abb-41f1-b367-3b5a7a4f3cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de13e44-2216-41c4-a8d0-90d95b050248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceb9a4c-bef5-4da9-ad8f-6cfaf695a201",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177c5e5c-53e6-484d-a592-170f2d867611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eea4cc2-2ebb-488c-a7e7-bc015f2d3b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ab964f-6b31-4efc-a4cd-de154f80c2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ebc192-0307-48e1-9364-db7e38fccd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6c968f-82f0-498f-9db6-946d2f4760bf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b40ff2e-5d04-4879-85f6-cdad770bf52c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4663df2-dd87-4c9d-8b1a-57afd9053d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aad9258-13d3-46d8-949c-1b0ff150060d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58642e21-04d1-4d5e-9119-e122c5b48fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6270d12-87dc-4985-bedd-e4ed48993ebb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee6470-2a68-44e3-a9d3-50f57f9c7825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c872532-f1f9-4eae-8fd5-e2d94fc39dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dfabe9-f12d-4fe1-b7d2-cba63d231ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0125801f-8803-4eab-bf85-6b849fb6d53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead755e6-5b2f-4724-a506-9e59646cbc76",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8ace6e-b838-4050-99bf-7d6871a6b213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181571af-1d95-4d6e-bf3a-d3af90ba474b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f1865b-3327-4170-a5c5-6829a9bc4904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6632f0e9-0709-412c-b471-313bdab13d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15592e3a-c285-463f-91bf-02330f8a70ee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87c9944-f8c0-41b4-a0b6-e7305da7a178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae999f1a-68af-46d1-acbf-dee85c587d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1fddc5-2a02-4a8c-85d0-35e3e9b9fa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7840a4e7-cb09-47b5-a5a6-151ff516a873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb956490-c264-49c7-b193-3fb3622c7c42",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c0307-e584-4c4c-ad37-5f337fd0d94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1f19b0-67da-434d-b003-61810171b4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed230642-0de7-4432-92a3-5deacec1eaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1fdce4-2b16-4050-932a-00f126c31d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc9a068-1c7b-4e6c-9488-990bd8ffafc4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ecc788-e82b-4918-9510-f46900277cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56edc9a8-dc4f-4240-9891-5566cd489a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df6c2ec-24ae-4727-bb65-329074023a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3c2c63-f98d-462d-8c02-997c7714a49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a05aa2-de2b-4da0-8cde-9de6e8f1a7cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bc3612-a04e-457d-a493-b9aef5791b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15915879-67dc-4fee-97d9-621e8ee10d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb41ea97-e41b-41e9-ad02-8dc96c654ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae02e56-2a58-4877-bb14-066f72a2bb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23963854-0cfa-4267-b848-d16e2cff9552",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffb5195-1e66-454a-9841-9c83e405fc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4c9102-5a97-4b21-a370-6501b8f1a205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be4185f-88be-400e-b4e9-1e0c8be15dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa7fb1d-125f-438e-ad86-faf369558709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3196c24-cb4e-4bfb-bcb7-b908c1cf05a1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da7b985-dc47-4079-b128-c0dd59ed9f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db47ae4a-574d-4066-813e-d1e02703a57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042fccfb-6da8-4d45-b8d7-41b2b4520267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f53f6c2-8909-4ffd-bac7-98f62f20ccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5a1bf2-083f-463c-a5ef-527bd6b1e462",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470553ba-dd3f-4a4d-be69-e2f790c22c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4d9b15-9d04-4a70-8c3d-83e9464583b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3fcdde-37f7-4210-98de-e6fd3adfa106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a1c9c6-afed-4d3f-88f8-9123312008c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691d850b-de40-4075-9070-82f56f3b220e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c179543-913a-4fcf-8652-fde7d13f2a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e881112f-cad0-40a4-8483-9dd4b9b3f7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819fb5c0-2166-44bb-ba3c-122001087516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384bcffb-6f77-4541-9bef-7db68ba5e2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd71a4f-a912-47d9-a228-2e4a0b4cb5c2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae72fbbf-d192-47b9-ac20-fac2a81559bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b1b9b0-73ab-4230-b86b-70f7078b3a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f24bace-fe60-45fe-92bb-b14570b933c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db128429-93a2-4fe2-ae59-caaad140f2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7c860b-b84f-412d-9371-a6af1cbd664d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f494e3-71d4-44e5-9353-5d0a60154b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c81a475-e30e-4b76-bf27-cd826aac7dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e88e3-20cf-42d5-8009-c8dab2c6d423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d125995-499b-4380-aa5d-f3979bdbdc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce65d2d9-7e20-42a4-b5dc-dfd2c7461b18",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d130535-ffaf-4944-834f-b511074d2557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4cefc3-8217-47ab-b471-4e075309f498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9792d47f-6621-4a90-8e00-cbc5ce6c45dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9d491c-b6d1-4237-a9cc-006ce581cf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4f4683-61f8-4630-ab35-1cfc670c80a6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43bf469-5d4c-408b-8e9b-0c1e3a1088ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb87c685-bd63-4c5a-9a01-f09c33362150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35cab95-09c0-4c44-a301-4013bf482d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82b3800-f958-4182-a6f1-e7a105d22eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542faa6c-9c5b-481e-aed2-c530c20ce597",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81746c08-5799-4d2b-92f8-0d8b71c021f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6454cfb-387d-431a-94a3-6d4c12180728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733367f8-082e-450a-a03c-9a25dcf2a8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90a14c7-ef8f-4b50-82ae-03d9bd6132e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490b72cd-9cbf-48c3-a82a-21bfc89358f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd8a831-a250-4d18-8660-5daf565a8657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8b1ed1-45a7-4dd9-8962-9ab1ea33f5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb24a7ea-6ca4-480f-b8b4-a64da75a5568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0decc17e-46ce-4b64-9560-c9372dc81e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6b08b0-ea3c-4c6f-af1a-0d0fd38541de",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c947b59-dc7a-40c2-b6bf-bd7ea99b5d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c588c69-f5e3-4bf0-88a6-c3e8080021b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601202d-f55c-4267-a7c4-352171a7d8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5f65da-5d01-4ab4-ba6e-37b4d9c809bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b284315d-446b-4e4d-b2cc-774f5e2b3ca6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2a3712-7937-4523-84f6-992756d9a91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d752cd8d-d5b2-471f-9d40-8550968f3f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c283a0-925d-427e-a986-c019d2799156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f67849-fe6c-46cd-bd72-754131f8f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e11dac-3abb-46b4-832b-b0e7cb65b1f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fb3570-9171-4173-9983-7341cdde03ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf997f6-a224-48ec-b860-2708336d440f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3c80a4-b7dc-4639-9a7d-7a39e6ba3013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cdc74a-b7df-4167-b340-6c097392374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d3caa7-dfc2-4c07-9582-4e2003413a4b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056c346a-6d5f-40c3-8bb9-bc3d0ba17fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5953e6f-9f33-44bf-bd5f-7ec207fd5f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8fd91d-a99e-48b6-a4ec-fde61129fffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f156e5-2009-4e88-914c-bcad76f89b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce255f2-b82a-46c1-87af-7714eea23fb6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4659941-4db6-4f67-aaca-82e2ec23edfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b003817d-01d5-4d06-bd80-79c7bcf25775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d906933d-0ae2-49e6-a312-8d649ac43e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa4abd3-6177-4a7d-af1d-b5d7a0548a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5535387e-7251-476b-9568-943a2090ee6d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3ab10a-d003-431e-9800-7fa502833bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a409d2-43e7-4eee-aa56-4c712c01a1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbf78de-dafa-4b93-be3d-46bfe0231ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039ba645-e61f-4ff0-bcb3-3f98287877af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed04fb22-dcc3-4e66-9dc6-5812cb481eb8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23111aa6-a069-4826-ba50-018f44d593cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9d5ac3-e370-4221-b702-512a7e4397b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416f208c-9a22-4e88-af53-5edb3a479919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8536757d-ecb5-4fcc-a7c2-ded0401f8c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d3467-9b78-40cd-b30e-9c53e71743de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0cc808-fb25-49ea-a849-a6fffe7cff9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc68efb2-2c04-4ba2-8bf3-9441ff88d48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015cb516-c875-486e-8c6a-358aea41225b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f41989-e333-44b1-88b8-a959f26abd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f53228-82c8-400f-aec2-9fb0eba7f425",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8368e6-0026-46b0-a6a1-052fda88814f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994e92df-9a47-4941-bf1e-7312a1e656e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c23f918-d187-41e2-a993-2b1c8463ec75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d76121-1e86-4e5f-a7ca-402620b1cec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b67f3c-8866-4bd2-9c86-1b2221c1cef9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1118e687-9bd1-4a6a-bef2-077a522fd5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8f9130-0459-4880-9345-87037522fe14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89be8760-db12-4b0a-8b38-7d2cac69f9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92583718-0afc-43fe-99e0-b3ba71e13e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967cf785-c4cb-4564-88dd-d7b1e52f6aec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e2c182-c928-43b9-9154-885a9aa3eaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac3aca1-cc8e-4edf-871a-8044afb6214c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839a2d95-5258-43c5-8925-8bf1b229d153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cc7cb2-50e0-4e30-a859-636fb06de0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445efef-51ac-4960-8d5d-752585779960",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a1a82-bd20-4a91-aa8b-55ab1b7c244c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a6c617-cbef-48f6-a7d1-62600ef499c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e293250-108b-49d0-8ff3-400af5ec58d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5fd548-995e-4143-8324-fb187de1bd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98af9dac-1cf4-46ce-960f-23882fe1b8e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e76bb8e-e700-43d4-84f7-ddf88dcb42c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63174ae7-5fd0-4292-8bfb-de3df2385549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6649608c-9a18-4467-9db4-d5219a477d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd149b2-5867-4f43-9a88-d0d3fb097954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cd6946-c19e-42cf-a0f5-c3575a794fcf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a6530b-f3d2-4b48-821a-9e8e76f250aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96888189-7806-478b-872f-7190439aa2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c59617-c5c6-41c1-909f-79007d359638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6291b0-b999-4e6d-ac41-52babe452981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6e2b57-a4db-4532-8e71-4542beb620c3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd03aa0-f734-46a8-96d6-719b73f85eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3576f6f2-4262-4793-a77e-4b29c43649b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166d922d-a395-408e-a8f8-3dd6290249c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a94a5c5-bbb5-4acc-9d8a-350f2c802104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da807bf-36fb-4aaf-aacb-046b8c8dee6d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8aa0d5-3aa8-4a3f-aff3-a9f578a403ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3f23c9-76ad-4241-b9d7-0c141803aa4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5b57bd-cd73-47ac-9aee-7f8c90ccbd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b5c0c9-0df3-4f38-a7bd-f5434b71f21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc8fa76-0cbf-456f-b0ff-c51f19b04685",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb4586a-7b18-43a5-a256-17209a5a6c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b09e21-ca14-409e-b5ba-f0c161f0c3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6adf245-4053-4ffa-b036-81fc9963f82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7e3910-0198-44f5-8645-54e04b904ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778c06e9-f939-459c-820f-54a0f9a5113f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0a38dd-cd3b-4eac-abe8-7dd1e913e1c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc6c88b-3edd-4cfb-ab5d-8f0fb9908cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e026fea9-16d8-46a9-b207-c6ec4cdd02a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a77895b-7112-4ae8-98e7-5151f9630497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd7860-5b4b-4ec5-8c22-f362d9a8a1da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a51f4-d01c-45e2-a52a-814d901d9ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ca92e3-0688-4825-a9ae-6bfbad46f8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b1dfbe-75c1-4dd4-a946-1b3b095c36d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b151248a-ad80-4f19-9640-03ac6e6625d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb4364-a45f-4eb8-b847-a7fe4f0cf1bd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e8b0da-824b-4ffb-848a-e8784ce32300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd84335d-cfa5-47d3-a7b8-a507236708b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d06c68-3e7a-4eaf-a7d5-c132f7bd0ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c47bb7-8e28-4bdf-92c0-bcec2e264485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44ee25c-77ea-48f6-a1df-df08daf4698b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1afde0a-b36b-4111-97fc-5b3648c8ba28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7c267c-fe91-4197-989b-c28b1178cb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1be6e1-ba94-49c0-8440-6f553f718fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909023af-f7a5-4599-98e4-72404ab7f441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9519f7be-d1f0-405a-9d1a-6ca68a77ac52",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c78d96-09ed-4b32-9290-4a34dceea20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50035d59-87b6-4da9-b519-574a104c2351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b911537a-eb43-4c89-a26e-164fce8bb5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40677491-382e-4fe0-b56b-6298e7139662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2793f286-12b0-4cc8-8e81-d4b3e589b6bb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1b9164-f046-4970-9012-023dc3c3955f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d10240e-7187-409d-8149-41f6a28ffbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbe98c9-1f82-417a-a6f1-02158f3974b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6a1d04-8035-40d8-b9a6-4c94f0bc95dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8722e2-4dd3-4fc5-9f26-695d2f6e5371",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a780b3c6-7685-4704-8430-02a381b595d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb26059-da8e-47cb-aa6e-617d97c1d871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbf988e-1b03-41a6-b93a-d88cc94426d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e48f4a0-296c-42d2-bf36-ce5bb4894bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c8bd4c-a274-407e-a24d-d8d590b46c39",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4355cad8-023b-4b70-8730-a78c66d3f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936abf17-df69-4a76-b784-7e20185d0ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc4da7-8ca4-45bd-a5a4-83154c17723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef450d2-099d-4c16-afc5-28e069cb9030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d33e03-09ce-4019-9e5a-b6d4c0cca91c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48871a96-4921-48e5-84bb-a056186c0651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df6adac-4bff-4e80-9f2d-5965db25d150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c44f23-dfd8-4b41-ba0a-2edd7538ef2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc5a566-cc43-4bea-ba52-fbac0f39a94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db40a53a-bd2a-4a6f-a562-520f97618206",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b34fa2-db92-49d0-8b57-2253572318ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ce32dc-1f16-475b-aaaf-6db3b5d73e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d70f82-b647-459b-b970-a0f460bab77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93116f9-94e0-410d-8d77-eb96bde33854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a3ccae-bdeb-4c12-997a-9fc2e10baef3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8788e8-b2c8-4cd7-84f3-272d0bab80c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3ebfde-e2a1-44ab-8296-ecdd3d9c6db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce88117-78d9-4328-b98f-4b3129aba38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f465e462-55f3-47ae-b5e5-f4ad489b1f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dd51f4-a833-4f04-8f5f-e10bd8f8e082",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ad67d8-4486-4478-bf50-5e7ecb88052d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4deb9c-0ec2-48f0-8586-f4287ee4b64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8627bf9d-a309-43c3-9cf3-0b336ddc7529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe13600-84cf-4278-bbd2-3047c7222076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41606417-d017-46bd-88fd-f27a641008cf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323636b4-8786-4008-82d2-7a065661ab56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c0d801-8563-412b-a9da-8aa823443e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6abaee-faed-474f-addf-5a3cc528a869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ee139e-ba93-4efe-afed-93476872031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80dc432-b775-4639-a6ea-ddd4c2c396e3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663eeddf-a9c7-4ecc-a780-4073561ad2d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb4276b-6621-4b97-b633-00465f125e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0226adca-6e51-4f08-af5d-cf16f9cfcb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a6ba45-efe4-4226-8360-12300561bc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6bdae5-09d3-4995-b1f6-77e971818ed3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6940d6-a77f-40c9-b6a4-d14b8fc0ad56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f118c30-eedb-42a8-ae23-60eb19fd3e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca95038-5082-4095-9041-1208f15d75c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929e493d-8bb5-407e-8518-0dc46bb5470e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed18271c-b42a-4acb-9738-9e2ec90ab19b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48aa8c2-f91c-43e9-a883-238a295caa8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7473c8cd-eff7-4d41-83cd-c92f8988185d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49354c50-c784-47f1-98f2-68b741561ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb93766-5a30-4155-b9a0-ce98dba3737c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768597f4-dc35-4dbd-b8b7-58b3eb127476",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d73b94-7c66-4d70-befc-d9b9a2b68ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42a3eab-83fb-4ef1-9363-8153078e463b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738462fc-9794-4fe1-8709-6743e2b8d2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f64406-6b16-4438-a13d-4f17c214fb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b19e74-9be6-4d32-96e1-c3d1470438c7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35c66ba-85c1-4402-b053-09f54b85312d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e4f49a-1a45-4549-83b1-efa77bebbc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb42ae-98f3-4ec1-bed1-c57faeb7c0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f922608-18c1-45e0-80ce-dfdf4e38ed0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8a3398-9393-4c03-adee-22acc652bb54",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc507849-9779-4142-b953-4fd6481584bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9adf3d98-5a04-4611-ad6b-d3710fe32126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b483a0-a2e5-4774-a822-8f58f48045d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cc4c3e-064e-4d7f-a232-8a23e1dd475c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4fd0e5-1153-4f4c-baec-97e2adb20730",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149355e7-48b3-4def-aea3-80448a8942e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd956338-e7b9-424f-aecf-7c69108ca950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424746ed-18c1-4828-9f2e-3997f880387b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eda163f-970a-49b4-8268-d4edff9d4ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac7f34b-098b-4aae-a196-9f191b0c8cfc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5033ee1-64ca-494d-95a5-4fa03e8a7268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ca3b49-f1af-48b3-bfde-9bb037b67329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698f7191-3502-4d5b-89d7-5639df87d8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056a02f5-26a5-4068-91e9-4609547d6d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed20564-05c7-4e54-9209-6c16ff906997",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bccda2-a6ff-4bab-91e0-ef25c87254f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22cc2f55-1348-4a44-884f-1a0332f032b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836ac1a9-928f-4410-a702-a40f6b586bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3a9d64-52f5-4791-aa39-bcc2b0448e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1357d6-3b9d-444d-9017-a2a46b27745a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb62e6a-2a3e-44ca-b760-5c29ede157ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5965ec8-4fde-4502-8819-0a29c02584c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48581766-3bd7-477c-9622-07b22b0a596b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b54afc-0b1b-40b4-9628-5d980b96731b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f0faea-e38b-43cf-ba68-718561e8da34",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6fefd3-499c-4f8d-b6ef-f07ed10ed805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ceadfb-f24d-4bfa-ba72-52c0972aabd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828c65d2-7073-4555-9c7b-9c75aa1ea1e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3a3a02-3cbc-426a-885e-d26d500b9bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7f5e65-f93a-4560-828c-f2a9e17172bc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940346a5-9d8e-47bc-b5be-bd4362be200d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52908e30-a96a-4bc7-abb2-595f3b19739e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38653b35-b308-47f2-9ecf-144e6171e926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0e9b7f-80d5-4c08-862e-0fb56bd359b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9def19c5-0d4d-4d44-b85c-07d1f5e369c0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af81858-c263-484b-a01c-cd50e14072bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fe9d21-6bba-477d-a6d8-e7bbb16a7976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673a6fe5-d114-4d2d-a72a-048ea3aa338a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d28cca2-2a1b-410b-91e3-42b8dc323e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3b42cb-adf0-4c19-9491-c59509752d9e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc6cc95-4ae9-4f94-a7a6-3de4a3c713cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15df5ecb-4c88-4797-8ba3-71db4ba5aea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d303d8b0-564c-452b-b571-460c503c02de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca672dd-6f19-4c2c-beb7-a11fdc90b474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb7f71f-2e3b-4f41-b00c-03c5ef432c8f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b24134-8797-4d5c-8d22-334ea00c4a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bdef54-6356-4142-80be-4284a2b67cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74554152-328b-4683-adde-19412283cc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2b7711-c1de-4caa-8e0b-c9b5eeeed7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98db2e19-f533-44fb-8c4a-bcda353c754e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd53637-0ee9-4927-b1aa-02d787e4240e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5c587a-3b2c-4c46-b03c-89bfaa4600d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0ea01d-a7ee-4799-bd03-c4899f567501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88adeeb2-0776-41fe-8728-fde4d7254859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a636d2e6-9c65-4b5c-996e-230c949281ec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d5c60-7559-42b5-9576-93b89d7ff77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c5b4c9-8b80-4aec-9b77-01ac9ea6b346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacef46b-b97c-44e0-859b-7d692a016feb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448999df-b567-4412-b30e-458c866d3999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29f8056-0b61-4f8f-b9bb-f48ea75a1186",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c916e-edfe-4718-bb18-416b33596544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf292e87-f134-459f-922a-92148fd2188c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066ea5a-4170-4100-8f45-5c2ec7a34b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03821781-1efa-45c7-ae9e-070ab9487d38"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5233e35-6483-402b-909e-27b1939205b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "335a4e80-2a6c-4e37-a31a-a95f4e327516"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a32bac32-47cd-4403-b8ee-9e6de7b1fee9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0d71817-b886-4229-bd1f-bb705062f2ff"
                    }
                  }
                ]
              },
              {
                "id": "2212b8ae-1db0-46ea-956c-769ee0844044",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a065676-5e0b-4ac2-91eb-e352896b2a38",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05f04cb-cdd4-43e7-b060-325830aca377",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c461a47d-69cb-46f6-b52d-ea877f52cf74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01deafea-f4b0-453a-8cb4-b344fade9ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f48fdc04-52cf-4881-a207-e42f11a2ff60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03cd54bb-7161-40f7-967f-18e2b2b6ef1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b72fd30-4f2e-4b49-86b6-290e13d79d24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "107af2bb-eae1-4e9b-acbc-4c1245fbbd05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dcf9ff2-c6f1-4441-95f8-9256d4a4495e"
                    }
                  }
                ]
              },
              {
                "id": "ecf91a1d-69f7-414a-9764-8ea880e1b13f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "806af682-6e83-48e3-bf9d-5e2bd5c474da",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0712c79d-a639-4449-89f3-3b35603d75a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "35c47ce6-3a40-47c8-a66c-96b6d81caf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b08a624-3cf2-4581-8907-92278e2312b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ce967f-57c1-4731-84d5-7f331fa554a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46d0a366-97fa-4022-b367-d2de8edacf98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d502b92f-f8cc-446c-8bf8-fa6518897bbe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c48fbcf-5f34-45ba-acc3-6f0bb3b574ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e4ecffe-ed16-465f-9156-63a9bd88b57a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c048ada-1dd3-4563-98af-6083842dc483",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c45e7d86-daa9-4a0f-a17c-b4d829c7da5c"
                    }
                  }
                ]
              },
              {
                "id": "0ac4ad98-82e6-4a3f-a401-9a8ac5074800",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01da88ce-2bb6-4c63-a738-78960320e113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "487e466c-75ad-43cf-a955-7ce2e6dbcff0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a161e50-1d44-45e2-b6a9-cc3e41a05933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "444cabc7-be44-40bd-8c99-bf67dd27dd79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c9b2217-5845-4e6f-8722-6932e017b894",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3103de95-acc1-4d14-aca1-23c949885d89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f22cbf00-35a6-401f-80f1-744bfb1b7a85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b8ff987-bddf-4ac7-be98-fd9029f56ee4"
            }
          }
        ]
      },
      {
        "id": "edb717b8-2fbf-4a09-be49-f2fdc99bbd36",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a458f7bc-213a-46a0-b2d4-d768bf1b676c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a881ddad-9bcb-4b4f-af83-3034e76decda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cde2626-58fe-4b45-9009-4dc9d62ee535",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69cfc08-10ce-4bc0-a956-b5d080d9588c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee405a6d-771d-4030-8ac2-764865f22c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e988afe8-96f7-40f9-a6c6-ce9d43fa57bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c43d77c1-9ee3-42cc-b35d-9e94d1e11088"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d2fee4-1a02-4426-b240-9ae338abcf5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5d8e944-f59b-4b8b-9af2-29a4b2b3eab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "355172b8-fe63-482e-9818-2267c39cb146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "318a7f1c-3b48-4fd0-8cb2-7ba8937a37f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb04a78b-e436-4936-bc91-765afbfb9be2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "904cbd7f-c11c-48bb-bb36-714b201a88cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f2c054d-68d9-45e2-aab7-5eeea11fd349",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a62e42e3-4f51-47aa-8707-d94c3ac64842"
            }
          }
        ]
      },
      {
        "id": "7e4fa189-f2a2-4eb1-9cd9-f016842ee3e1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1b4d824-95eb-4d46-b388-33501cdf60d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13389dab-b219-4dae-8d17-a033fca2e43d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c40fbe00-9661-4af4-95fb-7b0870c69f47",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f91ffa-51a3-4b0f-b36f-331a5500f797",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee6d5553-1153-4648-9cd2-a26fc42e1890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d59b4d-4865-494b-b307-cacecbfaf4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc102e06-8b0e-4549-9cdb-9f5a6e9ccaf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c05f6642-bfae-4a19-9078-f6e423768276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7382dce8-cd26-4a7a-8c09-322a03177e76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e648de7f-de1c-417e-8326-1a20921faaab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88daf2d3-d4c8-42dd-bd9a-118e5d3ac90d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e63991a-b590-4f03-b0bc-ce189f954131",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dca93d39-111c-46bd-878d-d723f944181a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dab6032-2ab8-4b82-9567-cc6134151d18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "368a03d6-da8d-4f84-87ac-fef9d123a796"
            }
          }
        ]
      },
      {
        "id": "bf2f411f-4288-4d3f-ad47-4d7b90eb5c54",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "846c4393-f3e0-4b55-9ec2-8d8bfdec717b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dca7328e-d407-449a-b51b-c55d5171f1d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27afa3b4-3a81-4f7c-acb3-611cb441bb9d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02286477-cfe4-4f2a-82e1-cf1d896790c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dde51f4-116a-4e19-9c8d-d01d67976b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4961595-26f8-41fb-b326-10aac5b1f7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "882d9c31-08ee-44a5-af9d-f8ba4bf3bfab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da70653f-12ea-4e8d-8dda-d1e4214380ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ecee0f-2dfd-441b-b807-088f196d551c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a25729c9-c0dc-49cb-82ef-cc56dc1718ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9ec12dc-2deb-4db4-8d73-7bc84d1e0132"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "730c52a4-902b-47b0-bb9d-a08de4f55b9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b82742cd-71e2-4676-a1ce-ad6007ff418b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48cc4c89-1b18-4d30-ab6d-2f72c4bb9691",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c1f911d-4c27-467f-98d7-74500a58989d"
            }
          }
        ]
      },
      {
        "id": "dab7bf70-5836-4fb7-ad82-3c24c6869d7c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f35ba8d-cc5d-4173-8245-23b74a38cbaa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43f66f7e-7dab-4452-ba77-5d3eed996c3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b06b53e9-7e05-4200-9cb5-bf15d8c8fa81",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6968bca5-776f-4c66-986a-ca642c6c729f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deb0d822-9565-4baa-82aa-08c7af783368",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.01056338028169,
      "responseMin": 18,
      "responseMax": 479,
      "responseSd": 30.662001551092867,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694737989238,
      "completed": 1694738010928
    },
    "executions": [
      {
        "id": "88ef4077-22b2-4929-b18b-aa8017450de4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c7a193f6-0c91-48cd-ae9d-0e4fa27457ba",
          "httpRequestId": "32427f2b-98ed-49e2-ac8a-e823183b00e1"
        },
        "item": {
          "id": "88ef4077-22b2-4929-b18b-aa8017450de4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fec779fa-6761-4c76-ba2e-7493d8fd511a",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "6088e969-7608-42ce-ad3d-99a6a8d4dc46",
        "cursor": {
          "ref": "b7b4037f-ef25-4dbe-a1fd-1591624dc01b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cb5ff13a-0371-4a03-b0d2-1eeae5907dd8"
        },
        "item": {
          "id": "6088e969-7608-42ce-ad3d-99a6a8d4dc46",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2754b3e0-1887-4d5b-8c13-c803e4673595",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "1a95d5ae-bb03-41cf-84c5-777f3e99e83a",
        "cursor": {
          "ref": "561e39da-a2ab-46a9-afe3-ac6ba8d345cb",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d5c66165-fe80-47fd-9648-2aebc0cae0fe"
        },
        "item": {
          "id": "1a95d5ae-bb03-41cf-84c5-777f3e99e83a",
          "name": "did_json"
        },
        "response": {
          "id": "0fe51210-8aeb-4601-af7d-b92526a7aa06",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8bc24-16a0-4db8-b3fc-427669a57696",
        "cursor": {
          "ref": "aedfddca-4fea-498a-ac2a-861b5231e5c2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85f62a43-f35c-492f-be23-e35ce85d4709"
        },
        "item": {
          "id": "6cb8bc24-16a0-4db8-b3fc-427669a57696",
          "name": "did:invalid"
        },
        "response": {
          "id": "bcc931c8-bcd7-41eb-ac2a-5fa30768ebdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8bc24-16a0-4db8-b3fc-427669a57696",
        "cursor": {
          "ref": "aedfddca-4fea-498a-ac2a-861b5231e5c2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85f62a43-f35c-492f-be23-e35ce85d4709"
        },
        "item": {
          "id": "6cb8bc24-16a0-4db8-b3fc-427669a57696",
          "name": "did:invalid"
        },
        "response": {
          "id": "bcc931c8-bcd7-41eb-ac2a-5fa30768ebdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47f16bc-bc5d-496b-9518-5873c019f113",
        "cursor": {
          "ref": "fcf14b33-b0a3-4e34-a8e6-3e03599e8320",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4d31e638-5d23-4180-ae8f-a3b247ebd4d4"
        },
        "item": {
          "id": "e47f16bc-bc5d-496b-9518-5873c019f113",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8b3a6049-f55b-4ebf-b3ce-29215a338bf0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19212f-de62-4066-bb96-235818992ead",
        "cursor": {
          "ref": "4ed01425-ae6f-4bbb-8e72-cbcfa79a70f4",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d86b39b-ecc5-4403-8180-31d940e64249"
        },
        "item": {
          "id": "5d19212f-de62-4066-bb96-235818992ead",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ed22200-81cf-4eb3-afff-229bbb6a7641",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b06db65-c5f5-4a15-880c-891fd682ebc4",
        "cursor": {
          "ref": "6092e342-ecb0-4b52-ade7-a7209fec095b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20594b13-3e30-4b66-bf50-4b781f6e0c3d"
        },
        "item": {
          "id": "8b06db65-c5f5-4a15-880c-891fd682ebc4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2800db12-9d51-4fb1-882e-b310aca25c7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf5083a-3b1f-4dc3-8f83-7ebcfe604e95",
        "cursor": {
          "ref": "a0fc1d1f-7c84-4852-96e9-db988a92e129",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1ac8650-94a7-48c3-8357-05bc821f1431"
        },
        "item": {
          "id": "fdf5083a-3b1f-4dc3-8f83-7ebcfe604e95",
          "name": "identifiers"
        },
        "response": {
          "id": "ecddbabd-0fd9-45ef-8a9a-cb64e57d588e",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f13b388-aa21-45bd-bb59-05c13b60e030",
        "cursor": {
          "ref": "e03ab5ea-ce41-4986-ad5c-8b83b40c8955",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4628760c-da2c-42b5-b984-5c64f19906ff"
        },
        "item": {
          "id": "1f13b388-aa21-45bd-bb59-05c13b60e030",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e216d28c-27be-4094-acc7-3a1ad0ce46e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7647a841-8b50-4034-a9e8-5d414f88e933",
        "cursor": {
          "ref": "b9c96b3b-e6b4-455c-992b-9de494a36d1e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "37a0a351-0975-4f27-91ef-0fba2ee64a6b"
        },
        "item": {
          "id": "7647a841-8b50-4034-a9e8-5d414f88e933",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c414d60a-a4e2-4f0d-9e01-3cbbd2bf86d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49660864-0dee-4479-81ee-32b4b0fe0dbd",
        "cursor": {
          "ref": "949b6fdf-b654-46dc-8738-65c365de0434",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7e5701fa-fdc2-4426-9d3e-5082bde9a8ec"
        },
        "item": {
          "id": "49660864-0dee-4479-81ee-32b4b0fe0dbd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fbb50ee4-ff40-4548-a03c-ee71a5407dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b19c8da-4a20-4e78-b00b-a7b44f22eb30",
        "cursor": {
          "ref": "d3295335-5277-4dee-89cf-dce380f46c4c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4974b16b-fcd1-4651-aa10-2b3af112e687"
        },
        "item": {
          "id": "0b19c8da-4a20-4e78-b00b-a7b44f22eb30",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "39c33ebe-ec5e-447c-8201-d3708f4d82e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793dc43a-43f8-412c-8fca-579491e99501",
        "cursor": {
          "ref": "19a5348d-c7b5-41b1-9844-7c7324ff2f78",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5fffb0b7-cd91-47a8-a9f0-c7be19f9510c"
        },
        "item": {
          "id": "793dc43a-43f8-412c-8fca-579491e99501",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f063da2-35ce-400d-9901-89b7ade1429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df35ca1-df66-4152-9b41-fdd6c8955b44",
        "cursor": {
          "ref": "961e3e77-7c60-4a37-85e0-c739909275e4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "284ada5b-73d9-4724-a334-078ac75ab004"
        },
        "item": {
          "id": "5df35ca1-df66-4152-9b41-fdd6c8955b44",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "61cf0577-3fc9-41c7-8041-98bd76885ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03340a9-799e-419c-b57a-aff2d844bcbf",
        "cursor": {
          "ref": "fa9a2640-5d81-4584-9625-9b7fd1ddb540",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "43c7fd39-037f-402a-a60f-9ee2c957241e"
        },
        "item": {
          "id": "e03340a9-799e-419c-b57a-aff2d844bcbf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "87139c15-ed08-4cb0-8d20-a52be22e7733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cdfa31-6025-47ee-bdb1-30976d4322c9",
        "cursor": {
          "ref": "9714302e-d0e0-4855-b6c5-0a8f3a0fef11",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3b847432-e2da-48d9-8d67-44381375014d"
        },
        "item": {
          "id": "71cdfa31-6025-47ee-bdb1-30976d4322c9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "34160711-2427-4e0e-be29-4716aed47fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6afbbe-6be6-43d9-986e-52f99e26b01e",
        "cursor": {
          "ref": "c70c3c24-7cc0-4ccc-84ec-4984207d09cc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "abd384e0-a892-411b-8ee7-47adc8f7a02b"
        },
        "item": {
          "id": "ab6afbbe-6be6-43d9-986e-52f99e26b01e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f6a877d-1fce-451f-bbef-6c69910e1be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c25fa9-262b-4927-979f-d6e76d4fd331",
        "cursor": {
          "ref": "dd482875-457a-4c1c-9453-3e2b87b28e2c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed265036-3501-4aaf-b022-31f093f22d80"
        },
        "item": {
          "id": "e6c25fa9-262b-4927-979f-d6e76d4fd331",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3b221e71-2cbf-4456-8c64-60d2824b203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb636df4-cc02-4e7f-8d6d-e1ce0af4527e",
        "cursor": {
          "ref": "4f1d5532-c287-4135-a012-2ce31c7d3d89",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7b9415a-9043-4ce8-8471-fede0b49577c"
        },
        "item": {
          "id": "cb636df4-cc02-4e7f-8d6d-e1ce0af4527e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0f995662-26eb-4d3e-a60f-8ab6612262a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cb2382-3119-46a3-be6c-d464bb7c2528",
        "cursor": {
          "ref": "d6bb3f0d-4b95-4d38-975e-f40a29dc536e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c6dd4b00-a462-406e-8533-3c5393f45763"
        },
        "item": {
          "id": "c6cb2382-3119-46a3-be6c-d464bb7c2528",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c610beaf-9d04-4568-b50f-da7cb2af8232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1332b548-24a5-4111-b692-194b8d421327",
        "cursor": {
          "ref": "2eeabac2-861b-44f2-a4ac-6ddcb25dbc2e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a7af017d-bc9d-400f-91e0-253af1d68b93"
        },
        "item": {
          "id": "1332b548-24a5-4111-b692-194b8d421327",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4e4ee22e-dc27-4f7b-a830-7957e4564cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb0007c-c07d-4a90-b63c-ae8c2790dd3d",
        "cursor": {
          "ref": "5e5c973f-5c50-4207-877b-50078b3a8d31",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1686983c-384f-4872-8b56-00c0e4056eb6"
        },
        "item": {
          "id": "feb0007c-c07d-4a90-b63c-ae8c2790dd3d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b0d6c83e-1bd3-4850-bd99-006e96956a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d3879a-4059-4732-87d2-d74b1f5d9a6d",
        "cursor": {
          "ref": "87d1cc9b-a837-4f98-814f-681d5c06e8e6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dec1860a-4e6a-4787-9835-8a1f3a89fe9c"
        },
        "item": {
          "id": "e0d3879a-4059-4732-87d2-d74b1f5d9a6d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "40c13e8e-aa5d-4f41-ac4f-42c6055b8db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd1fc4c-4a02-4d52-a910-e7dfa6e057bd",
        "cursor": {
          "ref": "c172d73b-7693-4eb1-aeff-27e96521a3a3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4f2482ec-9518-45c3-981a-e07b52596d86"
        },
        "item": {
          "id": "bbd1fc4c-4a02-4d52-a910-e7dfa6e057bd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "06c12c34-685e-40b0-b82d-732b2fea3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9239e8c-3b0c-45cf-a02b-2e3a0f7e2bd5",
        "cursor": {
          "ref": "8a298694-53dc-4c34-91a0-003cfd000f26",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4876efda-1722-4d46-9320-69ac191f2a04"
        },
        "item": {
          "id": "a9239e8c-3b0c-45cf-a02b-2e3a0f7e2bd5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dfa52539-8d75-4c15-85ec-75bbe3c8aa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b042cc2b-be96-462a-9993-0d30e0e43119",
        "cursor": {
          "ref": "8fd8cc2c-2c04-44cc-9bd1-fae2d0cacf29",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f33c67d6-0dc6-4fa5-8cac-9cdfa6a7947b"
        },
        "item": {
          "id": "b042cc2b-be96-462a-9993-0d30e0e43119",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ffd4466e-4dc8-4a03-b4e4-38e1c63c7a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3437620-d7b3-4ee8-90fb-52f2563d7287",
        "cursor": {
          "ref": "1564d09c-ed72-467c-bdfa-df45bebc23ae",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e6b47969-bae1-44af-a6cb-98234a61444d"
        },
        "item": {
          "id": "a3437620-d7b3-4ee8-90fb-52f2563d7287",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ad9c1606-c3db-404e-b664-21e1bdf08c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7efe44-3bed-46a3-beff-df196c8bc386",
        "cursor": {
          "ref": "47e0e95a-f3b2-4d1a-a924-fec13dfee939",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c2e587c2-c564-44cf-8b4c-a06204ca1a8a"
        },
        "item": {
          "id": "1d7efe44-3bed-46a3-beff-df196c8bc386",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f13e67e2-bef0-40fa-8b59-f45610280688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454b7971-be18-4d12-86c3-f6e2d6bfa38c",
        "cursor": {
          "ref": "bb6c1f60-dac5-4b3c-97d3-319c28b10799",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c3c38e2-5c0d-4d91-a09f-afe5360fd1b9"
        },
        "item": {
          "id": "454b7971-be18-4d12-86c3-f6e2d6bfa38c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "50701cc9-71ce-49b1-966d-a5b5743397a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c60e7a-e1d9-4e1a-b584-df5a95f803b3",
        "cursor": {
          "ref": "4b9851a6-709f-48df-bbde-b62fe25e4491",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "759f9b67-bd7d-4b51-8918-13f20f0d1ee0"
        },
        "item": {
          "id": "29c60e7a-e1d9-4e1a-b584-df5a95f803b3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1cf884d2-556c-4b8a-bdac-df817bb1acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c02a22-78cc-475f-9d55-dbdd4a2047ea",
        "cursor": {
          "ref": "73a2bd96-10be-4c0a-8f50-b489e7d81fec",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "668df647-4ee6-4c71-9bcf-7c938a1d2d9c"
        },
        "item": {
          "id": "d7c02a22-78cc-475f-9d55-dbdd4a2047ea",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ee901077-7e0b-48f1-baa3-82878c73295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27305a4a-4c0b-4aef-9d9d-f054a586e65b",
        "cursor": {
          "ref": "d9eb377e-52cc-4152-8230-c55d45e9bd78",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "141feee5-edcb-40b6-9350-06a1c7f20373"
        },
        "item": {
          "id": "27305a4a-4c0b-4aef-9d9d-f054a586e65b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "107d924d-a1ce-442c-9433-2361f031d706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac24242-cce2-47fc-9c9c-74976202b47b",
        "cursor": {
          "ref": "fbba1928-ea0c-42b0-8307-d41371b90a76",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f79a4351-3b51-49b1-8d65-60d2fd440252"
        },
        "item": {
          "id": "2ac24242-cce2-47fc-9c9c-74976202b47b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dc5e7e3d-9ea3-4b96-ba77-2fdb29e6abba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb19172-bb69-409f-afa6-f1b70df8eb32",
        "cursor": {
          "ref": "cae80035-e478-4dc7-9769-f8a135661362",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "52369dac-d965-41cc-b9b2-ac119af3ae8c"
        },
        "item": {
          "id": "feb19172-bb69-409f-afa6-f1b70df8eb32",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "048952a7-0040-4c37-b72f-3f38e6335df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c112e27-adf6-4325-a74e-384f2a659bfe",
        "cursor": {
          "ref": "9e4cca37-dc30-4f27-83fb-0bab184fe6ca",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ade3ddf5-66be-4522-91b9-81cff85ee9eb"
        },
        "item": {
          "id": "2c112e27-adf6-4325-a74e-384f2a659bfe",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a75455ae-3c4b-406a-b94f-2e0fd5ba31ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3822e1bd-5e68-495a-adff-b2314ef35b19",
        "cursor": {
          "ref": "0ca7e0bf-ebbe-4a2d-846e-35ff56bab799",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5a682f6e-0210-47d5-816f-af7936093fdc"
        },
        "item": {
          "id": "3822e1bd-5e68-495a-adff-b2314ef35b19",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "150691b9-0050-4ec8-84b2-1497820c07a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1ea29d-8015-4710-ad04-944bf56f014d",
        "cursor": {
          "ref": "d2e533d7-1bc8-4b71-a6ef-038627a5f421",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "99b6a021-eba8-463e-b6ac-7034fbcb22ee"
        },
        "item": {
          "id": "8d1ea29d-8015-4710-ad04-944bf56f014d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "190db58c-c0e2-4200-aa19-8f2b285e487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208d7d31-5f3a-456f-8c58-a3472ce22dc5",
        "cursor": {
          "ref": "d1c6c533-b59e-425c-9d02-0567bd073b31",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5d7afeed-abd1-4063-81a2-f354f5c39348"
        },
        "item": {
          "id": "208d7d31-5f3a-456f-8c58-a3472ce22dc5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "933cac0c-7591-441d-a6d6-f3ebe6d36b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bf0685-087f-4559-90bb-a54f0b0c918c",
        "cursor": {
          "ref": "5a4bc376-9293-4d4a-9659-cfc8229b3c95",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f28191d2-68fc-4cd0-9a67-48f6c875515c"
        },
        "item": {
          "id": "c8bf0685-087f-4559-90bb-a54f0b0c918c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4dd884d5-a636-4658-8e37-6e204bc3d31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9667f560-5b55-4faa-a74f-72b15c82c163",
        "cursor": {
          "ref": "95f5974b-36e5-4116-bc03-1b224ddb446b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28e1d92a-9f12-41b5-85fe-cc043e76d1a1"
        },
        "item": {
          "id": "9667f560-5b55-4faa-a74f-72b15c82c163",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b7393e70-2b87-4f98-861e-81171d9e1f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fa1b75-7111-456f-b22e-c1f30414999d",
        "cursor": {
          "ref": "8d926355-84f7-4140-82bc-ec8da5737216",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3d2661c0-1749-4cd7-bba1-5c5365351211"
        },
        "item": {
          "id": "a3fa1b75-7111-456f-b22e-c1f30414999d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b985d24f-6f5e-4302-b48e-fbcd42e2748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6f371c-68bd-4e55-9c40-493a8ba9a64b",
        "cursor": {
          "ref": "aede2b9d-35b2-4736-89c4-644b01cb57ff",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0f35c45a-325d-4ebe-a020-19a3de8f61df"
        },
        "item": {
          "id": "0c6f371c-68bd-4e55-9c40-493a8ba9a64b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "40008976-6539-4f88-81e0-6eced9eb4bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106a5457-10d3-4578-adaf-169682d9a218",
        "cursor": {
          "ref": "a0b1ecd4-7402-42ad-aeb4-6992ff98cc20",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d98ac9d6-b745-4d50-92be-eb8b701ca7a9"
        },
        "item": {
          "id": "106a5457-10d3-4578-adaf-169682d9a218",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "41dbe496-a548-4de4-9b98-1688358a3d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd28f65-ea6f-4963-99a9-e694fb134452",
        "cursor": {
          "ref": "5419dfda-e62b-4532-b5a8-16f9627886cb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58461486-6e7a-4fc7-bad8-40fb392e8267"
        },
        "item": {
          "id": "bcd28f65-ea6f-4963-99a9-e694fb134452",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8ce20123-c174-4967-a1b1-c1424cb265a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482080e-86e9-4455-b3fe-31b76eff3b07",
        "cursor": {
          "ref": "31828d1d-5229-48d1-93dd-dc6cce99eca3",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b2e52568-23bf-40b3-bf5e-46b92e2a3e87"
        },
        "item": {
          "id": "c482080e-86e9-4455-b3fe-31b76eff3b07",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e16d204b-ca2b-49ca-9efc-2c72a2156bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0485d2-0b81-47c3-8589-c603971c679e",
        "cursor": {
          "ref": "7d2081ce-b77f-454e-9787-cb41d51d9587",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "61c68a2a-ea5b-4262-af01-477d3f739c2b"
        },
        "item": {
          "id": "0d0485d2-0b81-47c3-8589-c603971c679e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aaafdff0-f611-49de-8d0b-086895f53355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0989aa2a-1e32-4fb8-90b6-65b2d25ae674",
        "cursor": {
          "ref": "16f69742-61f1-4eaa-99a8-ae33630965ae",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9a6f9ab5-ca98-45b9-a9be-4ba8518b1385"
        },
        "item": {
          "id": "0989aa2a-1e32-4fb8-90b6-65b2d25ae674",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e6a208cd-9c27-44b0-8633-a4f068090527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bc4c0a-f1fe-47b4-bb3d-b0ada01075a2",
        "cursor": {
          "ref": "3a163bfe-4cf7-4f42-80cb-b755ac846121",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4decb916-b886-4fda-9f6e-45dc9646569a"
        },
        "item": {
          "id": "80bc4c0a-f1fe-47b4-bb3d-b0ada01075a2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "596de771-6e5e-4c7e-8aee-e58d9851264a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba5a4a5-9d13-4c99-9681-374879cc024d",
        "cursor": {
          "ref": "9ab7469c-3fc5-47d2-8210-4571c60e8dea",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8e2fb91c-a540-4d11-aa69-b1b592a04958"
        },
        "item": {
          "id": "9ba5a4a5-9d13-4c99-9681-374879cc024d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "be9637cc-cb5c-41ad-a848-316693a38ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6666bac8-1ec3-4ac2-a998-95b0eae93ed4",
        "cursor": {
          "ref": "6e08ba23-a202-4be9-b068-d527a543cb1f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a9f5f91-302e-49a7-b17c-67f882a2fb06"
        },
        "item": {
          "id": "6666bac8-1ec3-4ac2-a998-95b0eae93ed4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "892d2808-e0ac-4cb4-a7ff-68f76ba01659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6580a6ef-2b3c-45c6-8214-f4a62746f5b0",
        "cursor": {
          "ref": "05b7f851-2288-4666-98ea-25fa5b0ad61a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3fff519a-7ab2-4d5c-a0da-eb9671672e9b"
        },
        "item": {
          "id": "6580a6ef-2b3c-45c6-8214-f4a62746f5b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da389976-ae21-4588-b910-643723d20c06",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee15ac3a-4ba5-4f23-8827-3d5871509da1",
        "cursor": {
          "ref": "ea1f385f-10ee-4c81-a79b-1f5b0c7e428a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b7c8656-9fdf-4f46-9615-be60fbc506ef"
        },
        "item": {
          "id": "ee15ac3a-4ba5-4f23-8827-3d5871509da1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ede75e28-88c1-439c-af84-d87dd575e537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa4d94a-b612-46e5-b41d-2f4dd0b7dbfc",
        "cursor": {
          "ref": "1e7cc5bc-aa61-4664-aa98-e233df76e3a4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c975430-9b25-4b41-95df-b0f106161777"
        },
        "item": {
          "id": "8fa4d94a-b612-46e5-b41d-2f4dd0b7dbfc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e966e966-5061-4ff1-a88a-54750698b7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154aff02-d3bc-44d1-a761-71e6429dc5b6",
        "cursor": {
          "ref": "f7ed2cfd-8bea-4cdc-904c-ac9857233ddc",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7628e541-a63c-476b-9ac6-4eb4a533fc15"
        },
        "item": {
          "id": "154aff02-d3bc-44d1-a761-71e6429dc5b6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d1587c61-94a7-4c5f-88d8-433fe3aacc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a571873d-bce5-418a-b653-3d5c06fb8c0e",
        "cursor": {
          "ref": "fba94555-275c-4698-bad2-97df905f0330",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cfe9e308-9df1-41f6-8bec-ce48cec94a3b"
        },
        "item": {
          "id": "a571873d-bce5-418a-b653-3d5c06fb8c0e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8b4a1cc6-0976-4a1c-91ae-4e2e4d835129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fe0b00-f1e1-4992-ae78-6724f1e5b54e",
        "cursor": {
          "ref": "f1418aaf-4bb4-4a5c-a007-66a65dc1be63",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d83d3758-3c6e-4677-b03d-e23023f04aa1"
        },
        "item": {
          "id": "f9fe0b00-f1e1-4992-ae78-6724f1e5b54e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "822252ed-2621-4c59-8898-6553a0ee51a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd55870f-c65f-4a21-9ce2-27082df6625f",
        "cursor": {
          "ref": "05fcaf03-47f6-4290-a89e-44652f49c6b7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "536fa3c7-e38e-427a-995d-513f155bc57f"
        },
        "item": {
          "id": "bd55870f-c65f-4a21-9ce2-27082df6625f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a1b45b0-4d76-441f-bbe8-4c0ae6d16600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5eb2f4-af68-468f-a983-28175e00badd",
        "cursor": {
          "ref": "93be878d-da5d-4074-9c1a-387a78dc2046",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "42ad3df6-1f85-4399-8e22-45128d0918d7"
        },
        "item": {
          "id": "9c5eb2f4-af68-468f-a983-28175e00badd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a2a80f1-d3bc-4eea-9868-aa713f1c5f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e090ba-0dc1-4866-bf10-a18064c209d0",
        "cursor": {
          "ref": "6ad07522-8f81-4694-9a43-2c016c528a91",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ea790dd2-cbbd-4277-a787-caca0734c697"
        },
        "item": {
          "id": "67e090ba-0dc1-4866-bf10-a18064c209d0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bdb4c9fc-7c58-409a-8da4-afd5b4f502d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4a06d8-6ae1-42b8-b321-80632b304ad0",
        "cursor": {
          "ref": "3fc474e9-b5d0-43a5-a7ef-3b6b4bf1b313",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5737b17f-d8ed-43a4-beab-76d95d41f8d0"
        },
        "item": {
          "id": "0d4a06d8-6ae1-42b8-b321-80632b304ad0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f4295e0d-fc53-4720-9b18-397240e18c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5d95ac-2d30-4506-966c-5f53c855d0cc",
        "cursor": {
          "ref": "4f9af0fe-42fb-4dfa-8e8f-ceacab251ae3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d37d1b9c-a518-4081-8cc6-e37908ef7691"
        },
        "item": {
          "id": "ba5d95ac-2d30-4506-966c-5f53c855d0cc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c1859732-2afb-4b52-9d38-456f78bdb16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54023a4-c4f6-43e6-9871-53c524c7b3f9",
        "cursor": {
          "ref": "f3694087-0ed3-4ed6-b4fa-baa8fec643df",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "df633987-99d6-4936-a7d0-d51942a3641f"
        },
        "item": {
          "id": "c54023a4-c4f6-43e6-9871-53c524c7b3f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "155d185a-10b7-446b-8d06-b70a5eb34032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0bca19-a5e3-438b-bfcd-abe06c6c84ec",
        "cursor": {
          "ref": "d3a3a4f9-e216-4519-9425-bc6bc753defa",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ec098305-a9d5-409a-8390-96a0c4be97e4"
        },
        "item": {
          "id": "fc0bca19-a5e3-438b-bfcd-abe06c6c84ec",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fef67f52-6b62-4815-b2f4-5e67c86886e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbfe710-4c94-4734-ab29-65c2179f2395",
        "cursor": {
          "ref": "24f0231f-0694-4f81-8462-71257588130e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8207b5e0-ef9b-4356-8a3b-9ba1b7fee320"
        },
        "item": {
          "id": "9cbfe710-4c94-4734-ab29-65c2179f2395",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e209ca45-4479-4573-855b-966ade437e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad81065-3b2a-4b09-b589-3cba06fc15aa",
        "cursor": {
          "ref": "6cd8f923-ae52-4542-b507-1ad509f2bdc0",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1f062d77-149d-4286-b358-7dd85e304159"
        },
        "item": {
          "id": "dad81065-3b2a-4b09-b589-3cba06fc15aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6e3c318c-21d9-431f-a822-b58edf386267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefd0953-56e1-4477-90c6-257324ae4a3b",
        "cursor": {
          "ref": "43603754-d881-401c-b29b-dc554bfd2016",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2034f9a6-0e3f-457f-8070-6097bd000ae0"
        },
        "item": {
          "id": "cefd0953-56e1-4477-90c6-257324ae4a3b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a66bc548-f7bd-4e8e-b523-896b9781e150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f355e4e-a1c7-4e7a-b774-eaf19a66fe6a",
        "cursor": {
          "ref": "b1d8de05-8d5a-4f75-aedf-0be2af2d3947",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "23b2a0c1-b5cc-4af2-b49e-c4e8b445657a"
        },
        "item": {
          "id": "4f355e4e-a1c7-4e7a-b774-eaf19a66fe6a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1acba7fc-2891-4d92-90dc-401987b2c2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e079811-0b7a-4420-89d5-a6ffc3629160",
        "cursor": {
          "ref": "884f873d-520e-4d50-a4d8-c9b5f24d3470",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5d6a2e77-7e3e-4ef2-9a49-60b98c47d024"
        },
        "item": {
          "id": "7e079811-0b7a-4420-89d5-a6ffc3629160",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8906acf8-44e1-495d-b45b-2178d041afa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386f44d-4161-4016-94f3-198808afcd7d",
        "cursor": {
          "ref": "8ef4e546-523a-438f-a031-9db92f692fee",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "73ca0940-d793-470b-bef3-b7841b9b755d"
        },
        "item": {
          "id": "6386f44d-4161-4016-94f3-198808afcd7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e28de75b-f143-43bc-9ce0-c7c6d8740dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16b1e2e-80bc-4405-b622-3cf953f49e74",
        "cursor": {
          "ref": "80cad156-a34c-485b-8e53-17a801183244",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0ff44980-6834-4616-83b2-c645139aa678"
        },
        "item": {
          "id": "d16b1e2e-80bc-4405-b622-3cf953f49e74",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ef937d30-44cb-41df-ba8d-08381a7a59dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cbb35b-cd4c-4bce-ab2b-aecd45d466b4",
        "cursor": {
          "ref": "9ec5a5e8-f92b-464f-beed-cb59b9bb17a8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bd211de0-5385-4446-8e47-b771c14b7087"
        },
        "item": {
          "id": "74cbb35b-cd4c-4bce-ab2b-aecd45d466b4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e4a613dd-6f28-4c3e-b979-73c86d485122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7807916c-d0e4-4c87-927b-8459b1806860",
        "cursor": {
          "ref": "2ed2dbcc-85e9-407c-8610-bd52dae3462c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "85c3f4d0-bfc1-4b19-a9ae-83672e264789"
        },
        "item": {
          "id": "7807916c-d0e4-4c87-927b-8459b1806860",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e16920bd-01d5-4bd8-af51-28bfb73968b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ded6b3-69ae-4453-9db2-6fdd5956c34a",
        "cursor": {
          "ref": "e2e7ae42-1337-4b2c-8bc9-60eb8f3984eb",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d29d354-e482-4a22-aba4-a55385ee646a"
        },
        "item": {
          "id": "b3ded6b3-69ae-4453-9db2-6fdd5956c34a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d4d9f9ff-67e4-474e-b585-20e7743ff07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945a901-0471-4d65-95e1-4dba76a3794d",
        "cursor": {
          "ref": "2ce36457-171e-4484-9f8b-83b3a9718218",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "39f45d2a-6688-4fa4-8361-256704e380aa"
        },
        "item": {
          "id": "7945a901-0471-4d65-95e1-4dba76a3794d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3626b808-c3ad-4baa-9802-b428d5b25d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61a1031-adfa-4759-a71a-4137dbe41eae",
        "cursor": {
          "ref": "1958c289-ea21-4f92-b847-547fbffb0b5e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95732d61-22b1-47da-8099-60e2af8b0c67"
        },
        "item": {
          "id": "c61a1031-adfa-4759-a71a-4137dbe41eae",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b77ab9c8-5b7b-4a4e-a7cb-976aba34cf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bc8d76-0218-40c5-b5c6-b67e59771984",
        "cursor": {
          "ref": "1bde1f99-84fc-40bb-aaa3-fb98901c822d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "43defd63-d65e-483f-91aa-f5c4448678c9"
        },
        "item": {
          "id": "82bc8d76-0218-40c5-b5c6-b67e59771984",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0dee42e3-11db-4c85-9018-8fa64d68450d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454260ef-e037-4acb-b8fd-da5ecb6e6439",
        "cursor": {
          "ref": "e75c0f2b-7e24-4145-bb6d-a3a52bf7b4ce",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "20ce5a25-7b59-4f79-bb43-7615fbd3e1ae"
        },
        "item": {
          "id": "454260ef-e037-4acb-b8fd-da5ecb6e6439",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8d0846ad-06c8-4cda-92fe-92611e7be4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afee3220-e5f8-411e-ac56-834db708f378",
        "cursor": {
          "ref": "1fb2ef98-5a8d-4949-90b7-6ca289f79913",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9c0eaa1d-efa7-4b7d-b992-2e93ed1a191e"
        },
        "item": {
          "id": "afee3220-e5f8-411e-ac56-834db708f378",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ca957682-dfb0-4165-a7e7-44b90286a7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc768cae-1f8c-400d-831e-3382ec21afa8",
        "cursor": {
          "ref": "398cfd4b-44b2-43fd-ad07-129bf80b4300",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "775da323-e316-4a42-9321-c61a82d456ed"
        },
        "item": {
          "id": "fc768cae-1f8c-400d-831e-3382ec21afa8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "63d79a0b-6656-4b13-b740-4e92c3265c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b5fa30-fc44-4ed7-b010-8304e3e8f353",
        "cursor": {
          "ref": "2aad6360-3fee-4cb1-ae73-82cdd795a4da",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6af86135-fc3c-4bc1-b2ef-4f546cfa7335"
        },
        "item": {
          "id": "75b5fa30-fc44-4ed7-b010-8304e3e8f353",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0609f2e7-568a-43c3-a088-e2778166f5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4c5fce-1e30-4941-9667-254fa00f92df",
        "cursor": {
          "ref": "80042b87-20f9-4446-90c4-24a676a62dc9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cd24e422-dadc-419e-92b2-263e944274fe"
        },
        "item": {
          "id": "4c4c5fce-1e30-4941-9667-254fa00f92df",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9c783c80-6d06-46be-ad0e-e183be5f0c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea92552-5c17-44f4-a782-6e823825f105",
        "cursor": {
          "ref": "57d611d2-ee48-4e2a-837f-c49b8c301272",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a36006c2-7f7b-498d-86b8-d6ff4610854a"
        },
        "item": {
          "id": "6ea92552-5c17-44f4-a782-6e823825f105",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "128f2948-d3cf-47c0-8b55-277cadea202b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68913985-7977-4641-a5ad-6de844a61bae",
        "cursor": {
          "ref": "23773cd0-b7de-4c7e-97b0-35b7a96f36b3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "67d44ef6-09ed-4742-a57e-10517bd83fdd"
        },
        "item": {
          "id": "68913985-7977-4641-a5ad-6de844a61bae",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1e75c7fe-957a-4be8-ad7c-8f6d3d747719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af96a8c0-5fca-4917-8eee-3673df764f11",
        "cursor": {
          "ref": "27e6cedb-5828-4467-b494-a61e19dcd81d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0fb2b318-5b27-4dbd-a971-9626b6d2ef11"
        },
        "item": {
          "id": "af96a8c0-5fca-4917-8eee-3673df764f11",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e7527696-d798-4931-8413-3fcd1679f597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da650ca0-f543-4aeb-9778-b0f61a5f0672",
        "cursor": {
          "ref": "fa94db07-32b9-4e80-beb5-04a50e91f89e",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a70adfb0-dc8d-48f9-9c28-8bebb6d99cb2"
        },
        "item": {
          "id": "da650ca0-f543-4aeb-9778-b0f61a5f0672",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "28d9ff1a-4321-404e-a8a0-887525409a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88218389-f21e-4af8-be8b-955f3fa28818",
        "cursor": {
          "ref": "28361bd1-dde5-4dda-9111-8d0ed121693d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a94f1f30-e909-4e93-a49d-734a83bc82c8"
        },
        "item": {
          "id": "88218389-f21e-4af8-be8b-955f3fa28818",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6cfd8f89-7a75-4483-a2aa-f1ecd3475fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862d1c2f-3253-45f4-8930-c71297b4e87e",
        "cursor": {
          "ref": "0b6ecbcc-e2a5-4829-aabd-77e72e897cfc",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "25705fe9-d6a1-40ff-a33b-a6bb07f7fc77"
        },
        "item": {
          "id": "862d1c2f-3253-45f4-8930-c71297b4e87e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6dd96537-d232-4a6e-8ce5-40331ab9490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244bcb49-30f0-41b9-af8a-c1b9b772c395",
        "cursor": {
          "ref": "fbec0dc0-40fc-4a1a-adb5-2270516e5c35",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8f48276a-32b4-4cbf-8d51-81319655b86f"
        },
        "item": {
          "id": "244bcb49-30f0-41b9-af8a-c1b9b772c395",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "73720718-1b5e-4492-9c71-bb29d424111c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab13681a-321d-4e87-9c69-4df9e4a8ec0a",
        "cursor": {
          "ref": "453e2326-ea4e-4cef-81c7-4100fdd48a1c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "639bde9a-833e-405f-b8c0-c250b435b051"
        },
        "item": {
          "id": "ab13681a-321d-4e87-9c69-4df9e4a8ec0a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a79d94f9-aac2-4507-a14c-9668a860bc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f701a6d-0b58-4c52-82cb-f04f655ba86d",
        "cursor": {
          "ref": "f37ae9c2-bd83-4644-96a0-40f97e91f8a5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb83f667-986e-4bbe-8007-adaff38730f1"
        },
        "item": {
          "id": "7f701a6d-0b58-4c52-82cb-f04f655ba86d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "860de69d-0e78-4a83-8d44-fb14ac001fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aeb83e-b900-4523-a4d3-4dceeb4c1674",
        "cursor": {
          "ref": "ba1a6cd8-dd24-4467-a045-9a7a2f63ff5c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5b31931a-5e10-40b1-a706-84d968586456"
        },
        "item": {
          "id": "05aeb83e-b900-4523-a4d3-4dceeb4c1674",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "224356ac-f2b4-4652-8b76-2212b10e7b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655559bf-f8ff-4790-afbb-de59b808fc48",
        "cursor": {
          "ref": "1f3509b2-3df9-4f2a-9626-a529b50accad",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "da63ab70-804b-4740-9103-14157d8c58a6"
        },
        "item": {
          "id": "655559bf-f8ff-4790-afbb-de59b808fc48",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "267d00e5-ff6e-4f1f-bfe1-386f5a2b81c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01196446-75d4-4a1e-9d1c-40e1f932e366",
        "cursor": {
          "ref": "46e4c4f0-057f-4f0d-bf5b-fdf935f8c40d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ce1538ee-91b6-4e58-9b3f-df67896c3b66"
        },
        "item": {
          "id": "01196446-75d4-4a1e-9d1c-40e1f932e366",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "89574f72-19f1-4aa3-a5af-18a7e895af3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf6a2f7-7a1a-4515-b89e-f264f32b8b49",
        "cursor": {
          "ref": "571d6362-e755-44c5-b1c4-7c19bf2e6d3e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "87f78462-add1-4296-a692-a6889b642d3c"
        },
        "item": {
          "id": "acf6a2f7-7a1a-4515-b89e-f264f32b8b49",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "325cfc5b-3187-4125-b240-317f086fe939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12087931-b1f8-4cc0-b4b5-b876b14f0d39",
        "cursor": {
          "ref": "1590b5da-fda0-4402-8e0c-d41570bcf17b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "89190e97-34e5-45b4-8a15-c42e8adbc367"
        },
        "item": {
          "id": "12087931-b1f8-4cc0-b4b5-b876b14f0d39",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ffb468c-e031-40f5-a460-588ae6378664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f53fdd5-decb-4f4b-b025-a92beab28e77",
        "cursor": {
          "ref": "f1d0932c-d172-468d-b3dc-ddb55f8d4f73",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "33b1c2ec-d62e-4cd9-b5a7-c87353682dc8"
        },
        "item": {
          "id": "2f53fdd5-decb-4f4b-b025-a92beab28e77",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bc65c0ad-e238-4b1a-b4d6-1c6cfac30653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187029fd-6397-41ad-9c5a-8956b20814e4",
        "cursor": {
          "ref": "287e6c87-c1d0-4eff-b085-cdd7379ea221",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dfa3aeb-13dd-4bf9-9b6c-1a213e01e5cb"
        },
        "item": {
          "id": "187029fd-6397-41ad-9c5a-8956b20814e4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "edad936f-9599-4d81-8fe8-c956f2ab7b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b716ea99-1932-4310-ba50-0041ca319b56",
        "cursor": {
          "ref": "69ba8d0b-d7e4-4305-a22e-21affda647f9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f20a904d-a9f0-4de4-a06f-000c0abb7d8f"
        },
        "item": {
          "id": "b716ea99-1932-4310-ba50-0041ca319b56",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4dd72851-3ee7-40be-90b2-2d8c525f0307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35893c78-dbde-49fd-96f5-dbd47f082501",
        "cursor": {
          "ref": "c401b7a2-c0cb-471c-a133-6791c4ecc0b2",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "295740b2-d6bb-4b67-97bd-778779799521"
        },
        "item": {
          "id": "35893c78-dbde-49fd-96f5-dbd47f082501",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bd9a39bf-60ee-4fe4-ba23-b11992222b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2d8aab-2f7c-40f5-8b3d-80c95a5baa7b",
        "cursor": {
          "ref": "7e9d2929-0f56-4527-b9be-e6edc5b2c6c7",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b0ec702f-19d1-49af-8c08-3af1535ae83c"
        },
        "item": {
          "id": "8d2d8aab-2f7c-40f5-8b3d-80c95a5baa7b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "422b5a5f-4702-4d86-8469-ed46fdbd11ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69690a84-415c-4856-89eb-57680cc24c8c",
        "cursor": {
          "ref": "07a70e43-e295-4c58-a688-fcee4a1a7240",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4453dbbd-6bac-4e9d-ab42-892e10afb455"
        },
        "item": {
          "id": "69690a84-415c-4856-89eb-57680cc24c8c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f6eb6330-cd10-4f13-80b2-b726f0ff3f99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036ef140-89a0-49c7-aa94-184ead45f76b",
        "cursor": {
          "ref": "eebd62dc-8f1d-4013-8c0d-0d5d60389a47",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "21429043-9dd7-4945-b652-60893df5a2dd"
        },
        "item": {
          "id": "036ef140-89a0-49c7-aa94-184ead45f76b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "83bbafc1-bdf4-4ee8-987e-116b90e54388",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60a39ed-1258-4ca8-a388-77d3bf57f7a7",
        "cursor": {
          "ref": "743913f0-7190-445f-a4eb-1c8b07ba621e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7785ef03-a420-45a9-bd40-c5f3b46a92b4"
        },
        "item": {
          "id": "c60a39ed-1258-4ca8-a388-77d3bf57f7a7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fa35de54-18d9-4ea9-b9d6-e7ca2ff293af",
          "status": "Created",
          "code": 201,
          "responseTime": 194,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43baca4-992a-4bfe-b39e-239dfdbb433b",
        "cursor": {
          "ref": "935c707d-a466-40a3-a16d-42fe132ceed2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f68055f5-505d-49b0-a590-63b2b085f9a0"
        },
        "item": {
          "id": "e43baca4-992a-4bfe-b39e-239dfdbb433b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a0252e10-be06-48ec-9c3f-fb2620134a8c",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e5bbd2-d13f-4226-a1ee-a84668a82ddf",
        "cursor": {
          "ref": "79bfea65-2db6-482c-927d-0f374f90668d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "905722e1-17fd-4349-b889-8f7da4a4f743"
        },
        "item": {
          "id": "c7e5bbd2-d13f-4226-a1ee-a84668a82ddf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5d12ad3e-60a1-46ff-908b-ce45f0cf0304",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ad008f-78fe-4912-84af-3eac1bd11bea",
        "cursor": {
          "ref": "9f83f4a7-da76-4167-91bd-e6a84352fb8e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5bf68a99-87a1-4559-83a2-f540b0a9426d"
        },
        "item": {
          "id": "76ad008f-78fe-4912-84af-3eac1bd11bea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3e455403-a884-4983-8cbb-dba422179478",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3af1c70-65c1-478a-aae4-533570df00ee",
        "cursor": {
          "ref": "d6681e35-c6fc-40ab-b239-df1c28a46ae0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "580f7aa9-df7b-4ba7-b99f-fec3bf2b63cc"
        },
        "item": {
          "id": "c3af1c70-65c1-478a-aae4-533570df00ee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bc3221ee-772b-4706-992a-ef0e9bc39b15",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6754721f-f37e-4c2b-9c96-79e353939786",
        "cursor": {
          "ref": "ca93ba33-0ce3-4b36-b02f-eb8ac5e2c599",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "46626786-5f2a-4a60-af14-12d0938f3de3"
        },
        "item": {
          "id": "6754721f-f37e-4c2b-9c96-79e353939786",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8094a966-8048-4886-9bdd-81bf1456755e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82c3092-bf1f-43f8-b18f-48534258a95e",
        "cursor": {
          "ref": "277248e5-88de-4517-8f80-f0f3c5a55910",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1483e795-e0a5-48d2-b79f-d9ded7381cec"
        },
        "item": {
          "id": "b82c3092-bf1f-43f8-b18f-48534258a95e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9512e66f-9c82-48dc-9557-5c77ca72d423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841b1711-f0b2-4d9c-8051-8e6acefb7265",
        "cursor": {
          "ref": "183b6a0e-5832-4dec-b003-452ef9d2a200",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "52da5ba2-2128-407d-ba1a-3ed4845833c6"
        },
        "item": {
          "id": "841b1711-f0b2-4d9c-8051-8e6acefb7265",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6aa09f3a-8f22-433e-a640-9dfc000e636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2915af2a-e04c-46f4-8fb1-f269a3c10cd7",
        "cursor": {
          "ref": "0f2d2dd0-7bc0-47d1-afd4-1d4f82e90e04",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5acaeb4-0d27-4aba-94b9-3ab6aa81297e"
        },
        "item": {
          "id": "2915af2a-e04c-46f4-8fb1-f269a3c10cd7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1321d124-f6e8-480a-ab9f-ed8d5929eee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3395b6ab-efab-481f-a920-d7fa6086920a",
        "cursor": {
          "ref": "1d33a055-06c2-44c4-8599-de2328edd2bf",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d774e6d2-0c5b-422f-9d24-9a6f89c4d020"
        },
        "item": {
          "id": "3395b6ab-efab-481f-a920-d7fa6086920a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d85b8fd-2434-4e8e-ae43-99eb94e61f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3513d849-4379-4d9c-b5a9-dee8d1815a53",
        "cursor": {
          "ref": "29256746-1db5-4089-a55f-49e6def59e81",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f3221bae-03a6-4e48-9c4d-807456667586"
        },
        "item": {
          "id": "3513d849-4379-4d9c-b5a9-dee8d1815a53",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "19e18ad4-d91b-4bb1-93b3-9860cb08a850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63359081-7f44-42dd-9e67-13b5d030da7f",
        "cursor": {
          "ref": "5ca6fb3f-8dbb-4289-aaba-be8995a38774",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0a037d63-8c44-4bc5-9df8-bacd694ae859"
        },
        "item": {
          "id": "63359081-7f44-42dd-9e67-13b5d030da7f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6879c6af-267e-45db-8b53-eb8e55b89b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea90602a-855b-4b5c-88d5-ec3d6dc0be89",
        "cursor": {
          "ref": "bf44361e-c7fd-4e02-9822-4fb059d3370e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "74992389-049b-4882-b7de-4fbdd166e089"
        },
        "item": {
          "id": "ea90602a-855b-4b5c-88d5-ec3d6dc0be89",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "17180e97-dc2b-4ed8-9921-98932721c842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e17e162-c6a6-4810-b8dc-913fbfc52fd8",
        "cursor": {
          "ref": "dfd12f9a-344c-4384-aad3-1a0cfa57b5f3",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c4764eac-7e84-49ea-828b-b72b49dc75ae"
        },
        "item": {
          "id": "5e17e162-c6a6-4810-b8dc-913fbfc52fd8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "481873ce-34db-440f-b7a5-b239c8452711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e22b45-0198-40da-9f40-10e0f3ac90ad",
        "cursor": {
          "ref": "c1d9a243-9034-4dbd-a6fd-623730164cfd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f4ec3113-2553-4255-a4c3-594b940edad7"
        },
        "item": {
          "id": "79e22b45-0198-40da-9f40-10e0f3ac90ad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85b68220-45ee-4634-b4d1-e7c4ecd8db44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3199b9da-34a4-4acd-b02c-93ffc1ee9482",
        "cursor": {
          "ref": "cf050354-f3da-486f-a1ac-7ba3217e8630",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eebc33ed-a829-4c6d-af48-55c08ac9274c"
        },
        "item": {
          "id": "3199b9da-34a4-4acd-b02c-93ffc1ee9482",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "747aa941-64ec-4de6-99ac-fcf69dde0936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055a0317-6c8b-4ecd-80b2-ab1a958daadb",
        "cursor": {
          "ref": "ae1384a5-652d-4ed1-9d58-4c95c963fd19",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ede27cea-d075-440a-a665-bc4b01ed204e"
        },
        "item": {
          "id": "055a0317-6c8b-4ecd-80b2-ab1a958daadb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6da39f58-d597-47a2-aaa3-29bb1ca42f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e07ca-e89d-41b8-ace4-5f24729eb3bb",
        "cursor": {
          "ref": "e3b096e4-1d5c-4df7-a315-d8953a9d0cf2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dc7b0ce1-66b5-4f74-bbd7-df922da1f623"
        },
        "item": {
          "id": "280e07ca-e89d-41b8-ace4-5f24729eb3bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c19ecff9-90f4-4724-806b-9b8e6df7c850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17dc32-7c3b-4bac-980b-6d63aab7ccf8",
        "cursor": {
          "ref": "7de28d79-d27a-470a-b6f4-1c126bfc99bb",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "24734c65-d763-4fbb-9fd7-da242ce3d921"
        },
        "item": {
          "id": "8a17dc32-7c3b-4bac-980b-6d63aab7ccf8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "01c4f0e5-a9a0-4672-aa5d-0434505d7e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c205d6-4dc7-481d-8fcd-e507b50fbd77",
        "cursor": {
          "ref": "c63b3e69-de49-4109-bfcb-04d01c708fa8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9a07551b-4a79-4ddb-93e2-dcccb4e4e1c2"
        },
        "item": {
          "id": "a3c205d6-4dc7-481d-8fcd-e507b50fbd77",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a3dd1a7e-c72c-4444-a898-02fec987e632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f99d938-19e6-4216-9d3f-6d544711eec6",
        "cursor": {
          "ref": "2aa98354-0d8e-4424-82fb-dcf757004a07",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fd6d810f-057a-409e-a8f7-f1ceee8c3d9c"
        },
        "item": {
          "id": "2f99d938-19e6-4216-9d3f-6d544711eec6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eb787187-985b-4195-9bee-2d006bd3ac67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb70f2a5-eabd-4a98-a9d3-65f489894579",
        "cursor": {
          "ref": "925ac37f-2054-49b1-9b07-5e7afe6cda78",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "052c6548-37e7-4164-9c23-22f949b0a062"
        },
        "item": {
          "id": "bb70f2a5-eabd-4a98-a9d3-65f489894579",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4aa11e2-436d-43f1-8a1d-9bb750c2077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687a1f18-fc7a-43a3-8020-7491919dd1f1",
        "cursor": {
          "ref": "4307c3cf-e054-4870-a129-2f17e813a19b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "44f58371-4c3e-4904-93bd-b410b2c35428"
        },
        "item": {
          "id": "687a1f18-fc7a-43a3-8020-7491919dd1f1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "890d4689-54e3-4083-abc5-a2e0f7bb6621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa2aa6-68fe-4253-bdcf-dea9445d8e1a",
        "cursor": {
          "ref": "ce795b0a-2d6c-48b3-b0b7-be6732ffa12c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2adecd3a-2d3f-4c39-9882-d0d75aa330f9"
        },
        "item": {
          "id": "73fa2aa6-68fe-4253-bdcf-dea9445d8e1a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "82e92ba1-7d5f-4988-8e8d-0aea221bffa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada822c5-6b38-499a-8212-9f982efaae17",
        "cursor": {
          "ref": "890fdea8-cde7-4b2c-b24d-6d2677b82547",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "914bc88f-ab43-40f7-87ff-9ff7bb7cb6ee"
        },
        "item": {
          "id": "ada822c5-6b38-499a-8212-9f982efaae17",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bd9a9f6a-d487-47fa-ae56-3ac8710f1900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de892a4c-a61a-42a0-a811-8cc74c359853",
        "cursor": {
          "ref": "f646254c-745b-4732-ba97-64c91da31987",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d767d20-1f29-4b72-8f36-1453a2edf7fe"
        },
        "item": {
          "id": "de892a4c-a61a-42a0-a811-8cc74c359853",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4652625-4a22-48f4-872f-830555252848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e9532f-aa19-4f4a-8b0b-eb4c4451c921",
        "cursor": {
          "ref": "07d1d685-d064-4ca4-915d-85e36d69165f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "103feb23-a612-457d-96e2-6f83502aa32d"
        },
        "item": {
          "id": "e2e9532f-aa19-4f4a-8b0b-eb4c4451c921",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ba9c16ec-0ea6-45f5-b371-4fbbb4677e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914f1b37-9a2f-4ed7-b003-ecd63c0a9fec",
        "cursor": {
          "ref": "6d255fb6-be17-4e03-bca3-0d9d3ab81115",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "58c0d472-0d03-4862-9a11-7c623843b563"
        },
        "item": {
          "id": "914f1b37-9a2f-4ed7-b003-ecd63c0a9fec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0464ace6-456d-4d52-8ae2-f35a7540f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6bf9a0-721f-4f2f-ada3-e6f40ee78943",
        "cursor": {
          "ref": "1ee1e1df-ecae-4342-98ae-a85d5f6d7f15",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4c5e3232-d53b-4e9d-a91a-7332627d20ff"
        },
        "item": {
          "id": "3c6bf9a0-721f-4f2f-ada3-e6f40ee78943",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f9f094ad-4e51-4085-b678-e46da2238eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7767d5dc-2886-4d7c-949f-6ae35f9fb814",
        "cursor": {
          "ref": "f14916f5-77db-43c2-8c0f-4ce7db1fff84",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b00c715-49be-4acd-a1ba-a1c81cae700c"
        },
        "item": {
          "id": "7767d5dc-2886-4d7c-949f-6ae35f9fb814",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "948d39aa-353b-44be-9546-fae7d6b4e991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7500a6b8-6f9f-4411-83f8-8d06b96b90bf",
        "cursor": {
          "ref": "d8320337-b205-488e-96ed-db60df15fe2b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d51c272-17da-4f8f-b9db-234a5e7e7f35"
        },
        "item": {
          "id": "7500a6b8-6f9f-4411-83f8-8d06b96b90bf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7202c0b0-70d9-478b-8e7d-95a2be6747a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ade3fb-307e-4355-8276-8816958bba30",
        "cursor": {
          "ref": "53c160bb-513f-480e-b1e2-351fed04da8d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c29f67f8-0213-4681-aa98-a2b3ec52c0e4"
        },
        "item": {
          "id": "41ade3fb-307e-4355-8276-8816958bba30",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "467654df-e4d5-4185-8083-0993942f8814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a010589-4249-4902-b2ca-2623eff34ba6",
        "cursor": {
          "ref": "69dc8278-5c29-411c-874c-7f95b13a7705",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d0e27845-1dbb-4307-b833-a95aca4d0266"
        },
        "item": {
          "id": "0a010589-4249-4902-b2ca-2623eff34ba6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91025335-d395-4ed5-a407-06e2921ea693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf33528e-5191-4f37-a997-edc21f486309",
        "cursor": {
          "ref": "3a961839-a1ce-43b2-ae20-3f08a5551e07",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "180cbfa8-864c-4af8-bd80-9fcd1a6a375c"
        },
        "item": {
          "id": "bf33528e-5191-4f37-a997-edc21f486309",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dd8588c8-83bb-4449-90b6-d727ed0ea0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e537da89-17d7-4941-b0cc-12fb9ccc8dad",
        "cursor": {
          "ref": "dd105c89-b465-4cd7-8cf6-16e3fd56abf0",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "76420d4e-60d2-48d7-9c61-2f18e19e565e"
        },
        "item": {
          "id": "e537da89-17d7-4941-b0cc-12fb9ccc8dad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec3aa970-be24-4fa6-808b-2343e62e0830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5db5b0-bfa8-4c9c-9f5c-3c08c2129585",
        "cursor": {
          "ref": "c538839a-fc97-4097-9646-235bb26f371a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7f7bb440-1b71-437b-95db-42e24f633bfa"
        },
        "item": {
          "id": "1c5db5b0-bfa8-4c9c-9f5c-3c08c2129585",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "480fcf60-911b-4573-9c9b-876e27b65dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb59b36-22e0-43a9-ba9c-5eea0464ec1a",
        "cursor": {
          "ref": "96525701-a14f-4fd6-8c64-835f3cd58744",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a72316c4-5f62-490b-b129-884e69f4695d"
        },
        "item": {
          "id": "3bb59b36-22e0-43a9-ba9c-5eea0464ec1a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c6bd5fb2-fa01-4286-b6f3-84f1ee0552cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926b0d4-9698-4d95-bcd3-87b81df4e8bd",
        "cursor": {
          "ref": "fb9097d7-e47e-47d0-9195-202b83eb3bc4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f250336f-8493-429c-9383-e02365aac634"
        },
        "item": {
          "id": "a926b0d4-9698-4d95-bcd3-87b81df4e8bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4eae45ed-b220-47dd-97a3-99e33ebcebf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a9b500-d6e2-4a73-bb36-e7e9a363d15a",
        "cursor": {
          "ref": "f4f17d2c-455a-4e98-8dfc-5318160c2d7e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "52529975-68bf-48fb-a83f-e36fa7dba98f"
        },
        "item": {
          "id": "63a9b500-d6e2-4a73-bb36-e7e9a363d15a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62aa5a77-1199-467b-afc5-87884656d04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953f21d-2e90-4c02-9d6b-287e041dba55",
        "cursor": {
          "ref": "218ee5d9-78ce-4b90-a022-fc8b9f23e7d9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d73cd1c8-a560-43d6-98c4-fc81331cc380"
        },
        "item": {
          "id": "5953f21d-2e90-4c02-9d6b-287e041dba55",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "275ee00f-7741-4168-9f89-bef4cfed4e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbc8716-2e20-47ef-bf62-609540ee6f87",
        "cursor": {
          "ref": "e9fc45e9-6fca-4850-844e-8b8e0da86d04",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bb330e4e-89cb-44c3-9540-ba834430adf6"
        },
        "item": {
          "id": "acbc8716-2e20-47ef-bf62-609540ee6f87",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21c7654b-ecc5-4793-b150-0d01d821fddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43aee8e-4795-41fc-bcdf-1124302d530e",
        "cursor": {
          "ref": "8bdb6a01-b9bb-4bce-ab4f-8a2b5c3461bf",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f9913aec-8526-4753-8936-e7b016a0dfe4"
        },
        "item": {
          "id": "c43aee8e-4795-41fc-bcdf-1124302d530e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b519cacf-9136-4708-adc4-b26dce6dccba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f16127-c299-4599-8c30-b3f3973f1fdf",
        "cursor": {
          "ref": "36a45798-ba7e-4288-be23-20de2e3edce9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7451dc91-148c-48b4-9b78-47316f9d5388"
        },
        "item": {
          "id": "71f16127-c299-4599-8c30-b3f3973f1fdf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3cf985f4-6b46-4f1d-a6a8-0681291168d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198860ca-20e3-4caa-905d-51949670e243",
        "cursor": {
          "ref": "ff07f631-bd0c-4e60-9fff-81672b051171",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "882cb552-d241-49c3-a2bc-c49c248aec95"
        },
        "item": {
          "id": "198860ca-20e3-4caa-905d-51949670e243",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2093f7f8-df72-43b4-8aba-868012f10832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f74b75-8679-443b-93d3-72b75a3bf06e",
        "cursor": {
          "ref": "9f19cff3-4925-4c7e-961a-3f28bb6ec907",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5210e1ee-f380-45d0-bf05-fee92396b637"
        },
        "item": {
          "id": "21f74b75-8679-443b-93d3-72b75a3bf06e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c5ab0f99-2cbd-42f5-8859-901e9b32296e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fe9e43-5de0-45f4-a080-99ae4bd202f6",
        "cursor": {
          "ref": "19c8715a-565d-4806-942c-8a2333a59048",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c85566b4-235b-428c-ba42-6af1a98e6d17"
        },
        "item": {
          "id": "52fe9e43-5de0-45f4-a080-99ae4bd202f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e647be41-58f6-439d-94a0-acaca8746d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c925121-769b-4b6c-95a2-761a8bc12121",
        "cursor": {
          "ref": "a6fba972-3cee-4d61-9940-6bf0b064923d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fe0eddbc-4db1-4233-b72c-f0718932da32"
        },
        "item": {
          "id": "8c925121-769b-4b6c-95a2-761a8bc12121",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1d31fa2f-5438-4ec8-bfe2-3401cb24da32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78be5f6-12c6-487a-b4c7-f390184ae65f",
        "cursor": {
          "ref": "f8cee20a-4526-4d31-b50d-0ffcc24ea94c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c0e0d0dd-c8ba-4610-b90a-dfb7f8a03a53"
        },
        "item": {
          "id": "d78be5f6-12c6-487a-b4c7-f390184ae65f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5c856568-c953-4569-b1cc-e57f17f1deaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d678499-43e1-4cfc-a8ff-25ac6771da0f",
        "cursor": {
          "ref": "c3bc5d61-ee08-4037-98dd-4bbc813fc35d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a8b9fb41-3deb-420d-947c-64302805e028"
        },
        "item": {
          "id": "2d678499-43e1-4cfc-a8ff-25ac6771da0f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7bfaf914-23ed-4104-af03-f118770a24ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c163b00b-7c19-4119-b615-656a685558fa",
        "cursor": {
          "ref": "1b6177ac-ef79-40c6-8a77-0346fd4a6be1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3fc7e1b1-b342-4f06-aec1-3957839e10e4"
        },
        "item": {
          "id": "c163b00b-7c19-4119-b615-656a685558fa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e74b9201-8019-44f8-9848-5264de4f81a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe52c98-1040-49ab-b616-793c1005523f",
        "cursor": {
          "ref": "120014d7-bb8d-44cc-a790-139aded604fe",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f4f10e56-0a1c-4374-a1ce-b65633bc3d3a"
        },
        "item": {
          "id": "ebe52c98-1040-49ab-b616-793c1005523f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0957bb74-e0e5-4771-aaac-37ecce73181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bf407c-66ca-470a-af66-4d5aa1d40987",
        "cursor": {
          "ref": "10446f7c-ca11-42ee-826c-c634d6dd059d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70329a30-0891-4d90-8d50-7720619d74d6"
        },
        "item": {
          "id": "09bf407c-66ca-470a-af66-4d5aa1d40987",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a9406f39-f26f-43d3-bd79-0e3a079f1c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69df61c4-4977-4b27-a834-e7f7252a1a3f",
        "cursor": {
          "ref": "9389eb15-c1a4-4a97-a717-0c741759b108",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3b995ea1-d7d6-4651-942e-1bffd8c4a350"
        },
        "item": {
          "id": "69df61c4-4977-4b27-a834-e7f7252a1a3f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7e6c1a41-0f20-4f05-a24a-008d4d1c7ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010463c9-e6b7-429b-976d-94848503ef16",
        "cursor": {
          "ref": "2707578a-2cb7-4c58-be5c-577ca6afa659",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2c4cf7f0-5351-4730-b48a-93e0e0603e98"
        },
        "item": {
          "id": "010463c9-e6b7-429b-976d-94848503ef16",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0469fe8f-2f86-4353-b4ff-aab5d1c9480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78214490-9c5d-45d6-a16d-b316b10ef4c0",
        "cursor": {
          "ref": "e5381976-aa4d-47ed-a0b8-e17f86284d6e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7096f422-705d-4ead-996e-0cad7209b4ea"
        },
        "item": {
          "id": "78214490-9c5d-45d6-a16d-b316b10ef4c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c39e3803-a596-4e9d-8afa-10e58aabc068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60d2804-85a0-4ee0-85c4-c7091b2ab886",
        "cursor": {
          "ref": "6fdf7e4d-701b-4245-b8a1-4745aa03eb1a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d68d5a84-f1cd-4ae9-ba5d-0ac4c7b2a1a7"
        },
        "item": {
          "id": "b60d2804-85a0-4ee0-85c4-c7091b2ab886",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "46c36b12-0ee7-4cf6-a69e-bd46704fdb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b2e5ad-c126-423d-8d19-5a5dba5d3dbd",
        "cursor": {
          "ref": "84d11ab5-7a95-483c-9d0a-ee6009c32506",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "41a6f9c3-9f7e-4380-aabd-cba24b299372"
        },
        "item": {
          "id": "d7b2e5ad-c126-423d-8d19-5a5dba5d3dbd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e56280d3-0878-469d-ae51-2f3354a643d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacc58d3-6d39-436d-8b82-87761263ed7b",
        "cursor": {
          "ref": "e66d344c-7592-4a2a-9be2-dc10b9603b06",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d1945b91-ec87-46ee-8b6d-a1c938a674ba"
        },
        "item": {
          "id": "aacc58d3-6d39-436d-8b82-87761263ed7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2c20b4f5-61f7-4247-ba40-ecf7d180716b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034e7a1c-b69a-45b5-a46f-2617cd73fa6b",
        "cursor": {
          "ref": "46bfc70f-f999-4d66-9435-b7996cc00c0e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f955503a-c6d9-4137-810e-40d2431f5578"
        },
        "item": {
          "id": "034e7a1c-b69a-45b5-a46f-2617cd73fa6b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1920ad12-a6f6-428c-813f-e3ed5f560db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31f0f86-ea02-4c88-93e2-7517e36990cd",
        "cursor": {
          "ref": "05689dc3-2641-4572-a5aa-63f12a333398",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a646c754-8a2e-4b64-8086-05dc1228edc3"
        },
        "item": {
          "id": "c31f0f86-ea02-4c88-93e2-7517e36990cd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ffa6b38-3606-4dc5-8c8c-e2f7ac3df966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5308fd85-9224-49f6-a94a-2fc41491561c",
        "cursor": {
          "ref": "5a7dacbe-ccbe-4a9c-b104-692851190e74",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b7b327e4-a0fa-41af-9dd3-4a6a3d9ff4cf"
        },
        "item": {
          "id": "5308fd85-9224-49f6-a94a-2fc41491561c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bf1fab4d-6b8e-4aef-90cd-88924bb490da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44716c5-5dd9-4ced-9d10-9f5bc2ccef19",
        "cursor": {
          "ref": "1d644b15-16b5-46b5-bff5-1b8dc28af979",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b9fc1da4-fe35-4a96-b297-0cc73e34b725"
        },
        "item": {
          "id": "d44716c5-5dd9-4ced-9d10-9f5bc2ccef19",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "af94a7da-3dfe-4e6d-b068-3000dd7ea83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f5c828-62de-4e49-b854-98d92972d3ed",
        "cursor": {
          "ref": "b8838126-99f5-4ad2-bc4f-af0d5ea530d0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a2d3d121-997d-4a0d-b5bd-fc8844082649"
        },
        "item": {
          "id": "00f5c828-62de-4e49-b854-98d92972d3ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4a0866e2-b2da-4968-98f9-8114ebe36e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adf2db4-173c-4076-83a1-b6023b610e3c",
        "cursor": {
          "ref": "7d256350-4798-4cd8-8b81-7cc769a878b8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "afb788c6-d186-49b3-b742-e5b3496fb189"
        },
        "item": {
          "id": "7adf2db4-173c-4076-83a1-b6023b610e3c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a5b4221f-bd63-4f85-8d3b-34e4a41de625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1d7784-a1cb-4db0-8287-4f480e8309e0",
        "cursor": {
          "ref": "be5c1f9b-3c4c-4d17-b1cd-38a5d0b09c59",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c91ca285-4874-4a12-b4e0-25105c1b80e6"
        },
        "item": {
          "id": "bb1d7784-a1cb-4db0-8287-4f480e8309e0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e224198a-1a7f-4eba-8a84-eee133a51daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde99c71-49e3-4f64-a98e-fb1a17f6da1e",
        "cursor": {
          "ref": "f11f2f5e-9ada-42c0-9c38-13126d2ff4bb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1514f32b-bc59-448c-adc5-75fbf0167e8e"
        },
        "item": {
          "id": "fde99c71-49e3-4f64-a98e-fb1a17f6da1e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fbda4eba-968c-42e6-a426-3a273ed63a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4e37ec-833d-4965-8018-869b337e9a17",
        "cursor": {
          "ref": "a96b460e-7014-40a8-b4cd-5bc0949833e9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6275628a-f79a-44c0-b132-f21d548a7a2e"
        },
        "item": {
          "id": "7e4e37ec-833d-4965-8018-869b337e9a17",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b44e6797-e61c-4e23-bbe3-ebcdc087f400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c23b45e-4ed9-4942-9e15-4e2f876ea444",
        "cursor": {
          "ref": "bdedea64-96be-431a-9ad5-bb66696c87d7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "60938d18-847e-4f01-8fed-5e9f3bb928de"
        },
        "item": {
          "id": "8c23b45e-4ed9-4942-9e15-4e2f876ea444",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5ec4d354-cbef-4367-9393-cda71554ec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea3d8c4-0493-4772-8761-584d6de1e5b3",
        "cursor": {
          "ref": "b352d134-3701-4f13-8d17-ae6e950ebda7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "156d3755-df42-4ad1-802e-c12534698c24"
        },
        "item": {
          "id": "dea3d8c4-0493-4772-8761-584d6de1e5b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "40413e4f-0df1-4fd5-9f00-4a0d7c0ce9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4f5685-5b69-4c7a-91bc-2c3f3960e779",
        "cursor": {
          "ref": "3f8dec7a-085f-4574-8aed-11dd2bd53812",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d7fc4df-4820-4b66-968a-0cf3b5bb262c"
        },
        "item": {
          "id": "dd4f5685-5b69-4c7a-91bc-2c3f3960e779",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "57e7ab6f-199d-491c-819c-6b4324721571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dec04a-d9d5-4055-a239-6e799d7c1455",
        "cursor": {
          "ref": "d2a2d66f-2615-4b79-87cb-0e3721866f72",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "36d8406e-4080-4c2f-a38d-75ab1df1885a"
        },
        "item": {
          "id": "f0dec04a-d9d5-4055-a239-6e799d7c1455",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ab59b3a7-1ba1-4463-b1d0-e7a3150f59a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6af0c45-7477-47f6-bc51-3b1d8b9b72c7",
        "cursor": {
          "ref": "5685bfba-7c8a-4724-b49b-e1e6b2452685",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5386af6-5d22-4202-8adb-7ae9caf91a18"
        },
        "item": {
          "id": "e6af0c45-7477-47f6-bc51-3b1d8b9b72c7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "85c010c2-deba-4b45-94b9-29f024a6e489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af1d2d-5012-46a2-811a-8619dc5bd90b",
        "cursor": {
          "ref": "4d1eb118-c9fc-415f-92f8-f12de08fb98e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0e5dee52-3f47-4c38-8059-a625a89efce9"
        },
        "item": {
          "id": "b3af1d2d-5012-46a2-811a-8619dc5bd90b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "abb49fee-4097-4b05-80e1-be46bb98b521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e7b723-18c1-4d81-a7c5-c57e337923b9",
        "cursor": {
          "ref": "a00c95c5-c635-4959-935e-a465bfbd50e4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4deb788b-5e72-4919-99bb-7941b487fd35"
        },
        "item": {
          "id": "99e7b723-18c1-4d81-a7c5-c57e337923b9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "84876fdd-2dec-4e6e-99e0-31be62011226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc0015e-d190-442c-b6b1-851d1174f44b",
        "cursor": {
          "ref": "180bcd4f-2354-4a8a-91f9-f30126078048",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4bb0f2c6-9ca1-451c-b1a8-ce350ff0d81e"
        },
        "item": {
          "id": "6fc0015e-d190-442c-b6b1-851d1174f44b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a5a6c231-0922-40ec-b746-85da20e7d3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f0e783-9654-4cda-bd9a-c65ecf8587c2",
        "cursor": {
          "ref": "21da40e6-354f-47b9-addb-dcf6b6f3442e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a9a0c7a9-66a2-42e8-a760-56c80b9f9202"
        },
        "item": {
          "id": "75f0e783-9654-4cda-bd9a-c65ecf8587c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "79d43746-601b-4293-bbdb-df94b2e47b8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20087a7-f333-418c-8a55-ae3dec41816b",
        "cursor": {
          "ref": "30251663-5a71-4f91-b261-2d192a43b6ab",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "39235507-72ed-499f-bc6e-0a34cbe93d34"
        },
        "item": {
          "id": "d20087a7-f333-418c-8a55-ae3dec41816b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c1f6c6d3-b086-4e41-a1fd-0376a95f8444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f71130a-fa93-47e9-802c-d9ee8db6d1c0",
        "cursor": {
          "ref": "ce8a763f-8616-4a39-8d11-8a0eb44ae868",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "645dc469-6d9f-4660-8a0a-07527a6ac1bb"
        },
        "item": {
          "id": "8f71130a-fa93-47e9-802c-d9ee8db6d1c0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e7316a8-5cbd-451d-9ebb-74058bb55e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a396e5d9-a9a8-45bf-befb-3bd7d92a6dee",
        "cursor": {
          "ref": "bf2ead13-380e-4399-ab00-806e2af9f8ff",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8c9cb0ba-d603-4b86-9bb8-16ed333065e0"
        },
        "item": {
          "id": "a396e5d9-a9a8-45bf-befb-3bd7d92a6dee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f0b8d27f-954c-4d85-a855-8cfcaabc1a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3b4437-1ddb-4387-9014-992e5a90c51e",
        "cursor": {
          "ref": "3cb8f1c0-3ec2-4aaf-a547-9227ed4871a1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "27a4fd2b-ee3b-4491-be5a-0f957247e2eb"
        },
        "item": {
          "id": "4e3b4437-1ddb-4387-9014-992e5a90c51e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ddd6a014-a586-4e0d-8294-919a52a452b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccba83de-4fe2-4d1e-8077-2b2bda1af419",
        "cursor": {
          "ref": "e9d12268-df21-44e9-b287-d20e4b529078",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b0f2c02f-ad72-4455-a718-4257bd8bc39e"
        },
        "item": {
          "id": "ccba83de-4fe2-4d1e-8077-2b2bda1af419",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6273ac02-1750-4b06-a07d-280bd4316570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edbd9d1-e4c5-4940-9852-61a0224a3e3c",
        "cursor": {
          "ref": "4afb36ba-8b47-421d-a522-5287fdd9e727",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a00beef5-7e55-4559-b789-616ebbc0a938"
        },
        "item": {
          "id": "2edbd9d1-e4c5-4940-9852-61a0224a3e3c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5d11d6da-bf32-47c7-9711-7df787466c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682e403a-d60b-45f7-8ea6-732ab3ec72cc",
        "cursor": {
          "ref": "e6e5036b-4113-4b5b-80e6-534d5cdc9f45",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "86362e14-bf3c-4782-a150-581378d2a935"
        },
        "item": {
          "id": "682e403a-d60b-45f7-8ea6-732ab3ec72cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bdea4e7a-fa4a-4a5a-a886-74409474249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa42fd-9add-4abb-a333-df394a2a7592",
        "cursor": {
          "ref": "ea7c7b36-7d04-4f91-867e-20972893a127",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4c7ac779-274f-422f-a7d8-1b6775bffdf2"
        },
        "item": {
          "id": "e9fa42fd-9add-4abb-a333-df394a2a7592",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a0cd04e9-f10a-4d59-a2a1-f55d17cd73a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997fdaee-0f6d-4537-beec-e0be09a88ce7",
        "cursor": {
          "ref": "5f0dc623-78c3-4369-8ed6-5a45cf241dca",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35ab8845-7480-4af4-aef4-2aa989881114"
        },
        "item": {
          "id": "997fdaee-0f6d-4537-beec-e0be09a88ce7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9dc61f7e-441a-4760-a9bf-e34d636c5827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be408797-f80a-454e-896c-3a3236719634",
        "cursor": {
          "ref": "70b5b573-e1bb-48e0-af7c-35048e81311f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6cee9fe3-5992-427e-a6c8-abe3f15a5672"
        },
        "item": {
          "id": "be408797-f80a-454e-896c-3a3236719634",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d769ae2d-ae11-44a0-bf7f-5a59a4843689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e72bec4-63aa-4d0f-b6f6-099024317dc3",
        "cursor": {
          "ref": "45a6fd15-bc61-4338-be46-5d19022b14d4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a2c4349c-ac51-4587-ab9b-4abb454ff1ce"
        },
        "item": {
          "id": "5e72bec4-63aa-4d0f-b6f6-099024317dc3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2bd6c0f8-7f80-4d49-8100-a2ebd688dd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc97a1fd-b8df-4733-8b5b-3445e45780d4",
        "cursor": {
          "ref": "528a641d-dac2-4372-875c-aac27c2ca2f9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "70dc35ba-3e0b-4b34-b4cd-b15e7f931f69"
        },
        "item": {
          "id": "bc97a1fd-b8df-4733-8b5b-3445e45780d4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "59e3a8e1-ca0a-46c9-a942-e09bc320b5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98af1587-7385-4be5-a465-0c7546ea3109",
        "cursor": {
          "ref": "64679dca-03a9-48c4-9388-57ec6396660f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "88be6b98-b1ba-4c96-9b28-36a12ecb0c9c"
        },
        "item": {
          "id": "98af1587-7385-4be5-a465-0c7546ea3109",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9f30b5a7-802a-4ed7-a135-eb4f2f45fa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8762f78a-e009-4bfd-acf2-c9da72860468",
        "cursor": {
          "ref": "b47a700b-ee5b-4c92-88fc-4a7c0f2ce1a5",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6f2a0ea7-eaf0-4036-8687-78c74bf3df40"
        },
        "item": {
          "id": "8762f78a-e009-4bfd-acf2-c9da72860468",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2dc9719a-7e72-468a-8ec3-a880b2e5bfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b937a47c-0929-4a67-a960-763296ee2aac",
        "cursor": {
          "ref": "f8ad784c-2af6-4f33-824f-f6655791ed9c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c73afeba-a092-4f38-9227-aa48d83d5ca3"
        },
        "item": {
          "id": "b937a47c-0929-4a67-a960-763296ee2aac",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ae78fdf8-1d1b-46b2-b110-1b5e6149e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2a312f-b91a-4d9d-86a8-1a6b78988ea5",
        "cursor": {
          "ref": "c84b2f7c-f0ff-442a-a6c1-15437f1c1e69",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d5dea79-1437-4ee3-b433-6e79628d8b46"
        },
        "item": {
          "id": "4f2a312f-b91a-4d9d-86a8-1a6b78988ea5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "48783e33-9918-4f8d-acb9-43273b8fe845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddaf0a3-c0e4-4c4a-950d-fec54dcf88df",
        "cursor": {
          "ref": "408c015e-2b80-497b-8782-ac96ed40751c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7d04a8ae-ba5f-45e9-a554-d780cd1cb0ac"
        },
        "item": {
          "id": "fddaf0a3-c0e4-4c4a-950d-fec54dcf88df",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4085fb78-3937-4e9b-8e6a-868c4165bd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca93b00-b3fd-4f0f-80ba-a967377b1651",
        "cursor": {
          "ref": "501009c4-643c-4a86-910c-6c5437cb2658",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a776c56a-92f5-4069-ba0e-c30b56985b47"
        },
        "item": {
          "id": "4ca93b00-b3fd-4f0f-80ba-a967377b1651",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "87a32771-9a89-4ff7-87ed-72829843d33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5d951e-8b5d-4448-b346-302103e347e1",
        "cursor": {
          "ref": "b73b208d-2674-4013-ae76-3c69d4b174bc",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "455cc3a1-70c4-40c3-8c8b-064afde9474d"
        },
        "item": {
          "id": "7d5d951e-8b5d-4448-b346-302103e347e1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e16308f9-34ec-46c0-95fd-2af34556c9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22e4569-3eaa-494a-a027-830f9552c6dd",
        "cursor": {
          "ref": "6d550f64-9185-4b62-badb-949c8c732bce",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "866170b9-4171-416c-be1e-cfed2f0bf4a8"
        },
        "item": {
          "id": "c22e4569-3eaa-494a-a027-830f9552c6dd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16883d3d-a537-49b9-a90c-f03486828fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ae4ed8-dccb-4631-992f-f4957997b3ea",
        "cursor": {
          "ref": "d9d5b00a-de78-4eef-bb90-8f01b2d63db3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "74f5d8c0-9cc9-4a3c-a5dc-810284d5e08a"
        },
        "item": {
          "id": "32ae4ed8-dccb-4631-992f-f4957997b3ea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e4bb8b12-b282-4594-80f0-286b46a5a21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939ed8be-f32b-473b-b5f7-f570b9a07442",
        "cursor": {
          "ref": "8042bdc0-bc05-4893-a923-87bb00992d39",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dda8cb66-d11b-4a80-9847-d2cdf49abf0b"
        },
        "item": {
          "id": "939ed8be-f32b-473b-b5f7-f570b9a07442",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "22b7b3d5-64ed-4f94-8564-8c9baffe41b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1097c78-e75a-4090-93d2-93d80a89edd6",
        "cursor": {
          "ref": "6a0f1f62-06b4-4384-964c-959652f8839e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d3b05507-139f-4dda-9ce3-6bdda100a6f5"
        },
        "item": {
          "id": "e1097c78-e75a-4090-93d2-93d80a89edd6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f7b1ccb9-a3d1-4e1f-8764-745b9d43ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b268a10b-da6f-47b1-ad53-0939278901f7",
        "cursor": {
          "ref": "6086a244-ed52-4b6d-99cb-1f30066e8d67",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "22f28477-2773-43c3-9223-bdae3b51558c"
        },
        "item": {
          "id": "b268a10b-da6f-47b1-ad53-0939278901f7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "05b45d7a-2fcb-47f4-bf4a-4bcf978d1699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109e84d9-b1fa-4377-ac05-b47498ccbff7",
        "cursor": {
          "ref": "3cc717fa-2d84-4403-b574-1b747aae704b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b127841-403a-4826-bd22-eb98516d5ebc"
        },
        "item": {
          "id": "109e84d9-b1fa-4377-ac05-b47498ccbff7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fc4448fd-2b93-47c5-9e72-76a8db343f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc70a5b-1c33-4aad-92f7-3460fb6eb98f",
        "cursor": {
          "ref": "9c9f2cd4-c58e-42f9-9ed9-0001793b8761",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2764dd97-9386-4692-9512-1179e4130782"
        },
        "item": {
          "id": "bcc70a5b-1c33-4aad-92f7-3460fb6eb98f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "98527515-3446-4d48-827d-2b0a3a1c9d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5dee87-2f06-4d25-b8fb-45d4896b7b4e",
        "cursor": {
          "ref": "d7f2f8e0-bd3f-485b-9dfa-b4645435dc9e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7ba95a47-27a0-4565-8cfa-94295785837f"
        },
        "item": {
          "id": "6c5dee87-2f06-4d25-b8fb-45d4896b7b4e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c0b4bcfa-5557-4043-8e6a-0508485c902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19da9326-e128-4094-b9d6-d2e1781aa5a0",
        "cursor": {
          "ref": "a95e04a4-18ee-4463-85e7-176a5e5db95e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f4d8c668-e1a4-483a-959d-99151cef1b76"
        },
        "item": {
          "id": "19da9326-e128-4094-b9d6-d2e1781aa5a0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "09a83a3a-863d-4ef2-8bf1-6bfc79f16d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa31c594-c124-44ba-a5a2-e41b101b33c6",
        "cursor": {
          "ref": "410c72a5-6569-4da9-898f-b45e31bf8fa8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f8dbb7e6-0c75-4d49-9e2d-68cfdc2e3167"
        },
        "item": {
          "id": "fa31c594-c124-44ba-a5a2-e41b101b33c6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "80ed4173-266a-41f1-b910-8ffd16905291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e1509b-7983-4bb7-a9e0-b3a3414407a2",
        "cursor": {
          "ref": "fb1d454f-c1b5-460c-a6dd-53227deb2bb8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c4a761b2-773c-4e7a-a725-0415b011faee"
        },
        "item": {
          "id": "68e1509b-7983-4bb7-a9e0-b3a3414407a2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5bf7111b-001f-48fc-9a44-1b503488e477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5728b1-37bf-4771-b7d1-a7475acdd3a5",
        "cursor": {
          "ref": "e9bffe27-70e3-4f50-930b-1b69cffa1da9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5d38a61f-ba0a-4000-867d-e7ebfd2c7f4d"
        },
        "item": {
          "id": "dc5728b1-37bf-4771-b7d1-a7475acdd3a5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dd7d1340-8aad-4d22-9541-91581f92a691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceb9a4c-bef5-4da9-ad8f-6cfaf695a201",
        "cursor": {
          "ref": "ddf1039d-b181-441c-b60c-08cfd13dfba6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b7169add-4cea-49b1-8c4b-311e1309e052"
        },
        "item": {
          "id": "0ceb9a4c-bef5-4da9-ad8f-6cfaf695a201",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "53a2a0a3-78d8-4857-9575-e90508f6e068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6c968f-82f0-498f-9db6-946d2f4760bf",
        "cursor": {
          "ref": "a1b93d8e-dcb0-46a3-883d-6143775dfad0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c0b7f64f-2815-4ea0-bef4-d67809baa9b0"
        },
        "item": {
          "id": "fd6c968f-82f0-498f-9db6-946d2f4760bf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "756ac74f-ddcb-411a-b9b7-aab026082c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6270d12-87dc-4985-bedd-e4ed48993ebb",
        "cursor": {
          "ref": "da19190d-c564-4d30-b4a8-ccc9a9f0006d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "70c71655-3984-4be0-a06f-dbf21c457e71"
        },
        "item": {
          "id": "f6270d12-87dc-4985-bedd-e4ed48993ebb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "01fcf8a5-5755-46dc-8c93-5b06dc1219d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead755e6-5b2f-4724-a506-9e59646cbc76",
        "cursor": {
          "ref": "b29ee3dd-46e9-495d-8037-df2552027b03",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0f74e325-c31a-4579-9a42-2d22efc2196b"
        },
        "item": {
          "id": "ead755e6-5b2f-4724-a506-9e59646cbc76",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "200c7211-fa07-41fc-9c1c-de6caad7b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15592e3a-c285-463f-91bf-02330f8a70ee",
        "cursor": {
          "ref": "a2dcfd32-1499-4b62-9d48-dbaff84a4f19",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a16e3f69-5fd7-405b-b786-cac91fda3f42"
        },
        "item": {
          "id": "15592e3a-c285-463f-91bf-02330f8a70ee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1f096f9f-37b5-4fe4-944a-f773fb1a5e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb956490-c264-49c7-b193-3fb3622c7c42",
        "cursor": {
          "ref": "bf0bd674-5b0b-4759-beda-7daef8f6948c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "44640a13-8495-4c3a-a402-0161906c5a39"
        },
        "item": {
          "id": "cb956490-c264-49c7-b193-3fb3622c7c42",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5f260e2e-4fdb-48a8-b60e-a4648329c2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc9a068-1c7b-4e6c-9488-990bd8ffafc4",
        "cursor": {
          "ref": "fc031e61-fd00-42bf-8d9c-68b696c8c562",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "88c65f48-b950-495a-b1b3-75b3c50fe487"
        },
        "item": {
          "id": "ddc9a068-1c7b-4e6c-9488-990bd8ffafc4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7914ebb7-00f1-45bd-83c2-6b14ad02cb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a05aa2-de2b-4da0-8cde-9de6e8f1a7cb",
        "cursor": {
          "ref": "37fff34d-7f5b-484a-9027-64a48ec8e11b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0c7b067b-3ac4-4b6d-8d03-f1acb9d5d855"
        },
        "item": {
          "id": "68a05aa2-de2b-4da0-8cde-9de6e8f1a7cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "996acf3a-9808-4022-adb0-34344bda6b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23963854-0cfa-4267-b848-d16e2cff9552",
        "cursor": {
          "ref": "4a23ed8b-5b5a-4777-a174-cab06bac8882",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5a534730-9a09-4672-8cf5-070b921c69d5"
        },
        "item": {
          "id": "23963854-0cfa-4267-b848-d16e2cff9552",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "31c9eb7b-905f-4dbb-b92d-7aac5ae7a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3196c24-cb4e-4bfb-bcb7-b908c1cf05a1",
        "cursor": {
          "ref": "acda796c-79dc-4ccc-9f16-efefc00fcc25",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "95eb4f42-1f91-41e3-8d75-c2276d0a2334"
        },
        "item": {
          "id": "b3196c24-cb4e-4bfb-bcb7-b908c1cf05a1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "02a219e0-ff25-4b9e-89dd-f59607257d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5a1bf2-083f-463c-a5ef-527bd6b1e462",
        "cursor": {
          "ref": "1e0135ea-3843-4c70-ba20-8fad11f950b1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4e0d9293-c1fd-4198-a347-009bde832b60"
        },
        "item": {
          "id": "ab5a1bf2-083f-463c-a5ef-527bd6b1e462",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c0eac4e8-b4b3-49fa-9593-05150b456c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691d850b-de40-4075-9070-82f56f3b220e",
        "cursor": {
          "ref": "eed63d68-a73a-455c-b5a2-d551baf816e3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "86c08444-235e-4202-9ebe-0d42d840077b"
        },
        "item": {
          "id": "691d850b-de40-4075-9070-82f56f3b220e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5656dd19-4cd6-45b2-ba6f-e4ab0ac1cbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd71a4f-a912-47d9-a228-2e4a0b4cb5c2",
        "cursor": {
          "ref": "d7c17d64-700c-4c26-89d1-22cff7097cbb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "82ee4c05-a3f4-4b87-a3d8-b651ccf08fd6"
        },
        "item": {
          "id": "0dd71a4f-a912-47d9-a228-2e4a0b4cb5c2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "afcd9af1-be55-4152-bc75-bea2bb277199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7c860b-b84f-412d-9371-a6af1cbd664d",
        "cursor": {
          "ref": "de5bfdbd-d122-4f72-8232-e72e7ee1c031",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "daf25835-28b8-4e2c-a3e6-24e0535632ae"
        },
        "item": {
          "id": "1a7c860b-b84f-412d-9371-a6af1cbd664d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "40a4d32d-ba95-4976-8b43-f6b0e957b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce65d2d9-7e20-42a4-b5dc-dfd2c7461b18",
        "cursor": {
          "ref": "567220dc-5c27-44f4-ad3b-fa8b7faf6d03",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bc71fbf4-b4dd-43f6-a543-0f26881bcc2a"
        },
        "item": {
          "id": "ce65d2d9-7e20-42a4-b5dc-dfd2c7461b18",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "75c6e38c-26b4-43fd-adae-aa8a0a5742ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4f4683-61f8-4630-ab35-1cfc670c80a6",
        "cursor": {
          "ref": "7f8008da-35c8-46fc-bb8b-29d8d404acf5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3a05eee1-e1bf-4166-b6ba-31063a28642b"
        },
        "item": {
          "id": "ea4f4683-61f8-4630-ab35-1cfc670c80a6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "30a3b081-1be9-4f57-bc3b-794feb6edd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542faa6c-9c5b-481e-aed2-c530c20ce597",
        "cursor": {
          "ref": "23d86433-9a35-41d8-937c-9c6fd047e517",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4c2d73bf-4569-44e1-ac8e-f389659dd401"
        },
        "item": {
          "id": "542faa6c-9c5b-481e-aed2-c530c20ce597",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1ceb01c-7488-4437-aaf7-38c87be07215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490b72cd-9cbf-48c3-a82a-21bfc89358f1",
        "cursor": {
          "ref": "1c23bc3f-b72b-4871-9dcd-50ff2ea8ca0e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "11472404-99c2-4c14-a32c-c883becedc9f"
        },
        "item": {
          "id": "490b72cd-9cbf-48c3-a82a-21bfc89358f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5269ba4c-4efb-46da-88b4-6569485b3505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6b08b0-ea3c-4c6f-af1a-0d0fd38541de",
        "cursor": {
          "ref": "395b836f-f4e3-4952-a7d5-b81acedd4206",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a49face9-5452-4d51-a006-c4ce6f2909b0"
        },
        "item": {
          "id": "af6b08b0-ea3c-4c6f-af1a-0d0fd38541de",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "098dae0e-6768-4b78-8bcc-e8b766ece898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b284315d-446b-4e4d-b2cc-774f5e2b3ca6",
        "cursor": {
          "ref": "66166504-4170-4e2c-9077-e87ad659c6b4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5736fa37-fe0b-4644-bfbc-cfc1fee0d9cc"
        },
        "item": {
          "id": "b284315d-446b-4e4d-b2cc-774f5e2b3ca6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "08722cbb-ce1d-4e7f-9531-6c5a44f9edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e11dac-3abb-46b4-832b-b0e7cb65b1f4",
        "cursor": {
          "ref": "d8187650-a26e-4ca1-995c-c26c6f58551c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "697eb759-ae4f-4cd5-baba-33b1333f3c4e"
        },
        "item": {
          "id": "69e11dac-3abb-46b4-832b-b0e7cb65b1f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4b5d663f-509e-4662-9464-5b8b207f0424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d3caa7-dfc2-4c07-9582-4e2003413a4b",
        "cursor": {
          "ref": "f1be5bf7-af4d-40fe-bc26-78ec5495ff3c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f3aa75a5-14d0-482d-91cb-b88649ce9c23"
        },
        "item": {
          "id": "19d3caa7-dfc2-4c07-9582-4e2003413a4b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68ef67f1-ef49-419a-9ea7-9072422289e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce255f2-b82a-46c1-87af-7714eea23fb6",
        "cursor": {
          "ref": "843fbaa6-06f9-47c7-b2c9-32a43f0e36a5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "794ec6b5-b04c-40fa-8e2c-4a270d2ef026"
        },
        "item": {
          "id": "8ce255f2-b82a-46c1-87af-7714eea23fb6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "54e675b3-3b15-400b-b21e-b6832eb7caa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5535387e-7251-476b-9568-943a2090ee6d",
        "cursor": {
          "ref": "2ac0590f-7d24-486f-b132-6c384d95d0bf",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8a6c7b91-dc66-4120-b075-1cf4b3297d91"
        },
        "item": {
          "id": "5535387e-7251-476b-9568-943a2090ee6d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1d334add-cfc8-4e83-a284-9ec54e3d8cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed04fb22-dcc3-4e66-9dc6-5812cb481eb8",
        "cursor": {
          "ref": "44aa6d3b-8cda-4bf8-816d-8c016c83ff78",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8d789cba-b9cc-4b0c-977d-0c5a852f4dfe"
        },
        "item": {
          "id": "ed04fb22-dcc3-4e66-9dc6-5812cb481eb8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5886ff3f-b448-4ea9-b5e4-46073229dffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d3467-9b78-40cd-b30e-9c53e71743de",
        "cursor": {
          "ref": "7fc669b1-49a4-4f33-8c4f-e2f2b133a492",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee6b4c4c-8dc4-449c-a94a-2205892bf363"
        },
        "item": {
          "id": "3e0d3467-9b78-40cd-b30e-9c53e71743de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aea7ae44-c8df-4cf8-9b32-1378f2fdebd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f53228-82c8-400f-aec2-9fb0eba7f425",
        "cursor": {
          "ref": "265a0b59-7f86-4fa9-80dd-c8d3f40fbbfb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e16d5ea-1981-4d26-a93d-87daab5ac7a6"
        },
        "item": {
          "id": "b0f53228-82c8-400f-aec2-9fb0eba7f425",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4a6eae7c-6172-4ca3-93d1-9afb83e1bac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b67f3c-8866-4bd2-9c86-1b2221c1cef9",
        "cursor": {
          "ref": "5d048035-6b2d-43bc-b9c4-17057ce1dc9e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0f4c459a-7432-46f1-beef-ffa49cb1de16"
        },
        "item": {
          "id": "c0b67f3c-8866-4bd2-9c86-1b2221c1cef9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4a65a5f1-9c38-4c5e-a0fa-de52ccc7281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967cf785-c4cb-4564-88dd-d7b1e52f6aec",
        "cursor": {
          "ref": "a984ae6d-b61a-49af-96bb-dbc5e9addf3c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6ebb8b0-12e6-4096-8381-c744d8adae3d"
        },
        "item": {
          "id": "967cf785-c4cb-4564-88dd-d7b1e52f6aec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6d28c1c0-90b6-40ff-89d3-64718bba78c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445efef-51ac-4960-8d5d-752585779960",
        "cursor": {
          "ref": "e6e0090f-453f-4737-85e3-16cd9eb823c3",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "67620252-2c3c-476c-89cc-bc9513bce802"
        },
        "item": {
          "id": "7445efef-51ac-4960-8d5d-752585779960",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6f182fb9-17b0-4b37-b732-783034e1a094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98af9dac-1cf4-46ce-960f-23882fe1b8e8",
        "cursor": {
          "ref": "4308eda5-3ea1-4d68-acea-df1a3050a912",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3ca4c493-dd16-494f-bac9-49a462be1ca0"
        },
        "item": {
          "id": "98af9dac-1cf4-46ce-960f-23882fe1b8e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f202bcc1-179c-40be-b3a5-8d8ea3ed637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cd6946-c19e-42cf-a0f5-c3575a794fcf",
        "cursor": {
          "ref": "bfbde2dd-e975-46ab-9829-ff06ba7bfc91",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9665db5b-9c97-4682-ade0-c8de166da5dc"
        },
        "item": {
          "id": "e2cd6946-c19e-42cf-a0f5-c3575a794fcf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a01b35bf-d37f-4d20-8b04-ac9be85531db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6e2b57-a4db-4532-8e71-4542beb620c3",
        "cursor": {
          "ref": "b81bfd08-a390-4834-babc-53185a75aaf2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4b5e9c2f-67fd-4f1e-96b0-390d0db1845b"
        },
        "item": {
          "id": "7d6e2b57-a4db-4532-8e71-4542beb620c3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e5c3778a-86a5-4d32-bcc5-35569952290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da807bf-36fb-4aaf-aacb-046b8c8dee6d",
        "cursor": {
          "ref": "0ea5eb59-d680-4f0f-af4c-b3a5849ddad1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ffbb3fb2-f996-42cc-a11b-bf37c7a8379a"
        },
        "item": {
          "id": "6da807bf-36fb-4aaf-aacb-046b8c8dee6d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "57a32343-628f-4a32-9541-5ddd52f3fb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc8fa76-0cbf-456f-b0ff-c51f19b04685",
        "cursor": {
          "ref": "9965709e-6df3-4ce8-a1df-602a2593c149",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bf5551ff-44bf-4bdf-9aaf-95a76585ca2c"
        },
        "item": {
          "id": "8bc8fa76-0cbf-456f-b0ff-c51f19b04685",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eed5ba66-bb1d-4feb-91fc-1f23aa2997a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778c06e9-f939-459c-820f-54a0f9a5113f",
        "cursor": {
          "ref": "e2ecd716-b372-4fd1-8b7e-e376d5ef2c0a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93f849c0-6db2-4fee-aa1c-4fd07c473b29"
        },
        "item": {
          "id": "778c06e9-f939-459c-820f-54a0f9a5113f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0fc14159-c1f1-4c24-aba1-85ad2c2c4cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd7860-5b4b-4ec5-8c22-f362d9a8a1da",
        "cursor": {
          "ref": "704290df-6872-4bb8-8d10-9a6c22e20241",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aa2f4864-e494-4c86-9060-f475cb269508"
        },
        "item": {
          "id": "1ccd7860-5b4b-4ec5-8c22-f362d9a8a1da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9f88c81-dd66-496b-b69b-e27a46456d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb4364-a45f-4eb8-b847-a7fe4f0cf1bd",
        "cursor": {
          "ref": "13d5ccf1-bd8e-48c7-a07e-2e15a04d676c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eee51052-c56d-498b-a113-f03d9fb6f34d"
        },
        "item": {
          "id": "c5fb4364-a45f-4eb8-b847-a7fe4f0cf1bd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bb602b17-06fc-4bda-bf74-fbc31679adac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44ee25c-77ea-48f6-a1df-df08daf4698b",
        "cursor": {
          "ref": "d10d7278-ed07-4d9a-80fb-407e3fdd093b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94bc83a9-061b-4500-8b9e-1b6e72fe3b29"
        },
        "item": {
          "id": "c44ee25c-77ea-48f6-a1df-df08daf4698b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3c3b4494-7530-4025-9b5a-ffecadbee62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9519f7be-d1f0-405a-9d1a-6ca68a77ac52",
        "cursor": {
          "ref": "c774e4cf-518f-4215-988f-6b5cd52ca0bb",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "94fcc8c8-a8f0-4cca-850f-bd059c2b58ac"
        },
        "item": {
          "id": "9519f7be-d1f0-405a-9d1a-6ca68a77ac52",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "304f613f-ee9d-494d-a65e-97cdd64f360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2793f286-12b0-4cc8-8e81-d4b3e589b6bb",
        "cursor": {
          "ref": "8b4853b6-6f0d-4574-8aed-25659612a79c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f4eea123-dfad-4321-b902-af175d16324a"
        },
        "item": {
          "id": "2793f286-12b0-4cc8-8e81-d4b3e589b6bb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a6f2e539-ba72-4b77-8b4d-cf2967b1897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8722e2-4dd3-4fc5-9f26-695d2f6e5371",
        "cursor": {
          "ref": "8ff67fc7-4817-43e8-8f58-a9dd92c4544b",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f29bc010-f4df-48e4-9549-b2b8e6814d5e"
        },
        "item": {
          "id": "8d8722e2-4dd3-4fc5-9f26-695d2f6e5371",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "715c77d9-4097-4237-99df-1e8090c77815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c8bd4c-a274-407e-a24d-d8d590b46c39",
        "cursor": {
          "ref": "05053b6f-b1fa-4203-9eb0-1f310924ad7b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c4667c77-6d7f-4e37-8e6f-8cde36b1138a"
        },
        "item": {
          "id": "b0c8bd4c-a274-407e-a24d-d8d590b46c39",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c37fef86-e1b0-43ab-b1ee-9bd6d5bbcb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d33e03-09ce-4019-9e5a-b6d4c0cca91c",
        "cursor": {
          "ref": "63bfbd02-d97b-4475-849f-82c591115c69",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7a388770-719a-47f4-b7c9-f0336ae581b6"
        },
        "item": {
          "id": "d2d33e03-09ce-4019-9e5a-b6d4c0cca91c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a5846a0a-e22b-42a1-96dc-bc4d7bf542dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db40a53a-bd2a-4a6f-a562-520f97618206",
        "cursor": {
          "ref": "c3a8bcf0-710b-415e-84a8-e730a0b11ad2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a330cab9-e593-42a2-a4dc-3f9773eecb8e"
        },
        "item": {
          "id": "db40a53a-bd2a-4a6f-a562-520f97618206",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b7d70e40-1e89-4936-a024-f262dbacc9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a3ccae-bdeb-4c12-997a-9fc2e10baef3",
        "cursor": {
          "ref": "092aa6fc-3ffb-4c13-b0ef-13a209f15a72",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b35d3e0d-e1e2-4652-99ae-1f2eceedcc16"
        },
        "item": {
          "id": "41a3ccae-bdeb-4c12-997a-9fc2e10baef3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0ac9747d-c822-4360-ba1e-0e2de4ce30a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dd51f4-a833-4f04-8f5f-e10bd8f8e082",
        "cursor": {
          "ref": "6892bd7f-7143-436a-9c4d-460db11c06e6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "af248e1e-dde3-43c3-9560-e302296c203b"
        },
        "item": {
          "id": "09dd51f4-a833-4f04-8f5f-e10bd8f8e082",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1c3ccb47-f6cd-4e62-9807-5587ef50df23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41606417-d017-46bd-88fd-f27a641008cf",
        "cursor": {
          "ref": "2cf51dd9-7e9c-4060-85fd-c5afe2c5b4c5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "704f0f39-c5d4-4aa5-b2ed-afe8365b56ba"
        },
        "item": {
          "id": "41606417-d017-46bd-88fd-f27a641008cf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fa2df103-a7b9-48d0-8720-ef48466de113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80dc432-b775-4639-a6ea-ddd4c2c396e3",
        "cursor": {
          "ref": "27179f1b-f011-46e7-bb47-cc325c70418d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b36cf509-3cca-4da3-b0c0-cb70916d5828"
        },
        "item": {
          "id": "d80dc432-b775-4639-a6ea-ddd4c2c396e3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f6c95c45-2b1d-4f28-ac03-ce1a5b3dc5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6bdae5-09d3-4995-b1f6-77e971818ed3",
        "cursor": {
          "ref": "5008dbfc-aefd-4632-910d-8881c46c55bf",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c8f7c4c5-a02d-4446-b39c-fff2b9cd7c73"
        },
        "item": {
          "id": "9a6bdae5-09d3-4995-b1f6-77e971818ed3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ad14ba98-1753-421d-adcb-71d79a00d03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed18271c-b42a-4acb-9738-9e2ec90ab19b",
        "cursor": {
          "ref": "5f53138e-a55f-4208-be5b-701d461a122d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b52309ec-f4e4-455d-962c-33e3e3231212"
        },
        "item": {
          "id": "ed18271c-b42a-4acb-9738-9e2ec90ab19b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "44a2c32d-9ca4-4156-ab95-1da56d5cccff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768597f4-dc35-4dbd-b8b7-58b3eb127476",
        "cursor": {
          "ref": "a9bd80ed-a071-4355-b8b1-ce63f6ec51ac",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0766d8cf-f1a5-4280-9f8a-9f40a1a1c08d"
        },
        "item": {
          "id": "768597f4-dc35-4dbd-b8b7-58b3eb127476",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f14a3f63-635e-4808-8903-bdb6173ba87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b19e74-9be6-4d32-96e1-c3d1470438c7",
        "cursor": {
          "ref": "2a741078-7559-4d93-86ba-c3f280ae3d0d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e839b7d8-21ae-47b5-8a90-790bef86bd37"
        },
        "item": {
          "id": "c9b19e74-9be6-4d32-96e1-c3d1470438c7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5ac66b36-f699-4871-be4a-8d4a0a0505cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8a3398-9393-4c03-adee-22acc652bb54",
        "cursor": {
          "ref": "79877574-0a6f-425c-b7b5-3c35988dc916",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4c8421fc-ba5b-4cd0-9791-b42329e388e9"
        },
        "item": {
          "id": "aa8a3398-9393-4c03-adee-22acc652bb54",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "04162c8e-44cc-43cb-8fff-f4be492bae5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4fd0e5-1153-4f4c-baec-97e2adb20730",
        "cursor": {
          "ref": "928cf721-553c-413d-bd34-14fa74316465",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "02e249e6-3fb5-4d29-969e-cf0a2a8def0a"
        },
        "item": {
          "id": "ad4fd0e5-1153-4f4c-baec-97e2adb20730",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fff07dda-63f5-466e-b8a5-aec836c6a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac7f34b-098b-4aae-a196-9f191b0c8cfc",
        "cursor": {
          "ref": "2fa5754f-d796-4322-a783-c0cd6b79586f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fdeb43f6-c495-4ec1-b7fb-3bb728ffd0f8"
        },
        "item": {
          "id": "dac7f34b-098b-4aae-a196-9f191b0c8cfc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "92013cc0-a374-4538-ac25-3a8b8b5660dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed20564-05c7-4e54-9209-6c16ff906997",
        "cursor": {
          "ref": "980413bf-1aa3-4f43-bb10-d655db211526",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "acdb147b-556e-4fb7-925e-04afe49ac179"
        },
        "item": {
          "id": "0ed20564-05c7-4e54-9209-6c16ff906997",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c8f85c4e-3ee8-47cd-823f-e716741e146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1357d6-3b9d-444d-9017-a2a46b27745a",
        "cursor": {
          "ref": "bff25cc8-e254-408f-a2a4-b4a8ca38bc11",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6a96705c-4244-432f-bfa2-ab78751a7c69"
        },
        "item": {
          "id": "2e1357d6-3b9d-444d-9017-a2a46b27745a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c59f6b16-ce65-4d20-828d-662075ed0272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f0faea-e38b-43cf-ba68-718561e8da34",
        "cursor": {
          "ref": "d027d325-14db-4718-b6ac-3a6274a6a598",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7072afcd-2920-49a3-a152-c43ffb416bab"
        },
        "item": {
          "id": "d5f0faea-e38b-43cf-ba68-718561e8da34",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "28c77bbd-e84d-4dd2-bfe5-e56de7ee999d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7f5e65-f93a-4560-828c-f2a9e17172bc",
        "cursor": {
          "ref": "39768f69-6c21-4b02-8965-27dc5a646283",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d4a6d16c-30f8-439e-96fd-bbd889790ac7"
        },
        "item": {
          "id": "0c7f5e65-f93a-4560-828c-f2a9e17172bc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6433f6f5-8d27-40ac-9b0c-ab561b00b79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9def19c5-0d4d-4d44-b85c-07d1f5e369c0",
        "cursor": {
          "ref": "fce5fe30-7a93-460f-9592-6019b965234b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a66bbecd-5a39-47fb-b3de-a3046f226d21"
        },
        "item": {
          "id": "9def19c5-0d4d-4d44-b85c-07d1f5e369c0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d671b2af-600b-4397-9863-fdc9266950b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3b42cb-adf0-4c19-9491-c59509752d9e",
        "cursor": {
          "ref": "76a809cc-2747-4992-89ca-ed084b5f861d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e3ff03e1-8fc5-4cee-bd99-22475987020e"
        },
        "item": {
          "id": "ef3b42cb-adf0-4c19-9491-c59509752d9e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d864ba37-3586-49dc-91e7-8cddc3d542ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7f71f-2e3b-4f41-b00c-03c5ef432c8f",
        "cursor": {
          "ref": "9237bca7-42b5-4a1c-bf0d-a8a569cb4fc5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1bb69c31-07eb-4e15-a01a-b4d9f0ce7092"
        },
        "item": {
          "id": "feb7f71f-2e3b-4f41-b00c-03c5ef432c8f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "377c7e7a-ad04-428e-8a80-9f2d9ec9b56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98db2e19-f533-44fb-8c4a-bcda353c754e",
        "cursor": {
          "ref": "61cf310b-2c9d-46cc-8c26-f61a60b5e3ca",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "643c9865-2669-4022-820e-277c262328af"
        },
        "item": {
          "id": "98db2e19-f533-44fb-8c4a-bcda353c754e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a5f5f18a-1f2a-4556-a0e2-b33e77dee926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a636d2e6-9c65-4b5c-996e-230c949281ec",
        "cursor": {
          "ref": "eeeaa395-4605-47ae-a16a-8972acebb708",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "158b751f-6b8b-4394-b9a3-67204cb77d0f"
        },
        "item": {
          "id": "a636d2e6-9c65-4b5c-996e-230c949281ec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e676425d-2515-441f-94e5-c17544ddc6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29f8056-0b61-4f8f-b9bb-f48ea75a1186",
        "cursor": {
          "ref": "dd23c7ca-1db6-4cef-85e4-53fd57ba1ea8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "df32ffd1-2394-4ebb-aed1-fde287281463"
        },
        "item": {
          "id": "a29f8056-0b61-4f8f-b9bb-f48ea75a1186",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "54d4fd58-4ead-47cf-b7bb-90ccb299b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a065676-5e0b-4ac2-91eb-e352896b2a38",
        "cursor": {
          "ref": "b4df7b38-3034-41d8-ab8a-f98081bdf865",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "829633f9-4d66-4257-a189-4145856c79d1"
        },
        "item": {
          "id": "7a065676-5e0b-4ac2-91eb-e352896b2a38",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17d3e091-6d36-4b8b-8d53-5536502b7045",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806af682-6e83-48e3-bf9d-5e2bd5c474da",
        "cursor": {
          "ref": "3f60c742-eba5-455d-89a1-f0e66e19ef55",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a3037dc8-02af-44aa-845d-1247ba9fa66a"
        },
        "item": {
          "id": "806af682-6e83-48e3-bf9d-5e2bd5c474da",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3d79c692-b194-487b-a53c-cc5e25cb3a8f",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d502b92f-f8cc-446c-8bf8-fa6518897bbe",
        "cursor": {
          "ref": "de6cf84e-aebd-4d0f-a593-a0777e70195b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d053ec07-c505-44a0-bc87-18c139c8ad4b"
        },
        "item": {
          "id": "d502b92f-f8cc-446c-8bf8-fa6518897bbe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "89175ea6-5c43-4ae6-96e4-71a2922891f6",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac4ad98-82e6-4a3f-a401-9a8ac5074800",
        "cursor": {
          "ref": "f49e964e-5103-4d43-88a4-a32f1f28a395",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "50f07a9d-0e57-4d4b-8395-53be79150429"
        },
        "item": {
          "id": "0ac4ad98-82e6-4a3f-a401-9a8ac5074800",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a40cae5b-da4d-4f15-a163-7a3b090d6e0a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cde2626-58fe-4b45-9009-4dc9d62ee535",
        "cursor": {
          "ref": "4b5a7f64-526e-491e-8a7a-32f1bdac04e4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4eb59a7f-c7dd-4bcf-b180-792338e1fa99"
        },
        "item": {
          "id": "0cde2626-58fe-4b45-9009-4dc9d62ee535",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f66c90a-4817-45d9-9901-e4ce6ebdeab8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cde2626-58fe-4b45-9009-4dc9d62ee535",
        "cursor": {
          "ref": "4b5a7f64-526e-491e-8a7a-32f1bdac04e4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4eb59a7f-c7dd-4bcf-b180-792338e1fa99"
        },
        "item": {
          "id": "0cde2626-58fe-4b45-9009-4dc9d62ee535",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f66c90a-4817-45d9-9901-e4ce6ebdeab8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40fbe00-9661-4af4-95fb-7b0870c69f47",
        "cursor": {
          "ref": "c608391a-a4ed-4bfb-abf0-dd950f0a702b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f7b61c18-e440-4685-8c93-56920041c81f"
        },
        "item": {
          "id": "c40fbe00-9661-4af4-95fb-7b0870c69f47",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e371764-5927-453b-8c0d-b012ae1ec700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27afa3b4-3a81-4f7c-acb3-611cb441bb9d",
        "cursor": {
          "ref": "7fd000ab-ed37-4606-a3ab-f7456b8fc98a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "238c00fc-f471-47e1-90ad-8943db685d3b"
        },
        "item": {
          "id": "27afa3b4-3a81-4f7c-acb3-611cb441bb9d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f541acd-19d8-4d54-a35f-af5f66a5834a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}