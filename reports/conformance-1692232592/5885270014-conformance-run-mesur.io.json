{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "34644cb9-2854-466f-8f4f-2dea160c0778",
        "name": "Clear Cache",
        "item": [
          {
            "id": "931c611b-84d1-416c-9a05-76c3ab4b7089",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cef3b830-835e-4c89-b31c-51d11852f520",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1fce506b-be35-4964-814b-815859457d71"
                }
              }
            ]
          },
          {
            "id": "2d488e16-1a1a-4d90-a323-6fd5413801c0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a7b4cb3-c04c-42af-a2d1-15f70313c78b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9336b2e7-bb54-49f4-aa48-b678b45ce302"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "62c4614c-0e9f-4ef5-b053-b99b95d92c15",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d151b47d-5d91-4578-bab4-916672b5d4b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39845efb-c8f9-4104-bf81-9522f610e30f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13db730b-d861-4717-8d29-232e8937b75b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e0abe1e-3d78-4fc0-ae57-d5a48ac6ca08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7866c463-7c78-4d97-911d-e3457f4b2e0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e55d90eb-1eb7-4736-a63d-6838662460b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f795f3f-5c44-4502-96ad-84dd96fe7650",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0567ec65-0632-4b7a-bea1-f8441c477a59"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2830b7d6-c3d1-4ba6-9ed6-d296eeacf397",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "598c62d2-1048-47e0-a9dd-1a9551f95ff3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5fa601d-73c5-4e0b-acc6-dbd917ab70d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4cadf45-0c06-489d-85ca-e98d3c912814"
            }
          }
        ]
      },
      {
        "id": "15afd204-60c3-4328-bec5-2d2fd9fd79e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "64253036-7fa7-4114-b18a-45ffe90017df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34fad943-5bc9-4734-ac3f-2211d99f70c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5bef1625-6511-494f-b279-93954287cc5b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08e75be-fd70-435d-a4b9-1819fe13733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d39f05e-4747-4953-894b-0a3f8c2eb6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb91dcf8-0d5c-45f2-a78e-e7be6da1b058",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42292d1-650f-4ed9-a843-5bfd0daf4dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd82f04f-c3e0-41d4-8f0e-2624d64e1a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33879839-3e16-441c-a488-4c1dafb0defa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700cb62b-543e-4aaa-8502-d32a3ea0f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bf776ac-85b4-4770-b055-faa86efaee23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13ef8267-c6e5-4e4c-b358-e2ecb9ffb22b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec744394-ec92-4611-801d-a61b24a156aa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1fc69f-3556-4e87-941e-b765f0bcd3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af315df-d8a0-4572-8680-a9a588f060f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ea4151-f5fb-401c-bb51-9ed7a5987d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68857a08-38fd-4f8b-89bb-e2c2e843fc22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "79be28aa-e0a3-4141-aadf-e0d5c4161aec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7be09d26-f751-428f-9835-f720e16bb847",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "705f9f64-2d08-45f9-95d4-0b8f84ddfa70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e21c6c2a-c26d-46a5-a9b8-fdc8e7f6f969"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fccb3264-f2f1-4e0b-bc72-ce1f50ff2308",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5a801a7f-86c2-4e4a-85da-63e80a70a92d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c2d4b95-93f4-4cd4-a116-de904bfe3cb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10e2a493-0cbc-4b37-8f04-148dd455f25a"
            }
          }
        ]
      },
      {
        "id": "b21f5a38-3e41-4ca7-9e86-bad9f032511a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1317b8f0-d107-44a8-9db5-32212f7117de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83c94211-8027-4c53-80e6-f13bc03969a9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f1d01efd-3c8a-46e7-b3da-a4204f5bcb2a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6a8531-e1db-4617-8e64-917c6824a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f1732e-6334-40d0-b7f2-27f38cdf61ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ac6320-4d37-49f9-99ae-77b93c1d920b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b4a391a-e874-42e4-beb8-6d6cd304437f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a234d0-70fc-4973-98a5-255276a6ddb8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511d875c-3bbe-4d4a-aebb-0794d9356e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58cb14d-3470-4845-9554-216b1f7f3846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c5066-fd4f-4833-b05b-2cdd5d7fb6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b17261f-9a09-47dc-af7f-6dd22386c473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2cc6dd-fb05-430b-9a31-a42f32f66b4d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb9bc6a-8393-41db-9f20-f02711e6c88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdb2ae3-5e6e-410e-a198-9965d474f867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640eef11-ca20-4739-b724-88fe0bd6b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e29ec48-cf25-4a49-8671-ab6aede589eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871e4974-c33e-4536-abce-a6b7897742e9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e2a6b2-8269-4322-bcc5-9147053f9928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2887f9c6-dcc1-4a14-8504-a7d15e60ac29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69277c8a-73b9-41ea-a678-82eb4be95a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e85011c-a476-43a8-94ba-82611e31a2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ca3532-bb9b-46e5-92d8-c60aeba567c8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93825bb-9d7e-4566-a3f0-aafb10ad21e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f07532-6bff-452f-8c9f-22c555e481f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796a7bbe-18db-4c1d-ad9b-68a0e00af423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f25e093-e254-418b-ae47-ac9579c835f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b2f868-a06f-4608-b401-149218022a83",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7281ede3-487f-464a-be09-eb8dc77a7850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4f31c6-4138-4382-9751-32851087cab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa69f7c0-a2d9-467b-8621-cddc3b8deb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1abffee-c1b4-4987-95b6-8675296aa202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0ac34f-c7f7-45d0-9f81-33cc228d97b2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ae69d5-018c-47e2-ad28-1097f6f0fe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b030f5-bf0b-4346-8901-2a63cfe0ca17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7149e3-5796-44c0-b21f-f35cb77c4dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eaba495-7d37-48bf-9a45-9c9200a0215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2b8b8b-dc68-4b24-b26b-88478e98f17d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c04d3c1-ecc0-458e-9f69-9f85f3c912bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eff7484-afb0-4044-9ef3-be2eba735b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af598c2-7499-4403-a19a-778cfa41f15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e790ef1b-89e3-4421-926f-82933b54e77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3bb560-5828-47aa-8635-e38a709a192f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b0390-244b-4ed1-a3dc-4f32f5a9564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7799bce2-a9c5-422c-abe5-684569951f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac683921-a6b9-4690-b2b5-7356fb76b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d392eb96-57aa-45cd-b68c-6235050b2da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a2cbf1-a16e-486d-9824-4c0a1c866c30",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88b1aa3-0163-4b1d-a8ff-ab47c9772638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c686aa-2b51-44d1-801d-2c32b2ca0c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be81a323-7ce5-41ea-8773-c32b7798a3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9250d05a-3ecd-445f-99c1-ea9bdd49eaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84634cad-a374-49c1-8f38-e969d2ad8b1e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2e3196-a133-4b91-bfdf-82cdade50f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dcad8f-7102-44e5-85a9-9cb2884647f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3290cbd-2cf9-48dc-b172-c59146cec52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1307528-3302-41ef-9eb1-899c562cc28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7124ac4-9387-4bb6-ba95-00c267863c84",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e53506a-bf84-48f9-8a17-2ddaee5057be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407fcad3-db71-4138-9eb5-95cc40c23575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8334a99-8fba-4e1a-904c-e4d65dab6574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d92d5dc6-7d92-4dbd-8be8-e557f1200389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff07f292-880c-4ffa-82d5-c5e87ee36774",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a75dce-d165-4428-9ebd-fae3238ce920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85e02c3-e2a3-410e-9b2a-854fa749c607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ee7a69-b114-4658-aa81-ae097d22dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c93978-464a-40c5-9ad2-5749fd2f2f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ccee64-b859-41b3-a6bc-1ce2bff76b07",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a7f1f2-4fdf-4be4-9487-314a097524a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c72928a-10e2-484c-b811-2b297a28073f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8885aedd-7ffa-4934-8d76-a47e18688b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf85276e-24f7-4e8a-a485-73119f1f9a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318f9a65-d178-46b8-bfe9-f71aea1bb768",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b8642f-a28c-40a2-95e7-87ee2a22f63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbdbe34-446e-4833-8306-7c4d6b1874d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf2d9cc-714e-4c25-b727-bf4af2813b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b5173ab-5d95-4f68-9837-962a4eecc8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8442886-08d9-466f-98bb-1cd460d0993a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ff58fa-96e9-459f-a39e-c7387101ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb6102d-7a80-4ad7-9bf0-c22d50cb56e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa332b-e26f-4125-8205-10b51abbc07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3890fb6-f7d7-4b02-b4cc-e21a5ff38489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30648467-1470-4861-9002-92c5f5043a58",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14af9818-a090-41ec-bc8b-c80504ee9085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2979c19-7486-42eb-9ee6-5b61c847afb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160d98e6-075c-4962-8d40-3bafec8c2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e925064-166e-4471-a337-9df8852d1f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665089fb-f68c-4949-9370-5b31f061f362",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f7601f-65d5-4dbd-ae9e-fd8b554ead65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3de50b5-6669-43db-a991-3ae2802d8d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f26a0ce-675d-4b15-97a0-0551bcca3aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f77fa29-73db-4622-8b8c-7747e31fe1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd0ea74-4097-44b1-aef3-f64748bb934e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb3af7-8519-4837-8aef-114c5cd03c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d165bcec-cbe3-420f-97cb-292fbb57772a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de60946c-9e49-454a-8ce4-ec2298df33f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7adf86-e432-4131-a94e-b5390bb063a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938db380-05c5-47f7-aa9a-974c671c0373",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e579ab2d-60dc-423c-aabd-6a94eaac2dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc236202-2e65-413d-a77f-4ca55d1fe0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e73bb14-f294-4af9-8718-543c442b8173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfce63b-dbb3-46bc-9246-114835f219df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9e73bd-ab1e-4dba-94c2-9e5dc5961dc2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b089dcaf-a555-46db-a95a-43098e6f6fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c09ba3-2e52-4e46-8714-d17dc6f873b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f0057f-0fa2-4efb-8542-3c6f13747122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f59563-76af-4b8d-9f9f-4770639db97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23969e3a-972c-4314-ab42-8f1b656ca84c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef752163-a893-49ad-812f-2e5b91311609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db69a56b-8084-40e9-a130-3a6776e21b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc08dc-6a35-4e70-b822-c8442ac25d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58bbc175-2b67-4e6e-b4b6-72a77299610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a9921d-350c-497f-9121-ea9707dcb363",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890b76f6-e839-4054-a7b3-a8723e55e2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0019948f-ee13-4177-a321-27225ece32cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c5a9fe-ed7a-4c61-ac65-cdfc4e83834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20c21c8e-afad-462a-98ac-fb531cbfea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8acb61-8199-4e6f-8d07-4a7cb9635099",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62ec5b0-fda8-43e2-9a14-39a75a05fc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e9190a-8a54-41c0-8f09-442fa39af6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b06b766-d255-44ee-a8fb-04fdec3079b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "157bb1fd-4c6c-42e0-9760-f980e5271854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e704d5f-2511-40dd-b209-794a6291abdd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984920f1-a9d9-474d-953f-633f32805804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc85ab1-25c4-49f6-8223-b60934e04a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707def1a-95e7-4f30-b172-487331a32f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7454f080-bba6-4398-8080-78c92b274977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6795f5f0-1cb5-4960-8c62-4069ecf0a8eb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc43e61e-f002-40ba-ac51-683cacb22852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1779b6c3-a731-4bf6-b574-faf4182aa553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1377176b-6711-4bb2-80f4-3609ab8aa450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71a3af7-6f95-46c1-9d35-5c048b015c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ae0bf5-e120-424a-b15f-52c8afdbc3a5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d3f01b-2bdf-4e60-8c55-4d2d595b5a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f22c27-586b-445f-b42f-bc279b7e818f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aee1a99-04b0-4a84-b078-b235482c1b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01a0f28-0860-4f3f-a23e-d8e30f89706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0953eba0-dd81-4103-868b-fe4325dbfb7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afa9e63-a7e4-4701-8ed6-deb6a5d97ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cff15a2-2ef3-401c-9b06-dc2108c10244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7b1515-b1a2-4ea5-8409-f38d7263d030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e89bfe6-e793-4bfe-bd0f-21ff43cb8b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a72119-a275-4990-811c-e3e611bc279c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9395f6b3-2bea-4228-8370-23c6a6bf6e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e1eaef-a586-401e-8c55-1e4103c4f7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48244cc7-f778-4dff-9019-7942dae359e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7458fd32-b5e2-4ae3-9cb4-e6f4cc5dddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a6758a-04f5-412c-a6be-c4cb73a46b43",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecf9b2f-e57c-4d75-80df-21d419ee12da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61047a1-4f88-4a6a-aad3-3b7cd9363130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c5c4ee-a0d0-4587-b337-6a9ffd76a593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea5c862-b6b5-4824-85fe-973d3c622d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a4507-3075-44de-8801-e348c3d67764",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c7521c-9a79-42e1-b3c5-c6afb504dfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2b577f-38b1-4969-8b88-305fd108717b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12b6ef8-a1cc-4876-94fe-46e1bd4197ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8407dac-b162-4c09-9aa6-7e0114833917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe08d6c2-ee3f-4cbe-ac95-a59eea8b431f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcf1963-4078-4053-8339-8181562b5a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71efb8f2-30c6-496c-99b4-413adfb617ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d76a06b-8f56-43f2-8722-2b2bfb171e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c403d61-2717-4bfd-a24b-f2a38fbd1a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bb97bf-b8fc-49b8-b225-7bbfe377e63c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f7d1a8-1c26-44fa-863c-368311a23da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661f431f-a843-4201-b512-ac9a2b50d23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e576c7-90fc-455e-ab23-423602d890bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49cc8d9-f4f1-4e64-a5ca-1f6973e5fb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631af25c-961f-4da1-bb63-3a63b0c529ac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d2474-ad7f-496a-be4b-fb85e3144453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46f6b6e-923f-4d15-ac84-08da4977b60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a531974-1db7-4517-b43e-f7fc0dbfcaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "857291bf-0da7-4586-ba9c-707615662336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8314051-7d33-4c56-a19b-b54bcf7eb11f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af05d18-ef2f-43ab-8508-1e3090eca8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1640dfa-5a88-4065-a86b-1d671ee899e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd759f36-f8a3-4ea4-831c-f7d5cbe91fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "69142b99-c675-4acb-a95b-2d341b2c5254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d7c09-0353-46d2-bc6a-236c1e6fd874",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c938bb-1eda-4ac9-a538-573c2c68eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a05a203f-dbd9-4229-9163-28c3a97e9d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982db022-d3e4-45c8-a58e-42b3c261087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb820ce-dfb8-402f-a94b-daecf9e22f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98650b37-810c-4e8e-ac1e-18ca0f6c5c60",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b577bc67-3ad5-4280-8f0f-cde5948207dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581ce829-e0a3-4185-891b-01d8e098ca34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec38c25-b18e-4c55-ac57-7508ffe359a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d68180-353d-4892-b45b-85673867bfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9d1376-d7ce-4afa-865f-1997190eb31f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2115c34e-c773-4be6-b006-83b4e9fb3917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ee8f6d-780b-4193-916b-6a1c79fcc188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e5cadc-299e-420f-885c-629b848e0826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50a8dcd5-6959-4b98-bfb0-2235f8a9a97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46809fe2-cc99-4f76-a5cc-db4a9d81bd45",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6465b5c-ca07-4ab8-a930-415e2c12bf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8644ffa-f535-4807-8bfb-6a0da7bb5817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c0b0b-efc4-4edb-af27-073064551dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdbb36f-af71-4f80-859b-6044e8bc1da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef939aba-3c3e-4d09-be92-1ed82c9e8709",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2148432e-a503-40db-b3ac-a3acc2800628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36012a48-0dad-4072-a3e7-0225bbf5fa93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d2a557-3709-481d-bde0-75f020eaf8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc600bcf-302e-4ebb-bf2a-daf40af26207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5412c8ae-aa3b-4866-adf2-dee4dc902138",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df75dde5-6649-4760-afe5-c1ac2c846d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8d7b24-82b8-4b47-ae7f-412fb18cc25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bd976f-d03a-4764-b26f-a79ac21b496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5053d7-3c1b-4b0a-8709-3cc2248558b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f164b01-73b7-4181-9ff6-599c79447fde",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74c208e-5cbb-485a-80ab-598ea670d1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3458fb3e-f43d-48a0-ac1a-631de4112302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fb5120-0e4a-460b-906c-eed3c414ddba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bb80fd35-e5dc-4dd2-9f73-0f86c059fff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5617647-0d35-443e-b42f-f7eb1aa79e7f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af2d90f-9e0e-440b-8f2f-aefcde2d6350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ad2bfd-7042-4b98-927d-e7f90e5d35d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed058755-df22-4785-82da-7c305b412bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c28e97-9f3f-41fa-a65c-b580fdcf7bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa12a3eb-9351-4337-98bb-662d96a1ebda",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528aa370-d7e0-44d4-b0c7-cc6133bbc90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16c477b-1957-4703-bb52-48e9d85c5e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f25ac7-1725-4be3-9deb-eb789b919b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8cd8e6-5048-43d3-ad56-2bc7435eaa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3559785e-e47b-4699-a7ce-9dd278dc2865",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b78f9-91cc-4b72-b378-62bbea710014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466885d9-0c22-4935-a11c-c828026a52ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2199e9c7-4ac0-4f4a-905d-7727723e7b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "027d5d05-d2b2-4138-a93d-258c7e1b25de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9df965-5d4f-43de-b4dc-780be9df6337",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f9d972-90b4-463d-9fd4-ba9f5f364be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf0d7da-aa26-4f12-9856-d2149e1ddab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48d2b88-4bb2-43a7-b36c-89adc074ed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbff2c7-f9a5-4d36-8ef3-e6881811bf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb63ebc8-2c0e-45d9-b601-9e15a07bbb68",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ab7ff-b5f8-47bd-b26c-9d3a61606ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d9a04c-e32c-45a7-9b24-ee8c33a049d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2032131e-efa4-46cf-bd1b-6f52bc0c51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b80369a-9964-4d66-baab-28124ffb28f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab75797b-26c8-424b-9d84-f6c18acb66db",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb0d27b-3521-4f63-84b0-3f54e475c9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfb373b-d048-492e-bdf8-a1f6d0148bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df53b08-5fa9-491b-a7d7-9818017a120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8832384b-bd5d-4df8-a85f-6658b2595c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da02ea7f-a484-446f-a91d-23038513e928",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a4d4f4-53d9-4c42-b11e-7237b993dcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ac81ab-c5e3-4713-8505-f784695a3248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f31ef7a-ed8b-4e60-bf71-7535c26aaff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a91884-a6bf-48c1-8fb0-a272abd46a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d84573-7194-43e0-919c-6922fc7098a3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ba1dda-d3ad-4a62-8946-94962f98f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5ad69c-2657-42fd-89f6-d34f4dd3ba25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e0713-aea0-46e3-867b-2d31fed3b088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9793b99-1641-4f26-af2d-5878ccf384b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfd98a6-3c46-4675-bfdf-4296dd7efd49",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa79bfc-39cb-4612-843b-e2e08acf276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702ffb91-902b-4f5e-87cf-ca54e08ae6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a72756-b2a7-4449-8a12-d50d1f8326f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "573e98bc-9ba3-4e03-b2c7-132baba0f406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6351fbfc-ed75-4384-922c-e155056491c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1337d59-8f14-44df-b121-14cb88f48c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a12b59-397f-4c83-87e0-9071949e55ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b2d76f-a41b-4d0f-8f51-97d7b881555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "728f50e1-ccb7-4a6d-b2d0-5c72966c13e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e72952-4312-4426-8a35-4db517f39534",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768c6e37-c48a-40ba-a46c-3876a8e9ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32eea00-5e60-4417-b1b8-e9d102d5025c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50703e83-a2a3-4a69-b478-9965f85bf6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e446c89-f3e7-48c6-9cca-3481d06bda5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aad636-8232-424d-acf3-0ec735febb16",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8254db-7a6d-4803-a9da-4f1953222ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb33743-a32b-4636-bd49-923f11f24c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5346ec92-2c03-4ef1-91f1-99dcce230fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f33812-4188-4177-b3d1-6854bb3d9eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b064edce-7ae0-434e-afee-0a61f97bec2a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b23fbb-de89-402b-bd4d-2299de193dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1553626c-fbe6-470c-a56c-7deb10f2bbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4b2c2f-4a82-40ec-8361-f90d0d39992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cc5b7e-98ca-48a5-a159-dc34049671a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb9d99b-64c6-4221-a1b1-33ebf52be96a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b90200d-bd02-409e-aeeb-c7133c66313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a808c9-436e-470f-8b77-681f987eb71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59d12a0-84e9-4962-add4-ea85c0c3b7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d95012ba-0961-4f9d-a51d-98a4b43ca26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e6319c-8a18-4701-a89d-285aed7ee27b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c422dc4c-cce5-4452-b7b9-bdaca92b466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed51e17-ab82-4b2d-85c7-6920e0a9ca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a9fc62-ef99-45a1-b722-573f39233c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cdd3d9-7909-49fc-be15-d7ace071a5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10431ba-1735-416f-ab7e-08cbd40fd451",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ebe684-ada7-44ee-b749-c6c5faa7b30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a97ec5b-5d86-4db4-a85b-69b616cc4a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688feca3-a2ff-4ce8-8cc9-aa52b0746cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "313371d6-a2d0-4f76-ac14-1416ffd8c64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc03d5d-e522-4f7c-b6f8-fb69751e5b92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c98bffc-9064-4adc-9408-3b36bcfb998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c94c2b-c1d7-4a49-8012-932d0f4905e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cb5041-7a3d-4198-8347-f2c97db4fa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "151f9205-8dfd-4d5c-8465-dbaab281bdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9890f8fb-4dec-4c8c-a0fd-5bf0a3a2827e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f8f8d4-c788-4093-a5a2-63f65e5b0513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb6b021-e4b1-41ee-8f1e-5012d4bf9dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20b51e2-c1b5-4a27-ad5d-e3ab44baac81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74c32e79-9b72-4a42-9056-115a825478c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b464261d-347c-4f55-9cf8-2cb52e38eb6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240ea371-a599-4a73-9b1d-72c4c945cfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5c334c-6458-4801-b7de-493a0661f224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29845e14-722a-40f7-b496-f7ac355bca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f46ff703-3f2a-409f-879e-c987acf1c43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaea68c-9b45-4ef9-82da-87c708eade86",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cdf2bc-28ea-420a-9295-516a36c2d2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee9e14e-8d2a-4c8a-8c9d-6de8aa5af57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef67781-d211-4358-a5ed-292d4938bb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef292aa-1d03-433b-81f5-a2b19a177d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eebd051-743f-4c11-8dc7-2f4641d3b536",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904e671f-6b80-4a38-b623-5f16517efe8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ade71a-deb2-4713-96b1-52dafb5ad3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505e827b-914e-4d22-95b1-f4cd13d2c5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "973e1f0c-4efa-4b10-ad79-b763b189b842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ad7c9-8481-4c63-bbc3-8e00fa4d1387",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbab3d0-c900-4256-8e9f-fdc6e5e1851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de48acc3-570d-450f-9770-807ac24ad236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c0bc1-02f5-4cf6-a88f-8b743d973231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3540b23-88b6-4717-8ec2-82cc934e2dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00292f88-d594-47d1-bc04-ba4fb9703a0e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5da1b76-5632-4d8e-9634-b435ead31f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b905666-51bc-4438-b4f3-28a4c37bc5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56a466a-3dae-403b-8e27-dd874d2fc138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d2c745-a60c-4d21-8a7e-bea213095d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6469307-6f35-4800-89fb-aadbc9e407a8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525dd8b6-31ab-4f97-a988-af268ac4d91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f68188-28d1-4e3e-8715-af25ffd32123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa4de01-6920-4291-b287-02ade712a532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0ef9c6-a7c0-47a7-a5f7-3756feea8dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f098660c-746b-488b-a81e-c97feae9a2da",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a2d8e1-e67e-4274-a283-f93636f0b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26637e98-aaac-48a2-94b6-9294b7dbc55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779a0bb4-9d94-4415-8b57-e686a0f8fc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf867a3-1868-4a5a-9f74-a2630e83c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58db2c77-bfd8-40d2-abda-2abedc5e1834",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3b3874-5a04-4a25-a156-b76328508feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb99ab9-029f-4c04-a866-e64e5d444253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b14fdcd-90e0-4fa5-8ba1-83a444093a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f6a8cb-19b3-44ec-86a9-2ce198fec6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007046d7-a4b8-4f96-a8e2-f5206ef9a0b0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38979185-9a17-469d-9830-61b8f1d487f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b495a28-3f12-45ea-8549-04017163dff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d377e466-8d2b-414d-9096-8561528b5e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be04bef0-babf-441f-a046-f003b452729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab682e8d-d2d4-40ae-b1ae-aa9f674d91bb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de8a279-e49f-4419-aa4e-a4e63b079df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14f9f26-8455-4913-9d48-77f37be96b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481e25a4-1e5b-499a-8e04-8ea0ce2b7d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d083c2-018c-4b37-bbfc-c0efe5f47e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ba43f4-f79c-4b18-a803-cf6e605ec0e5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f95c65e-6ee4-4354-a961-2f39206c867e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd433aa-ef2a-4a27-b2e3-b8d7085de6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22532732-7891-46bc-bcc3-caeb444bfbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7006d15-47ec-4903-9d33-c4b62fa99805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caa4ccb-2ebe-4b2d-836d-eb834d9a752a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed371ff-6c02-48dd-9d19-025a34d2d3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dda5d5e-78c1-4137-b858-55d5d4beda51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd216e9f-ca4b-45b2-9c86-7de9b1c21918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3048b238-ace9-4727-a652-603c556713fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea217b2e-600c-4a3b-b491-7ef3d414d15c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bedbecc-7310-4c10-99fd-77452cb38218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c95ba5-369b-4a67-ab4c-1a6f99d17cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b6e712-112d-4375-8f46-d02dc2c8caa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2836e058-b7d6-465e-b91a-5eac00792ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba473d-e663-4683-96f4-5891bbcba330",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d1ac6-93cc-429a-8f43-3b7b4896b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c2ae81-6ca3-4e17-9f19-4d09e84cef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5796a355-965a-42c9-9321-edc7c18be47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00663c2d-75cd-49cf-b42a-fe9e330534c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c2f68a-5c50-44c2-929c-fc43bcd21464",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960a1099-d7b7-4587-b1a7-1bddd13783e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7a92ec-a278-4ea8-ad52-ec6b1be867e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea9885f-261a-4064-abde-f2a1bb97ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0df8cd-be43-4cd8-ade2-076ecc0fe358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4a43df-930d-4707-8359-2b8166e90aac",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72491e28-23e3-47b3-9471-aaf13f891781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f9ba3e-bf2f-4be8-9e1a-5305ed470984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d251db5-d451-42de-b17f-9e03c56f26e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca6be44-7cb3-43fe-838a-625873a5d8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd463b2e-fc85-4867-b820-946abd903e1f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b8dc9-cb29-473c-932a-467a1080a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e308265b-0b3b-4705-a7b3-b14635a38572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138b30e2-0042-4128-814c-3aa51685aeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02462e05-794d-45a6-9ca8-0dce729c9517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23c7ac0-60e1-41bf-9e65-d515549acaf9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c25e99d-9490-457a-938f-53b5701b8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004e8f4c-f2ea-488d-819b-d1be3ae2b89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86d1dfd-d753-47ad-8d17-b1de5cb99030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89408cff-7777-40db-821f-8fe79efe766c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28cfdfa-0aad-42de-a63b-35ca8efd56fc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420c43c5-b106-42cd-bffc-c55fa9fc075a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841e12f4-9d94-4d42-845d-34c7cabcebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481b5358-03ee-4f0f-855d-da94f56f72a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d32298-460c-4c4b-90ce-1eb260f76bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618a306c-92db-4f8d-94fc-9828fb034a65",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eb7be0-0ebd-45b1-9e12-1f58a124185c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06889a91-4e8c-4f02-a39e-ea74261154fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e337a254-03d8-4bdf-8514-7136476baca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f947b5e8-6b18-40b0-9fdd-30f64bcc8f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533637c5-de02-4d58-a870-5d7d2b1558df",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5144e4-5ecd-4a12-b6c0-4fb0e7a2e4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48dcd7a3-211b-44f0-963a-976be5bfc0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e22af5-e212-445c-806e-be37b8d6fe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87107f07-95f1-4b51-83ab-f89d08f95a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5e1a80-99c6-4fba-a9ce-49c63bbcf3e7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24122251-2439-48c0-b280-77e4b672e62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5473f17-18ec-4f8e-9ba2-585d8cb334bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9832b6-5b62-44af-997a-d92d08a70c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f5ef8b-45bf-419f-9122-3c3ee26399ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b508326-2931-400b-ad35-a50016e71bc8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71db73ce-ccbd-480d-9467-ece691f86dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29872fc-a641-4666-ac15-217308851a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428c3e1a-8dac-4391-86bc-406127158634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d80f3f9-9571-417f-97fc-3e1749e034c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd65d26-6c56-46ca-a89c-2cdc6d9802f9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d30b90-4ef5-49ef-baae-86f9efa9517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed87253b-3acf-4f16-93e8-357dd1a51fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfcb283-6214-4e34-871c-be465b0885d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "643a0e03-f21c-4835-92d2-fd996a585324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beb9981-3572-40fe-b1a6-a349ef22abcb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a559660-7d31-4542-b711-fb288c0cc06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac30b784-d575-4763-b9d9-ce9474eebe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda68590-ada5-4130-8744-d42aadf337ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae20e88-8f12-4d48-8991-7db0e51466ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea68c0c-a8e3-43e7-82df-c820be23e54f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b57ca7b-4833-4260-82e1-0321f5c146b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490225d5-a762-4113-b5e2-1db79750d7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9625c1-b5fb-402b-9cb6-171e97338e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "021de376-422b-4938-9e71-63f3213837c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7daa25f-1735-4fc6-a37c-ddbbb0df999b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecea8fce-bf80-4f0c-a5db-1d86703b2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289aa869-0b37-4fcf-a8ff-8ba88b590e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228d0228-4426-443e-9e6a-15551195e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2337a2b9-034b-4917-b4e1-6b107abb1d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f072a79-d33c-43c9-b6bc-97b500c90b94",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c87e8c8-e732-4224-8210-7f7007fd3234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73af5681-e5e1-4fe5-b0f0-d4abc5a1194e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992563e0-742e-4596-960b-e6606194b215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36a4d5e6-421b-44bf-a83b-740962fd89ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e60e99b-c02e-43b3-a650-0257c0b1f492",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa352c1-64b4-42d6-adbd-fa1cff955501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c715117-b247-4d1b-9c78-6ea49844a161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607450f9-e7be-4971-80f9-a1b146a39e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea98e35b-c775-4f3b-8bd7-d89b9c470b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd72d4fc-2843-44f8-b651-9afeb7f2e8a8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b5ab6f-5c6c-45f0-b349-3a90c33826aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c157574c-98d5-4ebd-8dfb-02d056480fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0c1959-a95e-44ab-8cd7-e1e418fc652e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec3c6b6-4bd7-4d0b-8745-b030150dc2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56c175c-ed69-454b-99f0-316e086ba474",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f21be-5a9e-4220-bcfa-4698f4f83fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b999aee3-05d5-4910-8939-00418ce152fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed269af-9316-4899-b032-7207ac3a414f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b85b70d-267a-4707-a7c9-3da18cf45954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d15f385-200c-455e-94f7-055ac3003b98",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d3388f-9351-4d12-a23d-946e87db2569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "33fdfcea-f94a-4f2a-a89a-e5fd1f19b433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455f36b7-a9cc-4b49-9bf9-301d4d503924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d77b815b-7401-4bce-aceb-4a1e20f3d0fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69faa015-1d17-4c09-ae27-4c5ce98be9f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8017354f-3773-48ce-8d5d-862b8c64b32c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c9b292-4dd7-4a40-adba-b4ced9c9bb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4c0fc50-d362-4f68-9197-7bc2a558f417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546ba871-99dc-4fde-b898-2840b752e034",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79bf8e10-0bf7-49f1-a198-1d1752445643"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac693f42-5c71-4d59-becc-039e5b4302e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eb1c002-08a9-4726-8310-d36c1e899332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b896b070-2c8a-4f7f-acc7-2d9a59377ff2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dd0be2e-0943-4b82-ac87-4a884824d151"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34ab3f91-2dbd-4620-90ca-29bd9e396c48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1737b6e0-e75c-4a8b-985f-4d70f7eacae5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dcfbe6d2-6fef-494f-aeab-b492134915a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fd128d3-137f-45c4-aa92-ec5edd9c4a80"
                }
              }
            ]
          },
          {
            "id": "d24ef254-2377-430c-ae83-c070a3cb427a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "996dec75-29f6-43a4-b5e6-21deda4f1421",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f02bd7d-deac-4595-bdd5-804a39e979ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69df9570-55f0-4751-832b-309d37c2dd05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "132d2137-fdb5-4d5d-8946-79b126a23924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "493db4ce-dc58-4ad9-8ebb-03c3865f0dd2"
                    }
                  }
                ]
              },
              {
                "id": "af307a79-443e-47da-8214-91ef554037d4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3425ae1a-8151-447f-a389-1d9c906bd918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32e1981f-b62a-4f10-8902-cd180928326d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07cbedd7-7034-4157-a7f9-55fcd323acf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "855f4a62-1411-4977-9e57-945ae579b628"
                    }
                  }
                ]
              },
              {
                "id": "ac741457-2af8-4e8d-a607-272f6ebbbdb5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b88f4150-e508-4e56-8e75-3e4ced2c5cdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f61ada2-9b19-46b6-91be-194acbc0c4ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07d277ef-99a7-410f-aa40-bee337d68925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "851b07fb-7053-4cb4-9226-de41f05d0659"
                    }
                  }
                ]
              },
              {
                "id": "33b442fa-98f1-4a52-92f1-0861cbef8ed1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c98a5680-f7c1-487d-af81-23b089f0ebca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b9b0f3a-c132-4a5c-97f3-ee24eff6d771"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ea8e476-4187-4efe-953f-1d288c59b6ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c9fb010b-2d20-4a5a-a3e2-76c19451440d"
                    }
                  }
                ]
              },
              {
                "id": "6ff006f5-75cd-42ae-ab13-f1a87523def1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0a0904d-e933-46c4-b19d-534fd6786409",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46dce2cb-fef6-4c2e-b63b-6df147663fd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "975eff73-f194-4d4d-b86a-a735c5de86e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d24d73aa-4a1e-4ad1-a343-cbadf149348d"
                    }
                  }
                ]
              },
              {
                "id": "a12b90ae-465f-4521-96e2-8204a47054cf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d06374ba-e9ae-423a-83ac-4e03d44d19c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc528e48-0036-4f5c-a0e4-7ae698fae1bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e79f81a-5417-4c57-8373-a6e077d664e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9fe352e9-4bb0-4493-be7d-13078d719725"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "498a28a0-56b2-4aa0-977e-86d992a049b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ec21237-d204-4e12-81b9-e3ff9525cbfa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1281e996-6709-4945-a79a-420e730886b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c88482aa-9642-405c-87e3-ab101628a467"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c09d40b9-b805-425a-8174-086996735dde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "048bb5c1-1adc-448e-8cf3-8ac590f0adfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "773f7da2-cd04-4762-9a9f-a63c44de1527",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56ef787f-5b5a-4039-93b2-2fff4726332e"
            }
          }
        ]
      },
      {
        "id": "3e2c837b-3a77-48f7-8e14-c1a6aae88f29",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3e8fd6d-5aae-46df-9400-f7b6eb524b49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d70756ff-d49f-4976-a3fa-4d99ef9047f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7499f48c-2495-4e72-a6b8-c6bde3b7ab02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebee60f-0b84-487b-a86e-620c71064e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26fa8f4-c424-4585-a158-675763c3779f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3535b95d-05f8-4b7a-a421-b34178c590a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ed8e0a-a399-48c8-bb1d-1385b941e4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6a9993-233a-46b4-80a5-68680f257b59",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731ee77d-75ce-4be7-9f74-5770f87ba05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d754dfdb-9a1c-47b4-8683-9f35af3f04f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e87f93-3d39-4d91-8f9e-8cb204f43cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e325c151-9d63-4e82-a8e2-be2a7f0fe8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f2a46d-415d-4ff6-a225-f2fe0f199384",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c9efa1-3fc4-47b3-868e-338e0c1a3fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412da1b1-56e1-45b5-8b67-ce6db0671421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ce615a-6695-4b81-915c-dbd03db48e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ade06b-aaab-4654-85cf-ff6857e13153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1304d4fe-37c9-4faa-ac2d-162458181d6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eb5e27-be50-4e2c-83af-9743a5bde4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d912795b-c624-44d2-9b8e-3e3108eeaf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aa8784-bede-4217-a761-c25bdbedfb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97125a11-3b8b-40d0-9576-ca7cb23473ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2880b727-c12d-4f93-88c2-1263931c1bd4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897e7f6f-fe0a-4b61-acf0-c9a4fac8561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbaeaf1-8807-4fad-bb01-d10537e863fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e33eb28-e36a-4481-9b86-f3b067f35dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f211eb3-e529-4e16-8bbf-9b02dffa9369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13008791-568b-428d-a81d-440dc4e9a760",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefa6a6c-745a-4903-b3ed-a9aaea802cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f41748-56f3-43f8-99f7-542ea1f3b0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d30cf3c-ab1c-4ca7-8ddb-ee44c2cd9aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "469db3ea-41f8-430a-9f1c-41eb8cfe7272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c1be5e-ad8f-4d98-886e-8a227930c2b6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220156a3-7cfb-4888-a44b-a9289c397c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc2a399-595c-458d-86fa-bad217824781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79aabdb-298a-4d52-b0a4-7a60b62eda50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d330376c-3100-4e59-bb63-0a8d51b85079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba31eba-36a3-46a9-821a-15fc35ca1ad3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125913d2-deda-4f0d-8829-627416ae3854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214a5866-17b5-4243-acb5-564404c3e77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0440090-e988-4a79-943a-caff837cf990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b3a364-5c14-4e01-bbb7-2974ff50fb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397494d8-ace0-424b-ba52-d68f6233db21",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830acd97-94b8-4798-8ade-a8af5020518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16deed43-370e-45db-bacd-42468d618065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8843369c-4371-4c77-8abf-d4e5884eb70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f3cc06-a13a-4269-88e3-93062d791d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ebe9d4-63df-4207-bde3-b20af4a346fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdb42e0-e4c6-4706-8ff9-9b5b6a64f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5339740-b311-408e-a06d-9e96f04c1228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5f9231-25dd-4ad1-a386-5b378899dfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea20b33-67ba-41a1-ab97-1f5e44de2b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d54e8f-4d76-4246-b7d8-4e186bd591eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de3cb94-34e6-4676-bc2a-d209a5d0c8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076831c4-bd58-46ef-807e-74497cb8e79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8468a-47ef-4310-ae6a-919b8e7523ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f234e3e9-98e3-4b85-a9f2-6f52cfd52a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a2c50-62ef-408b-882d-bc8725541bc5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc0ad58-1aa8-4492-a900-fdc259c4174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42eb13e4-c979-4a37-88d7-61d7f1097238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e851f1-62a9-4266-9474-318d686a8865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc257d6-00cd-4003-b6c3-29662d798052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caa6b8a-cfaf-4ba9-914b-66dfa9c57588",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f498982e-3c3e-4cad-bd5b-456311a730ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcae77b-6b87-4cf9-bc5f-c553b37a3383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fc9950-00da-4700-a1ff-2115ad5f5cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a595de-c80f-4489-a433-2905ba7ae8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ebe67e-8b74-4eb1-8389-729a5b7d157c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd37a21-e8da-4a64-9cf8-12affde82ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea51d733-d0e2-46e7-a250-51ce0cb35010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e398f2-65bf-4724-bbba-f65a607df705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdec473-5230-4436-a163-1a223d588003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88343bb3-9b0d-4e31-8108-b82e6750edfa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eba157-d9ff-467d-aeaf-22aea1dcd389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e3c560-e210-4ba6-8725-1ca5c71e8cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd02eb1f-62fc-4a08-9e89-38408f8cab17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cb0511-2c6a-4cd5-aed6-eab0df9c8118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f706b1-4404-43a6-a6df-059f391b55ab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a67a73-d6c4-408a-8b39-196ffc7952c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43da569-a6f3-41e7-a511-954f3daf6600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7637c9-6b78-419d-bef9-1dcfbcdb21e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c204cd-6611-4b45-a588-cb4f2e242dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52177529-4fdc-4fdb-968f-cc9d320fe4a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdf255a-1ad6-46f8-8e52-9b304f7dde3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4862b85b-7a14-47da-b13c-bc5259961cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf85492-b41a-4af7-bf4e-fe418366c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec08f82c-098c-4368-a5a7-e5d6a7d9cd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b36cb4a-b793-4b96-951c-9c78efadeb95",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad79d90-3867-436e-ab57-b77f31d1d729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3b9ddf-0bf6-4a23-9bb4-a94e5eb15d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f867ed2-16ba-4c2e-818a-766661a7d332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe774605-a4e5-4425-9f60-8c01d7e3501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae85193a-ce2c-4d95-9d5c-c573a2c69f7c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03cbf9f-3d0d-4474-ace4-2bb510193368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f25a85a-4898-4d79-9378-c888578435b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8c6514-c7f7-4e90-9b2e-56300f267364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4996dd00-2944-4261-90a2-7513d44fba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2550593-e167-4ab9-805b-cf964b3cab12",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206b75f7-168f-48ad-871e-90a9f7ccdc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fefeb9-792c-4da5-8565-24dcc98a59a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dd17ff-4548-459a-9de5-c7114bc01d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40c6464-c3db-4a7c-9f31-1fb72d332ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6b77f8-d7b4-48f5-99c4-1ca2196396e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba52564-f33d-43bf-a657-85907a3fab0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49281448-3877-4770-aef5-1ee4465986fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77754246-cdc2-4fca-89c2-f446db6b4773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b409d3cd-e9a9-4d94-a638-2ef24568308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af8b678-adeb-43a6-a4af-1f38b2292eb1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e444bde4-9915-4c9b-9ffc-f57f55ded41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674ecaec-c52d-4874-8bfa-c7c372ae9538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10499fc-7627-4cba-8377-b09ad422b11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb2ab50-258f-4251-aa0a-9afe19e26d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20867001-d3cb-4cbf-a449-c58a8fa83bd3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fdb77d-f17f-4e26-a2d4-5ef7a7fc51c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b847ad83-30c1-4e77-9a1c-368ce78f3cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2a9682-d006-4a02-8907-0256933f6cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453e9c9d-9ecf-4937-b5b6-227bdac642db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07f849-27b2-4f69-8cd7-cac369272892",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faa5a4d-94ce-4039-8c68-9a7561ae163f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797bc222-d180-43eb-980e-b96b5574830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a365d8-b796-456b-836b-458ff4ee4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5280a42b-dd8f-4a02-9821-daf38f1aece8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ba0e4-6c82-4af6-bdd7-f0d115b8267f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818c1544-c17d-4d95-9456-5d9d7a899b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65438a2a-7851-4680-bdbe-3b22c569f9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08b05de-c27f-41d7-8bdb-da2351d9636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0138e9-312c-42b8-8a50-0bbe66afccd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920781d0-96e3-4e75-9b66-dc2174cbe55f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df85dc5a-4b3c-4abe-a59b-0a169c0d46f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb793d7-1f5d-4649-b7f5-55f036a7e5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a600013-2972-46ee-9175-37b7b3e115f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df148ee9-4577-4bd4-80c8-2db7b96ccea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d1f4b5-5f14-46ed-b9e9-f59b4e58837d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5272d4-04ab-4bf1-b084-b7921c49f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53adc5e-bbd7-4a33-859b-d40cd95828b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea244d2-892d-4c29-bb5c-d4cc2fcb9aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080b8ecd-f7ca-4b81-8997-35d1a5559471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee729f7f-832f-4ca1-98f0-41454fbc2dc4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f3d72-207d-4a34-9d17-ef3e31399a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9858f250-818b-4a7f-b943-109bf5128e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d25314-7ec6-4511-ae0c-6fb64f95083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "788a08c7-ed21-4937-bbf6-886f33b40db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743e9964-f2a5-4531-b5bc-0980de7ed99e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdb757f-1815-4c5d-9029-48a979669428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b085ff4-0bb1-4590-b4c1-38cdc714e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35b9a0f-819d-4da6-b5d1-fdfec0948579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4993519a-f779-4a33-88b5-79aa1a7d0efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb95bb3-2034-486c-bbb4-039e1263f197",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4545e86e-a13a-40db-988c-4bbe445a73a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f506d62e-b5e1-4e78-8b60-5b01442529e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b7c768-4ad8-430e-87a7-454dddf33094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3d8b37-3b94-4caf-9339-bede6eda8309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4557b527-fe88-4f95-8ac6-3b3ed356432a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a464fb-c7df-4efc-95b3-36d60207e1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061f2d79-7b9b-4c1f-b6c8-e0ea268faaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf93735-77ba-4cbe-a6db-829bc80b1e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6569ef1-1f59-4938-9f84-4889d22a1aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad0766e-6d12-496b-adff-6da2f3fa605a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62665b3d-19a0-498f-a848-2e4c96c595c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b89710c-e1fe-4c71-9684-bfa9967407ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0706d2ae-d180-44ea-a10d-905aa3210e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71333944-c9db-42ff-8a01-ee2e1f6d77d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "335a29b5-c0bb-4463-ac1a-4fa967b4570a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c98b555-d30d-4aa7-a2cc-40e3a23d127a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0236b394-8073-468a-b839-ff1a4b6f87f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f77075e-fcaf-4827-8226-8b9f20b106f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358631f8-97b3-49fe-b910-8eb9f4d51170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35b98f77-6ae9-4846-97bb-495024c3066f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d7aaacc-f605-4138-aa8f-d323c314acbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1330ebb-a6e0-4d54-854c-e63460f4f09b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1034622-a339-4fc7-90bd-6a8be60eb179",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9a3b82a-7a16-4198-9407-b827e9263e5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b7ae4eb-04cc-4c78-b63b-061f4e75e3c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14e3b2b7-7cc5-4f24-a41b-194a41d488f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d3281e2-cb9b-4cb8-9cb6-fd55af968fd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ae9d4fc-f50f-4387-ad72-cfe7b535f1f8"
            }
          }
        ]
      },
      {
        "id": "30893c04-4a33-402e-9604-bffa59016aae",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6a9b7429-5c3d-48dc-9215-46ce91aec8a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f694114e-a81c-49e1-9b84-f898062046fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cf7002b-de41-4a27-83b9-915c5ec7dca4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae66c43-fb51-42f4-8765-69aec6c92817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095977d6-932e-43a0-9178-18abdf03012d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec7e7c2-404b-43ce-b32f-2f480dcbebb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6d3cbe-c74b-4d2d-9cbb-8e2778339a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6a2ec7-c432-4c92-b383-6de270c82c5a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d025de-acbd-420d-8bc8-8b494bccc932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7963e014-ae94-469d-8339-fa243d38c458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657c9103-eb7c-4798-8f99-0a28df4d599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9957fe06-e7b8-48ee-8370-ae51126810a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff836c7-bf8d-463e-b9d8-5b46a1ed648a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7622b83a-9735-4e29-94de-e45d7bc835e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81aff70d-4140-4631-a918-017fa728f9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1935920-cd9d-40d0-9f4c-0c303cf41fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d6623f-43d9-4ddd-bbd9-4defab716a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45056ec3-046d-421f-98bc-e88e21f5c185",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3d6a07-63c4-4201-b3cf-299dcbfdd201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bc5a4e-b27d-4830-8fe3-01bea9f122ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71947206-7e4b-4375-b78f-3a8763445d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2476832f-d0c2-4486-9bcf-6d57ea901a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569517e-34e7-4221-9e7c-e570fd3c1885",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b214c0-a116-4a89-9cba-32f92c188b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fcc7f0-ac7f-45e4-a6e8-6e73c7bbd998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1715c925-6131-4aa6-a09d-3ef474ccead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b153f3c6-eefb-4c2f-99af-66e000d4b3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda98b86-2ddf-479f-a70b-e7bdcbc2bab2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb55be3-b6dc-43ee-aca3-8ab37f386c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7f3183-aa6d-4bb3-8710-f17fb0d07979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab58902d-e666-4474-a71c-6bb39069dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b92b49c-e500-4d31-a48b-9e1ed1e0825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ed5667-f35f-4b6f-be84-a8437d0bafab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c4674b-9147-45c9-80dc-d5eb029a484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021583e1-a0f1-471b-acaa-dcca377d3851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e2ae8f-7b57-44be-9f38-72b7e319345c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2cb6a4-59ca-4333-b93b-899026880c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399e0e77-851b-46d5-abf1-03d9797ea149",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44df5bbe-5a35-462c-a161-401b3aa2760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff32676a-0a71-49d0-9c08-1fe8b016b650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3389e7-aa63-459f-8b78-1ba17e8a1355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e4cd15-588a-4ab1-aacc-6c87983578ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013f2128-cf31-44ad-bfe5-265fccc11d99",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa25ef46-a799-40f3-ac2d-bc9b13b17b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7160ee-7ddf-422d-b4b7-158898fd79c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2bd1c1-de43-40d9-b9a5-61e1720c9c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd459c7-ba33-4648-9482-844725e28eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac45d74-d28c-4a5d-b3ec-40fdc8b4ec08",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1267e20a-bb2f-4545-aaa9-b942933290ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539f45e3-0d1b-42c3-bddd-fd82fc7d959f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7e24a4-fbb9-4a33-ba09-c3cf68ed77dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c263e7af-8707-4605-8a01-082a987ae0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638b735d-a540-452d-80b1-5a2ec5a94e3b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27eda12-4d07-44d1-a1cb-eafa280bad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f33ca19-520b-461c-a6d1-5997e1fb8cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a261d2a-9d3b-4790-8557-a7d54496a0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b65e542d-976e-4e57-b7c3-ab0202ddfbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a5343-e822-4514-ba93-93bfa9cfb93a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a031d879-7383-4f28-9efc-7f5d6e6c3156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c827804-497c-46f1-8dcb-4946f5ca803c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb78f83e-b43d-4cdd-8ffe-d5534e0fe3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7a476b-f8ea-4183-9fb6-1072f07bc368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf108be5-6b76-441d-b2da-b23bc19d8023",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a54b103-4876-4e7a-b296-abaa805002b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7aed87-8d96-4a7d-8272-76e259ac6fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a067024-af11-40a9-80e2-3656cc6748d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba4110e-e78f-4190-8550-d50f399d8cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb71698d-6b63-4cb3-991d-29023d99209d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c58be81-bd7f-4899-9c2a-dcfbfe92bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e18ed4-b0a6-4b9a-af82-2c5734d12108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37517822-0d8f-4841-8d42-ec31decc0d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2505cc84-01eb-485f-968c-9897e081e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00674b74-c0bf-4f14-872f-59b385be1a3e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f6476b-988c-4fe0-9652-4863b8da7475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01231b7e-242d-4d32-acc0-b6e939e33728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece4a3c8-570d-4dad-aef1-90f81a0c4139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7db1812-33b4-4ec2-84ac-18f0468e757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e917b24-12e6-4ba8-9940-6b1f2a3fccb7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b196296f-c485-4914-be8e-f0f948d3fc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886385ff-db0c-4c88-8730-50b4d1b5c28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21e82a1-51c2-4c0e-8efe-21f13699d2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4bda60-6957-4a17-82b7-bb563feae5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca32a8f-e94f-49d2-bece-b251c735ef57",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102a2b46-a98c-45b7-9182-2a56f24fbf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f554b2f-1337-4caa-b5de-57a6a800fa03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d8275f-b963-4813-8385-00fefc382c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "178dbeea-57da-413c-ad50-d3ea6bcd7e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1469dae-368d-4f55-9f36-32f0fffdaf64",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60c67d4-e8c2-4503-b407-cb13fbf6fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e620cab-2652-4deb-844f-bf285f9808cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630075af-1184-4c66-ba71-650f81f9d4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8d1842-841f-45ad-bf70-4021aa242ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b9f6e0-443f-4df4-92af-df625645fe58",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed38a5c4-e4bb-4ce5-a036-e5d1c212ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484465f6-a1d2-44d2-9ded-14cba56b59d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9454ecc2-4a98-40ae-a9f2-3e1662d1a067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d8b332-f1da-47fb-9686-34deede67045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a860f9-e7f9-40bc-82d5-78ba75003138",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1daf0a-916b-4209-9bc8-bf0b8c3eb770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b3e577-70af-4539-aa77-c2423ef0a2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd85b43b-c1c6-4997-917a-4db0bd9ee47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27fe4d4-9773-4ec3-83ab-b2b883782a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3b91c4-b8c0-4994-a895-08527056033d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2286a133-fe4a-41d8-bfae-9774a50046e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7135f420-51f7-467a-a046-313c7284f11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ef4623-c54e-43cb-b80c-920acd806003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15d189e-a4e3-43ed-a92a-49ed3e47b1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ebec13-80d7-4e26-a3c4-da73de42dc95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513203c1-c866-4a75-8ebf-cfb34331a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd7de45-0256-4045-a603-e892ad955b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb0733e-b6b0-47a3-8122-d161580756b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8cf0f0-0450-47bb-837b-559defc7610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efebc62-9c72-4079-ad80-3a93bd11400e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20cae28-0502-4076-bf76-3ceb381ad7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2e582e-d10a-4d8c-9001-fc93934782eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fba6ae-89c1-4889-974f-40ff8c9057cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "182d4e2e-a8ba-4c62-b24e-35ae9cb286f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e948af10-22ae-4958-95d2-8bc59f1288a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf91bb5b-bd33-4afd-bdf4-a16c45f4515a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcb1062-b68f-42e8-af4e-08faed3a9c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeb7e57-e09f-43c7-900b-faa2c0a0500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf09293-7ae4-4c7b-9ca5-a274821bfe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcae40ad-8a41-470e-93b3-a2e4811571a4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d376ec5d-d604-4e6b-a9c5-1b2ea7c0540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04be0288-4ca2-4648-88ce-427ddf02db11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dda0fc-6045-4f32-9827-2a540ef23af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca55e9b3-b0c7-4f80-a902-19a722624690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b524acc4-e09c-465f-9a23-f21e45c31731",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f85f91-d9f1-4877-adc8-9b293b273d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9c9576-4001-40ae-bdf3-6485fb7c0ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c725dc78-ec56-43e9-ad5f-e957cd980321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5d2a32-447f-4ad8-9774-47efbc5a1992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35f9ab1-3250-4384-a6ef-784fd130db92",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c5fe1c-d1b7-45b0-8aa1-5cecfe7e088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84308bee-984a-4cc2-9c7a-42c36d2cd7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a26362-808c-4c63-a019-09afec757db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39daa378-d1a2-4c61-88c5-c86e72ea72bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40138f36-f317-47a1-8ff5-375e6b0df7bc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a40731-dc28-4c3c-b6c6-afbb955cc341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6288ca48-8943-4d2d-8565-f444371b086d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b59c48d-9666-4692-9f72-819dbc6c0509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dffb64d-78dc-418f-b5b4-da15c3eddcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914e8212-f58d-49e4-a511-083c685a476c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9e1c5d-06ec-4b2b-84db-a438e02d2ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da3c401-8b7a-4a79-8abf-03b684e5b825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993dcd89-7bbc-4504-9318-bad3bbe0cd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0720058-e7e1-4823-895f-15092dc2aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f643128e-9778-4ee9-a622-2e194f6f8018",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068968e4-f527-45cb-9d1f-f6d6d4f101a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2eaf1a1-863c-4bef-b2bf-e0179e570f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584ff549-effb-4f54-b3c4-4e790a3f067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3285fe0-c18a-4cd1-aadb-1241753d254f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85f6e21-5cfe-4d38-9f99-e1a42979e74e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52ee400-f219-4353-94c2-bfd9de9b20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f81a133-8e13-43f1-b8ab-ec09bbe3c80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28192910-0199-4367-b2c0-930db54e87ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db43fde-ba21-423c-bd47-55f39f2ebd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc56eb6a-1d7c-4337-b9bb-f2ff7f5e8f53",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f4d49f-2dc4-4788-b726-1319634709f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66d040a-1fb4-417d-a8ee-a9be46daf1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a165c8-a458-4285-bbc9-e009e9ad5b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24483245-3614-4653-b33a-38c52bc8dace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb0c6e4-cd28-42f0-a4e5-1e145ff3821b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a179521f-bee0-4379-85d0-9c84f8483f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971451a2-728c-4dac-9d1a-26853cbac192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219a0cba-2ced-401e-9a69-fd6167da76c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b230ff-c048-4688-8b40-267d36bee8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5058ab2-52c8-4790-941c-e1b4fa1aaa62",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad538cc-43b2-49f0-9df9-de27e8501c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2c2be0-7d55-4179-a128-29a451b89508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e8331d-7cf6-4c92-b4bb-1e2a74fc381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ef4d1f-4f75-42d7-8ec1-dee44f866add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8531617-604b-4f03-9a88-6b0290d66c56",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937f4cbf-9fb8-4a32-a250-050ddad5e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df30670-aea2-4cf5-bbd0-474d2bf4be3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3d6516-c7d4-42d9-be01-2fe46dc4768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6684bec-c7bf-4a33-933e-19c9d42e55dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a41fe3f-c544-4a31-be75-752c7b636bc0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c900f30c-7bfd-4bbb-99d5-d99383dd6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0103cb8b-3dda-4dd3-9889-1981a346798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96a833d-bca8-4ad8-a9a2-fabdf49e6a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb92bfb-df38-413c-a704-c999b582faca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c45b0f-6330-4f87-883a-5f9a2145c52b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1fc2bc-1337-48f9-92e7-06b9c6533614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ac8644-b0a4-4167-bafb-1fa5faac037a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7351692e-048a-43e6-ba7a-4692c9c898fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3ea53f-9dfe-4252-b4ef-1e9d8ca35f9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5055ef8a-715e-4a69-8235-50d1398137dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdcbc53c-5697-4fd7-96a4-c9fad7c25671",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0ff87c-1a5b-44d6-8134-06b923584125",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61e9d1ea-54bf-4bb5-9610-9df48ed3c7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c50f6e-2390-4820-887a-cb26e1a8a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cc8000d-cc05-49cd-8b20-ee360913694d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d7b4f42-232b-4d20-84b9-912f67bd32a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28673859-ee7d-4ed0-80c0-5b64f5bc7d92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa9bbb40-e0bb-47df-aece-0a75b0dc687b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1007e421-d051-4cbd-b037-8e181f5dba13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff500c5f-e006-40ba-8cdc-7610c6d359e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db1fbdb9-855a-4d8f-b62d-2fdbfc786d01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd9f2c38-4853-4561-a990-ba1191a7ad37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94fd8d81-5a65-4ea7-aa8e-ef56c1d7b9ac"
            }
          }
        ]
      },
      {
        "id": "6c713fa4-b468-4b71-b754-23bffbf60b69",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6cc63e40-a46f-4486-a223-3bb2ac480d9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91e6a6e0-f18a-4ea8-a01d-f85d891cbfd5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63aa0768-44ae-4cd4-852b-36dc490dc600",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfe7514-b2d0-42a3-8d2b-799db92f064c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d82508-5352-4db7-9f18-1b36119ce466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550cb832-dc57-49e4-8184-9d662c5dfebf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb2ff61-6044-4263-a384-34a5821cdcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f67727-d04f-45d8-a219-9d399f28193e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb67be20-63dd-4006-aafc-ce3e76b2bc8c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d4cc51-f258-40a1-ac64-1bedb0c83214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50792a4e-f59c-41d1-acb5-980df4d154df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5bf2c5-2390-4d50-971f-81728dde091f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e7eb71-7ee4-4b38-bc54-1ac05a325b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c42cb73-54b0-4320-a498-2967a8ab3be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f9e3e8-5864-4f7b-a3cc-a5f7e15b39d8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19518ae6-26dd-402b-820d-99a063ccf220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6e0d44-f865-4d85-a9d4-a374dfc2b121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eb93fa-6da9-4e7d-b92c-4177d9f604e0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e96172-d572-45f9-9b11-9f88698ccf18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69af333c-f823-4f45-beb6-4fbffa51abf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ae18e6-5e91-47aa-bfff-d1145ec4a6eb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c8bff6-c806-4ab8-9044-ec3807abd216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73451a12-90bf-416c-9894-da13d280f039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef6aa17-40da-45ce-9273-6136cc5052d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447cc799-a7b6-4f20-b5b3-982c1b97a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5093b8-6d1a-49b2-90ee-58472425e3cd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c79639-27f6-474f-bc66-4938121b94d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bb0609-efbd-4b35-8975-c0449ae5ca97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f91310b-ce96-47d9-9aa8-e8eaaa5e1405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0aad18-e52c-4b8d-8c13-c2a38443de80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44104266-9fb7-4180-ab23-c9a3f1db7516",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa81cb6-50bb-425d-b8f8-a59e3398f5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47131c69-4a84-4d90-a0a0-5f2014f34982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a14e94-f3e0-4373-a812-bab18e80d0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0afd259-670b-4e62-99a0-82fc9bb3b2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9369795a-12a3-4c7e-bf55-ccb05cfc3547",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5c01f4-6a90-4ae4-8e30-ae0e947b0ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa844e3-fd78-491e-a2b0-96b9c0b694de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997c544c-f3ce-4edd-a819-85d4fdc0481e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e6cca7-bf06-49b9-a672-b53aa93a0cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa68047b-e757-4ced-9680-684b6459c588",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0c6ce7-5e86-40e1-b42c-27d2d4769dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55940524-6210-4e26-8534-6f07130df86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cef4e08-2e05-4dde-997a-67b0e5e83358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf03eeb-d1f4-4b4a-a483-3f0fd50834f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7560e3-ec01-4e64-9de0-55e8ec83990f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0587c82-bc71-4e43-b6e0-9cbb3f056069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232f02da-f687-4aea-b9f9-995be909793e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a003ec86-995c-4a48-bfad-cad22f1d1fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703fa5d8-ba89-4417-b44b-fb601ee770f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8121e8e7-a4c7-46c8-8413-151c10b3e04b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee4c3db-6fbb-4cc1-aca8-9a93e512d04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3cfb6a-9aa3-4e76-afc9-4f85ae3dcf8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427c679b-02cc-4435-a4ac-b40240451962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a51b57c-3e22-46c0-a604-770d44fb39e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd76e2f3-9d05-4656-b828-167842c2046a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fa5c44-924d-4d16-ae39-2394e099a87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b011192c-d0f1-4096-86e9-a9345d755ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cb8d18-a7b8-4369-aa4c-350692108e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4859353-f24a-4eb3-be48-9920b2bdeb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d087099-2678-4326-a402-a003db483713",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10459018-0eb2-49e2-98a6-e616f6bb3335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a9d8bd-8ba3-4c6e-a187-97a950323f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc5a3ff-2506-4d27-8c15-de80480095e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a9010a-edae-49d0-98c4-81009667aa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d4b56f-0645-4f6c-994a-54d8212e7ce6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d619bd46-d784-4e1f-8e94-e68cfb71dbe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "684e5968-c7aa-43c2-aaf6-f50efc464f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75fd87e-1599-40ed-967f-f0442c70596a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7f6366-e34e-4043-9820-1143a383aaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36547d0b-f9ca-44f7-ae66-9c8a595b8b49",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ff574-3b40-465a-9182-72a2756e915c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b56b591-064b-4b7b-b6a7-716de8b04995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6e1242-5e25-491f-9904-779710d4c37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3f7c39-40e6-43c4-ad32-034bad874183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb8bc6c-d3d3-4ff3-b8e4-2fdba016999b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587f9059-35ef-422a-b1a2-8cc516c41c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea26020-c7c8-4e07-9697-dd6d1408bc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a94a71d-4f30-466c-867e-f101036bf587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccdd914-b625-4817-b35c-c65e758c8a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2bf369-aee7-4315-a9e9-602a66f1203c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61033630-879e-4a72-9ca0-ec4d32001209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b0fcc3-5289-42e3-9987-8240e1256153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd88ca-fe48-4340-afdf-a1adc0bb0248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8619ad48-ed12-483c-a0ba-066ffe769806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d156d7ca-ae2f-468e-9ecd-fc9d09b1ffae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1095ad-5783-46c0-ba7d-31b46ba86b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8828b287-689f-447d-be8f-eab1d9777085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0490efa-353c-4be8-a9eb-423febb5f4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bf42d7-1889-4443-ba0d-36fd904f18e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9591dad0-90bd-4760-840d-1c9211ec428e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3224781c-965d-449c-a1d4-813a555de7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cca42b-7dd2-4f38-a63e-1a35c0a6b471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c18a723-e1dc-49bd-87e6-8e7c04bc5e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e8a015-7d64-477c-b9c9-2d8febb5fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd3e680-35a7-4d37-8db8-356afca960b7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8001b1a0-d0e9-4444-87c3-b7bbd811be2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad28951-f23a-4cc7-a15a-cf61d0d9d0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e006c26-2f03-42b5-a54f-6736ad093f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15769a41-87dd-4dc2-aee6-e89ffe1917e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35afa070-22ba-4f61-bc03-01cdcf33c27c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c8ad58-9400-41c5-97aa-bec8b209ecfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147fa957-77b7-466c-9665-2890a7debd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92cf29e-4d94-459b-9586-06151bf3e5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfaae73-257d-425e-85ca-c67c02bd0a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7deaf96-62a2-4aae-b68a-b3feb1fb54a6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f6f431-a42d-49ff-8e2b-04d4974aad43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d19b91d-3d00-4a06-9b55-eb17cdf4b4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c9bf97-71f5-4b55-a3e7-866166da0091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af52619-be18-4135-8cdd-9ee9b55d8108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0202bba7-4695-4d19-b280-67dba02a5609",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a52eeb-d2a6-4e19-8780-3f47e03810b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698f039a-109f-408f-ba4e-fb54124508ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c825713-7e9c-434d-9226-d293de5f48cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacb3cfe-6eeb-4fc4-ade9-1abe5355178b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad73fb8-211a-4827-9774-75219bc718b2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f1956-12e4-4093-9c86-6305bff11159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1b79d3-14d7-4a42-8e80-585e762b129d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595b500-8e88-4d3b-bf2c-4e53ff2a97ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde733b4-527b-4f9a-8091-c73da914bce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbf6d36-f22a-4f9c-8192-ccdb09861a2b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eedd96-baa6-4dda-8611-9c8cd9b94937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8288ba-4bf5-47af-bac0-9e1dbef9aa78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff053af6-975c-41b3-8d63-cdc893e651ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2398cfe5-fbee-4d18-acca-421eea611d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ee4fd8-a0f0-409c-9ea9-7be53be1209f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41dedaf-4ad9-4085-9bcc-9a725e8eac22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d61eab-6673-4592-b41a-3b77110d58c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793df861-9024-4c7f-b84f-8978139faea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f19c470-9732-40fa-bd1a-b52c28ed4f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96be7081-a85c-43c0-b7d6-f144c7d0fe18",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9276cb7-c228-445b-941c-f1e79ce6bacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824e819f-5eee-4419-a85a-a1aab21a8946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c90f7e7-5559-46c7-adc8-052ade109d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a785fe-0cee-4207-bca7-a720d4df5a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96153636-76ea-45c5-9237-2845db3f3d72",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afeaf28-6284-48ca-8ece-4722d7d3977b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03a8b56-7eea-40ef-93de-1100cccaaf79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d35d16-36fd-45f7-ac10-7aa52571e59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdcd0c9-797b-40e0-a44b-e7f7a1ea6ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a0a027-df4a-49bc-90f9-1de41eb3f8c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa81f89-c94f-4485-b689-9cf381ef2ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff660b5-bb0e-4fc5-ba1a-326bff87bfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab9ab8b-1547-4dd1-b67b-8523b8999089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc3574d-36ce-488b-a80e-eef34789c68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9a0724-6238-410b-b6b3-7650f9243f11",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d47fe1-198c-4bc4-b5e1-18f263ed0f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15188de3-4c58-466d-9bdd-9a2a0b9b9060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beae9932-4068-475f-ad04-d8e78002b248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b8851f-16fb-49f9-8b18-38a4560ad34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9887d2b-9dee-4675-84a2-9cf2ea06956f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf99fb4-4aae-402e-abd6-30e3e9aef83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d9a1ec-ff4e-4121-9d4b-537f053a0f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b728c6c-21d6-416b-a545-593530a4bcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7857c579-c344-496b-a392-e69d7e4f6dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99aca6c-622e-43b1-b07e-eb8ecac184fa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a754aff1-4448-40c1-9ed6-5c18cf0fab69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052414d8-0815-4931-aaf9-3a87c09cb141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853efdc-4d83-4477-9a6c-eeef103b7e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659b8951-e6e1-40f2-8916-1c5d57ba2bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4d1ad9-f6b4-4b02-a1fd-a82a4fb38de0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc16187-dd03-4617-b8ef-bf860c17c02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef85767-dd03-453f-8b68-40e91ba96b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9056c10b-291a-4155-9615-789638298018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61deb8aa-4293-4712-a06d-5c15ddc164c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37464d64-ec62-45d1-b4e7-d1a36f04185d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f0590b-e222-4ee0-b524-0f307b656000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b8e194-b5e8-471e-98b7-4905aca04e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3fac73-156e-4dcc-bffd-da831d7bd4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5665b3de-1f9d-43df-b4fc-110ab9e10221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acbbf0f-696f-4796-80bc-a3850feee1ff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b317f8-d0b0-4d44-888f-4f25c2c52671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cbb025-4471-4be7-a6b6-9801ee333ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eadb5f-0b70-4880-bad6-fc68e2154dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d470d8bd-810a-4d3d-bc31-5dd155626265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c8302-5846-4128-9d79-d01613d4e893",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f2e1ed-73fb-4774-a267-04889204b378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6abdb77-a838-40a0-892a-2b2610eae383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163b1ad2-c84b-4899-8708-1c8d478d9f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f73a15-b130-468f-833b-0b63b044ec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccf264d-da4e-49ef-9ace-9b02625d7e22",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e436cb3-ecec-4f86-9f2f-523618e819fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2eba3c-27de-4ad6-a57a-2eca025b6652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35472ae-297e-42bf-8c73-510a80f92bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c211d2-54ac-4a50-b14d-dd1bcd4633a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffebdf91-623d-4e1f-a61a-2d0901991516",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04ba04f-6aeb-47e4-bce7-c6dece2bb560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b6d03d-2032-4124-abe2-05d39a52bc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a044bd-dd26-4338-a494-76a1629616c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735c55fd-d162-4472-a2aa-21506c805a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1725e180-8b7d-42da-a3a9-b1f78dbb2147",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aa687b-1c56-4ea1-995a-bd0f13b457b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3ba3ce-fa04-4971-8d44-fe47f96e77d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12598c3d-94b9-43b8-a94b-be51c9d1f969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfeca77-07ca-43e4-a77b-7666cd54010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86c0c8-2119-448b-8234-7ebdfe050f38",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c964d8a-6ca5-4bc0-9f3a-2535f7a51d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f978d013-83d2-4071-919a-869548b42e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df81c68a-c6cc-4c3b-9afb-6aa8b745b647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a436a01-f323-4a8e-b49d-7b460b976d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6394c6-4354-4a9d-a7e9-0e192de07991",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0945778-590a-4033-ab3c-4fd489834f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb0d919-dfb6-4a1f-a726-4a9e465f2186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091a8aac-35c9-4896-8be1-89dcf686ad67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9066ea1-012d-4741-a531-e0e083564a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003f980c-f110-49a4-b03e-03067ba2f35c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4b721b-b55e-42ed-91be-3a0380fe326a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c12eae6-495b-4be7-bc86-80f80c833ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a453c7a0-f816-487c-865a-382d819fc46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc0fd23-1d3d-403b-99ca-ccd942798828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa02902-6e85-445b-a50b-20aae08a336f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0bc895-247e-4742-af80-8fe19ddddb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fa62b4-5f40-4fb6-a147-8e6a41b4c791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843c2400-9330-47ef-9c4d-653aa00fe3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a819c8-f336-40f4-ae06-8310ba4c407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2f9326-9613-4b49-9ac2-77511e08c928",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a361517-2ea8-49a1-b2d0-8afd92b39ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762c0c3d-3a07-4d29-afea-780064086fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2288e0-09ce-4c79-b262-95f868e171a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8f0887-d02b-4faf-b0b0-487a0bf23b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efef6fb6-525b-42de-b880-3a8ad0c24a10",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a457f073-96fe-4621-a193-a3ea055f0e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690608f4-4a36-401d-a811-72bb8cdb7a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897a2e92-391f-46df-ae91-e9ba29eabbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee5e7a7-c77a-42b2-a7f8-ef9580f9ff02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c3a7c6-c902-46a6-a733-daa45a0797e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5c359a-0133-4376-84cf-55e7050d1bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4ab86b-ff8a-463d-969c-3600848ecad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b9c08c-4ee9-4603-8e5c-7779bf78945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d00041-fa81-4555-9f31-9e72440c4e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d1856a-3923-42b4-9e70-f36ddacf87dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c77a5f7-a288-4ba5-8c3c-40eb6eb05efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9241e082-89af-435a-8a31-da91a8012787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7dfe8e-a025-47e3-b92a-950389d6fc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bbdc45-83b0-4b43-99ff-b82c4b6acb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b282d7-e7ce-4052-86a8-405bad15b598",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9be59b-511a-4579-8585-f90290dae86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d8efe5-8350-4c0a-ba33-0a2405bd2bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c6ddff-21c1-4629-8f74-2d126e5f22c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a333f557-a5e7-4c1d-b700-c6b077418b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d706f44-d7f7-473e-9209-c2b2094cf9d9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b0e86e-98e7-407e-9172-62065b96d349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cc335a-54e6-4177-a621-50b14cbddf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e7bc1d-2f85-4d0d-a7c6-b0f14d20b702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e4301e-991f-4d27-8956-76220ccc598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64accd93-2209-49b4-bfad-92a93f7f0e96",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50a8f78-6c04-4554-901e-66702c7461b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70911fdb-d860-4f91-9209-d12d1b18848a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9855b2-3bfc-4cd7-addb-ef1c59661cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fead893c-fbe7-4fdb-b34d-0c5234b0adcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937b839f-0e28-4051-8122-302c0475cff7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e8cd94-978c-4520-a7ef-060ad9d16d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c77041-2199-480f-9fd8-00202220ecac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9800f2d-3fe3-43c2-ad0e-dc87a1a2b2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cbeec5-e226-475c-8e51-9b7cea5718d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfb32e6-7965-4ae3-a951-615e568f5401",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ff8d57-875b-4282-a72b-e4b119dc90a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b50554-4e7e-4ef9-92e5-03cfd9e53ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f783b5-adc0-4d8e-aaf8-9eafcf1b793f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3fe970-52d3-4f96-937d-234546b905a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a2db08-674f-43a6-a2b4-11195667d519",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdf0ead-943d-4298-aa19-f84bbcc1a88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74553e3-9317-48a9-a335-b03361e64f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064b0ed0-81cd-49df-adc9-a27d17f36a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0615176b-c0a0-41b6-9ed9-1bb84a436f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567d69fc-5a96-4651-8dc6-1b4ad41e13d9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfc832b-1d7a-4f4f-8428-880d576f5db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b368375-9baf-4ed6-83cb-a289447a66be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215d4f26-8a7c-47ff-8e3a-4829686a870d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2d4eb1-8b4b-480b-b5dd-0311a8cce57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f75597-8241-46da-ab3a-c6c991173644",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64e4e50-9664-47af-a39d-ce285414ae7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c98c20-64ca-44bd-936a-2fba44635da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430b264-0583-4748-af06-975c56e0b2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a4f086-6ccc-4e42-a89b-75f48fbfb053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b5acde-2b7a-47d2-afdd-d2d882dbbdc5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c71309-2726-4470-a48f-be507b7a0977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712848ac-c8b8-4c09-9cf7-1f61ecdffdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a14b5d0-0540-4a4d-a151-1b8453ea8499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9feead51-eb29-40cf-8403-f8727d2fe233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a2591d-6db5-4e9f-bdc0-5ab6e5c3de5d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c03532-1483-4477-bc64-b19f3a08e656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ff6f82-0369-45c3-83db-32c2690131e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914ab5d9-33d2-4719-8dcd-f199cae71342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ec79f0-ad3a-4955-be09-efa7ed2da3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ea6a7f-2563-4aeb-b5d9-7bde64dca82d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31264c20-c851-4e0a-8e7d-9fca1e3bba91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ab17bc-8acc-4f51-93b6-2c0c2a53aaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca11625d-cc3e-4d2d-9562-106f603abddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12979ab8-4444-46cc-84da-b98b72a3b9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e138e539-517f-40d4-aacb-629bc5fe5d4e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3a9b59-4c01-4f67-82a9-76a30c4306fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefa5c08-95e9-4a11-96d2-58a4ed61e651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35fa93d-70b6-42c5-83ec-56c60cf19c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f199777-6950-475c-b658-491c67fb50c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5c6d54-c1a7-46a8-b7a5-2e95b52a2281",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf363ad1-57c5-407a-8e53-db5933456576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d212d186-a94d-4b84-958a-a172f0466ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071aaea7-4864-40f3-b05a-4b18e7787c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8460c052-defb-4a2b-8cf4-a7bb509c26dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbb853e-39c5-4d35-a56b-a80e436c01e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14a5022-3126-4276-b19c-1de121cac75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bc643a-3ea8-421c-af70-f696ae57c7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f2d60-3d34-45ed-a725-04ca32d0c3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e631db05-4721-43dd-96f5-1c7b83e5a304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ca6d76-81f9-442b-a256-f49e4ade6235",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb74ab0f-5bac-41e0-bfbd-f879370e9628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234cfb49-20c4-444a-8d30-a4ab34f02a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea76e08-77bd-4e15-98a8-9cd2476e59fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0dc69f-9df8-4261-9779-28ee4b22c910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43b5ab2-15f5-4fbb-b8eb-517522f474f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b481d302-28ec-49bf-99b1-811cd5dab800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0504676-ba41-424e-8a9b-aefb10ee1cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddf208e-e44e-45fa-a290-18278b857666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63025fcb-29f0-42b8-9408-c4e6ea0f7edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e770b464-5953-4af9-9dfc-72dcd6ac951c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21463f21-857e-4317-ba87-ad8ee9822438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab51e78f-4e88-427f-b0fc-41fccb9b2316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af8add8-a438-4a81-81ef-870a838948f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8fde5e5-b310-4466-8a12-dea9743fa085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43221a57-7879-4070-b2b9-c6fffb0f1268",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686f54d6-9814-4303-93bd-7c4351ec77ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879e428e-23f3-4b1b-9eec-7e185ff22313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650cea30-4699-4465-86e3-72985697a8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60206ec9-dcef-4b3c-97f4-32c866ff892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01d003d-ce7d-4c3a-8cff-eff487f9e396",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d36e1a1-bfb7-4e17-902b-7f798a884254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ea8784d-ea14-4ddb-b712-4ce466efbdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993620d2-97ab-4a9f-b872-5513e74c5f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3396ad-e89f-4318-84e6-042110fd54df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebddb166-d113-4dc5-8b43-e97e1e0f4930",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6fc77f-b632-404b-894a-e4586f753248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392c2261-e13f-4a60-b9dd-61cbbf5c670e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aca88d8-acdb-42fb-a6ea-074299f6b6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50120e1c-efd2-4fad-a113-5fb58699d014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07dd2de-2452-4560-9634-71864decb8cc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c42c36-b34f-4051-8336-aa0c3d1e1bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd0b175-fcb1-468a-af43-de4e70987b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a46ea1d-c409-49c6-836e-19af420478af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6101c4e9-c6ea-4b83-8ef0-0d6742ea34e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32acc91f-13fe-4b69-a368-16a0c28dbc7c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef63c224-b2c2-44d5-a3b5-34f65a4c1898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f436b49-28be-414f-9c44-69e4a3a03fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b06db9-4e47-4235-903d-3aa96abcc848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90319231-928e-4c4d-a416-1fc123c11cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa72132-843d-4fa2-813b-cce578790a26",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6488a266-71f0-4bb7-88fc-9ef45c804193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b5f197-9123-45d4-aeb3-5bbd84abce29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa544b0-a7a5-4d7b-be43-5a7b66de08da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221395d5-01a7-4aa3-b89b-f2e6d4072dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7b5853-484a-409d-b8b6-c2a3a9c6a5dc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d798f5-7812-4878-8bf7-b59a425455dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd21f88b-f88a-4671-95b2-5f9fba5a17cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5108a4c4-476a-43be-9d5b-ac8a22aed3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a0d018-581f-438f-b1ae-f60a29f7467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1a47c6-1ee2-4ef1-8e94-7ce18676bfd5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cb8b62-3244-4a50-8bd4-21074d8a0b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195bb0f8-350f-4e33-82f7-fce51f4b12fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487c3a5e-0a86-4c2c-a581-c5a287324d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efff73fb-bf67-420d-88a0-684cd3fe3224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c054bdd7-af34-4b08-9e6e-a953f3ec686c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52401d7-7ce0-46f4-ae7f-c5b836323690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c937b38-e0fe-4e15-ba82-cfa0b20d3a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf70cc0-041e-4337-9a81-898aac81caa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317c8541-d009-476c-a8ea-03d808a85b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e865538-58aa-4e3f-958c-fdc746624308",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6036c70-92f8-41bb-9ac2-cd3033150497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156285f1-6cc2-43ed-a05d-3daf524e7ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cfa1b7-bc09-453c-8114-0146a057f22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171229d5-d312-4daa-94b8-46d2d0ba8b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5fa046-32e2-4b59-8fad-7fc34d215310",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72597d1c-2532-46b5-a517-6de57a382613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b51581-607c-4b0a-8a6e-aea1bbbaf8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4406a1e-00f8-4c96-8ffc-adb4e8f60c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a21fbf-2059-4d90-ad40-0141bd5eae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e70302-3d8e-4149-9d8d-79103359165d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59302489-a1b9-4f16-a4d0-0173dfcb5edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802d4bed-fbee-47b5-8e2b-353334aef665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39822e33-72ba-4480-9cb5-3cd5e128e2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69552741-3236-4d84-942d-a06093d2282a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550d585a-15f9-4286-93ec-16995f9d263a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aa4bba-f71f-4c86-9ff1-12203e799c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5337aa32-bcf6-450c-9086-446d7ffecffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d223a-1c98-42d8-9e21-259fd3dc0e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f551384e-0170-417b-b1d2-984e9598471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0aa5ee-059e-42e8-9890-a0f8663da0b5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f82220d-11b9-4ebd-b39e-829d32c9c212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66464c00-3c42-44da-8b44-af5349eddc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0461ea29-ade7-42bc-9cc3-b78a74beddf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e11b9b-e7de-482a-bd48-c382d5dc2aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dd0907-4510-4627-bfd0-caab39efc22e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9088db-1b6f-4ff0-9ef8-bf289c42f685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf375cb9-3bc6-4e9c-b6d7-48dedf9d9f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba86f99-8b8d-484b-bcd8-68bcb3fa64ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91c3961-bb74-4c4b-b6fc-4c788043a09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574b7c6e-af1c-4622-bb09-d86e2d9847f8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80a4383-29f2-4e31-9708-9d5c278a1750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc112bc1-50b8-4f52-be2b-08aee7d8f744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070a9b4-f1d8-483e-bcc7-4637bb851888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553095e2-8ceb-4bb6-b491-7113decd6ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b4521-9e7d-4217-b662-f05ddfe75600",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066dd104-d59c-4509-bc02-3a977f30154f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3013bcab-9221-4e96-8852-f4a87630a8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eef2fe4-a843-4ebe-8023-bc3376ea6961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5b899b-3dc3-45a5-88c0-3203c60ad101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbb0cc6-9097-4772-b0f8-e02e67d45fd9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50b91e7-22f7-446b-96c5-a0bff09e2d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94c40e1-60d6-418a-8ee4-2ac97ce07a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cb35d0-0dcd-4b35-b05e-cb9287f3a4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfabc2e-46df-451d-969e-e271a3e97a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40de2606-01d0-4eaf-a9a2-b255257dcc11",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aca08a0-ef88-4621-9688-714b70c431d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4472adfe-4d81-431d-8950-7d0c10e99ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae699a7d-0b38-4d10-b8d1-ffd2f9394566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2875bdb9-de75-451c-b14a-dff3cd19698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfd5f7d-e3f7-460b-9c7a-9d3caf0fb041",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b0cb9b-7dc2-402b-9fc0-33a71ad09b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f17175-5ca3-4de4-b267-a27139290b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cc7bc2-a82a-4044-bc63-eecd2a2bd0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1b861c-b2d7-46e9-95ed-7240af2ffe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c508c0f-9cc1-4fbc-927e-39dc4fa71445",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3642d3-017f-4b30-b935-0f0d8296d3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca5314c-ff6d-454c-b538-8dda0af03e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e64bee-2804-4ecc-b74d-1f8adcc62392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e608941a-0ab7-43c8-87dc-a1460c77eb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39a05ab-1f72-4d16-a53c-90887dda9255",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fc0bd2-6420-4bb6-a560-2768d9632e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd75b1f5-7c8d-4e8c-9d93-f143fff3601e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f3a59c-26a9-4021-b3bc-69f17e670b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f75ed3-9cbb-420f-b5af-caa4aa973fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46372e31-550f-4a5a-a1c6-a2e785f9e34b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9f137d-817c-4eb5-a598-2f5ad5fb60b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bfaf3e-166a-4d5a-8549-83ac635c61b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f164962-4ca8-4a05-8244-944d5fb41cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cb50e5-f22c-440e-a170-5e25d43005aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90252208-4a35-405c-8494-c660b5562821",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f62620-2b56-4b8d-9157-48f28d43f781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353b1357-546b-401b-86b8-9e7e8b21bf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02273ee-8d4b-4ec7-974e-75a6246a54e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a550e6f-ccbc-4513-a612-e2fda24837d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1dfec0-cddc-4332-b050-b009b22bac1b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed26dc84-1680-45aa-bd82-9523826cb134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3792ac49-71df-4f5d-ba3c-c3f616fd168b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c5ad91-9812-4b3d-99f9-34239c3768db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7847539c-73e6-46c6-8107-4d8ace944748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16151b-f311-4c9d-ab70-caba36a00b1e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c881f563-bfad-49d7-9d22-86810355f941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddbb205-4f01-4b54-9e87-ae0aa42a5e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98a9747-763f-4749-be3f-5ed1ad33dc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c075cd-65a1-4c36-95ff-faced0651e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07524436-49b9-42f4-a82d-ca5eae2c1663",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aac529-b9bf-4811-aa87-59b3baea0c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1ed761-1c16-4555-bccf-d3f11c6873a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b80a31-c915-407d-b6c1-2bab223a9578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bacba1d-b350-4f91-8a1d-1a4a606189fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafe1512-41dc-4f4d-a625-0c5fa6286018",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebad1fa-f205-4780-8b15-6b834af33005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08557360-6dec-443f-8f77-c2523a3df2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d068a248-edde-43dc-aeb5-57a2d5fde177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c9b366-8542-4450-8c79-48671e4909fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1d055-808b-45ee-ba83-265f6a8cd75e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b2b06c-5ac0-475c-9e12-68acfeb0713e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495362e8-bf31-49fd-a395-24dc5b25787a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1084457-3a0b-435e-87c3-0e388cfbf3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b62157-b8e4-44e9-9e08-7cf164de1dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af04db4-5497-4602-ba3d-20fd48b8f3df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69edac62-64d4-4e70-8366-d22b797e619c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492cf975-c83f-4f82-b099-01f1078dd930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6bfa67-2134-41ae-a98d-3cf8988e0edf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2445f005-ef5c-47e9-85e2-f60d16864160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56ad75d-1a43-440e-8a3c-afc40acae6bb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a913b1-46ce-4670-8f95-937da45caa68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01700259-787d-4651-9f50-09322698aec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8983a38b-7fd3-4993-b49e-1105472d9731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97eb3fe-9205-47ed-b89e-51036bd4a660"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0d2797b-d943-4205-910f-f8765fd080bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5091667c-de05-412e-818b-6e0a8640e84a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bf7398d-c918-443f-8b61-2a54b5e55742",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85467b2b-300f-48d2-9923-2c5d730c61f4"
                    }
                  }
                ]
              },
              {
                "id": "6503ba8e-5c65-4324-8695-1e2fe91cf02b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "998876d4-207e-4f0a-8fe1-e9fce3e8565e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7736c893-02fd-49a0-8bf8-a6e3d7a402df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f90d801b-1e60-42d3-aa98-bb5f738ef711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cc85a6-f494-44f6-a056-2dc48d717963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5f39485-a2b1-4e92-93c4-8f52028eb05d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0087e004-ef77-4df5-abbe-62e252176c68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a33d2e-b70f-4d2a-9652-9252bb791f35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92c1a4ab-d1b3-474a-965a-e9b8fc76c182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a69bd3ca-4ccf-4db7-9d1a-6e9d90cc1e38"
                    }
                  }
                ]
              },
              {
                "id": "831810aa-6822-4c95-a0cd-08169f2b804d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dfdb9f55-083f-457b-86b7-bcc3b0faf05b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38ec97b-e03e-49b7-bfbf-ace65cf4fffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1e9d3c2f-f899-4325-845b-555de77f8c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b222e42e-821e-4463-94eb-856c1e45f92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adc74df-1e69-43d0-8e4f-2d76f780386d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f57add66-0e6d-46f9-a439-22d1e4fd1ea2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a420c1b3-9f6c-4e4c-a525-b7e0935473d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc302037-488a-4701-afd5-5eab2b3a728c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6d3600c-9436-4ef0-b8fd-aaa137fd5248"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e2c8481-2f8a-4947-baea-81d598a8e3e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee8d4172-b241-4a42-98fb-4f552fe091d2"
                    }
                  }
                ]
              },
              {
                "id": "7632583f-a8dc-4775-89f6-bee44c886621",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6661b31-7511-4d08-8ef6-2cba501fb882",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e9d3e9a-8ab8-49cd-a91b-996f4bb84511"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2255c3b7-ebf2-4441-ba8f-823b418c814e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7c694fd-d35e-40e8-9694-c3b39f8c22c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9144a6af-3a22-4652-bc79-cf9e6ed6dad1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a69cb6c8-219a-4ab4-86eb-3d3a92637729"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f7952c6-4cc1-4fb4-afaa-d5ee4b966194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f732def-2ac6-4318-8534-896c799c5a35"
            }
          }
        ]
      },
      {
        "id": "c2338727-7561-4784-aa20-599630eb1b67",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dea63100-8b32-4346-8b0b-edb4bb9e879a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46aa9003-6007-4d62-af15-d6cc0fd2932b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a07df8dd-3cf1-433a-9b6b-00c390d470da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2344cdaa-fcc6-415d-b6bd-b4530f40e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b4efac2e-939b-4dce-91e7-7d88ab11ecf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c943e-0cea-486c-ac97-36c3baf70a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08d09bc4-f8d0-4c8f-9985-8f449f3eaaf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "404c22e8-6599-4fc1-9266-436b3e83f72e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e2a4ecb-46b6-470f-9715-fb6684131742"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54c96260-db41-4880-a14e-b6d0f06a02c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d853ad5-c6a0-457f-b419-bc39728c1ed9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a683eb-5006-47e9-a297-29775cd86971",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5055c1ff-7976-4160-a2c4-49e2428047b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f902a93e-9b0a-4565-8efe-1d3217a6aa9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "289e31df-43fc-4005-9004-53c516f77f04"
            }
          }
        ]
      },
      {
        "id": "c7d305c8-3cc5-4a7e-846c-68c765d1bd0a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e3e4f3f0-c28c-4990-9979-8eb9c0f95c93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "086c1c3a-d7c4-4d60-9b07-ae1efdd5e40b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a283179-4291-494b-90cc-072b02c9276c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e0aeba-51ec-4618-ae6d-2730bd278c2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641e6c77-f0ca-40c8-9220-d05f58882872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d844d6-cb50-49f4-afbc-c40e2d32b075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1cca5fb-8cf7-4f68-923f-c9c08a3fcf5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6c23416-ce73-4f6b-a5fc-43a22eaa6405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60476fe2-c6bd-44e5-a8fe-498817ed6153"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3d98380-4ba0-48f5-8e49-b3adfc317a2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2f1150d-48da-43f4-8c7b-036008f890aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91fbc1c4-5718-40b6-afd5-9e19eea79a29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92c8e8f7-3626-476a-a662-1d84a3766f69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "206471e3-119f-48da-976e-0c2522cc3060",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fddebf82-2357-4c6b-aa12-f52640de6a50"
            }
          }
        ]
      },
      {
        "id": "cc570753-1d3a-48be-aa81-d375c49aeb5d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d45c3e71-7634-4e79-b9a1-1fea2a5f6de0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f781f62-2e61-45ff-83e5-f23dd0cfb0f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f46ac775-ff02-45ee-8746-4dc2f85bb254",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb21c05-1c50-4a19-b2a4-4f654bd5bd42",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a36d509-bb4b-4301-a881-a6847c6e6df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6240f1-cbd0-4a93-9eb4-61d06a797f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73c1c2ff-f119-4737-85f3-0184d209463e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5770978b-3eb6-4f94-9cff-6386577f1e20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a906543d-742c-4a36-a277-525a24f59894"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47600d26-8311-451d-869d-adbbe8b39108",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce26d485-3c60-4fc1-9429-5b818b12876f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddfae5d2-d07e-410c-b490-9c341bf7c6e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "192bbc30-cb61-4ee0-b418-3267a61306be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2f2af1e-ebde-4b5d-8d76-65c0decdd59d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4b1b656-80d8-47e5-bb48-6df263471230"
            }
          }
        ]
      },
      {
        "id": "f97c38e6-60d0-4a9c-87ce-1d27a3b67363",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0e447b-7f14-4ee6-8186-c0961054b1a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa2d81ea-0d1a-4d75-989f-e99ccc74d017",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f7db6d00-3707-4fc0-8da5-e8075d0340c9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7729e72-ec5c-4901-b6e1-a595e464a971",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0a59f02-f61a-405e-a4c9-f9d9b4c72863",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.44366197183098,
      "responseMin": 3,
      "responseMax": 460,
      "responseSd": 28.77083437326111,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692232272557,
      "completed": 1692232286413
    },
    "executions": [
      {
        "id": "931c611b-84d1-416c-9a05-76c3ab4b7089",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b2330b13-28ce-438b-a7d0-5e7a204dcf48",
          "httpRequestId": "60bf5463-2723-47e4-a91e-9add762f01f9"
        },
        "item": {
          "id": "931c611b-84d1-416c-9a05-76c3ab4b7089",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c82bc18e-721f-47ef-b2a5-ac2f57ec9f9c",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "2d488e16-1a1a-4d90-a323-6fd5413801c0",
        "cursor": {
          "ref": "4d3fb05b-57d7-4463-be4c-a685794ec420",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "706e3cbb-b11c-430e-8f10-e0353b4bb252"
        },
        "item": {
          "id": "2d488e16-1a1a-4d90-a323-6fd5413801c0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f46caba4-942a-491a-8c60-3cde00c353ba",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "39845efb-c8f9-4104-bf81-9522f610e30f",
        "cursor": {
          "ref": "5fc28d5b-1583-4f68-bfba-b0e78c554867",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0b3d4979-c806-4db6-970b-5c690fb2363b"
        },
        "item": {
          "id": "39845efb-c8f9-4104-bf81-9522f610e30f",
          "name": "did_json"
        },
        "response": {
          "id": "51cd3225-bc50-4ddf-a820-b65b94766bb7",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bef1625-6511-494f-b279-93954287cc5b",
        "cursor": {
          "ref": "31393253-fc52-4a23-83ae-637bed55dc6e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "01b1b5ef-2c7f-4444-b473-c189ced95c35"
        },
        "item": {
          "id": "5bef1625-6511-494f-b279-93954287cc5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a998803-337b-4688-8f07-aee067760c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bef1625-6511-494f-b279-93954287cc5b",
        "cursor": {
          "ref": "31393253-fc52-4a23-83ae-637bed55dc6e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "01b1b5ef-2c7f-4444-b473-c189ced95c35"
        },
        "item": {
          "id": "5bef1625-6511-494f-b279-93954287cc5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a998803-337b-4688-8f07-aee067760c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb91dcf8-0d5c-45f2-a78e-e7be6da1b058",
        "cursor": {
          "ref": "7d2c4dc9-a0a4-4cfd-8c5a-48c4612663c4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6e6aa08-db0a-4659-9347-0e85ba57af66"
        },
        "item": {
          "id": "eb91dcf8-0d5c-45f2-a78e-e7be6da1b058",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1305d117-93e8-4103-b729-7bf584f7016f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33879839-3e16-441c-a488-4c1dafb0defa",
        "cursor": {
          "ref": "d74b9c93-39e5-421f-986b-d5b57bc56fcb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3b9c3b8b-c8bd-4492-a344-81ad34300578"
        },
        "item": {
          "id": "33879839-3e16-441c-a488-4c1dafb0defa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bc3039e7-8e58-4a4b-b0d0-952abe647482",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec744394-ec92-4611-801d-a61b24a156aa",
        "cursor": {
          "ref": "01df2188-f709-470c-934f-32847703079e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "43209f5f-d8f9-447d-8e0f-fdc025fe878f"
        },
        "item": {
          "id": "ec744394-ec92-4611-801d-a61b24a156aa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "96239af2-eec0-4fe5-b9ee-97bc04b4d198",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be09d26-f751-428f-9835-f720e16bb847",
        "cursor": {
          "ref": "376124a2-5d2b-4583-b1eb-0ecee4ce5ca2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "165f226c-039c-4637-83e4-57adfaf6c4f7"
        },
        "item": {
          "id": "7be09d26-f751-428f-9835-f720e16bb847",
          "name": "identifiers"
        },
        "response": {
          "id": "3c642495-9a65-4194-9e07-bc63f671ac21",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d01efd-3c8a-46e7-b3da-a4204f5bcb2a",
        "cursor": {
          "ref": "74f1bc9b-cfc3-47bc-8a6a-600c0da7db6f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7da857d1-91d2-42aa-9da3-0f5066bf416d"
        },
        "item": {
          "id": "f1d01efd-3c8a-46e7-b3da-a4204f5bcb2a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "31b53185-862c-4feb-a19e-cfca02329c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a234d0-70fc-4973-98a5-255276a6ddb8",
        "cursor": {
          "ref": "6f263dd0-69e8-4f04-a7dc-37d026742b39",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c2700603-dc10-4b9e-b134-1c838bfeceb1"
        },
        "item": {
          "id": "64a234d0-70fc-4973-98a5-255276a6ddb8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "faeb4a0e-d1a7-4c3d-bab3-216c5444e989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2cc6dd-fb05-430b-9a31-a42f32f66b4d",
        "cursor": {
          "ref": "af8e6e29-0a69-4e24-b6a2-18d3f0d26dba",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "97def7d4-7a33-4bdd-8978-9437f08ea60e"
        },
        "item": {
          "id": "6e2cc6dd-fb05-430b-9a31-a42f32f66b4d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "81644c79-ab6d-49d8-81eb-f6407461b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871e4974-c33e-4536-abce-a6b7897742e9",
        "cursor": {
          "ref": "bd9fb78f-6ef7-4c96-9ec5-4baefcffafa2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b88b28d5-cb28-48a9-9b1b-1c1a9781d732"
        },
        "item": {
          "id": "871e4974-c33e-4536-abce-a6b7897742e9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a03263a2-873d-4baf-9d3f-6d151d067165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ca3532-bb9b-46e5-92d8-c60aeba567c8",
        "cursor": {
          "ref": "ab09e5f4-059e-4385-9c4e-c572dec1caf7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8fcd4ff2-5ab5-47f5-97d8-0e852f212e9e"
        },
        "item": {
          "id": "68ca3532-bb9b-46e5-92d8-c60aeba567c8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "16662b02-b48a-4a42-b976-6acbc6e97d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b2f868-a06f-4608-b401-149218022a83",
        "cursor": {
          "ref": "692550ea-b5bd-4f6b-9b7c-bf77aac597fc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "04b7c432-4461-4ecf-b278-de6b809e6913"
        },
        "item": {
          "id": "c4b2f868-a06f-4608-b401-149218022a83",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "20b75967-8873-42ae-a47e-2e37bb026b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0ac34f-c7f7-45d0-9f81-33cc228d97b2",
        "cursor": {
          "ref": "ad5926c9-bd86-40f8-914a-3e78ba2440d7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "02bb97fc-0fea-4665-b79f-f6b230efcf79"
        },
        "item": {
          "id": "9d0ac34f-c7f7-45d0-9f81-33cc228d97b2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ce4b7248-9cdc-4676-9f6c-08ad9eddbb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2b8b8b-dc68-4b24-b26b-88478e98f17d",
        "cursor": {
          "ref": "cbf7037f-f644-43d8-8f2c-f33938d07ee7",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a2f3c42b-b366-452c-bd9a-29b0d02b3a84"
        },
        "item": {
          "id": "9f2b8b8b-dc68-4b24-b26b-88478e98f17d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "225ff443-1ae7-4523-926c-0a2344b0a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3bb560-5828-47aa-8635-e38a709a192f",
        "cursor": {
          "ref": "9f439923-5360-44c3-bdce-4858931b6b3b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a74ffed7-5fd3-48f0-9c0f-fc57c7766e0d"
        },
        "item": {
          "id": "5a3bb560-5828-47aa-8635-e38a709a192f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ceac995a-3a0f-463c-8911-26d559763154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a2cbf1-a16e-486d-9824-4c0a1c866c30",
        "cursor": {
          "ref": "c7b6923f-3ed1-4a8c-b3de-934e9e77e486",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "501d4267-1579-4b35-a856-2fcf363e6542"
        },
        "item": {
          "id": "32a2cbf1-a16e-486d-9824-4c0a1c866c30",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a7124738-d139-48ef-972d-2317e1c7ff36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84634cad-a374-49c1-8f38-e969d2ad8b1e",
        "cursor": {
          "ref": "27191843-fa95-4acb-a216-57adca825f3c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4c95ddb1-daf2-435c-93f8-5f2e4620c46d"
        },
        "item": {
          "id": "84634cad-a374-49c1-8f38-e969d2ad8b1e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bb585336-efd8-4a0c-be3b-40d75c40c37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7124ac4-9387-4bb6-ba95-00c267863c84",
        "cursor": {
          "ref": "c54f8ae6-a706-46d1-bbaa-cf0572799bc2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b3c5a37c-9514-4846-9976-9d044f5c77ca"
        },
        "item": {
          "id": "d7124ac4-9387-4bb6-ba95-00c267863c84",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "618cbff4-b991-49bb-8899-71c8495cb44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff07f292-880c-4ffa-82d5-c5e87ee36774",
        "cursor": {
          "ref": "cbef9211-713b-4fc0-a668-d390ab7f3806",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "459454a2-01d6-4524-9432-c35da54f26c9"
        },
        "item": {
          "id": "ff07f292-880c-4ffa-82d5-c5e87ee36774",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b879756f-0820-4b89-8b10-7ca8ff821f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ccee64-b859-41b3-a6bc-1ce2bff76b07",
        "cursor": {
          "ref": "e5ea015d-bb63-4f3f-9482-36db720b4852",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "96b9b972-ba94-4c32-a23b-aa5a3d7b90bf"
        },
        "item": {
          "id": "d6ccee64-b859-41b3-a6bc-1ce2bff76b07",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0e6a20ab-4f86-490a-8ccd-a7022aed5c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318f9a65-d178-46b8-bfe9-f71aea1bb768",
        "cursor": {
          "ref": "93a1323d-078b-41ee-90aa-0094c66bc747",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "edd5b342-2ab1-4935-8c05-47c2490d20de"
        },
        "item": {
          "id": "318f9a65-d178-46b8-bfe9-f71aea1bb768",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "47d9cc59-0e5e-42b8-ac59-883ffabcd33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8442886-08d9-466f-98bb-1cd460d0993a",
        "cursor": {
          "ref": "d25bf505-d426-4bd4-8b44-2e5c05d72a07",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "58109185-561d-4456-927d-03c216e2f9bf"
        },
        "item": {
          "id": "e8442886-08d9-466f-98bb-1cd460d0993a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e0bfdf9b-889c-488e-89ee-4a374cbf2d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30648467-1470-4861-9002-92c5f5043a58",
        "cursor": {
          "ref": "3b99689a-729c-4e05-8ae3-e5e738f6935f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8a04dd0c-575b-48cd-97a3-76d044cc5654"
        },
        "item": {
          "id": "30648467-1470-4861-9002-92c5f5043a58",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c5e9ec7-9875-46c0-ace0-1c48b0ee3fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665089fb-f68c-4949-9370-5b31f061f362",
        "cursor": {
          "ref": "937a6e6b-1366-4a3e-b01a-d1d26fd00baf",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dc567d26-5bf3-4ae8-a32c-92e8a77a7ba7"
        },
        "item": {
          "id": "665089fb-f68c-4949-9370-5b31f061f362",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3066e68d-6b30-45cf-b06d-17f82d32b71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0ea74-4097-44b1-aef3-f64748bb934e",
        "cursor": {
          "ref": "2036c643-e3a1-4499-8df7-41e4d265fe5c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "25064f5d-08a7-48c8-8a91-d8313536c19d"
        },
        "item": {
          "id": "1bd0ea74-4097-44b1-aef3-f64748bb934e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b4012563-d90d-4c53-b7e9-96d693903671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938db380-05c5-47f7-aa9a-974c671c0373",
        "cursor": {
          "ref": "e6c18286-61f8-4619-9928-3cd74c4a2a19",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "001022a5-29c5-4425-92e3-1c77b07dad70"
        },
        "item": {
          "id": "938db380-05c5-47f7-aa9a-974c671c0373",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8ced3bc3-ae86-463f-bb58-40461a257f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9e73bd-ab1e-4dba-94c2-9e5dc5961dc2",
        "cursor": {
          "ref": "79bff9d5-5d3f-4d18-a8fb-17c3e217f62d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "36ab2aaf-3d53-409d-bcc3-5b3a26702fbe"
        },
        "item": {
          "id": "5d9e73bd-ab1e-4dba-94c2-9e5dc5961dc2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b680d5dd-e0bd-4a48-b635-576d3e1f7211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23969e3a-972c-4314-ab42-8f1b656ca84c",
        "cursor": {
          "ref": "307ae8af-f50f-4019-b41d-a875edf86d9e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f7eadeea-4896-4f8a-8926-a15e98427230"
        },
        "item": {
          "id": "23969e3a-972c-4314-ab42-8f1b656ca84c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "406d331d-71e4-40e1-bae5-da52d8981e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a9921d-350c-497f-9121-ea9707dcb363",
        "cursor": {
          "ref": "b52c17a9-2d38-4965-9545-8843fb12e199",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5efa6fd7-a2ba-474c-b3de-6379f2d537c4"
        },
        "item": {
          "id": "08a9921d-350c-497f-9121-ea9707dcb363",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c3b21e20-ed7d-497d-83ef-087e607e6b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8acb61-8199-4e6f-8d07-4a7cb9635099",
        "cursor": {
          "ref": "7f14b85b-4d5a-4d3b-9dfd-c7a7e202a8c9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "696462ec-6527-40c5-82a4-aa1dac20c7dc"
        },
        "item": {
          "id": "be8acb61-8199-4e6f-8d07-4a7cb9635099",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c73450ed-94de-4ebb-a164-6378804d9e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e704d5f-2511-40dd-b209-794a6291abdd",
        "cursor": {
          "ref": "11f1fbc9-7ce4-47cd-a094-e79c1e066b9c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1ffa36e0-96d4-484f-aab8-260e7039c891"
        },
        "item": {
          "id": "4e704d5f-2511-40dd-b209-794a6291abdd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c68fc187-cd5d-4bab-a4cf-69e33f705247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6795f5f0-1cb5-4960-8c62-4069ecf0a8eb",
        "cursor": {
          "ref": "593b1982-cbca-489a-a075-c80ce610f2b9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "baadf482-39bb-4172-a357-0cc9ba2946b9"
        },
        "item": {
          "id": "6795f5f0-1cb5-4960-8c62-4069ecf0a8eb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fa59784-bdc1-409a-a5fa-92627d606de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ae0bf5-e120-424a-b15f-52c8afdbc3a5",
        "cursor": {
          "ref": "7ed5536b-c7e3-40c5-99aa-4cfcef9593fd",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6dbf86b4-302a-43d9-9ec7-c9541d0362ee"
        },
        "item": {
          "id": "f1ae0bf5-e120-424a-b15f-52c8afdbc3a5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "056e235e-703f-42cd-88d9-3ee5b94dd0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0953eba0-dd81-4103-868b-fe4325dbfb7c",
        "cursor": {
          "ref": "1b483f28-293a-46ea-bf44-634d90085f1a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c4f6e1ae-d522-4019-a0c0-0c5be4132c20"
        },
        "item": {
          "id": "0953eba0-dd81-4103-868b-fe4325dbfb7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd62c029-08a8-4a90-9952-2f5a2cdfdfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a72119-a275-4990-811c-e3e611bc279c",
        "cursor": {
          "ref": "cee482a7-68d4-4696-bea7-aad4fb5268c3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ead684a-700c-4262-9204-8530ee3261ff"
        },
        "item": {
          "id": "79a72119-a275-4990-811c-e3e611bc279c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6af52b81-a7fe-4460-8d05-eaa7b1ef5888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a6758a-04f5-412c-a6be-c4cb73a46b43",
        "cursor": {
          "ref": "4723f339-4a95-4662-a288-b4b0d6d91946",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f6b0f51f-14ff-4140-a31d-22a0d37a251f"
        },
        "item": {
          "id": "d7a6758a-04f5-412c-a6be-c4cb73a46b43",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "65af8132-3cc6-48c4-9f82-a76e59a158bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a4507-3075-44de-8801-e348c3d67764",
        "cursor": {
          "ref": "def5f7d7-8085-4638-882e-e989970d4974",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4f6250a7-52f1-4125-8ed3-cd1f07df973b"
        },
        "item": {
          "id": "e98a4507-3075-44de-8801-e348c3d67764",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a6721786-0263-480c-a506-8d1b18972e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe08d6c2-ee3f-4cbe-ac95-a59eea8b431f",
        "cursor": {
          "ref": "d1905ab9-d3d9-4eaa-ab22-d2f0182b4355",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d578fb75-8758-4cf7-87e8-9a913f3a9d31"
        },
        "item": {
          "id": "fe08d6c2-ee3f-4cbe-ac95-a59eea8b431f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5f4fe4bc-0a90-484b-92d1-a0cb730fa8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bb97bf-b8fc-49b8-b225-7bbfe377e63c",
        "cursor": {
          "ref": "ae6820dc-d2f3-40e9-ba48-d9801a600a54",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fdb7c6e0-47c8-4dc4-9ed5-fd804ceb1899"
        },
        "item": {
          "id": "a9bb97bf-b8fc-49b8-b225-7bbfe377e63c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "982d2e7a-7638-41b2-b765-43b97f7532d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631af25c-961f-4da1-bb63-3a63b0c529ac",
        "cursor": {
          "ref": "f1dba6cf-6830-47f3-9601-c59c9d68cb48",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "62d78cec-6216-45a5-8077-5b012eb6111c"
        },
        "item": {
          "id": "631af25c-961f-4da1-bb63-3a63b0c529ac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3d9d9b08-e8eb-4c50-9549-5f375773e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8314051-7d33-4c56-a19b-b54bcf7eb11f",
        "cursor": {
          "ref": "d8bc4a5d-e879-4022-b2d4-ec95979435c1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1121ee43-a3a2-4f1e-820d-234214e283b1"
        },
        "item": {
          "id": "d8314051-7d33-4c56-a19b-b54bcf7eb11f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "361fb5f1-c0a1-40b8-af03-120b70e17083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d7c09-0353-46d2-bc6a-236c1e6fd874",
        "cursor": {
          "ref": "8f979a98-4247-4b83-bf26-cd434b0c2f60",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b29bdfc-a777-4110-9344-6d5a4bd2585a"
        },
        "item": {
          "id": "3b2d7c09-0353-46d2-bc6a-236c1e6fd874",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57994e4c-388f-4351-89e4-77a6f77ba099",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98650b37-810c-4e8e-ac1e-18ca0f6c5c60",
        "cursor": {
          "ref": "6f42d2e8-834a-49e7-a8bf-c3df52a0f870",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eaabf7ae-67c5-40f5-bdbe-7ef3d5917e96"
        },
        "item": {
          "id": "98650b37-810c-4e8e-ac1e-18ca0f6c5c60",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2c7bfd91-40f3-49f8-88f2-b7f3f1f0f763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9d1376-d7ce-4afa-865f-1997190eb31f",
        "cursor": {
          "ref": "ffe88671-6dd1-4f72-9e67-3b988c9cc5e5",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3be2bcc1-2f71-4cc0-a2c5-bddd1a1e710f"
        },
        "item": {
          "id": "7f9d1376-d7ce-4afa-865f-1997190eb31f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d9c4099c-4cc7-40f0-84f0-bb09e32134b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46809fe2-cc99-4f76-a5cc-db4a9d81bd45",
        "cursor": {
          "ref": "69c8d609-2f55-4d9a-9385-a1e61d987b56",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c41f01e0-e4fc-45c8-aab2-0fcd3126cf8a"
        },
        "item": {
          "id": "46809fe2-cc99-4f76-a5cc-db4a9d81bd45",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4ff1f17b-118e-4df4-b0f6-3ca84f161e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef939aba-3c3e-4d09-be92-1ed82c9e8709",
        "cursor": {
          "ref": "7ba1e7e4-0191-432f-b1ce-b2cf072f0fb9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c52879c3-4a4d-4dd6-9b7e-b4ddefe4fdb7"
        },
        "item": {
          "id": "ef939aba-3c3e-4d09-be92-1ed82c9e8709",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1f1128fa-5854-4262-821e-8c4228ab50e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5412c8ae-aa3b-4866-adf2-dee4dc902138",
        "cursor": {
          "ref": "2b84fd92-c5e5-46af-884a-815c7ab84c44",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e6a7a4b9-82bd-4b95-9ca7-6ebbad65fe21"
        },
        "item": {
          "id": "5412c8ae-aa3b-4866-adf2-dee4dc902138",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0b88c0d0-0e0b-4167-87ba-9afb25c859bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f164b01-73b7-4181-9ff6-599c79447fde",
        "cursor": {
          "ref": "b35158d0-129d-4837-ac1e-5284d1618a13",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c0372038-1f55-4d8d-b751-4cfa12c6f612"
        },
        "item": {
          "id": "8f164b01-73b7-4181-9ff6-599c79447fde",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dbfc25e0-028a-480f-9c23-44e4b5c830a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5617647-0d35-443e-b42f-f7eb1aa79e7f",
        "cursor": {
          "ref": "f2be0f7f-e973-4881-97bd-c0f3465ebf28",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f71f8204-7f92-4af9-a2ac-332e19036f41"
        },
        "item": {
          "id": "a5617647-0d35-443e-b42f-f7eb1aa79e7f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a300a835-f4ae-4692-bec5-cc1ec9e232d9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa12a3eb-9351-4337-98bb-662d96a1ebda",
        "cursor": {
          "ref": "54763dd8-fcd6-468c-9065-8464a8e7c195",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "313935ac-0557-4d22-b2da-cf68326597ff"
        },
        "item": {
          "id": "aa12a3eb-9351-4337-98bb-662d96a1ebda",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1518b9d7-dbca-41db-a804-b3e208b22124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3559785e-e47b-4699-a7ce-9dd278dc2865",
        "cursor": {
          "ref": "843d5ca3-a82e-42a6-a14d-71d4658385b5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8a0e38ba-04a9-4e6a-807b-d32c452a82e7"
        },
        "item": {
          "id": "3559785e-e47b-4699-a7ce-9dd278dc2865",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "68bd77fc-bbb8-47a8-a155-5680d5cc250a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9df965-5d4f-43de-b4dc-780be9df6337",
        "cursor": {
          "ref": "96f91de7-3594-41fd-804c-76a21536f602",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8977e9a3-914b-467b-9ebc-19cdec4720d3"
        },
        "item": {
          "id": "eb9df965-5d4f-43de-b4dc-780be9df6337",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "40c1ab04-c974-4892-ac62-92c2741189cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb63ebc8-2c0e-45d9-b601-9e15a07bbb68",
        "cursor": {
          "ref": "814ba324-3619-4dd0-8023-67f3c60638b3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fd5322d5-0e0a-42d7-af9e-9f0a1c683a0c"
        },
        "item": {
          "id": "eb63ebc8-2c0e-45d9-b601-9e15a07bbb68",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1ac3ce79-b24b-473d-9754-fa3613f91444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab75797b-26c8-424b-9d84-f6c18acb66db",
        "cursor": {
          "ref": "2ee5ab59-7d53-4451-8b70-33410d698cb4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e1f184f9-3585-4865-a985-9e60e91053b9"
        },
        "item": {
          "id": "ab75797b-26c8-424b-9d84-f6c18acb66db",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5c13586a-32d3-4ef6-a55c-07debc256a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da02ea7f-a484-446f-a91d-23038513e928",
        "cursor": {
          "ref": "f3360c7f-d409-4aa5-ae63-598825580a23",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b47c6cbd-8f73-4ec0-9e81-f232e48f2820"
        },
        "item": {
          "id": "da02ea7f-a484-446f-a91d-23038513e928",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1485f66e-513e-4062-8fde-814ce7a740d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d84573-7194-43e0-919c-6922fc7098a3",
        "cursor": {
          "ref": "34983a04-f64a-46ea-9589-cbfe1879f7db",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "86aa9376-5d98-4376-a131-097b111e5878"
        },
        "item": {
          "id": "04d84573-7194-43e0-919c-6922fc7098a3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "408bd583-9a27-4ae8-8645-45cd119b6216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfd98a6-3c46-4675-bfdf-4296dd7efd49",
        "cursor": {
          "ref": "56f9fee5-5b2f-411f-92bc-f878f4a7c629",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "735be454-b4bb-4679-a1a2-f78f8578f024"
        },
        "item": {
          "id": "ccfd98a6-3c46-4675-bfdf-4296dd7efd49",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "45f8d68b-e98e-4ebc-a2fe-8d6e77141113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6351fbfc-ed75-4384-922c-e155056491c0",
        "cursor": {
          "ref": "6d489487-99e7-453f-bf70-066336f96d69",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cb20baad-1088-4eb5-9c14-4af6d062a99e"
        },
        "item": {
          "id": "6351fbfc-ed75-4384-922c-e155056491c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "357e8da6-f23b-439d-8b85-f30150df2cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e72952-4312-4426-8a35-4db517f39534",
        "cursor": {
          "ref": "ef5522a5-84bb-4f11-afd7-66cba7492895",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "619bb70b-b31a-4ea0-88ed-e3c46400da82"
        },
        "item": {
          "id": "e1e72952-4312-4426-8a35-4db517f39534",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6f03d27a-9c4a-417d-afcb-6dfa6eac1af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aad636-8232-424d-acf3-0ec735febb16",
        "cursor": {
          "ref": "16ad12f5-8e3b-45b2-a086-348936de8cc1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60f14f36-fc49-4cd6-bf4c-0174430b8c7e"
        },
        "item": {
          "id": "32aad636-8232-424d-acf3-0ec735febb16",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3f2286ba-9c07-4b7a-ac10-02f437fdb6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b064edce-7ae0-434e-afee-0a61f97bec2a",
        "cursor": {
          "ref": "4a8ec8ba-8b10-4f9e-a642-1731479d1872",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ad48b259-f61a-4f96-b6a4-d39d89e4b997"
        },
        "item": {
          "id": "b064edce-7ae0-434e-afee-0a61f97bec2a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9d73e4cc-6acb-438b-a1ba-d5f709e8c46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb9d99b-64c6-4221-a1b1-33ebf52be96a",
        "cursor": {
          "ref": "52c05c85-3eca-49c6-97cb-53963f37cb04",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5992c05e-0e75-4586-8c60-b43f0725b2f9"
        },
        "item": {
          "id": "2fb9d99b-64c6-4221-a1b1-33ebf52be96a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "720a0664-aced-45f2-943d-0e618db214ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e6319c-8a18-4701-a89d-285aed7ee27b",
        "cursor": {
          "ref": "5c794b54-e82e-445f-8471-7e1f94618493",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4f91586e-f436-4782-a06a-0ab0be8720a2"
        },
        "item": {
          "id": "d2e6319c-8a18-4701-a89d-285aed7ee27b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0db08dbe-3d4f-4d94-a372-d7be0b179457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10431ba-1735-416f-ab7e-08cbd40fd451",
        "cursor": {
          "ref": "c61d7cbc-b6fc-43dd-80a1-0e7ed8bc311e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "96db16d0-f5fd-4730-ba03-5e87b0ead29e"
        },
        "item": {
          "id": "f10431ba-1735-416f-ab7e-08cbd40fd451",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f12731a5-0710-4d41-9821-2ae7f823e90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc03d5d-e522-4f7c-b6f8-fb69751e5b92",
        "cursor": {
          "ref": "0eccfe3e-e291-4b7d-b8fd-9bf5dbd08b77",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a0fbb8ca-dcb1-42e9-bbc4-2b7f5974b9f1"
        },
        "item": {
          "id": "8cc03d5d-e522-4f7c-b6f8-fb69751e5b92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a01a325a-3bc7-4c22-a5a2-3738ecea995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9890f8fb-4dec-4c8c-a0fd-5bf0a3a2827e",
        "cursor": {
          "ref": "d8229d48-b97c-490d-8e37-9e989be10201",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b349f49e-fac6-4660-887a-057af6ebd661"
        },
        "item": {
          "id": "9890f8fb-4dec-4c8c-a0fd-5bf0a3a2827e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0ea8bd80-0bb3-4441-a68c-323de7e5e8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b464261d-347c-4f55-9cf8-2cb52e38eb6b",
        "cursor": {
          "ref": "c8fea84a-0f47-4480-b51f-03ae4b192dce",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7321127b-f24a-4845-a2ad-dc600762ec44"
        },
        "item": {
          "id": "b464261d-347c-4f55-9cf8-2cb52e38eb6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dde9c8be-7f15-4132-a6e6-4bf3dce64d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaea68c-9b45-4ef9-82da-87c708eade86",
        "cursor": {
          "ref": "526d6089-7e1d-41cd-8873-c0f7f38d4ccb",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cc69297a-53b5-4e4f-a25e-a60466e9fa7d"
        },
        "item": {
          "id": "8eaea68c-9b45-4ef9-82da-87c708eade86",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9980cabf-931e-47d7-b677-49bebe684e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eebd051-743f-4c11-8dc7-2f4641d3b536",
        "cursor": {
          "ref": "e878d368-906c-46db-a418-bb4eece171ff",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "adbcd1b8-6a53-44f4-9404-50a383ab0962"
        },
        "item": {
          "id": "5eebd051-743f-4c11-8dc7-2f4641d3b536",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a7164b88-2a99-48fd-bfa9-7d851ddb1206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ad7c9-8481-4c63-bbc3-8e00fa4d1387",
        "cursor": {
          "ref": "4e91c13f-8d6f-465e-b47c-185c8c8355b1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "33f190d4-a76b-44e0-acfe-12d79d67cab2"
        },
        "item": {
          "id": "e21ad7c9-8481-4c63-bbc3-8e00fa4d1387",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4b383f17-1c31-4678-a293-79686faf9799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00292f88-d594-47d1-bc04-ba4fb9703a0e",
        "cursor": {
          "ref": "f5bdde52-90dc-4f7f-a6ff-ce5805752573",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "862ba3a5-e827-42ef-bef7-708661e16e36"
        },
        "item": {
          "id": "00292f88-d594-47d1-bc04-ba4fb9703a0e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7f33e85d-323c-46eb-8a16-c667af8c1655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6469307-6f35-4800-89fb-aadbc9e407a8",
        "cursor": {
          "ref": "ed6045e3-4430-4426-9398-1cd79c215278",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5ea7109e-395d-4af4-a891-607f225de553"
        },
        "item": {
          "id": "d6469307-6f35-4800-89fb-aadbc9e407a8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ae371a1-67fa-4e18-8a8e-8bce239d186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f098660c-746b-488b-a81e-c97feae9a2da",
        "cursor": {
          "ref": "90eb551e-c109-4746-a655-b33b7aa45476",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a379c79f-d450-4df0-9696-ad2ca8d7878a"
        },
        "item": {
          "id": "f098660c-746b-488b-a81e-c97feae9a2da",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a5496fab-66d5-48df-ab06-61cca1079676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58db2c77-bfd8-40d2-abda-2abedc5e1834",
        "cursor": {
          "ref": "43c77dd0-d444-4b30-8f21-d4ecb1b7cb1d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "07db836e-f622-4bd6-9335-fa3522a6185e"
        },
        "item": {
          "id": "58db2c77-bfd8-40d2-abda-2abedc5e1834",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7b6e33f1-1b67-44ce-8aa6-a97d0fafeca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007046d7-a4b8-4f96-a8e2-f5206ef9a0b0",
        "cursor": {
          "ref": "3f438bf8-2b72-4cb2-96e3-3e0491ab05a7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1bf1fe58-ca7d-45af-98dd-309857761ac1"
        },
        "item": {
          "id": "007046d7-a4b8-4f96-a8e2-f5206ef9a0b0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7cd9c5e7-4841-4fce-a530-44bfc2241268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab682e8d-d2d4-40ae-b1ae-aa9f674d91bb",
        "cursor": {
          "ref": "a5c74e5f-0594-4fce-aecb-906d3ff51951",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "80c9bcd9-4d70-4a61-a7c2-c7205923c726"
        },
        "item": {
          "id": "ab682e8d-d2d4-40ae-b1ae-aa9f674d91bb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dcecb9d5-38d1-4c99-b338-345fa1a9ec53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ba43f4-f79c-4b18-a803-cf6e605ec0e5",
        "cursor": {
          "ref": "71b3399d-b54c-4b8b-8ae8-dd7c17f8a14a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "03949ea4-4479-4ad6-a741-7e7f1dab53cb"
        },
        "item": {
          "id": "39ba43f4-f79c-4b18-a803-cf6e605ec0e5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5d8a41c-56a4-4b0d-91da-629550500f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caa4ccb-2ebe-4b2d-836d-eb834d9a752a",
        "cursor": {
          "ref": "9facb4a3-2e3b-43c6-8a6c-be3e1d8c65ad",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d47476bf-dcb6-4f4d-9e78-1404df68d989"
        },
        "item": {
          "id": "0caa4ccb-2ebe-4b2d-836d-eb834d9a752a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b7ea945f-e3b9-4587-b836-a3634c43e60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea217b2e-600c-4a3b-b491-7ef3d414d15c",
        "cursor": {
          "ref": "5e7fb460-564d-4320-86bc-ba0c3985036f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4629deda-58b8-4c97-99fa-528b7c87dbf4"
        },
        "item": {
          "id": "ea217b2e-600c-4a3b-b491-7ef3d414d15c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "57d31b32-9df9-40b1-9fd2-93bff4923bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba473d-e663-4683-96f4-5891bbcba330",
        "cursor": {
          "ref": "b729061d-9060-4e18-88f8-cbd98e7c8aa6",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "51b1e70b-5fac-4448-9b4c-9f5b77f9f240"
        },
        "item": {
          "id": "8eba473d-e663-4683-96f4-5891bbcba330",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e3706086-3ab1-4718-bf35-74c34e287794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c2f68a-5c50-44c2-929c-fc43bcd21464",
        "cursor": {
          "ref": "ab5b9dec-02f7-43c7-8946-f58cde0373d7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "968bd9a4-6a2a-402c-b0e1-677c27551e0b"
        },
        "item": {
          "id": "e9c2f68a-5c50-44c2-929c-fc43bcd21464",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "56e30a47-aa5e-4678-83ce-0a71b1e99258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4a43df-930d-4707-8359-2b8166e90aac",
        "cursor": {
          "ref": "fbb9f681-c608-43af-a845-c1f367abdda7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bba2014b-b98f-4289-80d4-fdaa499223f6"
        },
        "item": {
          "id": "ea4a43df-930d-4707-8359-2b8166e90aac",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "582e3779-7e53-4f67-afe1-679f275b31d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd463b2e-fc85-4867-b820-946abd903e1f",
        "cursor": {
          "ref": "21473fa3-bf42-4f6e-a7dc-e2445a61d965",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ea9ffb3b-136d-4bf3-8803-52aee94b8642"
        },
        "item": {
          "id": "bd463b2e-fc85-4867-b820-946abd903e1f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c3d8f43-0ebf-4514-adad-8d0408a550f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23c7ac0-60e1-41bf-9e65-d515549acaf9",
        "cursor": {
          "ref": "85b1d612-9bc6-41b5-a6b9-abcc17114caa",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "07b30bcd-47cf-4009-ad6d-637ecdb360e0"
        },
        "item": {
          "id": "f23c7ac0-60e1-41bf-9e65-d515549acaf9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "105f7615-59c0-41cb-a629-691cfc0167c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28cfdfa-0aad-42de-a63b-35ca8efd56fc",
        "cursor": {
          "ref": "fa9712fe-0c88-4a2a-9ff7-773fe64882c1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0f0b88b2-319e-4bb0-80d4-0284eecda446"
        },
        "item": {
          "id": "b28cfdfa-0aad-42de-a63b-35ca8efd56fc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3bba4e86-c430-44ce-9146-4f891b99a3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618a306c-92db-4f8d-94fc-9828fb034a65",
        "cursor": {
          "ref": "25612ab2-73ed-4a05-ab72-568ac0610280",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "75cd599e-da86-47df-8b65-1d8f7f95d46e"
        },
        "item": {
          "id": "618a306c-92db-4f8d-94fc-9828fb034a65",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1491b512-41ea-439a-ac28-c61bf5177dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533637c5-de02-4d58-a870-5d7d2b1558df",
        "cursor": {
          "ref": "8a7bd51a-829c-434d-b51e-c02487126852",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "09f66288-cab1-40ee-b930-2012afef0741"
        },
        "item": {
          "id": "533637c5-de02-4d58-a870-5d7d2b1558df",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0c7e0581-520b-44a5-b65a-08c4b36caf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5e1a80-99c6-4fba-a9ce-49c63bbcf3e7",
        "cursor": {
          "ref": "3050e84f-94aa-444a-b881-a3bdaee562da",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c05a5c7b-e784-4307-9507-6c948ec84a2d"
        },
        "item": {
          "id": "3e5e1a80-99c6-4fba-a9ce-49c63bbcf3e7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2795d62f-785a-4f7e-86ec-210e314717b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b508326-2931-400b-ad35-a50016e71bc8",
        "cursor": {
          "ref": "609dcc2a-e84d-4bbb-8cb0-9a7c67a74206",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e258631e-110d-4f48-9cde-b034f3458320"
        },
        "item": {
          "id": "5b508326-2931-400b-ad35-a50016e71bc8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "10251153-f02d-482b-8649-c2c773073048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd65d26-6c56-46ca-a89c-2cdc6d9802f9",
        "cursor": {
          "ref": "28bc2640-8b22-4fe2-9c0a-4033d579208a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "05029a80-e9f8-47bf-bdf8-873c4fad3505"
        },
        "item": {
          "id": "bfd65d26-6c56-46ca-a89c-2cdc6d9802f9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "382828b4-a2eb-4331-b4e1-1124f5354f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beb9981-3572-40fe-b1a6-a349ef22abcb",
        "cursor": {
          "ref": "b0e84c4f-e1c3-4539-b01e-8e102b6f78b1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1414c7fb-d5fb-441b-8c79-93bf3b06119c"
        },
        "item": {
          "id": "7beb9981-3572-40fe-b1a6-a349ef22abcb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "df93423f-314c-4460-961c-5f1de4d2c27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea68c0c-a8e3-43e7-82df-c820be23e54f",
        "cursor": {
          "ref": "ac1183fc-ef90-45e8-b336-c37e173c29ff",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "78821d01-f999-4fef-a216-1219906424c0"
        },
        "item": {
          "id": "9ea68c0c-a8e3-43e7-82df-c820be23e54f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "96480eef-695c-45db-b21e-e19b7cb2883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7daa25f-1735-4fc6-a37c-ddbbb0df999b",
        "cursor": {
          "ref": "98667eb5-d417-4420-9339-27d0da888007",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cad5d198-995e-497c-9f59-2f40cd2a7698"
        },
        "item": {
          "id": "e7daa25f-1735-4fc6-a37c-ddbbb0df999b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6e83236c-78e8-4953-a113-800c7f38515b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f072a79-d33c-43c9-b6bc-97b500c90b94",
        "cursor": {
          "ref": "346a0925-4d2f-409c-a7c9-e6f1edc34d4d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "24bda04d-aad3-4d20-b575-a261c12685d0"
        },
        "item": {
          "id": "6f072a79-d33c-43c9-b6bc-97b500c90b94",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f644dfef-bd5e-4f1a-be52-306d3d61f5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e60e99b-c02e-43b3-a650-0257c0b1f492",
        "cursor": {
          "ref": "1126ef05-da51-4fde-b180-9898c6c71b93",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91686f30-1302-49de-ba8d-eb35da1dd48d"
        },
        "item": {
          "id": "9e60e99b-c02e-43b3-a650-0257c0b1f492",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "289bed76-25e1-4a48-87c1-70ad6c724844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd72d4fc-2843-44f8-b651-9afeb7f2e8a8",
        "cursor": {
          "ref": "2e80fc75-5fdf-43d9-a671-4b2751482e78",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "df4a3668-0739-400c-840c-db837255e634"
        },
        "item": {
          "id": "bd72d4fc-2843-44f8-b651-9afeb7f2e8a8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "151fd139-a240-44ac-be13-e54e02abbab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56c175c-ed69-454b-99f0-316e086ba474",
        "cursor": {
          "ref": "0ca67224-e2cf-426c-95f0-05fea1a457c5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2236bdb8-7ef3-4e58-822a-5a43e97b5b25"
        },
        "item": {
          "id": "d56c175c-ed69-454b-99f0-316e086ba474",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f751ba22-09ee-4cb9-a70c-733a5629366b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d15f385-200c-455e-94f7-055ac3003b98",
        "cursor": {
          "ref": "58ada4af-4b10-4f8f-aa1a-7a93a772a6ec",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a78a2633-a45d-4dfb-8912-b2fa869b8aae"
        },
        "item": {
          "id": "5d15f385-200c-455e-94f7-055ac3003b98",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c56ec252-754d-4bfd-98b8-cfbeea448540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8017354f-3773-48ce-8d5d-862b8c64b32c",
        "cursor": {
          "ref": "de6ff51d-73aa-4afe-b1f1-48010ecef23c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6da54173-aa2b-4542-be25-16f0d509791c"
        },
        "item": {
          "id": "8017354f-3773-48ce-8d5d-862b8c64b32c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a42b28d5-4736-46ae-b031-21ce30f6d156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996dec75-29f6-43a4-b5e6-21deda4f1421",
        "cursor": {
          "ref": "cf0536ae-4742-47c4-8774-b6e6f42e5d08",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a63e9875-b45e-4999-a6cb-77ebbfee8c0b"
        },
        "item": {
          "id": "996dec75-29f6-43a4-b5e6-21deda4f1421",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0b6f4abb-2a89-430d-b216-a8caee9350c2",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "af307a79-443e-47da-8214-91ef554037d4",
        "cursor": {
          "ref": "b6ff135c-af45-4c2e-ade2-9e4bec0ddf56",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7cbb61ea-c9f3-4275-b3d0-39cbfec70edc"
        },
        "item": {
          "id": "af307a79-443e-47da-8214-91ef554037d4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f91f453a-0863-4701-a987-70d2ace3e7ac",
          "status": "Created",
          "code": 201,
          "responseTime": 128,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac741457-2af8-4e8d-a607-272f6ebbbdb5",
        "cursor": {
          "ref": "4ae48e28-b9fb-44f1-81ad-34bc5e74abdd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "79db425b-e0c2-4aaa-b687-ebdf9c3ddca8"
        },
        "item": {
          "id": "ac741457-2af8-4e8d-a607-272f6ebbbdb5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "97611591-de3e-4ded-bb7f-4fcd46849050",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b442fa-98f1-4a52-92f1-0861cbef8ed1",
        "cursor": {
          "ref": "d62866df-e178-4bcc-bf19-c0f757c23a9c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bd137452-1e90-44c4-bc3f-c2a823be92de"
        },
        "item": {
          "id": "33b442fa-98f1-4a52-92f1-0861cbef8ed1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "34714c02-5760-496d-a5ec-d51c8bac6302",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff006f5-75cd-42ae-ab13-f1a87523def1",
        "cursor": {
          "ref": "0bb25e75-5670-4e77-b9e3-56b26cc9c1c5",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d76904d0-d95f-4cf1-b377-cf68c8ede6d0"
        },
        "item": {
          "id": "6ff006f5-75cd-42ae-ab13-f1a87523def1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "80cb05c8-018b-480c-b5b2-cfa9b378ea03",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12b90ae-465f-4521-96e2-8204a47054cf",
        "cursor": {
          "ref": "d067b937-de8b-477b-a816-f0c4b8024fcd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1c4c652b-6f27-4c19-bf50-8926f83d04a6"
        },
        "item": {
          "id": "a12b90ae-465f-4521-96e2-8204a47054cf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a883ab54-c0b3-458a-9230-da3673373cab",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7499f48c-2495-4e72-a6b8-c6bde3b7ab02",
        "cursor": {
          "ref": "5d345c20-dcd9-480f-b26e-324c33741d78",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ac581c70-ca0d-4bc6-8aee-41d016d630af"
        },
        "item": {
          "id": "7499f48c-2495-4e72-a6b8-c6bde3b7ab02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a27088d4-3044-4945-86c0-374d191d2367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6a9993-233a-46b4-80a5-68680f257b59",
        "cursor": {
          "ref": "685177f8-067d-49d5-9a9b-0c2d1530af18",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94f16e06-a561-4433-89a4-fa4260748052"
        },
        "item": {
          "id": "7e6a9993-233a-46b4-80a5-68680f257b59",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8cdcf2f3-ac3e-4f44-80b7-da0813a9380e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f2a46d-415d-4ff6-a225-f2fe0f199384",
        "cursor": {
          "ref": "980a5939-84fb-44ee-81c4-4d06dfaae62b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "086ce701-0620-47c9-997f-0b2e9ef3be86"
        },
        "item": {
          "id": "44f2a46d-415d-4ff6-a225-f2fe0f199384",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eb49747a-6b04-422b-8d9f-8f71d3f0d2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1304d4fe-37c9-4faa-ac2d-162458181d6a",
        "cursor": {
          "ref": "a4338436-5a45-4ed7-afdf-95531e190f08",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d00aa6d6-9b46-4d91-84be-a9728694d26a"
        },
        "item": {
          "id": "1304d4fe-37c9-4faa-ac2d-162458181d6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0b7545cc-81e8-43dd-b384-10f4197ef9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2880b727-c12d-4f93-88c2-1263931c1bd4",
        "cursor": {
          "ref": "7ced7d85-4ca7-4728-be59-5821ad945856",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9187b993-327d-40f9-9899-30500fa710ef"
        },
        "item": {
          "id": "2880b727-c12d-4f93-88c2-1263931c1bd4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bf67d19a-7a0f-4373-adcc-91eeb5418c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13008791-568b-428d-a81d-440dc4e9a760",
        "cursor": {
          "ref": "909844bd-6e9f-4c91-b979-e13af25e46ca",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7931ab08-33b0-4380-94a7-ff9db087265e"
        },
        "item": {
          "id": "13008791-568b-428d-a81d-440dc4e9a760",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "90d152c2-cf1f-4b9b-9a64-86e90530c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c1be5e-ad8f-4d98-886e-8a227930c2b6",
        "cursor": {
          "ref": "11217222-0fdb-408a-b37c-56609ca7b5b5",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e118f95c-3876-4c84-a80a-72a47f352ad4"
        },
        "item": {
          "id": "f9c1be5e-ad8f-4d98-886e-8a227930c2b6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0f906f6d-5724-4f43-8d3d-4a97185b0d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba31eba-36a3-46a9-821a-15fc35ca1ad3",
        "cursor": {
          "ref": "c3ad0a81-6ff5-46d0-bfee-654600d7e94c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b8fab5c-be16-4aa5-b29f-ad607e794cbd"
        },
        "item": {
          "id": "6ba31eba-36a3-46a9-821a-15fc35ca1ad3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c741b05d-81e3-49ee-9d2e-0965efdc12c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397494d8-ace0-424b-ba52-d68f6233db21",
        "cursor": {
          "ref": "cf50ebf1-79e2-4af6-a967-6052410b4764",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bc91c932-cc42-4000-be13-98ac5b59f420"
        },
        "item": {
          "id": "397494d8-ace0-424b-ba52-d68f6233db21",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f7d38753-e680-4d02-9362-6dbadcad7f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ebe9d4-63df-4207-bde3-b20af4a346fd",
        "cursor": {
          "ref": "82a1e9e9-5c58-41b1-b619-5ab645574a2f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "57fac54e-c6da-4176-b357-39edf447f302"
        },
        "item": {
          "id": "12ebe9d4-63df-4207-bde3-b20af4a346fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2aa70bbf-4172-448c-ab28-55b5a78ce426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d54e8f-4d76-4246-b7d8-4e186bd591eb",
        "cursor": {
          "ref": "d9651600-1dd7-422e-8243-93b5bc942b87",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1577ae77-191b-4889-8e90-0e768ba3d204"
        },
        "item": {
          "id": "c3d54e8f-4d76-4246-b7d8-4e186bd591eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3216d007-575a-4f73-a186-0c24e44e78af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a2c50-62ef-408b-882d-bc8725541bc5",
        "cursor": {
          "ref": "03fe436f-af45-40c1-8919-dd4d0e147568",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "308e7e2c-fae2-4e2f-a261-7757ec1947d8"
        },
        "item": {
          "id": "ea5a2c50-62ef-408b-882d-bc8725541bc5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fe87465d-7936-4c7f-9ec6-cec95af40ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caa6b8a-cfaf-4ba9-914b-66dfa9c57588",
        "cursor": {
          "ref": "5d62f142-de66-4bad-95a4-17820d011dda",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "17b2b7a7-a665-4001-b976-175b4ccd290f"
        },
        "item": {
          "id": "7caa6b8a-cfaf-4ba9-914b-66dfa9c57588",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b77893a-5379-4660-919b-f903e9751c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ebe67e-8b74-4eb1-8389-729a5b7d157c",
        "cursor": {
          "ref": "e213d003-a703-4fe1-a270-f7b84ec3f791",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f8bf94b-5a2a-4283-ad0d-8c9c17cdb392"
        },
        "item": {
          "id": "a6ebe67e-8b74-4eb1-8389-729a5b7d157c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c4d49d59-d60c-4ee0-86fe-29d84f2a9c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88343bb3-9b0d-4e31-8108-b82e6750edfa",
        "cursor": {
          "ref": "e312fdcd-b658-424b-97b0-1a24ac0e60fe",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8f8d5446-064a-43b1-a8a7-dd922f6dbbe9"
        },
        "item": {
          "id": "88343bb3-9b0d-4e31-8108-b82e6750edfa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "32a7050d-6859-4767-b45b-c10fc25061f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f706b1-4404-43a6-a6df-059f391b55ab",
        "cursor": {
          "ref": "b0640185-1362-486c-84ed-26a42c3925e4",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fabefad3-498b-4337-b0b9-1223bf56730a"
        },
        "item": {
          "id": "c3f706b1-4404-43a6-a6df-059f391b55ab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ef148afa-aa10-441b-beac-f838c1840a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52177529-4fdc-4fdb-968f-cc9d320fe4a9",
        "cursor": {
          "ref": "f944e85d-7c6a-430c-a3fc-8087dd4199ac",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "42eb573a-ba4d-4ceb-971e-b682139cb217"
        },
        "item": {
          "id": "52177529-4fdc-4fdb-968f-cc9d320fe4a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56867af8-2134-4aef-bc67-526b1b8ae8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b36cb4a-b793-4b96-951c-9c78efadeb95",
        "cursor": {
          "ref": "58f4190d-4080-4ce4-b31f-40fb1c9ff9dc",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3441b194-f17c-4d9c-9d7c-69eb5ac43d89"
        },
        "item": {
          "id": "3b36cb4a-b793-4b96-951c-9c78efadeb95",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a5223e33-3dc3-4d9c-ac0c-9699c188530b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85193a-ce2c-4d95-9d5c-c573a2c69f7c",
        "cursor": {
          "ref": "26fd2b3d-aa4d-41b2-8c7e-ea51688f4ba0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9e16d146-0ac2-41da-87f7-1021ac8857bd"
        },
        "item": {
          "id": "ae85193a-ce2c-4d95-9d5c-c573a2c69f7c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2ad49d0b-e81d-4d58-8463-db8d5a3820ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2550593-e167-4ab9-805b-cf964b3cab12",
        "cursor": {
          "ref": "cc3d7b00-a549-4d1a-95af-bc06ea2bbd44",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3a0943cd-d22d-46c1-8a3a-77778736c4e0"
        },
        "item": {
          "id": "e2550593-e167-4ab9-805b-cf964b3cab12",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c6b66c4-8798-4894-9077-b9274f199d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6b77f8-d7b4-48f5-99c4-1ca2196396e2",
        "cursor": {
          "ref": "3e4cd64d-f0ec-4b1a-bf9a-acf4aff265df",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ca574ad-5a36-44e6-96a7-47516506eef2"
        },
        "item": {
          "id": "8f6b77f8-d7b4-48f5-99c4-1ca2196396e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cd1a465d-7df5-47e3-af93-920a4d7893f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af8b678-adeb-43a6-a4af-1f38b2292eb1",
        "cursor": {
          "ref": "990f17c9-0db3-40d0-8346-04acf450b0da",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "746f1824-10a2-48cc-9158-656073303485"
        },
        "item": {
          "id": "2af8b678-adeb-43a6-a4af-1f38b2292eb1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8afa5fd2-a21a-4648-855b-13bf0cf02fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20867001-d3cb-4cbf-a449-c58a8fa83bd3",
        "cursor": {
          "ref": "e274c0fe-46b6-480e-8960-2e6ae007c897",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "abdb5825-5e64-4d83-87bc-ecc94592ff28"
        },
        "item": {
          "id": "20867001-d3cb-4cbf-a449-c58a8fa83bd3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db17831e-687d-475a-87b7-590ae30700a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07f849-27b2-4f69-8cd7-cac369272892",
        "cursor": {
          "ref": "4c30e1ea-d14b-485c-a133-bafde2305d46",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4d59a266-725e-448c-8cd9-f4fcded5e541"
        },
        "item": {
          "id": "0b07f849-27b2-4f69-8cd7-cac369272892",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "91d28999-a68b-492a-9dca-fe9d7d21b5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ba0e4-6c82-4af6-bdd7-f0d115b8267f",
        "cursor": {
          "ref": "608b352e-7838-43f3-9c5b-7b8fd5f402f2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cc909e19-34a7-4cfc-88af-f332c939ed2f"
        },
        "item": {
          "id": "356ba0e4-6c82-4af6-bdd7-f0d115b8267f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b0c75a7-9310-432d-a416-e14f65b61648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920781d0-96e3-4e75-9b66-dc2174cbe55f",
        "cursor": {
          "ref": "47553df5-6f41-4ead-8263-c2429b6caab3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7a14c052-dd7c-4975-82bf-008fb0d4576e"
        },
        "item": {
          "id": "920781d0-96e3-4e75-9b66-dc2174cbe55f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3010f3b-f776-4337-aecb-579ed51d5d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d1f4b5-5f14-46ed-b9e9-f59b4e58837d",
        "cursor": {
          "ref": "c9db1a18-e922-4cf3-9f96-863af319658b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "40b1dab5-611d-4b3a-9fed-6f9873f53bb1"
        },
        "item": {
          "id": "55d1f4b5-5f14-46ed-b9e9-f59b4e58837d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d3987365-ad9e-433d-94dd-055b41ba7a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee729f7f-832f-4ca1-98f0-41454fbc2dc4",
        "cursor": {
          "ref": "a6f890b3-bde1-4458-8c97-389cb509dedb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e80efdbe-a82d-4642-9a85-d706b883579d"
        },
        "item": {
          "id": "ee729f7f-832f-4ca1-98f0-41454fbc2dc4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4157cd15-b8d6-4772-b9c8-a82cb97d778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743e9964-f2a5-4531-b5bc-0980de7ed99e",
        "cursor": {
          "ref": "b5381be1-c130-4290-8ac8-fb316a44442b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "041f2e15-a55d-40cf-87ee-347d55cfa0a6"
        },
        "item": {
          "id": "743e9964-f2a5-4531-b5bc-0980de7ed99e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "37e4ed2a-6937-44c4-af28-7a346eb3f5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb95bb3-2034-486c-bbb4-039e1263f197",
        "cursor": {
          "ref": "3636e1b7-089f-4e1a-8b69-6474b1eaf75b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2289d282-2e3b-472b-8592-b61298ca256f"
        },
        "item": {
          "id": "6fb95bb3-2034-486c-bbb4-039e1263f197",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bcfc11a0-f71f-42fc-8364-221ac00039a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4557b527-fe88-4f95-8ac6-3b3ed356432a",
        "cursor": {
          "ref": "d97ceab0-fd69-4939-932a-16892537693a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "435d906c-9252-4d34-b779-515e01fa034c"
        },
        "item": {
          "id": "4557b527-fe88-4f95-8ac6-3b3ed356432a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a0ae86b8-866d-401e-9a4d-97030df836c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad0766e-6d12-496b-adff-6da2f3fa605a",
        "cursor": {
          "ref": "2326a5b9-65e1-43be-b22c-5bfdae3840da",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "063a2c93-1a0b-477e-947e-36149696196b"
        },
        "item": {
          "id": "6ad0766e-6d12-496b-adff-6da2f3fa605a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1cba7038-c83a-41ea-ad54-04d4a60dac78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c98b555-d30d-4aa7-a2cc-40e3a23d127a",
        "cursor": {
          "ref": "79142b39-2276-4d8a-95b3-6d3a4c648b75",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a6a1e786-30ed-4160-8753-a6d11f5a7e0c"
        },
        "item": {
          "id": "9c98b555-d30d-4aa7-a2cc-40e3a23d127a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7a2c48a6-d4ed-439d-abd9-bab6d36b8e63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7002b-de41-4a27-83b9-915c5ec7dca4",
        "cursor": {
          "ref": "877499b0-d025-44cd-8da3-d4a9fde876e5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54c02fbc-6f8d-469e-bb96-6ffc70e900e3"
        },
        "item": {
          "id": "5cf7002b-de41-4a27-83b9-915c5ec7dca4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45498261-139a-4d49-8a78-ecfcb5640b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6a2ec7-c432-4c92-b383-6de270c82c5a",
        "cursor": {
          "ref": "4bf9e3c8-6efa-4773-a3cf-ae5f6df9a67e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f1788eec-b4af-470e-94de-098daf513ac6"
        },
        "item": {
          "id": "ae6a2ec7-c432-4c92-b383-6de270c82c5a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1b934746-b19a-4565-9472-e4c64c972676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff836c7-bf8d-463e-b9d8-5b46a1ed648a",
        "cursor": {
          "ref": "dd464894-716b-4a1d-9ee5-49a9f65a89c2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9a74e273-43f8-4d79-abd0-127c66a1da39"
        },
        "item": {
          "id": "9ff836c7-bf8d-463e-b9d8-5b46a1ed648a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3e49ecc-d47c-43cd-b3eb-29d72417b2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45056ec3-046d-421f-98bc-e88e21f5c185",
        "cursor": {
          "ref": "72ff61a6-81a4-47d4-8eeb-de05072d4e15",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5e3ad917-9505-4d6a-9e34-f48bf5f9d0ee"
        },
        "item": {
          "id": "45056ec3-046d-421f-98bc-e88e21f5c185",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a69754a4-a087-4940-a091-a36452cd81af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569517e-34e7-4221-9e7c-e570fd3c1885",
        "cursor": {
          "ref": "6e51c00f-8e49-4527-8c5a-47d0add41acb",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "44fe935f-b61f-4af4-902d-52f30d15a837"
        },
        "item": {
          "id": "9569517e-34e7-4221-9e7c-e570fd3c1885",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "636cfc9d-1f66-414a-9f6a-8c62b697c06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda98b86-2ddf-479f-a70b-e7bdcbc2bab2",
        "cursor": {
          "ref": "f895e216-e398-42aa-a1b6-d82e9ee570f3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4ff3cef3-9066-45a1-b5cf-13605f1543d4"
        },
        "item": {
          "id": "bda98b86-2ddf-479f-a70b-e7bdcbc2bab2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe0fd562-1de5-4f23-b5cb-3b5bc8d65347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ed5667-f35f-4b6f-be84-a8437d0bafab",
        "cursor": {
          "ref": "ef04f415-cb61-43a4-bcd1-530b5d87d8cc",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "24dd21c6-2478-4789-8bf2-25a66c07f830"
        },
        "item": {
          "id": "66ed5667-f35f-4b6f-be84-a8437d0bafab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f3c89549-78d9-4bfc-b34d-8637156bf579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399e0e77-851b-46d5-abf1-03d9797ea149",
        "cursor": {
          "ref": "209197a3-d2da-496a-8652-2441b91ca96f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1039d977-128c-4420-a33d-325fcb8afc6a"
        },
        "item": {
          "id": "399e0e77-851b-46d5-abf1-03d9797ea149",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4644feeb-9f33-42df-89f7-f4f637126530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013f2128-cf31-44ad-bfe5-265fccc11d99",
        "cursor": {
          "ref": "982e282f-68a1-4b38-87d2-41cf9f7d8c0c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6b6f829d-489f-4c87-a951-07df8eeb380e"
        },
        "item": {
          "id": "013f2128-cf31-44ad-bfe5-265fccc11d99",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5734a56a-a138-4acb-a61b-69b3cf456a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac45d74-d28c-4a5d-b3ec-40fdc8b4ec08",
        "cursor": {
          "ref": "8880525f-783f-4ddd-a85c-0d82c53fccc7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8fab640a-32ad-4af6-a457-29afc05fae28"
        },
        "item": {
          "id": "6ac45d74-d28c-4a5d-b3ec-40fdc8b4ec08",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60c9b534-eb42-4780-b7ee-2634fed138de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638b735d-a540-452d-80b1-5a2ec5a94e3b",
        "cursor": {
          "ref": "d963d93e-7faa-4046-bd88-e3f7b8c84ba7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ac77fc03-da49-44c6-8305-0ba02e3879de"
        },
        "item": {
          "id": "638b735d-a540-452d-80b1-5a2ec5a94e3b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ecc4f5ca-ab4f-4fdd-ac50-f2ede00294e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a5343-e822-4514-ba93-93bfa9cfb93a",
        "cursor": {
          "ref": "c48cda3e-80ed-4dce-9e7b-202600b772c2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c2827902-227d-4567-9e57-44803ca08abd"
        },
        "item": {
          "id": "641a5343-e822-4514-ba93-93bfa9cfb93a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53bc2cde-3e03-4547-9e0c-64a2e3b5ddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf108be5-6b76-441d-b2da-b23bc19d8023",
        "cursor": {
          "ref": "e2a89929-c5ca-4bb6-b2c4-86a66cdf2c30",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ee4f8adb-27d5-4bb4-98e3-b49f74c83d8b"
        },
        "item": {
          "id": "cf108be5-6b76-441d-b2da-b23bc19d8023",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09c2e718-9d43-4e80-a723-ab54e494cd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb71698d-6b63-4cb3-991d-29023d99209d",
        "cursor": {
          "ref": "98e8a430-539c-4961-b566-9784a43c1415",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e76fbe62-3d24-4968-a84a-f10dbd272cf7"
        },
        "item": {
          "id": "bb71698d-6b63-4cb3-991d-29023d99209d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "023c37e5-1c8a-4fd9-9a77-61b8d055c71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00674b74-c0bf-4f14-872f-59b385be1a3e",
        "cursor": {
          "ref": "4474464b-9d41-4d75-bf5e-ff9cfe29a3ed",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ac603bfe-4ebf-4bac-a537-61952e2ed53c"
        },
        "item": {
          "id": "00674b74-c0bf-4f14-872f-59b385be1a3e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0092cb4e-5fb0-42c4-b69b-9a7d099f3f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e917b24-12e6-4ba8-9940-6b1f2a3fccb7",
        "cursor": {
          "ref": "8f5c8150-3f57-41ef-9978-eb63880ada1e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "eb4c50cf-2918-4972-84e9-1eace1eddb7a"
        },
        "item": {
          "id": "3e917b24-12e6-4ba8-9940-6b1f2a3fccb7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5bfab15-971e-4729-9171-82091858e2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca32a8f-e94f-49d2-bece-b251c735ef57",
        "cursor": {
          "ref": "9558237b-b9b3-4e1e-bf7f-4d53c1a3e5fa",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "82ba4ca2-6e31-490b-8fd8-a0d2f85b806e"
        },
        "item": {
          "id": "0ca32a8f-e94f-49d2-bece-b251c735ef57",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "006bbb26-1966-4052-bdf8-5c25102481ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1469dae-368d-4f55-9f36-32f0fffdaf64",
        "cursor": {
          "ref": "7140af2f-73eb-4928-801a-57067c665515",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "13769b4e-d74d-4891-a02c-f0e5c55a88f6"
        },
        "item": {
          "id": "c1469dae-368d-4f55-9f36-32f0fffdaf64",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "627f2c1f-cd49-4bf1-a0c3-b565d72e804b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b9f6e0-443f-4df4-92af-df625645fe58",
        "cursor": {
          "ref": "0c7bcef5-23bb-4463-8d1b-ca8f34b41578",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c85ef96c-c585-4c42-86d1-396b2f9a7aad"
        },
        "item": {
          "id": "f6b9f6e0-443f-4df4-92af-df625645fe58",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "49b9284b-5d41-4fe0-9c0c-7055982ce7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a860f9-e7f9-40bc-82d5-78ba75003138",
        "cursor": {
          "ref": "557dd788-24d3-4d75-954f-ceeecc912af0",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5ea91e17-be14-4528-a9fc-d4847d53f312"
        },
        "item": {
          "id": "73a860f9-e7f9-40bc-82d5-78ba75003138",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a40a6b79-18f2-45d1-a3f0-9c2447153929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3b91c4-b8c0-4994-a895-08527056033d",
        "cursor": {
          "ref": "4ecd37bc-f2e7-44b7-8f0b-98645930cc4a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2408b228-8aaf-4c5c-8669-1fda9182f19e"
        },
        "item": {
          "id": "2d3b91c4-b8c0-4994-a895-08527056033d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "adb3b89b-081a-4189-931c-216b9b5c98fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ebec13-80d7-4e26-a3c4-da73de42dc95",
        "cursor": {
          "ref": "7f1089bf-0375-48db-a738-94adb6d8a0ef",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "48c62252-7bf7-4158-9172-ba6787544551"
        },
        "item": {
          "id": "f2ebec13-80d7-4e26-a3c4-da73de42dc95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6219b2f3-76f3-4480-a5b5-28e5b456e7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efebc62-9c72-4079-ad80-3a93bd11400e",
        "cursor": {
          "ref": "e05a0ab5-e9fe-4a2e-876e-19b8b8d518e9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f6c5578-0078-40ba-9e64-7e50784fba63"
        },
        "item": {
          "id": "8efebc62-9c72-4079-ad80-3a93bd11400e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1113d364-376d-4459-bfe2-e8a4892f185e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e948af10-22ae-4958-95d2-8bc59f1288a1",
        "cursor": {
          "ref": "ebb14f25-e133-4f41-acf9-9752f390f4e1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "54378638-dc63-467f-ace9-99108b2b1920"
        },
        "item": {
          "id": "e948af10-22ae-4958-95d2-8bc59f1288a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44ef85a6-2166-4211-b3e2-e2d08c4d5354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcae40ad-8a41-470e-93b3-a2e4811571a4",
        "cursor": {
          "ref": "02aebd6c-894e-4368-841c-e2803ccc5513",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "39855a25-afa1-4761-aa02-0ae9c6a9f683"
        },
        "item": {
          "id": "fcae40ad-8a41-470e-93b3-a2e4811571a4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8ce0bbe2-c88f-462d-8856-37e4cc905f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b524acc4-e09c-465f-9a23-f21e45c31731",
        "cursor": {
          "ref": "d992523e-8ce1-404e-ab27-071733f9f13f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cde2cd55-c745-405e-a06e-59fb34a86c91"
        },
        "item": {
          "id": "b524acc4-e09c-465f-9a23-f21e45c31731",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e6622d1c-8a9e-4d10-8caf-28cf6c4215d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35f9ab1-3250-4384-a6ef-784fd130db92",
        "cursor": {
          "ref": "c50e92da-9e34-4dc7-97ee-405d982b8ad0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1f603cb6-0676-4392-8548-cae340bb77ae"
        },
        "item": {
          "id": "f35f9ab1-3250-4384-a6ef-784fd130db92",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0383bf87-b0cc-4b4b-b6e1-ed3c907d3e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40138f36-f317-47a1-8ff5-375e6b0df7bc",
        "cursor": {
          "ref": "766e1afb-4324-455d-9632-494ad857fe27",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9a0dfb04-5051-4841-aa7e-e532b53565d3"
        },
        "item": {
          "id": "40138f36-f317-47a1-8ff5-375e6b0df7bc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e8ed76d-2cbb-42a0-b404-6b81215e1318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914e8212-f58d-49e4-a511-083c685a476c",
        "cursor": {
          "ref": "95b6f93a-20da-4f9d-9be0-05317ffd1877",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3317f8e3-d575-40a4-b75a-61666d8d9a7e"
        },
        "item": {
          "id": "914e8212-f58d-49e4-a511-083c685a476c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "20be2a89-1b18-4058-989b-6aea463ca9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f643128e-9778-4ee9-a622-2e194f6f8018",
        "cursor": {
          "ref": "c637a8c9-4244-47a2-a09c-c890697e7799",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d9d708e9-801d-4841-9d0f-5e0875707654"
        },
        "item": {
          "id": "f643128e-9778-4ee9-a622-2e194f6f8018",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38a81aa2-6eab-40d6-8f82-c61773453ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85f6e21-5cfe-4d38-9f99-e1a42979e74e",
        "cursor": {
          "ref": "04577f3c-1249-4992-8d89-182ae0583e40",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2f591ca4-3dea-4e4c-bb2e-dbfa4cd87305"
        },
        "item": {
          "id": "d85f6e21-5cfe-4d38-9f99-e1a42979e74e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "848c589b-4c9d-4eee-ae08-8f73546c5021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc56eb6a-1d7c-4337-b9bb-f2ff7f5e8f53",
        "cursor": {
          "ref": "59c2b8df-cef4-47a6-bf8a-5e6efbcee03b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a1ef2f59-2e53-4a56-8bb4-416bf69dfd75"
        },
        "item": {
          "id": "dc56eb6a-1d7c-4337-b9bb-f2ff7f5e8f53",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d48294c6-4eea-4636-8657-51221ceaa53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb0c6e4-cd28-42f0-a4e5-1e145ff3821b",
        "cursor": {
          "ref": "be932d48-5b0b-4c05-8064-e75521db83bf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b8b4a34a-ce19-4fba-a170-bcc8cc781d4e"
        },
        "item": {
          "id": "cbb0c6e4-cd28-42f0-a4e5-1e145ff3821b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "83dcb8c9-23db-4c62-a382-db6d6c609c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5058ab2-52c8-4790-941c-e1b4fa1aaa62",
        "cursor": {
          "ref": "a115d7ba-4335-4250-b9e8-c1801791974f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "46f3d0cf-91fa-4cd8-b7cc-5af5c95592d3"
        },
        "item": {
          "id": "f5058ab2-52c8-4790-941c-e1b4fa1aaa62",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7f131cc7-64a5-48c6-9a87-de00d7dcd192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8531617-604b-4f03-9a88-6b0290d66c56",
        "cursor": {
          "ref": "94803251-8c44-4633-a634-ca20f4bae479",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "64618bc7-500b-47cd-924a-0f8f498c75a5"
        },
        "item": {
          "id": "b8531617-604b-4f03-9a88-6b0290d66c56",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "52a7a41c-24db-4112-be2f-985d83a8f9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a41fe3f-c544-4a31-be75-752c7b636bc0",
        "cursor": {
          "ref": "fb123be1-d758-4686-aedc-8562c47178e5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a51a02ca-653c-4a31-ada6-a597ca1b5f94"
        },
        "item": {
          "id": "0a41fe3f-c544-4a31-be75-752c7b636bc0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3f7689d3-5cfa-4992-b37f-4eb5a3b5c11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c45b0f-6330-4f87-883a-5f9a2145c52b",
        "cursor": {
          "ref": "2259b823-1f94-4147-9686-a13bffa1d71b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ac05ad2f-db64-4428-9b2b-6407c725e1af"
        },
        "item": {
          "id": "f8c45b0f-6330-4f87-883a-5f9a2145c52b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9c63fe3e-ce20-44c8-9fe2-12b1702a3204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcbc53c-5697-4fd7-96a4-c9fad7c25671",
        "cursor": {
          "ref": "83ed7394-f58c-4125-ae28-07cf26da8ca8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a08f513f-2773-4378-8acf-326b0f3bce33"
        },
        "item": {
          "id": "cdcbc53c-5697-4fd7-96a4-c9fad7c25671",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "53e91d03-c4b3-4353-b1dd-6a1d5a486a74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aa0768-44ae-4cd4-852b-36dc490dc600",
        "cursor": {
          "ref": "1508aa13-f807-4179-95cb-4390d17cc56d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a6076c46-356f-4461-915a-738282f80fa7"
        },
        "item": {
          "id": "63aa0768-44ae-4cd4-852b-36dc490dc600",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "687d2655-d1ae-4237-b17b-092a565c06b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550cb832-dc57-49e4-8184-9d662c5dfebf",
        "cursor": {
          "ref": "551d8dcd-d843-4ff4-818b-e23b2cf6072e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ae789944-6bf2-4e09-8d6c-05c7d4c0ae9c"
        },
        "item": {
          "id": "550cb832-dc57-49e4-8184-9d662c5dfebf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "677a43fe-8fa5-4b0d-99eb-a7f01729cf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb67be20-63dd-4006-aafc-ce3e76b2bc8c",
        "cursor": {
          "ref": "7db0f899-a015-40c8-95a7-2e0b82c36257",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e6f25dea-8b11-418c-9776-a0f9b7a6c023"
        },
        "item": {
          "id": "fb67be20-63dd-4006-aafc-ce3e76b2bc8c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8e96f326-c8a2-44d8-8d18-6e677bfbc075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5bf2c5-2390-4d50-971f-81728dde091f",
        "cursor": {
          "ref": "004b8aca-cf6b-4050-b83c-5f3494e59426",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "99433167-4e13-4305-a2bf-b45201e9411a"
        },
        "item": {
          "id": "0e5bf2c5-2390-4d50-971f-81728dde091f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "28e2ab9a-e409-4d30-aa4e-d072c140ed84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f9e3e8-5864-4f7b-a3cc-a5f7e15b39d8",
        "cursor": {
          "ref": "b3e48c7b-5043-4484-9e71-77824c6ccaed",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3fe94a9d-bc8c-4111-9475-1687e04ed4a7"
        },
        "item": {
          "id": "76f9e3e8-5864-4f7b-a3cc-a5f7e15b39d8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "85c8fd72-5309-43ce-86e9-fae83db5fa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb93fa-6da9-4e7d-b92c-4177d9f604e0",
        "cursor": {
          "ref": "db063091-85ef-4198-8b90-30ddc328f3a1",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cbd1a991-ce3c-4f17-a06d-a81cc6c496d6"
        },
        "item": {
          "id": "99eb93fa-6da9-4e7d-b92c-4177d9f604e0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "89ff4991-3463-45d4-aaf3-49ace1b484a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ae18e6-5e91-47aa-bfff-d1145ec4a6eb",
        "cursor": {
          "ref": "2d8f34c8-09c3-48f6-bfd3-0f85dc401100",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8c90a4b8-35a8-47d0-b68d-b219a17d1b09"
        },
        "item": {
          "id": "15ae18e6-5e91-47aa-bfff-d1145ec4a6eb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3163e20c-18a0-4700-affb-039560a58c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5093b8-6d1a-49b2-90ee-58472425e3cd",
        "cursor": {
          "ref": "18e8e369-4623-4569-b284-bd0ca1823b2c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4009c82c-154f-4cbf-9d5b-e240b952f933"
        },
        "item": {
          "id": "9e5093b8-6d1a-49b2-90ee-58472425e3cd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ef6ca041-62f9-49d1-bec8-97c0e5f32ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44104266-9fb7-4180-ab23-c9a3f1db7516",
        "cursor": {
          "ref": "dc67c131-28eb-4f1f-a258-c2effcedb6f5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e940d28b-1e36-42db-adbe-5445b4b9f16e"
        },
        "item": {
          "id": "44104266-9fb7-4180-ab23-c9a3f1db7516",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "80d988b4-7ff2-4a5a-8f42-1a90b2cf657f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9369795a-12a3-4c7e-bf55-ccb05cfc3547",
        "cursor": {
          "ref": "18e946df-a627-4eec-96a1-599b24af5534",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c0b243c5-e521-49fa-b5d4-f171edd65a7a"
        },
        "item": {
          "id": "9369795a-12a3-4c7e-bf55-ccb05cfc3547",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7d34fa91-0e24-49a1-a3c4-986d41619460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa68047b-e757-4ced-9680-684b6459c588",
        "cursor": {
          "ref": "65142910-b727-432f-a394-8ee51798f0e2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a7355206-e5a1-4269-b8c2-e31de90ba624"
        },
        "item": {
          "id": "aa68047b-e757-4ced-9680-684b6459c588",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eaf3fb87-e7e9-4fef-abe8-6a7bfafa7c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7560e3-ec01-4e64-9de0-55e8ec83990f",
        "cursor": {
          "ref": "b36f6f06-5ae4-4217-81a7-8599b58de053",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6a31cdd6-cdfb-427a-bd9d-263942c6df98"
        },
        "item": {
          "id": "cb7560e3-ec01-4e64-9de0-55e8ec83990f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "df572ff4-5b15-45bb-b8e3-5a1756d00f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8121e8e7-a4c7-46c8-8413-151c10b3e04b",
        "cursor": {
          "ref": "8cc35a62-0fae-4fcd-ae7b-aace9d667f9b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "579ca077-87bd-485a-acb3-4aafba676cd7"
        },
        "item": {
          "id": "8121e8e7-a4c7-46c8-8413-151c10b3e04b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bda8b77d-36db-4c91-a1d1-cca487934970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd76e2f3-9d05-4656-b828-167842c2046a",
        "cursor": {
          "ref": "6113c814-f367-4b21-8718-7f95b5f0c4c8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b910ddf9-7e76-43f0-ad95-85548e5a7b63"
        },
        "item": {
          "id": "cd76e2f3-9d05-4656-b828-167842c2046a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5961801e-28b7-46fb-a094-b689648de9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d087099-2678-4326-a402-a003db483713",
        "cursor": {
          "ref": "d774394d-0393-4e97-b0a1-4312557c59a8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3b965800-723e-45d8-bdda-4a5d3e974148"
        },
        "item": {
          "id": "3d087099-2678-4326-a402-a003db483713",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7ae141a9-cce8-497c-b79b-e31402f05d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d4b56f-0645-4f6c-994a-54d8212e7ce6",
        "cursor": {
          "ref": "b20e78e9-0a87-4526-8099-aee2c3be0676",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6959c39c-c0d6-447c-a380-2a2389cd9320"
        },
        "item": {
          "id": "06d4b56f-0645-4f6c-994a-54d8212e7ce6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "33d73c3b-8b13-4ea4-9d5b-4331f4f55846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36547d0b-f9ca-44f7-ae66-9c8a595b8b49",
        "cursor": {
          "ref": "1229d4e0-eaef-49df-bd82-ec4eca78f0bf",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dffc8e60-5603-4e84-ab0d-22d688fec2a0"
        },
        "item": {
          "id": "36547d0b-f9ca-44f7-ae66-9c8a595b8b49",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "973df3cc-6995-45b1-bff9-66ad2e269a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb8bc6c-d3d3-4ff3-b8e4-2fdba016999b",
        "cursor": {
          "ref": "c1a95781-4280-4c19-9544-860e7aa5c16e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e6f48f94-fd34-4faf-a75b-1b2bf424b42d"
        },
        "item": {
          "id": "adb8bc6c-d3d3-4ff3-b8e4-2fdba016999b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cee5afed-9ade-42c5-8bb5-cfff73c8d9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2bf369-aee7-4315-a9e9-602a66f1203c",
        "cursor": {
          "ref": "18cdf6d3-82bf-4c46-ac43-cff7968f2cc1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0b2f0f10-19f0-4174-882d-384761d0e286"
        },
        "item": {
          "id": "dd2bf369-aee7-4315-a9e9-602a66f1203c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fb2d83e8-4827-4e34-b92a-11394f55ae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d156d7ca-ae2f-468e-9ecd-fc9d09b1ffae",
        "cursor": {
          "ref": "e1caf98e-5a2a-4944-acdf-bc9c59a3fc71",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bc1df326-fbc3-4d01-94fc-7b55b2544293"
        },
        "item": {
          "id": "d156d7ca-ae2f-468e-9ecd-fc9d09b1ffae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "12fe1487-f3bc-4247-a0a8-2ecf07c9e09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591dad0-90bd-4760-840d-1c9211ec428e",
        "cursor": {
          "ref": "b8297d58-3b29-4b5e-adef-38cf5ba011f1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bddb3db1-ac6e-4ffb-916c-eab418a5be7b"
        },
        "item": {
          "id": "9591dad0-90bd-4760-840d-1c9211ec428e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "72c6b564-2b26-463b-807d-781058f5a813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd3e680-35a7-4d37-8db8-356afca960b7",
        "cursor": {
          "ref": "562d93bc-ee90-4a12-ba53-06cb944fdbd8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "65f5c2f3-e426-4f30-939c-46bcf97714ab"
        },
        "item": {
          "id": "9cd3e680-35a7-4d37-8db8-356afca960b7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "355d888f-48f4-469c-aaff-f150edd845fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35afa070-22ba-4f61-bc03-01cdcf33c27c",
        "cursor": {
          "ref": "1151f125-22e8-4114-ad56-073f8b6345f5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "39d89084-6336-442f-b717-c69659437923"
        },
        "item": {
          "id": "35afa070-22ba-4f61-bc03-01cdcf33c27c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "13fa3061-bcf0-42bd-8fc3-937863625a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7deaf96-62a2-4aae-b68a-b3feb1fb54a6",
        "cursor": {
          "ref": "6d38821e-0c4f-4c17-8b6c-6cb2a3a3570f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f033c56b-7200-4a86-b32b-d387311a0d3d"
        },
        "item": {
          "id": "c7deaf96-62a2-4aae-b68a-b3feb1fb54a6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7f3dc9ba-e930-4e53-ab1c-ac17f4940223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0202bba7-4695-4d19-b280-67dba02a5609",
        "cursor": {
          "ref": "2ae53310-ac26-47a5-8ba4-6604a5250502",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b300f51f-aec7-452f-b11d-613c7213e7db"
        },
        "item": {
          "id": "0202bba7-4695-4d19-b280-67dba02a5609",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e8dedd13-f524-4efa-bba1-0b36ca5cc66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad73fb8-211a-4827-9774-75219bc718b2",
        "cursor": {
          "ref": "2ba65c5e-04a5-4abc-8dd2-fd7988cc8a67",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dd826e0d-6b87-4e7d-9f5c-8a567d642820"
        },
        "item": {
          "id": "6ad73fb8-211a-4827-9774-75219bc718b2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bfd830f1-db27-4f77-83b6-5e1dae773d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbf6d36-f22a-4f9c-8192-ccdb09861a2b",
        "cursor": {
          "ref": "2c5c365d-3442-48db-a60c-54a9334a4794",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b6cc0382-410b-4d44-bfb6-4337e8e82a29"
        },
        "item": {
          "id": "8dbf6d36-f22a-4f9c-8192-ccdb09861a2b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1effff0b-287b-4f97-a3b7-51cd42cdce81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee4fd8-a0f0-409c-9ea9-7be53be1209f",
        "cursor": {
          "ref": "21dc0801-f8c0-46af-ac8f-ae0ce565d107",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "06cd5f82-5be1-4876-ab00-81db66141e1c"
        },
        "item": {
          "id": "15ee4fd8-a0f0-409c-9ea9-7be53be1209f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9b8cf6a4-ae6f-425f-8ba3-e1dbb7838024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96be7081-a85c-43c0-b7d6-f144c7d0fe18",
        "cursor": {
          "ref": "8f0291ec-b8c1-4bd5-8983-7b9c53dbd7f4",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8d278482-d8f4-4c84-8a02-3ae7a1fdc894"
        },
        "item": {
          "id": "96be7081-a85c-43c0-b7d6-f144c7d0fe18",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9eebafc3-8e81-46df-9206-3546cd179013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96153636-76ea-45c5-9237-2845db3f3d72",
        "cursor": {
          "ref": "9ac861e9-e8a3-4645-97bc-b843448c54bc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "15a69f63-e49a-496a-b1bb-3ba21058dba4"
        },
        "item": {
          "id": "96153636-76ea-45c5-9237-2845db3f3d72",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be3531e0-0503-419d-af8f-74a9df1b71d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a0a027-df4a-49bc-90f9-1de41eb3f8c9",
        "cursor": {
          "ref": "f247f637-7e33-43dd-8d30-ae44f01e338e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fc8ba1de-bcce-4370-964b-f6238cc36705"
        },
        "item": {
          "id": "28a0a027-df4a-49bc-90f9-1de41eb3f8c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5239c95e-cc8e-4f7e-9388-d68c3dedefaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9a0724-6238-410b-b6b3-7650f9243f11",
        "cursor": {
          "ref": "f20a9386-b83b-4128-a573-78497aebd4c6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fe99524c-84f2-4052-af2a-c49205538126"
        },
        "item": {
          "id": "5c9a0724-6238-410b-b6b3-7650f9243f11",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "580e5367-09a6-47e0-9280-118232857353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9887d2b-9dee-4675-84a2-9cf2ea06956f",
        "cursor": {
          "ref": "0d0360f7-6bc5-490b-9337-6269b113c791",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "01c6a448-9d7d-4ea7-bdea-f76c4cf10d08"
        },
        "item": {
          "id": "d9887d2b-9dee-4675-84a2-9cf2ea06956f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bc8a5069-da9c-4255-bf91-0e13ed736e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99aca6c-622e-43b1-b07e-eb8ecac184fa",
        "cursor": {
          "ref": "fc10ed4c-2c60-4ede-8c95-7e334d54e54f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0fa4e963-f5a1-4ec0-8466-0624340eb5e4"
        },
        "item": {
          "id": "a99aca6c-622e-43b1-b07e-eb8ecac184fa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a420a388-c130-43d8-b02d-e6b172e37376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4d1ad9-f6b4-4b02-a1fd-a82a4fb38de0",
        "cursor": {
          "ref": "e5082ca8-5dba-415a-8864-84cb9f20d4c9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "283d52d0-9603-4135-b0ca-5a98cdbe8fa9"
        },
        "item": {
          "id": "2c4d1ad9-f6b4-4b02-a1fd-a82a4fb38de0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9ebf22cf-f2c6-407d-99bf-02a05a37a6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37464d64-ec62-45d1-b4e7-d1a36f04185d",
        "cursor": {
          "ref": "991e45e7-cb21-44bb-87ae-118aeb367ab6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5f7b4283-9a0d-4974-889e-23dae3bbc0d0"
        },
        "item": {
          "id": "37464d64-ec62-45d1-b4e7-d1a36f04185d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c350ccfd-8cc5-4d47-9315-8ea006464faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acbbf0f-696f-4796-80bc-a3850feee1ff",
        "cursor": {
          "ref": "0a99625b-e3ca-4fd0-802f-acb971b31fd0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fac06591-4727-4c40-a6b1-6d3e2a05fd8e"
        },
        "item": {
          "id": "2acbbf0f-696f-4796-80bc-a3850feee1ff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1082c83d-e56f-42e7-90a7-93ac98753b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c8302-5846-4128-9d79-d01613d4e893",
        "cursor": {
          "ref": "4a457990-c9a1-480e-a472-7f8fc6074eed",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99375374-22a9-46ac-9e22-f758b97945de"
        },
        "item": {
          "id": "931c8302-5846-4128-9d79-d01613d4e893",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "245855ad-f546-4724-8f6e-d83753243695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccf264d-da4e-49ef-9ace-9b02625d7e22",
        "cursor": {
          "ref": "c39eaad1-9b2f-4ef4-a5e2-7cbe168f4342",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c705e315-b8f1-4aa4-b902-b51d58704ffc"
        },
        "item": {
          "id": "fccf264d-da4e-49ef-9ace-9b02625d7e22",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a4c90b1-e1ee-4df1-9d7c-4c5bc4f7d85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffebdf91-623d-4e1f-a61a-2d0901991516",
        "cursor": {
          "ref": "d33d6a71-4ab8-42e8-bd8f-0c3140488fa7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "da86df36-b3fe-472a-a9c3-94ef4ef9cfe0"
        },
        "item": {
          "id": "ffebdf91-623d-4e1f-a61a-2d0901991516",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9fa79ac1-5f9b-4e0b-bb89-1ca41c7fc169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1725e180-8b7d-42da-a3a9-b1f78dbb2147",
        "cursor": {
          "ref": "f87afba3-0798-4a50-9c56-82d587f726f8",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aaea34e1-fb4c-4ed4-ba7d-d1232a89ec48"
        },
        "item": {
          "id": "1725e180-8b7d-42da-a3a9-b1f78dbb2147",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c7dc894a-3598-4877-adba-05245a32053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86c0c8-2119-448b-8234-7ebdfe050f38",
        "cursor": {
          "ref": "504154e1-176c-41ef-beca-366be64d440e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fc6b25a5-3d5b-4ce5-a0bb-5abe00dd42ca"
        },
        "item": {
          "id": "5d86c0c8-2119-448b-8234-7ebdfe050f38",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5bdafe83-3587-493c-a07c-4f5331e9f5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6394c6-4354-4a9d-a7e9-0e192de07991",
        "cursor": {
          "ref": "903ffae2-6837-437e-88f2-cfca69bce7d1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8745e9df-2185-4770-86d0-1c178471e4d5"
        },
        "item": {
          "id": "3d6394c6-4354-4a9d-a7e9-0e192de07991",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e96c20f2-16f6-44df-8a4c-33ee12c98ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003f980c-f110-49a4-b03e-03067ba2f35c",
        "cursor": {
          "ref": "873e534d-5997-4c6f-b0b4-b8a5152b1910",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0fc3f2a1-c72e-46f4-b1a4-9982a08cfbc1"
        },
        "item": {
          "id": "003f980c-f110-49a4-b03e-03067ba2f35c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3dcdb7a8-6be6-4f38-9594-88d5c744659e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa02902-6e85-445b-a50b-20aae08a336f",
        "cursor": {
          "ref": "c7359a80-1078-4510-95d8-6390050d483c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1e8ad93e-efae-475a-8ffe-4c1691f5785d"
        },
        "item": {
          "id": "efa02902-6e85-445b-a50b-20aae08a336f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e0db3788-f2f1-4c41-91c2-e9e2681aa9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2f9326-9613-4b49-9ac2-77511e08c928",
        "cursor": {
          "ref": "25d3e816-8c8b-430d-b135-4f8a1533a5a9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "743193cd-9828-499a-9439-03ce74d3c85f"
        },
        "item": {
          "id": "0e2f9326-9613-4b49-9ac2-77511e08c928",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3f19a68d-3f90-4e0b-b512-909d1780a2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efef6fb6-525b-42de-b880-3a8ad0c24a10",
        "cursor": {
          "ref": "39d2f3ea-6c86-48bb-8d90-d03abd4dbd09",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6fe5234a-60a1-45ee-8741-9ea4eac1ac36"
        },
        "item": {
          "id": "efef6fb6-525b-42de-b880-3a8ad0c24a10",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "29432645-5e44-4ef6-bbdf-028a058fb8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c3a7c6-c902-46a6-a733-daa45a0797e8",
        "cursor": {
          "ref": "61af9b7b-1905-42bd-88eb-55ee4c0f70db",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e457c15c-ead8-48b6-9e9d-2972d5bc85dc"
        },
        "item": {
          "id": "39c3a7c6-c902-46a6-a733-daa45a0797e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b7e1bdec-e5d3-4654-a672-accc25e84ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d1856a-3923-42b4-9e70-f36ddacf87dd",
        "cursor": {
          "ref": "8265ee15-489d-4396-a265-9540f6a3aa6f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "86a4b426-1b5a-44a5-92f8-dc24cecb1ed5"
        },
        "item": {
          "id": "d5d1856a-3923-42b4-9e70-f36ddacf87dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "89ce8fdf-90b5-4f5f-a52f-5b80c26904fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b282d7-e7ce-4052-86a8-405bad15b598",
        "cursor": {
          "ref": "ee0de624-3f50-450d-8434-120cccfa9756",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "49ceedfd-4a08-4a01-b339-a01d1dfb4093"
        },
        "item": {
          "id": "26b282d7-e7ce-4052-86a8-405bad15b598",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "924f7190-f5b3-409a-aa3e-904e27664c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d706f44-d7f7-473e-9209-c2b2094cf9d9",
        "cursor": {
          "ref": "67563b67-ac16-432a-b405-4df6e3305096",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4c49c6ee-c9d5-4ab8-b279-c7bfd03d556e"
        },
        "item": {
          "id": "2d706f44-d7f7-473e-9209-c2b2094cf9d9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "63f5d416-9d63-474e-aef0-8694092470d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64accd93-2209-49b4-bfad-92a93f7f0e96",
        "cursor": {
          "ref": "0d10a4a1-7443-4469-b277-6904a539ff92",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5a5af7ee-b977-4fb3-8671-9f9d7af43033"
        },
        "item": {
          "id": "64accd93-2209-49b4-bfad-92a93f7f0e96",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c47ab4a1-4b6b-4cc7-94bb-e39d8e330c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937b839f-0e28-4051-8122-302c0475cff7",
        "cursor": {
          "ref": "8458954e-d87f-45fa-b3db-8c6e8901941a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e7bbb41e-3a9e-4314-a4e2-b25dfc589f36"
        },
        "item": {
          "id": "937b839f-0e28-4051-8122-302c0475cff7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1c3fa4d6-404d-47b3-9e5d-5818c979f6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfb32e6-7965-4ae3-a951-615e568f5401",
        "cursor": {
          "ref": "336595bc-4a8f-428d-9db9-3959741b4ecc",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0feef526-a5b8-4b14-bf3b-3bb4ab2b4774"
        },
        "item": {
          "id": "7bfb32e6-7965-4ae3-a951-615e568f5401",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab0c980f-8a7a-4c37-90fb-290c2b8e3d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a2db08-674f-43a6-a2b4-11195667d519",
        "cursor": {
          "ref": "1adc1369-26c6-4636-94fa-922089c4cdb1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ece152e4-579a-4f94-91ad-3d0431c1bd93"
        },
        "item": {
          "id": "a2a2db08-674f-43a6-a2b4-11195667d519",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6e82ff47-e3fd-42d3-a769-e6f05e6985e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567d69fc-5a96-4651-8dc6-1b4ad41e13d9",
        "cursor": {
          "ref": "09950fa4-9d71-4cc1-9fbc-92aff7417ebc",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d5f8484a-0733-4b89-a514-8bcd6e83dfe5"
        },
        "item": {
          "id": "567d69fc-5a96-4651-8dc6-1b4ad41e13d9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f9df4f6c-63fd-4729-baaa-bd2193031cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f75597-8241-46da-ab3a-c6c991173644",
        "cursor": {
          "ref": "a8af10af-ad1e-4b92-837f-883e54e8bcb3",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "807aadb3-e4e1-4b33-a169-593fb0df0d95"
        },
        "item": {
          "id": "c7f75597-8241-46da-ab3a-c6c991173644",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "15af1443-b03c-4d4c-9f90-6e402a27db70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b5acde-2b7a-47d2-afdd-d2d882dbbdc5",
        "cursor": {
          "ref": "63a08e0b-170a-44b7-ae06-434f5bc497fa",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9851fc56-55ea-47fb-824b-02f76bbcbf80"
        },
        "item": {
          "id": "02b5acde-2b7a-47d2-afdd-d2d882dbbdc5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "442b9004-9b17-4a2e-b4e7-a8989dc01707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2591d-6db5-4e9f-bdc0-5ab6e5c3de5d",
        "cursor": {
          "ref": "9bf02c7d-94e8-447a-9c4c-906d2bb337d4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8c04599e-7060-4243-b043-b0b70700d539"
        },
        "item": {
          "id": "73a2591d-6db5-4e9f-bdc0-5ab6e5c3de5d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "da430696-042e-4855-92f6-4dfc78b55da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ea6a7f-2563-4aeb-b5d9-7bde64dca82d",
        "cursor": {
          "ref": "b9dc8d3a-0379-4bda-ab1f-ba366261e2a8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "82a43e3d-1b3d-4fc0-9c0f-77877eec2826"
        },
        "item": {
          "id": "d4ea6a7f-2563-4aeb-b5d9-7bde64dca82d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "05f974c9-0713-4597-b764-f8a312b3db11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e138e539-517f-40d4-aacb-629bc5fe5d4e",
        "cursor": {
          "ref": "7ca72e6e-1222-40a8-86b7-d25a2b7801ac",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "27322633-33c6-427f-907f-020f9c62d672"
        },
        "item": {
          "id": "e138e539-517f-40d4-aacb-629bc5fe5d4e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dd692b7f-590a-4578-9f1c-b4765340f206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5c6d54-c1a7-46a8-b7a5-2e95b52a2281",
        "cursor": {
          "ref": "ad0a2b52-7bb9-40ce-b70d-4f6f58c7323a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5311f3b8-32ad-46c6-ad22-3307dd940a9a"
        },
        "item": {
          "id": "2c5c6d54-c1a7-46a8-b7a5-2e95b52a2281",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dc9cafac-de9f-4660-88e0-797e2b2012ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbb853e-39c5-4d35-a56b-a80e436c01e5",
        "cursor": {
          "ref": "ee092728-6f4e-4a0c-9d43-cf92ffba93e0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "86eef4fb-09a1-4ad6-a522-95f644248378"
        },
        "item": {
          "id": "bcbb853e-39c5-4d35-a56b-a80e436c01e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "753a80e3-6ba3-4a3f-9fff-a3cf5005bdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ca6d76-81f9-442b-a256-f49e4ade6235",
        "cursor": {
          "ref": "1d16d94e-841e-4a16-8cb5-347b2b1fed0d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "052d889b-965f-4d3e-ba0e-4bd5515e4f12"
        },
        "item": {
          "id": "88ca6d76-81f9-442b-a256-f49e4ade6235",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7912b225-d0e1-459d-a297-8ef7735884a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43b5ab2-15f5-4fbb-b8eb-517522f474f3",
        "cursor": {
          "ref": "b53b59ea-d766-4f57-94b9-f6703609eaa6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4e019dae-1467-43ee-b777-5d9699dc22b8"
        },
        "item": {
          "id": "e43b5ab2-15f5-4fbb-b8eb-517522f474f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "884aadb1-6543-4090-a330-b45c297e14f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e770b464-5953-4af9-9dfc-72dcd6ac951c",
        "cursor": {
          "ref": "ce64cae8-5cb8-4968-8c8d-adad75f7df65",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "33f489d3-4595-4808-a646-1a8ddb670841"
        },
        "item": {
          "id": "e770b464-5953-4af9-9dfc-72dcd6ac951c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "834ff078-8d6b-4aa5-9ceb-2e4b2e783923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43221a57-7879-4070-b2b9-c6fffb0f1268",
        "cursor": {
          "ref": "0d4467c2-0051-4117-a078-ddad70f9c48a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "10416fa3-4029-46fa-b8a4-db5d299409f1"
        },
        "item": {
          "id": "43221a57-7879-4070-b2b9-c6fffb0f1268",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4e73629d-7490-460c-9ff5-63ed9b6f51e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01d003d-ce7d-4c3a-8cff-eff487f9e396",
        "cursor": {
          "ref": "5f918b74-2233-4d1c-a7ae-aba38d6725ed",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8b61bb46-3afd-43b0-9729-5cfc8d30d563"
        },
        "item": {
          "id": "d01d003d-ce7d-4c3a-8cff-eff487f9e396",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1a8b0ab2-907f-4906-a497-ed9b66329241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebddb166-d113-4dc5-8b43-e97e1e0f4930",
        "cursor": {
          "ref": "eea46287-b78d-4a23-bf30-df9d4cd04f0d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fcef1ed2-8d25-4cc8-8498-77a46e236fa3"
        },
        "item": {
          "id": "ebddb166-d113-4dc5-8b43-e97e1e0f4930",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "43f3bb2a-3f68-4333-a420-f4d65494a42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07dd2de-2452-4560-9634-71864decb8cc",
        "cursor": {
          "ref": "29732117-9a0c-4d4f-9824-f9beb1457d8b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8c028e5-ca6d-42f3-867f-a5068cd209fa"
        },
        "item": {
          "id": "f07dd2de-2452-4560-9634-71864decb8cc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9038a63c-435d-433d-9be5-3f289cd0cc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32acc91f-13fe-4b69-a368-16a0c28dbc7c",
        "cursor": {
          "ref": "9b697d28-d567-407e-b3f3-8d101f0e6956",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fb22890c-e992-4e2e-bcd5-19c7e6d90ee3"
        },
        "item": {
          "id": "32acc91f-13fe-4b69-a368-16a0c28dbc7c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b594a45-4224-4907-84fa-44def4ccb15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa72132-843d-4fa2-813b-cce578790a26",
        "cursor": {
          "ref": "c3ed1ddc-5382-4ed8-8a00-117aabe729cd",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b7d43a58-3335-4686-8d56-0907cf02ea72"
        },
        "item": {
          "id": "daa72132-843d-4fa2-813b-cce578790a26",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "121e8eef-b2c6-42eb-a5af-01da0ae5e0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7b5853-484a-409d-b8b6-c2a3a9c6a5dc",
        "cursor": {
          "ref": "7215f6f4-b218-4992-ae12-78e19cd80fed",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ea857551-5a1e-450d-af2c-98bca5beaa95"
        },
        "item": {
          "id": "7f7b5853-484a-409d-b8b6-c2a3a9c6a5dc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "86b98961-0d59-439a-8c1f-9ae9d3ecdb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1a47c6-1ee2-4ef1-8e94-7ce18676bfd5",
        "cursor": {
          "ref": "96997569-d19a-47b8-b63f-9d95e7efb4e4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c3b1d67a-8099-446a-bc2a-e03bf89404a3"
        },
        "item": {
          "id": "2a1a47c6-1ee2-4ef1-8e94-7ce18676bfd5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "06c549ac-51f8-48a3-a5af-1e57c552f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c054bdd7-af34-4b08-9e6e-a953f3ec686c",
        "cursor": {
          "ref": "b5dbea24-1223-4447-b7ba-32f570609c71",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "307c444b-c020-453e-9e24-095ddd25ced8"
        },
        "item": {
          "id": "c054bdd7-af34-4b08-9e6e-a953f3ec686c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4c745824-5eee-4a5b-ac18-ffb80335f0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e865538-58aa-4e3f-958c-fdc746624308",
        "cursor": {
          "ref": "ef7f5fad-6ba7-4ff1-a16d-3ef870aebaae",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8e658ee9-84e2-4430-af62-44c521d8af36"
        },
        "item": {
          "id": "0e865538-58aa-4e3f-958c-fdc746624308",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "019392b4-079c-4c00-81a9-3b1ef6b084b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5fa046-32e2-4b59-8fad-7fc34d215310",
        "cursor": {
          "ref": "e92b8518-0fd4-4519-9539-9b90a14c0674",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "15f35a04-70e3-4932-b3fb-7443327ca657"
        },
        "item": {
          "id": "cb5fa046-32e2-4b59-8fad-7fc34d215310",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4b111fc3-c560-45cc-b0cc-1dc9332fd7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e70302-3d8e-4149-9d8d-79103359165d",
        "cursor": {
          "ref": "cf6e31ba-935c-49f9-a6b6-51cdfd997e62",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f55e2a92-2c02-4cc4-bbe9-a9663914fbbb"
        },
        "item": {
          "id": "61e70302-3d8e-4149-9d8d-79103359165d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "02e9dfeb-f390-4980-8e26-31826a21d711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550d585a-15f9-4286-93ec-16995f9d263a",
        "cursor": {
          "ref": "5340b0cd-58af-4893-8024-492739f0f9b3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ebfdf753-f2f1-4f04-b4c3-e39537e4ee75"
        },
        "item": {
          "id": "550d585a-15f9-4286-93ec-16995f9d263a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "140ab7be-efa1-44e6-aaea-65a6d3e074a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0aa5ee-059e-42e8-9890-a0f8663da0b5",
        "cursor": {
          "ref": "edfe3ab3-898c-4ceb-b7b0-90e8a0bce5a8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2ef7babf-a5a7-400e-a177-217432ba96e9"
        },
        "item": {
          "id": "1e0aa5ee-059e-42e8-9890-a0f8663da0b5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d2a3935-4893-4aaa-93cc-c56d4d130ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dd0907-4510-4627-bfd0-caab39efc22e",
        "cursor": {
          "ref": "a1ece97d-b24d-4972-8e7a-5efbeacfee3c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ec6cf4bf-e9a1-40cb-a83e-eb7ebb3f12f3"
        },
        "item": {
          "id": "32dd0907-4510-4627-bfd0-caab39efc22e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2e6b98f4-843b-4e57-b08a-0c40615c54f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574b7c6e-af1c-4622-bb09-d86e2d9847f8",
        "cursor": {
          "ref": "497b1e8f-a455-4cf6-aee1-b2f30e49f4d4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "98bc4023-ad60-4df2-a208-c13f5f4b97fa"
        },
        "item": {
          "id": "574b7c6e-af1c-4622-bb09-d86e2d9847f8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a86107de-13e4-4042-8252-519dcd9a6819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b4521-9e7d-4217-b662-f05ddfe75600",
        "cursor": {
          "ref": "f34b6314-dd0b-4d48-a047-2387263ae6db",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1365a309-9922-474c-9d86-aa7c6c93dc44"
        },
        "item": {
          "id": "808b4521-9e7d-4217-b662-f05ddfe75600",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8b467cb6-4d50-442a-a22d-abcd7ff14b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbb0cc6-9097-4772-b0f8-e02e67d45fd9",
        "cursor": {
          "ref": "2f24654b-941b-4ce9-9552-f63f19e57451",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "822e6e73-76f6-48f7-b47c-2955622c9f84"
        },
        "item": {
          "id": "ebbb0cc6-9097-4772-b0f8-e02e67d45fd9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "17289c3b-743a-4a93-a52a-a620d74387a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40de2606-01d0-4eaf-a9a2-b255257dcc11",
        "cursor": {
          "ref": "c9843e0a-d6a3-4bd2-94a2-a3b1258ba728",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "03b8fe49-8b6e-464a-a2da-60442e357b81"
        },
        "item": {
          "id": "40de2606-01d0-4eaf-a9a2-b255257dcc11",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9cc50f56-a1f6-4cd2-82fb-12aec454ece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfd5f7d-e3f7-460b-9c7a-9d3caf0fb041",
        "cursor": {
          "ref": "f671f0b0-3e17-49a3-9c91-01efdbbeddbb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6b7a2a0b-3fc2-4e2f-90ce-6abdbf5df025"
        },
        "item": {
          "id": "dcfd5f7d-e3f7-460b-9c7a-9d3caf0fb041",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6115fc14-5493-43c6-a266-ba972c7a1fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c508c0f-9cc1-4fbc-927e-39dc4fa71445",
        "cursor": {
          "ref": "7210228c-1be2-4e00-a3d2-ada207aa8582",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "327f21c1-562e-4c34-9d0c-c8f73b6cb29d"
        },
        "item": {
          "id": "9c508c0f-9cc1-4fbc-927e-39dc4fa71445",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "92436ac6-3ff5-4e4c-b6ce-b4da2193958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39a05ab-1f72-4d16-a53c-90887dda9255",
        "cursor": {
          "ref": "444d4f2b-2860-46dc-8bf3-99d90507e934",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2b2b4b5b-687d-4b0a-8d42-4d2ffab35555"
        },
        "item": {
          "id": "f39a05ab-1f72-4d16-a53c-90887dda9255",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebbd129b-fbab-4179-afd2-931794090cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46372e31-550f-4a5a-a1c6-a2e785f9e34b",
        "cursor": {
          "ref": "c5e89dd7-e2f1-4daa-8082-51b69dd0f7a3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "23d8d07d-9996-4d53-876d-efdff02a8201"
        },
        "item": {
          "id": "46372e31-550f-4a5a-a1c6-a2e785f9e34b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d7680b8a-208c-4a5c-bcf5-59652b850232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90252208-4a35-405c-8494-c660b5562821",
        "cursor": {
          "ref": "785db52b-34af-4393-9c44-6fbe10f085c8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2a18e651-b39a-427d-a45f-8a662908460f"
        },
        "item": {
          "id": "90252208-4a35-405c-8494-c660b5562821",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0815fe9f-eded-420b-a261-b9db0ae150d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1dfec0-cddc-4332-b050-b009b22bac1b",
        "cursor": {
          "ref": "38780a8d-46d2-4eb6-a339-c0b3bd048269",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7bbce6c6-76d5-4251-a91f-8d064bbe5412"
        },
        "item": {
          "id": "5e1dfec0-cddc-4332-b050-b009b22bac1b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6d6ffa75-74d3-446c-a94f-8b7bd7f15b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16151b-f311-4c9d-ab70-caba36a00b1e",
        "cursor": {
          "ref": "37302779-e22a-429d-b44a-2219b8de8866",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "59c9d5a2-8fee-45f7-9c81-e3caee664a1b"
        },
        "item": {
          "id": "fc16151b-f311-4c9d-ab70-caba36a00b1e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "adda4f13-6460-44b3-9a6d-aa2cfca5dcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07524436-49b9-42f4-a82d-ca5eae2c1663",
        "cursor": {
          "ref": "45954e6f-d9fb-41c7-8403-0f7459cf98ff",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9ef596f2-bf0d-42dd-b384-e1d865da6bb5"
        },
        "item": {
          "id": "07524436-49b9-42f4-a82d-ca5eae2c1663",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7472fc49-a4b5-498b-987e-c07e5e0bc361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafe1512-41dc-4f4d-a625-0c5fa6286018",
        "cursor": {
          "ref": "24ec58ef-0fbc-4dc6-ab45-3a330ff03280",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a76f6172-4437-420d-a648-1ddc9c4f4875"
        },
        "item": {
          "id": "eafe1512-41dc-4f4d-a625-0c5fa6286018",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "94ade972-fc58-4e40-8c62-4c88a2c04868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1d055-808b-45ee-ba83-265f6a8cd75e",
        "cursor": {
          "ref": "bcc53a65-d0c0-427a-b6d3-359f3b0156ca",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d2f02f03-e46e-4173-b646-279ae59ab83d"
        },
        "item": {
          "id": "0bc1d055-808b-45ee-ba83-265f6a8cd75e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "871be91f-9665-425f-a4b0-df6619916084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af04db4-5497-4602-ba3d-20fd48b8f3df",
        "cursor": {
          "ref": "2c03c3b8-7c5e-4f6b-83ce-855c0d56f815",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e4cca364-11fe-4881-a89a-83d0255e340c"
        },
        "item": {
          "id": "0af04db4-5497-4602-ba3d-20fd48b8f3df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b63b1f51-f91a-441e-9f99-38c479204dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56ad75d-1a43-440e-8a3c-afc40acae6bb",
        "cursor": {
          "ref": "e1ece161-a194-4ef6-92bf-4d4f3f1ebb96",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c830279a-abe4-41c3-b50d-2493454adfed"
        },
        "item": {
          "id": "d56ad75d-1a43-440e-8a3c-afc40acae6bb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b5f89b2a-253f-4749-9832-c1e2e457de40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998876d4-207e-4f0a-8fe1-e9fce3e8565e",
        "cursor": {
          "ref": "d782481e-d0b0-4f40-a175-48fa3f295cc3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "638baf40-ef7c-40c8-95a1-e527fcc220aa"
        },
        "item": {
          "id": "998876d4-207e-4f0a-8fe1-e9fce3e8565e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f7d7b742-5515-43bf-9ac8-d967620d3a7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb9f55-083f-457b-86b7-bcc3b0faf05b",
        "cursor": {
          "ref": "7cc8a45d-f563-4430-b684-b4b1aab1b317",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "30cd0b7c-606b-4c84-ab77-5e85daf03c02"
        },
        "item": {
          "id": "dfdb9f55-083f-457b-86b7-bcc3b0faf05b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cd14e74c-3193-4869-8191-66d3bb7ba7bb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a420c1b3-9f6c-4e4c-a525-b7e0935473d9",
        "cursor": {
          "ref": "95de81b5-bb58-4810-b9e6-1f83b6b17a22",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0d624bae-0225-4c6c-ac6a-23eb837fe057"
        },
        "item": {
          "id": "a420c1b3-9f6c-4e4c-a525-b7e0935473d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "23b91053-cd08-417e-a023-fd624968b3a3",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7632583f-a8dc-4775-89f6-bee44c886621",
        "cursor": {
          "ref": "8519a5aa-f014-4b9c-a3a1-72878aeff4d5",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bc17d516-736d-467b-8ea3-f989efe81d18"
        },
        "item": {
          "id": "7632583f-a8dc-4775-89f6-bee44c886621",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d31502d7-bce8-48cb-8d1f-eb51ab6de210",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07df8dd-3cf1-433a-9b6b-00c390d470da",
        "cursor": {
          "ref": "ab320288-4783-43a6-b8e3-31c62267191f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99684b1c-641d-43bb-a5d6-976b5c640d59"
        },
        "item": {
          "id": "a07df8dd-3cf1-433a-9b6b-00c390d470da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da506304-1993-4e57-b844-a12f4107b2c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07df8dd-3cf1-433a-9b6b-00c390d470da",
        "cursor": {
          "ref": "ab320288-4783-43a6-b8e3-31c62267191f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99684b1c-641d-43bb-a5d6-976b5c640d59"
        },
        "item": {
          "id": "a07df8dd-3cf1-433a-9b6b-00c390d470da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da506304-1993-4e57-b844-a12f4107b2c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a283179-4291-494b-90cc-072b02c9276c",
        "cursor": {
          "ref": "ec5d5429-6603-4d36-a35a-530d6b87c1db",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1a209f94-6757-4787-b08b-90fb0c933540"
        },
        "item": {
          "id": "7a283179-4291-494b-90cc-072b02c9276c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "55fff1ad-8b5d-4eb5-bcf3-1c64a2948239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46ac775-ff02-45ee-8746-4dc2f85bb254",
        "cursor": {
          "ref": "9cd6f955-1271-4a58-b57e-54cff0798355",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "92442d0d-b7b8-4c2e-a040-dc1ce6065ebb"
        },
        "item": {
          "id": "f46ac775-ff02-45ee-8746-4dc2f85bb254",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e9cc392-24bd-41cf-9b2d-97fa948a7ae1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}