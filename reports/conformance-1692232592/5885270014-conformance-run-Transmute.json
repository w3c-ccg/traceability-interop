{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "309ca128-6d24-41f0-ac70-443b3e1f027e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "998f126f-c6a0-4fc6-ac87-1f3098ff94fe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d772efc4-2d0a-4a55-a042-fc9dd2ed690b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "060feaca-78d6-489c-8337-eafcd1a91e41"
                }
              }
            ]
          },
          {
            "id": "af29d3f3-ac9b-40f9-8188-e55bdc33b002",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3309c260-d53f-4292-b053-f2f06784cd35",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67107681-4b9e-4eb6-ae54-b1cf8b2c9910"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "07c58b81-3cf9-4e13-9a3f-d146e8be88e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a148e35-44f3-4310-9641-54ecee5cea4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d287879-e277-4f79-9c12-e9fb7a9c65a5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb8ef7f-b958-4fd8-adcf-5e1e997e3cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7e9dae9-e27e-4e75-a7bd-a4a401a50748"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b80457d4-b675-46a1-af19-d45410345af1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9efbfd2-1c25-4d71-a33e-95bee62e637b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e254e59-8258-4f55-b90d-75c69a7e1bff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cba2b145-0768-465c-b99e-f217510d9798"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b56e5497-6d83-4db4-b913-d6dadd389281",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e3fad62b-b8bc-4946-bec4-0ddba5561a35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e4f0912-d5ad-48af-9f17-aa38cba89c16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e151b371-07c7-41d1-bedb-ef6f1cd432b0"
            }
          }
        ]
      },
      {
        "id": "7e3c1070-78f8-4366-8d78-b3e7a8f74c11",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "09ba75ab-67f3-4566-aa20-58db4f5b06e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61428d43-b894-44d1-a07f-20efb1f80dd9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0d1eef7-7154-4698-a7bf-2e200c9fc47c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268164a3-cd89-432f-ab17-57c804cfbc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a9caa8a-b202-4912-b732-62f1a6078d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52964835-1081-4565-ac4a-ed1e6a694486",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2dd57-3a91-4a0f-aa7a-f464a0d021a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73e0cc1a-5439-4f22-8587-9b9eb556b707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709b228e-1874-4313-9089-1184824fb1ad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0403d8b1-0896-4a46-b135-62b3f299330d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6568e8f-a359-4182-9fab-04bc8a94d387"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff45c22c-6e67-40ce-a8ee-b5d2eba5dbfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b006c5b7-1319-4be3-9890-8ab4bf85ff25",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70072152-4f01-46d1-9c43-ac7e73b7654f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5761a364-5c41-4ab7-93f6-c435e82fdb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd0e096-4993-4b6f-a094-1406484bacdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe5b8b0-75e6-4861-8cb8-4ed2f3c07a00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "642b813b-9541-4427-b507-77c579897178",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e024a704-79e6-45fb-bb86-0beeccc29a36",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eff13ecf-3018-4fca-ad69-d0fa43b12568",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8105e237-58b7-4beb-ab1f-66b6c4566034"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "361c1813-aa0a-449f-8431-8f80a6ee61e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "972e3956-0f62-4891-ab32-5a01b8c4a233"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79e3042a-8074-4eff-8938-9182b946322f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "838eb4b4-e996-4be0-b979-2fe922e12b77"
            }
          }
        ]
      },
      {
        "id": "4719345b-c201-4a1e-a4be-ba7a39089f6a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c4153119-7571-475e-b9fa-522499a8088d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c91ad70-8722-4200-b035-29e16f168cc3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "29818481-2ca2-4cfb-9f3f-7c6ae3097ab0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be18ef7-c8f6-445a-9d4e-12e4f815615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcce19d4-7194-4456-bb44-4b8861cec050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93e7c7e-8d37-4618-acbe-594d77e4c1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aca5d4e-ce41-412e-9773-35339d967b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07768ab1-0eba-414e-988e-53da47496521",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d403e580-100b-4ba7-a171-a57a9f0f5886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bd0e00-bced-42bc-8dcc-378d1a998a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b5f0c-587c-49fb-a496-8b5481e3cebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f4ce21-3c8b-41f5-8f6a-ee49456f9b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbf2ea1-8a99-417c-8930-fa1c2db6891b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c5937f-4549-40d4-a8a0-b9f3f71b651d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61e325a-f742-48fd-b853-a8607f03a3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e5a963-4bab-4f26-ae0d-2f7e4dcd190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d68ad981-c8cf-40ac-b9b9-82001c4b6a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aaf72b5-39ec-49a3-8919-2330b183093e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c02cf6-1b04-472b-b51a-24e06171915a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f26760d-a00d-4487-8b24-8d11717f86a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e16d9ea-5e77-47a3-bb6c-c23f417cdd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f5036b5-7e0a-4f8f-a626-4adb56cbb800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f262cbca-e62b-4325-b7a7-53799c768086",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f008a9-98c6-41fa-bad8-210adab8bced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d100dc3-c287-42b4-8534-e1da711db417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619d002f-8d0c-401a-8c75-009e4c2433cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "664fd8a4-3cbc-40c2-b936-76816ca0e07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac41bb7-fe01-4d61-b1a8-ae4d27aa20f6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a02c475-94df-459b-98d6-f6352ff15705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f4acb2-6c22-47a6-9965-0318ee8e6dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451c5ac3-dc1b-4363-84eb-e8960e5a6817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb67f546-dcca-4c44-a96d-9c065f296d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7e2c1a-6aed-479d-b240-f3c37d8b9ea8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b82fdf7-6e90-4485-a220-d54992468a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b0875b-fec4-4b14-9d93-43bfb3ab6905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef852a31-df4b-4726-a5cc-a3ad0ed8e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c239a1-857a-473d-9437-c2c37cd31ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1a3e52-41d6-44b9-9b13-bf4fedf730bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6684ffce-0b07-43b4-bc5c-182e9e2229a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be9f071-82a4-428a-8a2a-49a87deb37a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce30fc1-1be9-473c-892f-32d3c813ed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c7dea42-11a9-4e23-b27c-a983a8710be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b33168-5d37-45b0-aa77-170ad0d5b052",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a220d631-13b7-4941-b007-2e7799cd969b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3aff5a-8eba-4b6a-b756-402597893f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e45786b-31b4-4b5a-9500-38425dd7aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a1a2089-fba8-4730-91ca-e19758b7085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1370d60-7b54-4c90-98c8-8d9da6fd1215",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06ecf43-c72b-4455-b330-33d70e798a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361841a9-baa6-43b7-83d1-92a60695e009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0442f7fc-2541-4be2-8662-d098d8be18d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c322794-daba-40e0-b24d-7572e65fe711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4070f3bd-1a2d-4e90-96d7-d3645c2fb1e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cebb03-7a68-4d6d-9dda-82bfd85e4406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e626ca-a563-4650-8976-0645d915fce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2d5d6f-a002-4e5e-afa3-9867a83c9b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12309052-6bd4-41d0-839e-3006e93cd379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f57247-5f72-412e-a361-50af7ca31eb2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4aa1a5-59d4-4ee7-9773-7af4685c972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc92ae28-2b4b-43ed-80d4-5de035707b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfc6500-0c34-42b2-b429-67b8732ebcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68200e07-9896-44fd-b215-eb1fc5a3f3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1025924c-d8f6-43ec-bc65-89b71d2f9745",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce008d6-263a-4c37-a1fc-8f0785ddb928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f5df5b-c41c-4e09-b58d-da5e5b5e63f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d579e1b4-3364-4ed3-8706-536d035f008b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fad873cc-4ac6-456e-b7b6-2a56ae2f0721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2f01b5-db05-4486-9c34-b1017b1dc4ae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fead30-d8e3-4e5f-b43b-581ff8ef1f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8417ea3-46fc-467c-9a21-1f268f30ab14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9261f022-2e0f-4298-aadb-70f31572afbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2eaa7f6-8d2f-497a-b476-d9e87a804050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71abd463-5c7e-4908-956f-da353cdd62ef",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6d9755-2b8e-46be-887c-b898e25749ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91090b95-6bc1-4632-9d25-ceb6492c6f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c88d307-5fd7-44a6-8961-b98e69207cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb4b01db-9e77-4b95-842e-f30bd8e88cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c216505c-7c8f-4956-a1cd-dace399b68b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96428110-c4fc-4826-84f4-c5616192edf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da460f2-2857-468c-8f22-ae612f7c46e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c331acb3-4c23-4005-8fcc-c358454f1c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beb8972a-09de-49ce-a734-75da7d8baae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc8e683-2f12-4d9c-8403-64827d42ea8c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c377d47e-9110-438a-bc1f-c6a10fc92647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5bba30-ffde-40aa-b87a-cd61ccfc7135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737feb9f-d726-4089-a78e-1ed458c42682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb31626b-ec8d-4063-8817-907107a68b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d7b504-08a5-4b63-97b8-26240ed86452",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bb969d-e331-43d3-abcc-0db7a8450acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587e6cec-25cc-43c2-bb09-eb02346d2f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58e2a30-f9c5-437e-9d95-e17234568b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d230e5a3-f9bc-4f5a-a10a-0be31a9793dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc876b50-1512-4161-8070-8959b4651b02",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a979d263-b68e-4985-b970-4a8df2d9529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c3f136-5064-4c96-9794-b81ed573337e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f10056-aa90-4612-8a14-b5b9625d451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d21a8d72-90fc-44ae-9673-faa7ed0a237c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf6fb0-aa3a-4ff3-aa5c-06aa66dc9ca0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1619652-f8f5-46a7-a161-adeb4d72858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9cdcbe-6546-44e9-93fe-366f1bf6dc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2fda56-4420-4520-9d22-9ad4572776e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f377ae-4bef-41be-b15f-fb2fa4575231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d620dfb7-5282-488c-8636-95c0c6a78353",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef8f92d-e905-4b80-971f-96b678088dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d885d4a-117a-4903-828c-d3070c6efbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203a7e9f-f5ed-4c09-b79e-0cc415a22c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc45cc0-1e03-46c1-9ca2-83425d6556a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458179be-6a8b-4f04-9bf5-04d7d5c1ecc3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb6fe86-4b9f-48ed-ad73-fa7393e95ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cadeb5-36ed-4716-be00-6751cdeaceee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774521b4-796c-464e-b3eb-1f4687f293a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1c6eac-885a-4065-92c0-8e1c5fe66dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d9423e-93c8-4853-9c83-9b698edf617e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4397de-f3ec-4166-9428-94069ea292c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4c9c70-79ca-42b6-83c1-5274d5a50b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb5cce5-e049-4d60-af51-661713182c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2345cb3c-8f87-4a81-b182-f45d67aa5787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e96d36d-8b2d-4944-bc79-722f5601f0a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f838d-94d1-48da-b136-c766b4ef41dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4662f061-1288-43d2-b6cd-8a808ff5b0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aacf63-6b0f-4e6e-9d36-5d622cacb19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "58aa0f3b-a943-46e7-af23-ccc950d48dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9ee18c-b61e-4710-8a3d-f1ea1d2a9f24",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dcee5e-c1be-45d9-ace7-ebc5887ec4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55734c6-f4cd-4031-a27f-e203d46583c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5e066e-0a0a-4c45-9a38-937e14ae77fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6664f518-46e4-487a-8b0c-d101519bea71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ade6fe-058c-4e59-98da-951c9286a905",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca69e18-31e6-4400-970b-a40fc4e20ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd1e0c8-3d67-4fd9-b439-ee4e0392d365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098bcc40-fe7d-4164-be27-165ae268a0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbafd4d-704b-4a59-9179-3d720b3266a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a859a8f0-063f-481e-830b-3ad49a0fa1d9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3258df5-612a-4e3f-b8da-62dc3d0d972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6f36a9-ed3c-4295-ae28-2f7bc4886956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0949bf1-d095-4889-878c-2934398af487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61cd98e-3251-466e-9370-7459a00633fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71b21e1-8d79-4359-98fb-e69dba44490c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b63461-752d-43ac-8f2a-47c7d530276e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e33e15f-6d24-4542-8532-f62a34aa978a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c156b3c2-4652-41dd-901b-0267af721122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c145bbc8-1a33-4c1f-8869-56e8647ce16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609be407-3eaa-4860-be67-c0898f673b34",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3129c0be-5f45-474d-8bd7-5134c5d8af87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395085c8-6c71-48d8-a6ab-f42c16d70822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30fa051-e226-4122-95b4-04921e404a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "784bbc75-7d2c-49f0-bd7c-1f5d1dafc217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51fa197-6bc6-49c7-816f-7204f1dcc518",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750c433a-ccd5-47fb-a402-e485736393f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dda4b76-f172-460c-9fec-dcf6ee6f3810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc225312-7b03-417d-994f-c97caaf843d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2074019a-3152-42d9-9a59-3feb63fdb4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5993b743-9019-4426-8f9f-84454180adef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd2ad25-74d6-4227-9c3b-69ab6f05cc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3fd50a-bf20-48b3-a5cd-7dd42cbba630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3027f9-68b3-4e63-9067-ea8fdc3b7921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "023b11ac-fde7-4526-8279-4b31a04c9e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8198c6e3-0790-4653-9d3b-bd9cdd11feb3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb0d6ed-ae45-4ed2-a1b6-132bb205f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e53e6e-e230-4d88-a004-2892d34f18c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a83d45-3fa5-4907-8dc1-089fdcbf6b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "597fee1d-43fc-4b83-a444-4ff787471121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2163156-a08d-458c-9377-ea48bbf638a2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd7789b-7c28-4550-ab34-40161a409a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be311cb9-004e-41aa-a19e-394a5027abc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466a02f5-bc08-4b58-af9b-0b5c5d1e2148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7bdb2a-c2dc-4d6a-9539-f509e5a5c1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9455ea7a-1637-46f1-924a-647b1f0b68b4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dfff69-5e1e-4070-9936-016bbeed9f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7b2e4b-d599-43b7-a1c1-8950b4fc0ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb22e31-2c0b-44fa-b8b6-42ffd7497ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "feba8b16-031f-4bf3-936f-93377c2be87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cbb92d-f6ac-404a-883b-e2b56cf4fedb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca13deb-c2a9-4996-9b05-145ae4650eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb364edf-e212-4355-9d84-236c567915ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562790ae-947f-4500-b4e4-d509c3b62b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fae80374-8e27-4500-8f3a-5fbe2fac8b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254794d9-424f-44fa-b1e5-0f8d1148ecbd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed95ff92-c50f-4c2a-a97a-3a674f61dd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e912219-666c-4cdf-8ba6-490be33974ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf0f48f-f23e-452a-9a18-5280fa99448d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d685d7e6-a797-43da-933b-1587f57dd5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff8cd58-1307-4b66-a7d2-96c3a3646d5b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42742c7-36b2-493a-a963-2604cac5e792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2519ea25-ee97-4cbd-8f46-88a2bbd8f49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd37ab37-6e72-453f-b10a-ff2c50012ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e72756-d4ce-49e1-90d2-b5d3f258db40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8b3d77-fb78-49b3-adf8-cbcb5b7974d7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82134971-c9d4-4204-804e-f161fae1a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a317e6-4012-4105-b3bf-b2a4c0dbf76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0a9ee-bcfd-4cb2-a8f5-6d0114d7a9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a41d2d1d-c2cf-4844-ad59-548ba97aa27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be24ff88-4e2f-4fe7-bbc5-4a9c1af5f091",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9157dd-0568-4414-ae1c-8904b03fdf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c55ba5-33ed-4d07-9e62-55b061946edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edbb5cb-e5be-4a7b-8ec1-747d82639b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e180ff71-4d39-4ced-84a1-f97281422bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ffee80-d0fb-4604-800e-51516f39c320",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fedff9f-a94a-46b6-a40b-0e3f2755ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fe29af-b286-4630-9e43-4cd05b81ff46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc56727e-5337-4572-94b8-112daeeb7d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f078c94-f964-41e0-b8b5-fe36f94bf7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd9cb65-2116-4925-949a-ed44eccab854",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e870c307-e6fd-4794-9e9d-f5169a2769e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae6647f-ba93-49b2-bdbb-477d9a180b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec16817-85d6-44d7-a650-5d76e6843244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f0a27b-1556-4eef-b9af-cde9979a25c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c9eb5f-c057-425c-a2b5-c5501199c187",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c2c643-eb02-4d6e-bbc8-08fc0d0622b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954e3f46-e170-4147-b049-67307b817988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c967a8-da07-47df-888b-5c2fab4c2c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e2be61ff-6671-4f38-9c9e-06e8ab5314bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3c6726-6ccb-4f01-aac9-0d5ae43b61dc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2244bc59-193a-4dd4-be28-d037958026f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31668fc-aa41-4b90-aeae-04bcb612597b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0d4ee7-1921-4f10-9e08-a21d8380fa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eae07dd9-cd1e-4d0e-88ac-f7f720bd3727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb41228-309f-48e8-ba44-5fcfc2cedc48",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eec0b7-5448-4306-a430-0e63ad4d3cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aedc323-2b42-4a0b-b7c1-0137a52d662a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134cf08e-9289-4ae3-ac5f-7992f5ab1c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b07e5edb-dd4d-4edf-9000-360c377a2e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b865440-0e16-4be8-9c6f-ff87fe7307fb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033ae9c9-56ac-4673-86d7-43f193ff1f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28c037a-bb9a-47a3-a341-d3ecb4fb16ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0798cc6d-e68c-45f9-b17c-b06f08d934fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e1c6ce-ff69-4d04-9f58-4241df5fafa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1072eb5d-71ac-4ae6-9700-4ecd1e4e671f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4658af-1eab-4da4-a801-2bb13dcabaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af1a1cd-0b35-4631-88f2-4e62ccb7e460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86596232-b176-43b4-b62a-b723a837c81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60febd02-bf86-412f-9e65-d128e88a6a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112ad950-8774-42ec-8568-80ac7b741790",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b84829-3898-42ee-8f01-fc47788581cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc123d88-0993-4b30-ba3d-c7d1d7187a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c6d5df-d6ae-4446-a9b5-54b9c9071b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49604254-783b-49dd-b0f4-46b658a9989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b2e90-55c2-4bf3-86ac-de5a42d1032e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49897304-381b-4a78-bb56-7ab48994d511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f46899-5252-4cdf-91e1-e4f8614fe2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9406443c-46d8-420b-89be-b8b63a8d9902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f9f593-0c6f-4a13-86c9-26f9d2236139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375056cc-f003-4578-b855-7bcbc9a70eda",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b48aee7-1f14-43fe-9aa8-f7f4ca5c866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c90caf6-3879-4ca0-9041-1cab4b66f821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d17064c-0598-413b-91c2-033885ac6623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01a5c5a-5f37-4265-afed-a4d6f7e33699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9fe4ee-981d-4724-bff1-96c89538b8bc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe321d2-b5e8-4858-871f-82c642e04c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92280c91-c16b-4d88-9ec5-2548ccec5079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a1c327-309e-4f69-a08e-34b72c2772b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdabeac-d84c-4b25-a988-262b0a0d8314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb36c4e-0b68-4ffc-82fa-70105dc6754a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beb3a7f-1a34-45f2-8a18-1f18fda27687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824cd4e7-c221-41a3-8e81-cd7e9db312cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec48a6-23c4-4a28-a5db-bcfbea8a8102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f305ea9e-f612-4453-943e-5a1bac50c9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54be0593-5759-458e-b525-2b557c1da8d3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3bc0de-aad8-4f83-a180-f5af90275a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb65377-b32e-4710-b5b6-d7386954fdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5be02a-5f86-437c-8f6a-ef71e354b19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7083b8c6-7f4d-4086-a7f5-f7113d207d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca69653-c45e-4ade-bad3-bbf508a5dc86",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989cd4c2-f0a6-4aaf-825f-9d7cc620d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf601a3-142f-47d0-8e9e-6d9489faee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d8857f-2459-4c5a-9e01-d53c27c5ccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b554203a-894e-402e-82c5-93e506030b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72617af3-11e6-458b-8a2b-0aa17bf9b1b6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce6e3d8-6aa7-4bd8-8887-69c7923f60bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3821b21a-fafc-4224-8693-968950693be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dd5f4c-a27f-4d9e-9301-72285a71e578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d866c9-447c-4cf4-9af2-57edb827b4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69d1f5-f14a-440d-819d-6971ba837583",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee2aae3-f0b4-40f0-8b3c-eae8f0c2a036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b948f55-cf28-47d6-bc91-c6137449d8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144f9b18-bfff-4243-b574-b0d716ef1114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7818819-aca4-4882-84d3-dfb6d5f9a687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae988c-1f3c-4538-aa3e-cadc67c7d4dc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857c3f5d-12b6-4963-bb26-329d1129872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c45bea-f9c2-47ed-9ab3-2768db3b87a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48961872-e325-4e2a-a687-aca75b3df70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "64caeaf7-ebfb-4562-9915-4b2a7102220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5969f2c8-7701-4c7d-aaf6-cbf3c9dc565d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6dae5-4d9f-4bf9-81c5-6d3ce60319a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7203c771-fe9c-4f80-a015-b31be3eb3b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebb7334-761b-4d57-a84e-95826f5f39ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebff1b4-d4b2-49a1-858c-14932818563d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad79447-dffa-4743-b3ad-2c24d5decdcd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f25cce-0a03-485d-afbc-a63609a5afd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08db181a-48d0-46d1-8716-d2817b71f990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d636621-7580-4701-bbcd-7a3becce480a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2086b284-a155-4c8c-9f3e-35cda36ead0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844df6dc-7093-4f90-af6a-1dcbe71723f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f2ff7b-8bcc-42ac-93f5-9c9420625b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721e05cd-2284-435b-ad53-46d9edd27975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc43369d-2b88-4af6-a742-2c05b1e19aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "215ebe15-e341-4f32-a69d-96ec38bdf1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796d4360-7f19-4d3d-9edc-a5815c87202a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d718c4cd-748b-414d-99de-4ca9748c7350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abd76f0-38e0-44f4-9f70-78c3d0e0b17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb1005d-5b8d-4f95-af55-0168cb403cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e87c78c-8f88-470b-8f22-fadec49c31ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc681fa-29c9-4520-80a3-4480139e565e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37e7a06-7aac-40c2-bcaf-90691a2472aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ed2c6b-9cb6-4410-b986-719597551213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e966426-52a0-497b-85c5-768640270727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9873cffc-daef-445b-93a7-b69e3609da4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9c17b9-84e0-4afa-9ced-d25ceaa57ad5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c50bc3-741d-4b10-a813-3241a119ff54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496d82e9-bc0c-49e9-8904-31a02953a83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33710f9-2ce0-4f49-9d17-000f6679a185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e3ac8f-1596-40fe-9548-c7cf4e900c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a9971-3111-4554-98f1-9e558bcc544d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096fffab-ef07-4d40-864e-8660e12f8ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf42c3f-de74-4f4f-8743-3b04e8c96572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f48b57-85e4-4dd3-b7f2-cff7222a8705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b841fe84-139e-4d7f-92de-feffac2f30a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d253370a-978b-4eb8-af3a-35b9953aa8e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a8593a-aac9-4ed7-9492-2b9d0403fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54450ea-e56b-42da-aabb-66c94ffcedfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8353dead-9a04-404d-ae5c-84c13cbdd5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01788c05-6c9d-48aa-a55e-c40806e0579e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7dfb44-9673-41ab-b900-f2c8cfa7ab40",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028d60fe-d9fc-45bd-96f7-4307db3096b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b015402-cb37-4c05-9e03-e845a34f77b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86345472-6891-43d4-8892-55965be31144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56599b15-539e-4cd6-921a-63021d5beda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63e2248-e616-4db1-8b89-7d24cc55247f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1239ba79-da53-431f-b473-8188957edb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace0d7f2-2d69-4b5f-bd19-818955dd953b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b2f1c0-d8af-4f62-aeb0-619ffd4f8045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb705bd-e2c6-40a4-a524-2d8e7b43ba15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85efb9e3-1f60-41d6-b4ee-88a72b607aaf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74df85b5-cca9-430f-828b-325b81956251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fe7fb1-40ab-40a8-9ec5-5f26541a00af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb06f05d-6736-4080-9482-6336118f57a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "922fc40f-15e0-4cfa-8cfa-398fef8e1402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ba77b4-5b2a-4c9b-9528-1f2f7b3c1ef8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2579fc9-e1cf-495d-b3b9-847b5fcbae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a298610-9ed8-4307-be9b-c49064e18262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00887458-8b36-4e77-816a-651807109a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1579f4d-787d-4738-a8a0-a6de17d5fe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d603b88e-0b55-4a32-8ae2-9159935f7545",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d47baa1-5f17-48c4-a097-64e6a9308f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad09040-a5a4-4ee7-8c8c-a5c60d719f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3447e2c-e893-48e9-8332-ede93085aae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05a0882-6543-44cc-b606-223a7e083a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b6d04d-148d-4cfa-adbb-0d2bd1ef6301",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93ab97e-e10f-4838-bdc8-c061e0eb6b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a1e6b1-256d-4606-937e-72c492c707d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a3d0d-cccd-4321-be7a-78c0cfb1c732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "655dce49-aee2-47c5-9eec-9f641e0ce96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef79081d-bbad-4128-8fb7-4022c6afc5c2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b323ae-9311-4fe8-89f3-0712c128967b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ad3fd2-af13-45eb-a423-5e8fa0f3eacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b0f744-ee57-44b4-bba4-3aeddd3d7d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8a8acc-3660-496a-a0d2-1bc772822b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaa2154-6743-4cc5-ace4-615882fef93d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d1f999-e134-456e-8abb-6df3dbd1fafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3872803-a5df-43cb-b101-688e18125078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67697d07-5bde-4295-8e96-7aff1774bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "471cb2fa-1938-43b2-a7d7-a0fcafc85be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0d5c9b-32d3-4a6b-b240-96e3ad6928ae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a66554-612c-48b0-b96b-168ae02c66e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655bbd7e-f592-41f3-93fd-a616af43177c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea72235-9468-494d-a04d-bbc94a94f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c278ebc-6071-4c57-96b1-ab2692682a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c34557e-0f76-4244-b996-08aa986c52c3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78b13fc-2c32-4153-99c3-d5b62983cb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e810cbd-6fa4-478c-9e8f-a1dce6b31e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cbf6ef-cecb-49e0-9dd5-7684a2d1016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "988a0f13-ef68-4f3e-b969-312096523866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0b3228-cbd6-4729-b77d-80289e284311",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f982f54-951a-452f-9f41-8da722574bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b949a2-9aa5-4338-8e6d-3239492a0a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de216fef-10bc-4cbe-968e-b6c190686ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6414242c-32ea-4331-8cfc-3d1e8a8b82c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e502875-5f2c-40ed-8909-f266fa45c5ce",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652d8dd-ea10-4f7d-a241-68019397ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd30599-0083-4b25-8c18-6ced67b23a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81a1838-fa39-4095-ac59-c5877308aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13dc5a26-b9f7-4723-859a-ecb313b717c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327990af-69d5-4ffb-8f50-06149f609652",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a36db90-2030-4936-bd85-895a60a510e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2f84ab-2935-40ee-948f-c97d0aef12dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bdfb90-d1e6-4f60-81ab-b755bbc97e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21882982-661d-44ea-8e16-4723fe540a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a9355a-191a-4dc7-9d52-ebf3c9bf74ec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e033211-d0ad-44b3-a2cb-25a0ab2a4636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8cf288-91a5-4dd4-b0a0-dc21b1fe217c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9f3f07-d66a-4683-bcc8-67c5ec0ba23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "677550b4-4a00-4bcf-ad15-2e19e6bfa94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9467bb6d-1cbe-4177-8c8f-c105a5157b37",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83289ca4-7999-4d33-83f1-799778888cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb32042f-e8d0-46d6-aaa6-4a7ab763bb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e969f1ce-b0d8-4522-97cb-47f172027817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "796f7ba7-486a-4d4b-b47d-266580f7f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffe8ae7-2214-443a-806f-7fbeb78876e4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73441082-4107-443b-8e6c-0cb4185ced9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30537a2-f03e-4d02-bd97-5068e30f595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f92ed1-9992-47e8-9bb4-3253097634ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9214c2-679e-45d6-a6ec-4dce9a0e7fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42af4995-1c8e-4645-a270-a8bddf13b5ae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d04da-0881-48de-9a23-8599d11c79fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e06722-1202-428b-8cd3-eb907a31ec86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3233439f-0b90-4b7d-869e-1f282594c2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c2403f-5f8a-4736-8594-9792bcbaaed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1e4ec4-ee43-4248-8faa-df360a01a30c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071e9d1f-0f18-483f-ba48-d15abeb14826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01ad19e-90f9-42c3-8b88-c200ae4c1981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cabaa7-58d5-41bf-a1dc-6b7cf11bda76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdc8217-3495-4d90-b591-c683b0554ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69a8777-41a8-467a-bcaa-b4b0d59fe4e5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dac4c5-a426-4430-bc0d-b460e799a044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d88b9f-797f-4b3c-9523-3a1a9c3c6d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c25a2e-f2ce-4dd4-875c-56d7c661e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff55f50-f047-4829-915f-72a64e7a6911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaeab90-8746-4a68-9419-0cbb02b090ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3d1e3-4045-46d5-a542-81d2a25955c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed702705-e3fb-4e7c-b8ee-8bc64e9d7b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3badfe4a-f68d-4365-ae20-1d2a8ac0b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a7e180-ad1b-4c2f-8538-97a516b28fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1577f7d-f82f-4a72-b1b1-2b8ba6cbb9c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8880d5a1-8fcd-4384-82c8-0ec740c0da3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1118c15a-c5b1-49dd-9b10-dcf1e7b87c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccb08c2-2dfe-4647-acf5-120448902a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68799516-2f98-412f-ae4d-debb7f1cbfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ea5f1-28fc-425b-9967-3650c85dde3a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aad494-995a-4a10-9630-89438bef8901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13b25cb-0752-4ffb-b48f-6cfbfb8620b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a842a44-ab9b-442c-bba8-09130d94561e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf86bb2-52ba-4105-8d4f-13b25a3eced8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cace7f2-e48c-491b-9fae-803b3afeb7e5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b8ad1f-ec31-4215-b5ba-a904ca585650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14851b0d-b290-4c5c-9449-4842f1bb8a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bb89f8-336d-45df-98fc-721c7ab2ad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "279c614a-7a75-4394-9657-1c218574b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932ce281-438f-4eb0-b17c-53a88283329f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c0cf5d-b51f-4394-974c-1212f213af77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ad4990-23d6-4656-892f-b3d9b3b9bf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616573ba-6bcf-45d2-bcef-31488f26ae48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56bdba06-7af4-48a5-a78d-c057c0fdae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5923ba7d-975b-4b71-8bae-6232f7d08a61",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdd63b6-5206-4c1e-803f-743e4f8e3ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6894e6-a364-4748-942d-adfa0b4ad647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9298084-8f96-4e45-b4de-cd01befc0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96702d1c-4809-4c67-b898-e9c2d15473fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961c008d-6e7d-4bf0-bf06-003b9e7cbe6d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b2dab8-2e1b-46aa-a8a2-251146bc0a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94310bd0-d394-4970-9142-400315d14830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16844dc5-2a10-4ad9-a8ba-179e2f8376f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd87284e-fe91-4a24-a388-2a93406cf209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5088a8a1-4840-4c31-8df3-111235ebe032",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec3cb91-670e-4a7a-8524-0855bb4bad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9121c157-8dad-448e-ba40-1956ad39d992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b506d423-9c85-4ed2-9db5-054ae7a7538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "009ce71a-1d0a-4434-8258-8c55ab58802e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae8bc95-a5d7-4890-a9d8-cb379c494755",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487db94f-9029-4361-9f3d-c8bcc46107aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a76b15c-0253-4a14-a288-5cbdb56cc9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efccdb57-7d3b-4ade-8f74-dcd9f39cdffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d51512b-5f15-402b-bea6-5ea730a5546f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54795d63-6b3b-4351-92bd-e1b23e0f8867",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4871b7e3-f262-4f7c-a123-934a102d4f6e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9599d821-372e-4f67-acdf-dd7aa4ece8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ccd32fe-41fe-400e-b739-3c913758b610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3e630-ba4c-402a-b861-d7ce00f4efea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9af33060-afef-4ade-a4ba-aadaa1079707"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9208a42-03b4-4587-9136-87edb18898e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "842a65d3-6609-411d-a343-dbf782c7c960"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5f7e370-543b-4bd1-b776-f5d806ea49a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "244a00c0-b616-4f19-977f-93d89529176c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "578b29f1-385e-4508-8987-027fa4325c5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "356f832b-ca73-41bc-b9ea-ac62dddc7fd0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c30b7b4f-ca3d-42f2-9dcf-e768f501a4a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bba26451-d8b7-4867-9a85-662387179e09"
                }
              }
            ]
          },
          {
            "id": "25a32a5c-e29b-426f-866c-a1c12140db80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2f500d6-d01a-4b5d-9b2b-c49815e8aaf6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7ea8ddb-2e6b-40e8-b566-e80928ce7f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdb07688-980f-4b2d-89a2-2287c6534cff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d866c547-f8d7-4e0a-bf6e-2ed0af42ff56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e07eb849-fb6e-4820-a431-57611746328b"
                    }
                  }
                ]
              },
              {
                "id": "fdd8c811-1283-48e7-8c6e-8301c87b43bb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84677658-40d2-4802-8dfd-5e2c82ec2732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbedb935-15ef-4646-af92-f034f1a3f3ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d0a3da4-9943-43b7-953c-19313b916a3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85ed0653-ed95-40df-83e7-6eb3f65aabdb"
                    }
                  }
                ]
              },
              {
                "id": "d5f870c5-a0ea-426b-bf6b-502be0a463d8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de06885a-151e-42d4-b63d-4c4060344127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c42cef2c-9443-475e-8b7e-2f35411e9c1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c6bcda3-a8c6-459a-924f-3b0ca70857f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d6f348a-bf95-4d90-b2ed-dcfc3566738a"
                    }
                  }
                ]
              },
              {
                "id": "27866bec-d7a7-408c-917b-075f6fc61bb2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fde2101-9ebe-49a9-994a-a2d57d3e15b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3509068-a48b-4498-9ec7-e0279c232ade"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dab2a72f-52cd-453f-83ab-776124633660",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c14d83b3-76c0-4557-be87-b64c59bbe6c7"
                    }
                  }
                ]
              },
              {
                "id": "a5291418-e45f-4084-b348-fe7ea00c4e7c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7df2e995-e13b-4c0b-ae37-db043af036a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8196fef1-cefa-4e78-80cf-492da6c341bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e7ef1c-b9cf-4398-80c1-7e68c55cf772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "24bd4e5e-b778-4abd-8f22-b249a04ac076"
                    }
                  }
                ]
              },
              {
                "id": "e52aa8e5-eff6-4985-bf65-ab675d0d8c4c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bed5e1f8-bc71-4950-baa8-1dc9648be837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4d74360-7cb9-46d9-8358-7ef4611a4f80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90ea3043-4f35-4050-8fed-8c401c5edb31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd70b25f-f05e-4153-907d-de3aa1a63a7e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02b5f44f-e150-4489-b79c-824acdb76664",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "adf76da3-c365-47a0-b6ef-424cfa0bdd49"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da1c35a1-4849-415e-a67c-9dd10a299a1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "835cd60c-db99-4f31-85f6-7cc31069a632"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51563715-de3f-4510-bfef-d7eb28e02b46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "48f4a160-81bc-4c9e-a433-eccce5416e93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "655f3793-b5a3-4916-ae7b-8f3d7179d028",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b95c7f75-ab28-4281-97c2-87b67af5cd16"
            }
          }
        ]
      },
      {
        "id": "452f493d-f7c1-4b04-9a59-e51cf5b856fc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1ccf9f58-ab4b-4a19-9ddd-9f49e146a6d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85d763e3-f996-40b2-b7fb-557b9b059f09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9663aca1-7df0-452b-a322-f0712a35a547",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f58fa9b-eb1f-4188-b20f-42d5b913326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeebc3ec-952b-4539-85a7-544902ddced1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00b31cc-d9d6-430a-9c2e-49c9a2733230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a374ecc-467a-4b24-a48c-fb49ba2a1736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd98d957-7593-4176-85b1-32e6ee2347e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f0541-0136-4503-a0f4-567d54674f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad0c418-0b76-4639-bf1e-68625b6ed4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3301c6d-8093-4cbf-8272-97b4261cf961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b956a80d-988a-417a-adc8-ffa2ea75bebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4677af-a679-4e48-89ca-270deee99fa5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95cedab-e480-4450-92a1-a24a40681828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eef450-eb0a-4019-8269-37600c268546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a61032-ade7-4bdd-bff4-8e321c84a6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc74f4f0-69a1-4949-9e1d-97505b779f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bba6b4d-b035-4973-99f9-9557e050689e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c926d31f-d97e-4cbd-99d9-cc9abf855aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71905dd9-175c-4c57-9c9a-f971837b0383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fc49e0-6a74-4a44-827d-e6bfd0c8b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ffb18a-91ed-47eb-a5d8-6d629f7cdc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d766ec-0895-40de-a8ec-9b3f08bf8d68",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88f284-e018-4fb4-a21f-4bdf9c70e70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae38f21-a0e7-4d18-be91-fb8af073fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a713bec-75d4-483c-baf0-dc6d48766b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1aa489-0e79-49ce-873d-7bc73f3773c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72768c87-7487-4807-a0c4-9b649c19e5e3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3206fcc-b230-49e7-8e17-20beba401f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f70e48-23a2-46c1-baf5-2dca39338ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618ccce5-9da0-4ca9-a971-1c7e85a52ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee5bc40-392f-49e5-bd1f-c6216a2cc674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a782a21b-b96c-4fc3-8397-213ebb288d6f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3daefc-0c8f-45cb-8673-df0bf60eeaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd68e090-c7ab-4be6-a364-d804e66a0dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853aa9c4-628a-41fe-8d07-8fa93142b6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed894a5-b028-403a-aa45-ae0948d10509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab081e3-b391-45b1-8c50-050ff2f356b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fa06f9-86a7-49f7-aed7-a7ec331657c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f66f588-317b-4078-81de-34ad661645b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfbaccd-9318-43be-877e-f638f1f51b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a0c2ba-66bb-4011-adf7-0a98e36c00cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253b3782-3a27-40a8-8e3f-ec7789eb1750",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c4ac7e-db0e-4066-b76d-8631544ba6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db898df-f3b7-46e5-a42a-167a85c32ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f62b5c-1976-42ff-82eb-fb08efbb4f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a8d209-6b8a-45ce-a432-d7722cdb188b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c12a24-679e-444e-9b44-10e9c81d433e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e951a009-d9ce-4012-a1c5-8072398f6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55a083e-bb76-4165-99f9-9eb03d43843b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcfafbc-5d2d-4723-9b57-8c4f3487fddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35467c6-db91-4ac1-a9c8-53ce549247c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c46e0d6-19c7-4c9a-af1e-2eeb10896506",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146b071-5a47-43bc-ad56-ff766e628f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3369529-1a04-40fe-a053-212cc2f30672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58031f3f-7ecd-4050-9ec5-cd909d7a1342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45ed248f-6ec2-4374-a9ee-675d0286a63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b07f30-c4a4-4429-ab41-9ea582dc8022",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24da240-b28f-467b-82ca-c24de106826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb082ab-c470-4705-ad7f-991b0c3db205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7cc529-7329-4d3a-989d-41771324dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0f1941-fa1d-490b-8488-6805cc27b00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ffa32c-043f-42fa-86e9-88845529b802",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ffb1b-8f84-4d8d-830e-7f5743e18540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f85a7e8-a228-4c5d-9f0c-a716185291a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a65a148-2b10-4ad3-93bb-e910b0c784ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "277e9391-2e18-4a5f-bd41-6f1ef3a2bd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0a70e1-c352-4a62-a610-05c4d4e2881a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4166359-1002-418a-bf84-2b3e98bf5350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1a1bb5-c5c0-4fee-adda-0236801e858c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87e9c85-13c3-4b34-bb10-e42e20210702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b04341-7fde-4aec-8cf1-455308c3bbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20f0330-7af7-406f-8363-ad8be51e28ae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2ecc7e-1236-4449-867b-a68401eb69f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83774d82-5458-4319-b4c7-37ca1d8d7731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdacfa2-dbb0-487a-8ec0-c48010cf78b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa87af49-13fc-4e0d-ba39-9d2639f03a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b106d7e-08f2-4179-8ed1-c0aadf65aac8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3045488a-6e50-4006-9cd6-fdd106118a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aabe386-bccc-48a7-8407-f00cc59940cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeecbce-5461-488e-844d-4c36faf4827f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d932b7-1209-4ae3-8210-c8bcb670871a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8535f4fd-9c49-4232-b3b8-1bff9aea9b06",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa95e8-f4f6-4dbc-952d-479027f3c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a524fd5a-7543-499c-bba4-b53f3283e834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c3960d-0877-467d-9cce-09a46f4d6107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8359ccc0-5715-47b1-ad27-f339bd5ff914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4fb247-8108-4706-8d8c-fb5f6d46ac22",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9745fc7a-45d5-408f-8124-33853ddb510e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee53b739-5803-4526-9943-a7166131b8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598ebe6f-d0f8-43cd-bc5c-704eb1bfa4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd94e283-5c8e-4338-b6b4-d09029dfca44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11245c3-d3cd-4d32-a0e7-5464024955d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf927b8-34ea-4776-bf6b-577ed4ff0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c1bd19-169b-42b7-b394-0ee7c316a429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165f70f1-9855-489d-affb-2a9cbb376cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b91578-d630-4987-8df0-b1b0374ab076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4236ff-a39f-41bf-a7c7-e0640ee7acf9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35297d8-d9a7-42b6-bfdb-537f1ce0e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ecba71-1357-47dc-8e73-d3ba42cd0f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfaba19-14b4-4219-a99d-d11346ccbbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d9ef1c-5f82-4c73-b49c-b76eeb57e16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc8bedb-7a8c-4b42-a79b-a72fba593276",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e249d153-624a-4812-95b6-ade84ed053c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18432b38-713f-42c5-a76d-b618461c2ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83abab5-73b6-42da-83b5-8676a72692a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0249108b-7f3d-42c6-9893-18ec89db15c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5177c559-f3c5-4af2-8021-93e787e7374e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138357a6-d8e4-441c-97a8-9c156cad8563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c73caa-4b64-400b-8ed6-bddf3d618926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9b5c17-da77-4b71-8576-6fd4fc54087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16bd16b9-0c9c-4b45-ac44-a424204b2787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe8cb5b-05aa-488e-8a27-f99bdd159226",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9819d089-70a5-4fc9-8a2c-44f66661139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444beb9-505c-4ee4-bbb4-13dd1d599d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db94e84-bb99-44b3-ad2c-5dfe49ec1cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df10bed8-5fe3-4956-aed2-8120f4d1e100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b2746a-b5ea-4ae1-bf0f-3f04707a9436",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85316c29-d9ec-4b3e-ac5b-5de8979a6bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a20ecf4-e37f-4409-a38f-cda43a881df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ef4406-3692-48c6-a9c8-aac43e2b0997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5c2ff5-e43f-4781-b89f-b5c500688682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abed9a6a-3018-4de4-b2dc-0d73a7d92873",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39139e3-fddb-49b9-a1dd-0345e5e3e53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c20ad19-178c-4426-8f14-d087b9cc23c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbb90dd-58e3-4677-b4c8-0af18c43c5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92dcd2a-88d2-4db1-8bae-5a8aaf70b770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def10f1f-1232-43d9-a293-809f86683b3a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70951507-c064-46b5-a360-98a319a01cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8baabc-97fc-4934-b9d4-fadf3145f3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36bd297-dfa2-435e-9f52-d3f29b63952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6784ca49-1663-4279-8c34-6c79dd7ca033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05037e2a-513f-494a-8bef-0a5f3a784e08",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57346080-d981-4409-8593-35cdc928eb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a245be2a-5225-493e-8864-4d1782c6fe5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9adcdf-749a-4cc3-bcaa-cb41134dd004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0312c66c-375d-406f-9f84-721993770a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10fd2e-9e12-435f-9baf-4187f76a0bb3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae73c8-eba4-4d4b-84d7-58ddbe80e23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c4cd89-ad19-4fdf-b4dc-6c17089bf900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacae80e-9447-4c52-8391-800684dea09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ddb201-c459-4d3c-97f8-77da91ba9183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0efbd-0491-40ff-85b6-dbf41cd3e8a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff0714e-c31d-43b0-9335-bc007a5ca491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6936ef2-6f2f-4e78-8760-74ba1a90c62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6258fc-1432-46e3-9e87-4cca9512efce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b7ec8b-2ca0-46d3-961c-44d45be36df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424ffa06-369c-4ff1-8d5e-73d125769a18",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00134ae1-ddf8-4b8d-ada4-4b7c5b770bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d1c084-e98b-4fa7-b453-407b06b53a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b264748-6be4-4f1d-bb47-a7d8eb6166f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b8181e-e3bc-4718-9fdf-fcd30a959458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf4c766-2c19-4b63-99ff-4e19bdaeeb2a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d6d458-1b75-429f-aadc-80cf71a3a675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0f93f8-a682-4e03-bf56-bedf32c3422d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147f52ff-5c24-4be5-9765-4c0dfdd24ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d022d4ac-5192-44f1-acda-ea2d8e721aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ad287-7e54-4e0b-aa7a-259f3d536e90",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee9bb9f-1b90-42ba-9323-3c6e6ffc5df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284f084d-b964-4251-9a0c-94683403d757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cfe866-00b5-4e7e-8eff-290bce84bf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b69623-26a6-4c54-9a2b-0e4d1cbab99c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81715a85-7f5f-42bc-9c51-756ca39dcc12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9ed1574-e24c-4e8f-8204-2b717f48c8c0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a9340-6b48-45d5-84af-987891932277",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b882e4-695f-44ea-9be0-43f46ad77ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6678d-39f9-4753-b7b4-3f7fad5873c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a5a908b-cdad-44db-b225-c2be0a92d40b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef08af9-034e-4dd9-8a0c-d8e7b3ecee09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db9d412b-45cc-4f2f-ba20-941634519828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c63bc20-4585-4092-a332-29136d002fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8bd285f-daf0-4bb4-b790-34ce7b7ef501"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f64d94aa-7566-4197-8870-e670eb34c742",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b9a8a0c-d97d-4b8b-954d-254704b8ab7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83398c21-5f60-4d5f-b290-d7238df5c22f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "498d5bd9-6d91-4064-b5ce-47dc51a0c7a3"
            }
          }
        ]
      },
      {
        "id": "53eb7cab-57e9-4e82-9c1e-319cfd69085d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9df2ea6e-b7e0-4b80-a3ad-e95b0be7443d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a2a084f-5d63-4792-9f92-154e78bf339b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84adf96f-d4e0-45ea-b952-855a6c36bbb9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7193c78-e351-400b-870f-46fa23784caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a992e72-de4b-49a3-ac12-404d6b6745e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e30117-b86b-4ded-a586-0c15bd68cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e0d804-8faf-482f-9484-d412fdc09186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5962b6e-95f0-4cd0-a61f-12fc5370a2eb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a865ff2-7dd9-4875-b389-4bab30cc50e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52c02cb-fc64-4877-8666-2fc1fc260e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55230339-415d-4abb-a31f-1bd228e10b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "692fb9a3-ffb0-48d6-95be-85519f4eb5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1f8b7a-9d97-4675-8cc3-330e1983fa69",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0502e7-ae5c-43f9-aadb-50e0bdfd1271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75dc108-cd2a-44d4-86a9-3cefe95fdef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9931fd92-5a61-4005-80bb-d2501b35edd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a48dc14-8fe5-44d9-9214-75c0cc912369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6578f72-d0a9-4d4d-bf3a-68c59bb61103",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a271560-4e97-480e-a0da-e9099b76855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6f96bb-f31c-40d6-9b1c-585b9f6f3d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0ad1fe-3bac-4071-821a-8a85907adc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85d172b1-aa97-4623-8a66-aa868018ed16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49951090-e15f-4c8f-ab41-bee03a417fa0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c17c839-9372-4bef-b90f-03d210ce4abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d22951-4e3f-43b7-b057-0a7cbc72d30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4f6d77-0186-4dda-8fbd-9027653ca608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49ff255-d24d-4764-8ce1-ae58f815a997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf60b34-8472-4128-9338-adb357376d19",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1fcfd7-3843-41e0-b3e4-d815c30ae8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330aae21-ccfc-4144-babb-cfb8b3c3f757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c509ae-ebc2-42e8-8639-d9c573efcd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53fe5671-a10a-45c9-a137-9eb9eab052a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef68b6ad-83d7-45e1-ad85-a7242d13d962",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3beda6-c6e7-4a4c-acee-c64c8e0b3fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd284f72-eb12-42cf-aff1-0dc0e9a10a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620ab49f-fd96-4bed-a829-53698bd81686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fea590f-a6ea-45f2-9f46-cffaf72adc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7506eb-b9db-41bc-a929-431e90469701",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99d0e6c-8240-4656-9daa-a910635fce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3729928c-7e58-4f0d-95f5-37dfe18cce4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10e10ce-1df0-4170-9fd7-a301276e08cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c73c31-9958-47f8-8cff-820e41b5502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8629b15-57af-4ecf-93e3-d00d50161e1f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b165457-aa8f-48e6-95cb-47a16bfaae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db808329-d47c-47ca-8ce5-74c8a3b0834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdba7cee-5939-46ed-94ef-343f03799215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3691ac0-ce6e-4e48-9c73-27a79e6fcd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcdbf72-8183-433f-a784-4306371af950",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3c94f7-fe9b-4576-a18e-daf860fa7168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9764eb6b-93db-4c06-b7bf-7aec0806b03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833fad85-584d-48b7-908e-b2c2199512a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9aa7c8-c42a-4bd1-a44c-7e4a4d66fef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672e4cf8-1058-4793-9b49-9c22d79d6915",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d153a3-5471-402e-9496-0acfe8bff1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6fa82c-f589-417f-a23a-6aa11eabb2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59fe959-3400-48af-99a3-5ffd4dfaf423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a07415-452c-4e30-a111-72afb68644a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fd2ec5-1bb1-4118-a46e-b3ac095a949c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0164235-741d-46ff-a8b3-4fc5c84c0ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fac99da-3904-4e06-b8f8-9d35a81ee921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d251d1-e211-4e5d-8699-a33ff9be80f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "058823e0-f798-4ba9-b1f8-2e9d36201fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2408877-1f8e-4d4b-8705-4fed0d8c8401",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546d88c7-4e48-4ecd-b816-529e27e36356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a6d7b0-ef98-4a15-87b3-081988eebaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f021854-5afb-497e-8d4b-2291bcd6348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "666f32ba-f0bf-4e03-97e3-95175cd1aef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5d6e5-bd0d-4357-9b6e-42cc4f35e34f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eca02b-bd44-48e4-8df1-89aa5ee6b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850d09b1-f72c-4343-a93b-7227302dfea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ed2b2b-4aea-4dd3-a77d-0706f8e2f42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2ae529-dc7a-42c6-9953-2ddffd75f8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79604123-7cac-466a-85c8-7f6f009986dc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e9623e-f43a-4e98-a7da-b9d5dd0c042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b209c7f9-9e8b-4ba5-86a4-1d4e30e7e65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1850aba1-ebbc-46a9-b8cf-62192f4662de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "462f208d-3e28-4307-b756-9602421a7901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c318749f-993b-48d6-9360-cbfdd36cfa11",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef21672-a49b-4337-9087-5553e6109601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad096392-94bc-48b3-9476-df58cdb876b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b327f19-60ca-4e9e-b3a4-b8f485d84e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d5f4d1-a1cd-4d8a-8374-0113b0d7b375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9922c38-9de7-49c1-a193-2457c98b73d4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9901206-c9a0-455b-b2a6-b43ddb557cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6dd200-22ed-461d-9112-9ca2a8969f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a66544-73b9-492d-8ad4-f2acc2041f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b253391d-45ae-4f32-a5ff-fce4e1487355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87da4c1f-826a-494c-af24-ba96a59047d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0e8c27-5f1f-42b0-b1f8-58238a718d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ec5ae5-b166-41fa-8b50-af25e2631a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfe4c15-0727-42b6-a61e-9fe1df1e64c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb18c1c8-6ac1-4e0e-a7db-372340381e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea3d26b-ef49-4bc9-97fe-83faee1f67b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71226d6-db5d-453c-a553-1391e48d8475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d0370e-1350-47e3-9517-d7e9a89ff40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2931e036-c3fa-4689-81a0-8b0a96844b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f9aa58-c9d4-493e-8722-da0350cf2084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecbc445-d0e3-4512-8d5b-1ed6788efa54",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7990b4f-4d36-45c9-8175-83e019b4334a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694d7888-49f5-418a-b035-f0c66bfa8adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0692b61-b00a-4c51-9372-96cc2ce4f974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea903719-788f-4bd2-873c-630550c7e169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0534528-4745-4121-8f10-47fff45c4fb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bd8030-5250-4cf7-927c-fc494588555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9360276-af81-4fbf-b65f-e2a1e130cc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b60683-4f23-4a5c-8a41-c15d76d24544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42c4c86-e8cf-4fca-8c46-6ecca426ea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b403ef-7eb9-4f30-a05c-1445d30af7d7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cac2ef1-f965-4149-8495-a6cad20f36b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824973bd-0183-4937-aed6-930681b1b15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb778e09-3191-4517-930c-c3896874d6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae53689-c990-4a05-a4c0-6a2296b5f02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd48c25-1baa-4257-beb4-498060ab7230",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d639d82e-ca11-40b5-9deb-fa01cc2f317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d344a8-120d-49fa-a03d-5306d6c1b552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c20157-0ac1-4dd2-b445-d41e3a4b3f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a5a7e7-4250-43e7-9986-8eb8af6ff5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179612e9-e580-4436-a35a-35892bdc974d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acaee5d-dbe0-4fe7-be39-01a6293c72b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6c01a9-4df8-40b7-851c-668e96a23610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a79da50-64d7-4767-992a-db370f2f2697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b75261-40d4-4ecc-984b-d729ba6f8217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabac922-f5d7-4b25-a96d-84e6d0594fe3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b70549-0c7c-4661-847e-c1c1d4d21b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90178b26-fad5-4a84-a17f-411e1a869bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c23efbc-4b3d-4b4d-9bca-eacdb2f4f56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36e0e811-b6f8-4c00-8b2d-db5586754708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b235de-3cc6-4597-bb21-23158b8eaab7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebffac4-4edc-472b-9eb5-c6f57035b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b5125c-57ac-4198-9090-79f3e2d81ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e7ba30-0e93-4d47-bc5f-7d043b002881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb4d911-1769-4aad-94e8-9f9d15447ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7539ef2c-4c43-4042-a9ea-7e747a12e0a8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41d335c-d560-4323-9e71-425de9d4c5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10268ec-0235-4925-b1b8-f8f71ea73e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a80545-b00d-4567-881e-86391fcd5a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0229f6-e6a0-4035-b0f7-aa94f2c15f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afa1a79-7640-440c-ad1c-314a4ad5c126",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006e56be-2473-4b91-9469-e37f8e35d124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea72c30-028e-45e9-9095-6a5480931b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3739ce9-0151-4bb3-ae5a-9ec9dc4e6c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4379e3c5-22b8-436f-aae4-cf308258fc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0289a-8b3b-424b-8fc2-a609ded388c2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db45850-98d8-49f1-8d24-8dd84a45da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07df1af-9275-477d-981b-025825e401db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d4ce61-00ca-4fdb-84fd-0f2b456cf6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034e8294-2990-4c95-9585-36db1c36ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe504c2-2baf-402c-81a3-542c4df37149",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7850d755-3389-4e8a-825b-8995ea21732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff16fb3-9bde-463d-ab42-548b6528dece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be197b8-7fcb-4245-8adf-3393c489aadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "240cffe4-f95f-4ea8-83fa-9be1177632bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d770871b-36e5-4093-8836-02dc60c80079",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b8055-979e-4f83-ab3a-b7a407949e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3147a347-0555-4323-a518-4ae2e245cbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc2b563-77a5-457f-9147-3211ed2ecfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9370cd7f-4304-493b-9de4-3396787bc2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0493a1d3-5fea-4778-a98a-e09262438c56",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bba52a-60f1-4927-a07c-26dec3275c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed108742-673e-4ea0-84d9-64418f7f8f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6158e237-bd43-48db-90fb-fdb61304ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db839ad-bb6b-4423-9e65-f6d1c33da60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532d9156-881f-47b5-9ad9-f55e7120e09c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e9f26b-38ca-41e5-98e5-4d13b216c98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68f748f-842f-4b58-af73-a5df7c90b449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ec3223-24a4-40f9-bab3-f11c0415fccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9a1e04-ee06-4326-b590-35992a037368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1992587-6189-4b4b-913c-be1706e554a9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c3241-2dfb-42a2-a338-3ace092da02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828ad389-e010-4ff2-9bfd-763663388dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed373f87-b892-4650-a26b-6706ebf07841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cd6f69-f39f-4ac3-91dd-871d26da3673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeb1598-b619-4b64-b164-ab73bab0f79b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ada1246-9bab-4e3a-b3e8-d6a27bb879da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47975cc-4c8f-4bc2-9b53-9eb5f9325c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d008128-9eee-4eef-ac83-4e66663eb424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836be3b2-a3a1-40bd-a788-8f67020df0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f0eb28-9108-4d5f-8b3b-4f5a2c912e8f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb06d918-7dfc-4151-9c13-e10fb70056ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947a4c05-f0e6-4aea-9116-4cff93aed398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f423ec95-b9a3-4e66-8fcf-6e7f0e9cc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbaae51-47e6-4529-bacd-70bfe379ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ee3b3e-9de8-45c9-8afe-e00944d7769f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec9147d-cb5d-43b0-bc62-01db3283f92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f932cf-c735-4655-848b-cd5c02e06925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132d3cb8-91c3-4be6-ab41-687589706d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadf0f15-df77-48af-b87b-c51589ebb03f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b640730-509d-4cba-9e71-4bd32b97210c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19b4460d-0c86-47f3-9c6f-6ef6b543ebb9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e087caa-38ee-49cc-b9c2-314e00ac9a03",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38e9cd98-04e9-40c1-ad35-09e985ad5ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e791a2-0d52-4095-be47-f32d5a5a5c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "576d3b24-ed63-4deb-97ee-5cfe49f6dea4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7b79df1-2658-4182-9c0c-de7a261ee0b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce150393-0de3-4d67-8872-e33b27163fd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae350ad5-5c2a-4733-a26e-faeb7f780264",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f188bfa-18df-47b6-a5ff-badd4c65f53e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c89eecf-6a99-40c9-aca5-60f7a5b5abd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56e14a5a-7d68-45e8-85a8-23fa6c9c853b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efe7a5e5-b53a-4934-9842-94c34a315bc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7f4bde6-8efa-4cb3-8dd0-aa2417db5154"
            }
          }
        ]
      },
      {
        "id": "b731690f-cd66-422a-9f74-bbf7427b3bf9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bd575316-30e9-453f-b7c8-05e064badddd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1ccceeb-ae4c-4a34-a3b9-71482856af70",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2bc9b3e2-90ae-4542-a4e5-00a81af1711f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36acf216-2923-4b82-a24e-4e7616b3723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d699e46-7fb1-4bcb-8ada-5bc38107fc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2867d688-e19a-4117-b490-61692d7fd124",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19ca1c2-b0aa-4105-a6d8-c4af330afb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6df4dd8-463a-4dff-b632-96bb6127c3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c553a8-7417-4ed1-be40-f3654c03633f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a8c4ba-b380-499b-8792-b56ed9d61146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a34fa87-4c7e-4962-bcd6-d24402106099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b39ee-1bf0-4575-a31f-0d62cd529d3c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25452629-649f-4e6c-9d73-4254e0f4e2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c56d17-b4e3-48d1-a49d-f9fa0c406213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae1e859-d845-415e-9236-fc9dd11643cd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43697d1-a1ca-46ef-a01c-2464a61d0fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d665a2a7-262b-4868-9739-6abb4484dcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f036c60-a5db-43eb-8f14-ea9db7f01ac8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5229519-77f5-40bf-a6c9-c8a2f9727a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d25f01-823a-4595-9015-20407e580b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b948d6a7-32fb-49df-b687-3e2397094cf2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a201eb66-ce50-477b-8fa0-210587c10703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff07ba0-bf46-47a7-aebb-0fffbda2d8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bda6c3-282a-4924-8dc6-535920ce0460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0d78ea-2d24-41f7-8d33-d0962068ce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd5274b-21a6-4464-88b5-a0d9518b67f3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a441345-0b53-4417-8918-12bff29ac774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdae2b1e-cc8a-468c-bfc8-e43b70b9f36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e78851-d4a8-4728-bc32-c5a402a1ab4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3fa669-90b2-4d5b-a9a0-ad10afdc2568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f35ee3-9781-41ca-88f8-493a8eb0fc9a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ffa1be-bf40-4128-a751-3285b098f15c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0b0868-9abd-4caa-bbae-8f315584e73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cf1e66-118c-49bf-98b7-0ae86072fead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8a900f-8f61-4666-81f4-4637ea794303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4981b9-b397-423c-91a4-8e65814ad101",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52938b50-a6d8-4103-abea-19f37d780080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f185ae0-c2d7-4ffa-a5e7-4188b1c23bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889d4333-59dc-4e3b-b0f5-fb0f53d2d578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faf6533-12f2-4c95-ab6b-718e55aeeb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195979b-e696-425f-a5a0-ac7b1e878fdb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a98845-acdc-4021-abd2-875644aeca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae78a8ea-1d16-4db8-9b78-dd581b60a517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5a26f6-2aba-4294-91c3-cfd81ccb8cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d399f28-ac03-4345-b4c0-a2b6702f3756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab79b20-dd1b-4009-b065-a855e3028d5f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8c25a7-5858-49a0-9c48-7d94c14e54df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ffa301-8a15-46af-b71f-bd2a483ee3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a86239-9bc5-40b1-a409-f6a088ac5f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb0b807-392a-46ee-bf0b-193e9f0f02dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d8ce85-2693-4aae-88c6-6459c5d82354",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef581d9-9930-4feb-a49d-011d6b14cc71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2366892a-4d76-487c-9c92-b46194fcf8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc60424-90e1-4927-9ec3-a185576e05f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a64d70-1fe0-4891-9a2e-296c785f9bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9122df0e-60e6-4652-9454-9a7eb93ca8ee",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9a5cb5-98f2-4718-8a7c-fabcc3147471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ecbb4d-c441-4b0b-8bc9-76ea4cd97bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8550104-fa43-4c5a-ab32-65cf3ea6dcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548bfedf-2f32-4f28-a600-dd445358444b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dab48fb-75df-493c-88b1-8c5c1a3dc939",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8a486e-9445-4840-b181-87e581f520dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e463c06a-c46b-44cb-9a84-6a23d617039e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78935a6c-df4a-4012-894f-a1df631d9f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12db68d-2602-4d58-b017-8a53e702c45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524e7bae-0516-4deb-99b9-044d134f1f11",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03abdfa3-3d92-4205-8a9e-aa165a0c967d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aca5c0f-6449-42ce-aa13-9758ac8a151b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e578bc6c-94c1-4fc8-bce6-c2e78e4f3359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a7fff0-cf41-499d-8f9c-60f8371efe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712a8e8c-5b22-404e-a13a-3dac44146148",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a5a9f7-8d79-4c89-a1f2-6f4ce91ecbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8ca397-68fb-47db-b892-b0b0a5c7e189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd18884-1bc4-4b22-9fe9-046f99971389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe74c64-5967-4394-82e8-477eb8ff823c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d412dafe-f60a-4b70-b857-ecbdf8072bda",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be4f28e-70b8-480c-bad1-19ba6e2298a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b104e2b-ec5e-428f-9fc7-57920c8506ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b37ea2d-eeee-4bcb-896d-326ec9fd34c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d41227-6f94-4a7a-8967-85dfb03abf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a922b3e0-0649-4550-ba7f-5eb28797491d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4a7cda-9339-41a0-b9e3-6cebc52c841c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ae4a16-7d23-4ce7-b0aa-7b7a27ddcacb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b10271-82c5-4ec0-987d-29ef95c07eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c54d056-b3f0-4108-9bca-3d65b9af35d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b92ed-b9c9-4787-9a28-22d375b652a5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b83dde-a140-4d14-bd80-330b257c39a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89372581-fc8d-4fbb-b24a-40b6389f124e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cfc5e1-31a4-4bfc-aa49-008ab0f65c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d33e540-a847-4ba6-b28e-42ee1655d69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f021b4-03a9-4925-a336-df5555a538bb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8b1fe6-74e9-4b29-a37a-fdb8addab5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d6b41b-c92b-4b44-9926-7d82e14e4596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfbced3-84fa-43f4-83ef-1e65070c6b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959a458e-be4b-4738-b171-5804cdf342a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cd580e-d703-4715-96ca-85950da7abc2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27581c86-467d-4645-8f10-4f9ed02d3297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b7842a-252e-4e49-9982-0aedfcb8e738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4853bf17-43d7-464f-b2a2-d931792c7094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792d0e3c-f9d2-4403-954a-5e63a062a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a326e72d-9697-4870-bbe6-66633473ea0e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b5675a-0538-40ce-b8e8-d2741d40a900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a976b1-7102-4e22-8d86-70789ade5296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c362d85-f571-4acd-a954-5091abb97c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9144f0-e8b7-4ad0-8c02-298719fbbca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df433e4f-348a-4b80-8ec0-ef866469d572",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7748ae-5163-43b7-95da-602c36423d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26cf3ba-f5ed-421b-906b-791ab310aaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3d7865-e1e6-41fb-81fa-5c8a10601467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b812e5c6-3c0e-4daf-8bd8-2e779dbcd824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aef81d-30f8-472d-8153-226213d60ac3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c49e70-44b0-4c18-9dc3-c6bec9d9910b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddb5512-8785-439b-a17f-c0eae0b42a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd936f48-ed26-498d-9b6e-d61258ad8ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf83765-c1d0-47a9-9c16-67d05e4494d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d648471-cfd8-4563-a285-cdc671294850",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82defe55-f736-4e99-afdb-7729ddaaf02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f480e2-d7a4-494a-b7df-a7ce4a52db65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72698c1-22d0-43ab-a592-70a7cb1b7224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfcfd26-1db8-4b14-919b-43cc0238134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f45efdd-b129-476b-83e5-4fe4355956a9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76e8c37-d4ff-4a7a-aa97-679a14ee471b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f092f5-e199-4ca8-b7ef-bea68b0c6a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a7c502-0f3a-45d8-b199-8de6556cea5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499f52d2-9092-4e69-af80-3a45dc2b7f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee536d95-d5a0-4e04-91a2-665678326889",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03b43a8-5f29-49d3-82c1-acc51b92e7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d852ab4-4693-4d9b-a84f-00e7f599e5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220c5ed1-39ec-4b14-a6ad-d2ca2719e0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0efab89-57ef-49a3-a071-09b3c56b2206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28761f1c-f907-4cfa-a6df-623229000c12",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff2a2b6-a5a0-43ce-9df4-d3c18f6639a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28baa458-2ea3-4fad-b5e3-22b2297a41cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a96525-c2ee-49e2-a03f-b95f1d7136b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43b9688-0f8d-4b8b-a714-b13f2c4636fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5c81a8-c276-4ad2-9f2d-b228cc3e1eae",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184babd-78cc-4c6c-ad7e-b93059811926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb9d8f9-d999-4392-b15b-1cbb3ce62c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c479a4f0-b976-4a78-988a-ffe97a0dfe18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66bf79b-1b44-4752-9ee1-d3c8ffa5354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05bc8f9-379a-430f-8b7f-5f8b9b8cca98",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2cc7ad-6cda-47d2-8af8-242e895ed876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262345be-8d60-4704-ab55-eb819cfc72ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f7e713-001e-4479-ac1b-9b8823581cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588f6a9c-41e4-4c14-8e3d-38a9913ac204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756a2473-5295-45d8-99be-bd3beb135d93",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4748c72-6fb0-44ee-b108-9af766efc5f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009833ec-3aa4-4cec-8515-ed1093afb543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfb81b0-558e-4fb8-9fc0-04bccdfeb7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac9ef32-6937-487a-a5c2-c6c87951a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43baea38-4307-4780-9a82-274eb6927967",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afef115a-b11a-4ba3-bf33-88842c91b786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a750dfbb-14c5-4794-8530-a727b5008f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ce334c-f6b7-4ead-b0fc-b96e09c675af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00739bd1-9a43-4ad5-9bbb-15c92bd59cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304e3469-2f95-4347-925e-6ba1758e66cf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e0d681-cd83-49cc-aeb7-227b137b195d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e157c0-bb48-4589-a686-a8d7aa83b559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c45daa9-3def-4122-9d1c-cd95eeaba139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b11d2b-d3f2-4ee5-8f58-aae71a033285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a7ba47-19b0-4f69-a45a-285850af1a7c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdccfff-0e41-46ae-b6fb-d57c0b0fe9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f82fbb5-42b5-47f1-a3d2-f7c0c7ae4ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24209fdf-0620-4041-b5c6-52a5cb6683ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37c506e-0fe8-44e8-9891-bfc8a86d8c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca46c36-9569-4735-9b8b-0072754d3a2e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510dde6e-e021-4d20-a5cb-8cb35c45859f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2724197-9ed0-405c-9443-7effb1df145f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18102db-e843-46dd-9ad0-834780adf7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f26e58-a958-4d04-be0a-71c748caf88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c3a94d-ac90-450e-bdf1-c0cd16b6dc64",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955db0dc-49d1-4e32-a09d-22dd7fb0118a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287221c1-baf7-4996-984c-0c087dc6b757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275ad26b-c1fa-4cb1-be84-e81ac3f64708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec20707b-0c32-427a-b706-d2e184fd7a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd93324-1856-4d5d-b2de-c712dd7f8d72",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b89ef4-91a2-40d7-9bf6-a50e02723d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e6aa88-2629-4a87-8741-976b886c3f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81e338d-8ede-491e-8bad-12c37f819e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d864c911-ad42-40aa-a6df-403e0a9d3320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f00ff8-42c1-4e3f-9906-3d7ab103f82f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f512c74-8d46-48c4-9f4a-df11114f36c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056fb20b-0950-42a0-8fa1-554e3152ab02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2bde97-afd2-4684-bdd7-7f428680ecdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94a095c-fda3-433e-8186-ec96d53f4d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fa1ef1-1958-4195-b5a7-683e8ecbb3da",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11712745-1c00-46b6-ae64-6bfb7dce805d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c611cbd0-3ec3-4ab1-8b64-a7cbad8e93b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d2ead6-c398-4401-b9bb-0649ce29a7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de097f46-be0b-4f75-b695-e3fe595aab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce690b5e-4df3-47e7-9829-1b96b056b7bb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb1523c-9bbb-42d8-b4d2-4a77a27f5d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4c804b-99d2-4bdd-9e1b-0af431ebc2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f334a0-5b56-4849-a4bf-96a57fc56f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6817bfee-4b02-4016-9789-d8f8bc5128a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2d8db-8619-4bf8-8b54-e79c7595e07e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf32f059-5f68-4ae4-a00f-df4caa80164b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52af1309-748d-4236-b7ac-6b9dd0a9e98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9655c73-9a87-4366-b00d-3387feec0c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc2adb4-f344-4b4b-b7ec-eb4583c2e64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e3aedc-7f81-4c41-9adc-b7eae634be63",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85c79cf-d87d-44cb-bd99-ca7ad0882ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c5ff8d-9644-4509-98c8-e5f5cbdef73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41acfea8-9445-4780-bd96-0bcc40c6c3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e30d821-8057-4b3a-9476-daabd9dfeb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8543acb6-3492-4b75-b916-66950f9f465f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57281479-dda6-46f4-b665-eaf612e7b1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b003d43-528c-4dc7-8228-bf5c4c7e5b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd034fb8-3d7f-4c0d-8964-ff19b39611e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea271074-8087-482a-8c2d-d4a92fd50db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d238745a-0562-40cc-90ce-9129187730f6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4cd221-404f-499d-a02c-b52f54064025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe686f1-4010-4433-8208-19c39e0d9f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bddbd8-6d53-43c8-8907-b0cc2c0b1735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c629b1-ffc7-4f74-9285-9374bc522968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6bee41-da67-4eaf-ab34-a8d0f1f640cd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7728e2f3-5be0-4fdf-8526-db506679af82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269af4e9-a4d5-4ed8-b9f9-5899fea614b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72682ba3-e3bd-4bd4-995b-41738de05293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7df975-c234-4333-91ad-5ed46f20407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d2f744-d4f2-48c3-b865-1c531125386e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64d3f76-e942-432e-a21d-28e8e83b9139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ff8b32-8385-4561-bc90-0ea3c13f60ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff980f7c-46c0-47ac-ba1c-d980422b633c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6d0698-65dd-425f-936b-d9194680070c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe70f27-cd37-4508-871f-0aeded44d454",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d770fa01-34cf-4e12-8ab5-a3cfe0a934c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d870f0c4-8d7c-4241-9e1a-8dfc3d7fe3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490323de-2ade-4be2-9346-6a002fdeacc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26c05d6-3340-42bc-a51c-83464b4db1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5335c4-f52b-487a-89a1-84b5883ec524",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126180ae-cc48-4469-b663-8d4c217ee32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7965e8f-c2cc-4364-905f-03646262b5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1084ae-b2cc-4a88-91c4-a2be7d1c464f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d520bb-f7f7-459b-bd18-6bb17bf08bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c902c01-502a-4b90-83b2-0a7941f8b1e6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d9a67e-df71-46f7-bdc7-98cafaf772e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5abce6-ba02-43b9-a3e2-8def51518ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7936ff3e-f6bb-4b6f-a69b-c2f0e4116ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f18ae5-3ffd-433e-8b8d-39f973fa4654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28caf591-1d4a-4d7c-94ba-779844b79e74",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2635dd-637d-4769-9797-6f0b19f5b990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d481ca9-ff77-481c-899d-e397ad966794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a0511-6752-4737-8829-5946d19d96c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4acf389-e8a7-4de8-a89d-e4e59a09da64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad668a-2760-47bf-aa6e-5c91ef927511",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd506bb0-ae20-4316-9159-381d33d1c9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a05fb2-6bd9-4929-ae76-274077d76afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92973a0-89b6-4c6f-aa29-a05933efb49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaf550d-0077-492c-8d76-f033e445cd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b09ad-f105-41a5-8f36-67b70e1dbea2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f38cce-e3d3-457e-b0b3-682e241fab08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f237ab24-2ad6-43d4-bf9b-94c3569a9c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7341a4-77b8-4445-ad80-aad744254f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de9ae67-f829-4d94-8880-e7e3064176c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afe2039-a48f-4876-a356-af4c12c2a726",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de69c68-e7ee-4503-86eb-7a9ea8241217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ade06a-aebc-44ca-b501-dac7469b67cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d874ea8a-5ea7-4f85-acd2-25e3ab08410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1000c4-e303-4162-bea6-fef0d1c7f921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d714ff-36eb-47bb-87ca-5d5fb393a38c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c74fe31-c582-40d5-8ecb-9c432b716104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c9e96d-3c25-4a78-8b20-a146d08de876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c395c48-1c92-4d84-adc4-5e919965d80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529bd5bb-f2ee-49f8-a84b-1f7189ea5627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4772336-e273-4faa-a70e-129850d9e36b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f072d-649c-4a75-94ec-06c75a78a983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e019212b-ab36-49f4-a00e-81abe67eeac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411760c2-398c-4832-9cbc-9ddc44bd7988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fa2310-f16f-4420-ae94-402973984b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df908ee4-753d-4eae-aa34-1514c03e3251",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2851ea1d-5e8a-4555-b465-9f50dfce172b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f022af2c-9838-4a96-aa08-4c4d8e345d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6837a971-7aa4-4a26-87c4-030b3d845fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c5a575-e617-4e70-97f0-79965bed1a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfc46f7-c3e9-42f8-8755-03ee1258c6ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541e48ac-d356-4750-8cba-6be4d19f543e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33b4519-280e-4a2a-b175-21f2a3d9e201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1bad25-ed65-4402-b1cb-4cdc099a9e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f91ff64-31b8-4538-a8f6-bd94425c6493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faf98f6-f991-416c-a039-66d904d4b883",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd6c1aa-2ff1-4f1e-adb3-0047ef5386a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1382475-5354-41b8-ace8-6977de60e6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abb027b-f71d-469e-bd32-643b2cd2466f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91334520-8e36-44ce-9561-4655ce456232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbcde45-c04f-4906-93d6-3880c62b5769",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc31f0e-ec7d-4fbd-9f63-972645c29baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2c98d0-28ea-4f9e-8190-c67ff4699e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a46cfb-aa4d-43d4-8203-e8b74083a311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869e2ea3-104f-4b58-935b-4dc291c503d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9685ef-b05f-4fc1-ad3c-bb39b0e117ba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959a0552-6987-4702-ace2-411bcafb7a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a967d22c-f84d-4d8b-9962-c1286dc4bbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c09eb1e-ac38-43c5-a105-55d561f772d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831e186f-d8b3-4fed-80fd-7afae1c53044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb67b17-b204-4afa-8f44-a5d6c07b2036",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486b6031-3162-468e-817a-d9a43868e69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bea3db4-36ca-48f4-ae3c-60229f8d4357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b1ee9-05e6-4e6a-ba92-c2e40d611a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bf0765-0ecf-4529-b9de-917ef135242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf32b32-678f-46c6-8ada-7e816fd5e935",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e123884-b3d6-4972-bb4f-88a1fbb0ed25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad46509e-e825-4df1-a76c-99ed00a31518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3651e25b-1ee7-44b4-95e4-0c1341221b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708454b0-8497-4909-9ebf-31d59162b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5bee09-f998-4bcb-a066-42fda6c33f07",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f755e3a4-ea8e-47cb-93d9-afd900be26a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da4ed5b0-affc-44b8-b94d-1c0ab93cc84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8d0eba-3e82-4e3e-892e-f82835822701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db1b34d-8521-4949-8ba7-1b362397cde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5b17cd-6c59-4fa9-a088-cc89e492b80a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debfd90a-1c2a-4649-aed8-13aab033da01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e97200-882d-49f7-9447-6712ed930f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9fe43b-b822-40e8-a80c-bcab51cd3694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48df4a9-8394-48bc-828e-002dc954889d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5e6b40-a0b2-4677-86b3-c3c6832cafa6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5b00f8-e320-4a6e-9479-6de7d07c0db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff170e70-7f5c-4ffb-bdd7-4b49539b57b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38ef5e6-fc3f-4823-9473-4cd52ad2389d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5b500b-8be0-4303-b9e3-b88bdf319cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ec14c5-66b9-4123-97f7-2d88c871fe43",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e195de22-83c2-417a-9426-ff897ac4eb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd73fc80-8162-4804-9367-2558c5b67648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354745cc-d42c-4b5b-a015-210e2774e4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc92aa5b-1495-470e-be03-adea43c66a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc5fe65-061d-42e3-b6f4-734747cf3ca9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4554d9-9dde-4e89-ad76-00e45eb98dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3638784-ade2-40e1-8889-a9f58a06ab89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a149ebcd-33b6-4f78-9e2e-57af26968c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cb3674-b642-42ea-a096-0c6d3e7422a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25afb2a1-f22e-46f7-ab78-d3d3bd1d8fcc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeb5689-645d-40b2-a3ed-8b9b15e9e684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f2b974-3f1e-438e-b479-9bacf4dbe694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3714ec4-87eb-4d21-8b9c-5b035d129e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab7e9ca-d7ff-4138-8af6-3e465dbc2857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a895d0-906e-47aa-8628-fd2996a0d788",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c9a4b2-8908-414b-af68-c9b93cee330e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1eb9c14-8060-419f-b2be-b8662ed559fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc588ae8-e06d-40e8-91aa-efcb0e906629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37542fe-4196-4d10-a52a-14752862d4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7785369b-6fbd-4669-97e2-1579bb585030",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f50a177-2c39-48b4-bb1e-19da332fb727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31dbba44-a6fc-4e31-b64e-cddd83361658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef493f1-8b5f-4a32-80c9-7f7f264c7a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ecced9-0a2e-4312-b74c-94ec6176db7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b47f51b-9f41-43a8-a0f9-df998923a5dc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d94df3d-bb38-416a-92fa-056a6e9cf5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44043c83-fb25-418c-afe4-ab3675c1a30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5254d175-587e-4d50-b0a3-ca59e7b699a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155dd61d-1591-4fe2-a1ba-4c98f8ceb64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ababea-78e1-4215-ac34-b2d39a0741cd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dceb0a9e-32a9-45cc-85bb-579dcafafd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba834879-5f95-4d84-ae40-dfaa9a53ed41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c71c98-ed09-4032-a41b-2a1a62e840f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1506b4d6-81f7-4f12-8483-af415046d2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4b2ea5-d64a-44e6-a9a9-5fa8a00639dd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31429134-10ba-4351-93ac-88c83d3afdf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f8de56-a358-42bf-8d67-a164c4026490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a280fb68-c617-42d3-bbe8-dba93b7a64ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8567069-aa17-464a-93d4-bbf5c1e26b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ad8f67-7daf-4c7d-9186-67f95fb09b59",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e902459-3b7f-4338-a596-cb4184df1b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3986f2-450d-4b69-8e77-bae0cf6847d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedf249c-5d26-450b-8445-e4877b405c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a1e718-12bf-4c71-b825-9f2f3e9d0d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6d3918-dde2-4e16-8b19-0394a943b02e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c854b109-7414-4898-9a2d-b33f275b343e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3926a7d-894b-4160-b4e5-ac863d9311a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28c8e98-6091-457b-84b0-21d177e40f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aae3494-624f-451b-9e88-c1860dd9b8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cc115c-79fe-4e37-bff7-d39192988dc5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0900830e-ae1d-4de2-b9b2-19b331794813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0792f00c-0b1d-499f-9c08-2af82c07f525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa0dc26-f233-4c76-bb17-53d113b7697d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e0e180-c79a-4409-a61e-14a384b35868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af5270f-760b-422c-a507-78e725ab0d34",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9271a2c8-6dd9-44d6-9e42-30cd5605bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041c82bf-d9f0-464f-a2b1-8ca785d14e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c678487-fa2b-4bd6-a884-88d64e4106b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff083ed4-1991-42a9-85c4-7c80555da23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ace7da0-eb11-440e-8d52-d4775f96dfc2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4466c4-dc39-4cf7-b804-538d5e1b486a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b7a834-1c95-4c20-b891-fa1b870c730c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceebfdbf-8cea-43bb-877d-a3b0445fc890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46719e51-c08c-4ac2-8aae-42ac6e4a99cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f33f23-eaa2-4b02-b6ce-711ddce680ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d20a34-17ee-4ac2-912e-173925919bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0920ae93-99d0-4ca7-8b14-448154a93963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb67fded-d4e4-44a6-b5ff-db6222993f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c568c73-cb74-4362-91c8-fea9a59a0314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40084c8-2c1b-4317-b56b-cecda1195894",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07676e0-75d0-4d25-b057-a047422a1630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a071de9c-ac42-44bd-9259-2dc4b669540f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd026222-fe16-4d8a-9e68-23a90eb45db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529db3f1-7a47-4a59-83b1-9439abbee077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b70dd19-82a6-43f8-9f02-df71744b4c35",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b66d44-29ee-46fe-aa35-a5bd232f800a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5446b73-c9d9-4bb9-9ce6-969f06c3c7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52749fe-6fe8-4781-a35d-e75960f8a88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfd8bef-e8e3-4b7f-87ab-f1de7ba777a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93282275-ace6-4619-8e98-5ac3c2bb5967",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3154f670-e84d-4c7e-8a1c-311af640735b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b84255-dfa3-49f8-abda-85c6e8bbb018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c61caa2-9389-414a-863f-ae9d8e576b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145dab7a-2b53-4117-a048-5baf901d75a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e5e8bf-4fae-466f-b16d-df27e30b0f8d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634c9f94-0e1a-4abf-a957-7f549402e7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5d06d3-1504-4719-8b09-fe76724253d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467d9a57-5344-45a6-b292-768dafbdd71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c389f6ca-5e2e-4bd0-947f-624fc78d6745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf644850-cddc-487e-a67e-f41606063e50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70608995-2a59-4645-8a29-0d0a88104a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df31005-4877-477e-8399-ed81d74cb571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61b53a9-2dbb-4d53-83d8-2f73f89df259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e75a60-001a-4a11-8364-0c4c25df4300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f91ce-7b93-4cba-93de-ae0b3d1ed247",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac375c8c-ab51-4d4f-b200-d237862fe8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8979c1ee-0dde-4fad-9547-6d2516f6fd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b66a9aa-82fa-49af-8d24-e1ceeb523495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07bf458-4125-4901-b991-c753064ab340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81955c03-0d85-47c6-951f-4ecec718fb40",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a6dc6c-cdf2-4701-8da3-80f9e9fbce0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cda429e-3246-4d77-8341-90a20c397511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04da947a-c4f0-4599-b81d-a0fd60c4218e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53a96c8-cf2b-4672-a1f2-483b805fc410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e272fdca-61f6-4fc3-80ba-a28cc4e54b6e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf3d691-59b7-4ca5-ada2-7a52d72026e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2c4034-9062-4fe1-ba3a-16ae1a14a035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0056a9-9593-4b60-8590-7d9d2fb0c72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b009bd6-cacd-44da-b463-2342b12a2821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a514ca4-2287-4dbc-bc3a-fa05c3db829e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6b7944-4067-4236-929e-3781c56bdefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d759c533-a462-4055-95c5-fbd8e445f681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41274965-fd76-422d-9cfd-de6b3348e0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2f433a-5c26-4c41-935c-ed48e041ce43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8f3110-262e-47ce-a18b-d74ffa6e5a7f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccd3602-46f9-496a-8e98-5d46d7cc3428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664a309a-e4b2-4716-bb47-a0b079d67d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50abb709-9073-46bc-8e51-02cc42cf0911",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36f1afd-a30a-4b02-b81c-913d3b79f9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae31cb8f-2d12-447b-8bc6-0fe4174f6ec3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7060f2b4-cc1a-4f6a-8285-2598090338ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f044b7fa-a207-42af-87c7-b7ea22436fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5047bf08-d5f9-4b14-bbf5-ba8a1006852b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7562c5-0d0c-426e-8866-bf70ffc185c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a08e2d0-26fd-4d40-b179-7803573c3dfd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4f6850-3690-4b0a-ad94-41165c44d741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0da945b-2a95-4fcc-9115-d0dd16e9a1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91c3e1e-68f8-4400-a2e7-c3146d3109e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6041cf57-e43d-4985-890d-2186789edeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6255ae1-b63f-461c-a90e-3dacaec584c4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33881b5d-86b9-4e28-b51c-406ffd4837e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5749fb71-c7b5-4415-8015-fbdb41839d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a204c0-8783-47dd-93e1-e2005ba6d18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152b6e02-e100-409f-83bf-7b1f313c24d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba358d5-be73-4e41-bd50-394a1d846f63",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936233da-f6fd-4908-a517-a32969621a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6feab35-2683-454b-b984-0cfaab81e5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7de45bd-fe11-4fea-ad39-6b086b181ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f3e372-caef-4a36-b8f2-a060d3f340b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43907053-4fe8-4497-adf8-f8b0f84c611e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfa533e-a26a-4a14-9aeb-54ea06cc5675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6f119d-40e9-450e-98f4-f59b2aecb0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2a94ba-d499-472a-a0bf-921decb974b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64affe75-14ac-49fe-a4f2-a8147e55ce95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac3bbd9-7b76-47ee-bc2f-4d13ca4864fd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7035e355-e642-43b5-ae79-0c38478cfa8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0c0bca-7780-4696-8873-788bb6a2b0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e016a6f-3c38-483d-88d4-e808a73c9e07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c8861c-b37b-4065-b66c-0bcea76ed0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0830d20a-a5c2-409a-a6b9-c4b8c8e19155",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be423788-ea62-48ab-9425-23329888cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bf1bbd-6ddf-4938-b471-c3295c25a24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc29e1e-7866-407f-ac65-19ccbc97b37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e821d924-abc7-49c7-bfcc-136422d1c4ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f54662d9-2e44-434b-a381-31cb7480be0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce9c44ba-1e5d-4de0-8842-caef7380d562"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6cbbd40-55c1-4cd5-addf-b195876a11dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cee21e6a-b273-413c-96cd-af449cdea032"
                    }
                  }
                ]
              },
              {
                "id": "ed3cec4e-bd8f-4bf4-854b-954068448d17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4240815c-2313-4d2c-91dc-e9fdd0d68fb6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0bd36-2c3a-41b0-ae8c-8a3f500717b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d52c139-a661-470b-ae4b-620fcc5eee6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2328c882-caf0-47a6-b630-0fad227bb361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c74e1cb-b05f-434a-8f56-23f7a2428225"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d6e6f4-6d5f-4961-b406-8234d137b57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3aa6d36-72ab-44e6-8a9f-df07b62d960f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63eb2dfc-2307-4f05-abbf-1229db5fd31b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e984a40-84d3-4a6e-999d-0dd487c626d8"
                    }
                  }
                ]
              },
              {
                "id": "b466f58b-d5b1-4bb3-a95e-2cd94e0fa615",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "580150f3-1eb2-4af2-a17b-8739ce76b67e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99e3984-02b9-4006-af5d-699d9259204f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "74b47d4b-c453-4fe2-98f5-cad0a9c44176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5efaf4-de81-4264-97d1-4e7799087b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fc8444-96e4-4f9d-84b5-26dbb01aea74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "237e665c-5347-4228-bf7f-4dafacb102d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92a578ac-4ee4-47e9-b301-2a547c3d0a1f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a441f660-6514-4728-8840-22b88c038006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47291d0b-6a5b-4a2b-9439-df53b98f1fc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e846f96-4022-4f87-ab89-64704c1bcde2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f59635c1-eb50-44b1-b731-cb2efecca8e5"
                    }
                  }
                ]
              },
              {
                "id": "3a484ed6-475a-48ba-a9bf-729ad25ec2cb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfc1ded8-6850-4248-ad56-59fe7f72c0fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7277fa21-a062-4d66-82e9-31bd76ce2414"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e0ad669-6f72-48d5-8a10-70bf71c29350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b22b675-1011-4c18-b686-0dc90b8183a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b14ad4d7-0fa6-43ef-8bd3-796b9546e824",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c658baa9-c8b3-4c85-8e02-f85a1ad0ae7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de39c0a1-2471-40a2-8594-c1d009cac043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3be93b26-3426-4086-8dec-c63b2176874e"
            }
          }
        ]
      },
      {
        "id": "2383f7a0-85a6-4945-ac85-9ce70b4a04fc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "97d6f20a-0fca-4cbe-9093-c185f948edec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfb685a8-bb44-4d2b-ba64-d4f973cf7a8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1d92dff-6cad-4c36-9890-85732cbfbaed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26b44d-058e-46e1-83bc-a84fef921d67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21c155b4-eaae-4a78-8f5f-07da240000a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35d6909-5fac-4e6b-b200-7f5291386815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eca04693-a323-4abe-b5be-71f0b5704b4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "098b3c4e-5b0d-4dae-bbbf-593ed6be4a3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebfcf7a0-5b7e-416e-bb16-19a7dec9d747"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa66c9d2-6662-4c3f-a198-482958cfd7c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26804027-f220-476f-aa8a-fd1c6197e0c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "718a7b42-2186-4fe1-8929-dc38ec56ba98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8d43ade5-a4df-4c4b-9f33-9e3b722e1d4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7f9c0d2-d7f9-4723-9539-f618dd03658c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0430f885-43fa-4208-8f94-06648965cad2"
            }
          }
        ]
      },
      {
        "id": "c9e4b334-4b69-43fb-b31e-d5ed0feb7b3a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a917927c-029d-4f56-afab-ff07377d18cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b458578-5bac-4a04-91fc-54cea61beebc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cc68c11-faa9-4975-bba8-45afffc2f4cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa5ec5e-67a8-4cd6-a9b8-777af9b4e61b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "620d3281-480b-46e3-98d3-f9067252f551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6f8f81-dbc7-440c-be67-05a1ff89ca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87868348-4f3f-4f73-acc2-30542aebbd6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "848e5538-34e4-45a6-b424-a93eafb6dabf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bd8333f-1c71-4ca1-bd33-878c8b53202b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b903fc7-0e48-4cdd-b677-3e4c9933083f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e189acb4-cf01-423d-92ee-92a5e7d35905"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35af688c-6a14-455e-ac99-59985b46edf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24adc1c4-0c36-4aa6-98b9-127b2b71a387"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c166833-ee9e-48a7-adbd-459116ccaf7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d86088c-a22d-4bf9-ac54-fade91c2e797"
            }
          }
        ]
      },
      {
        "id": "cbf2716d-84b9-4b7b-b1ed-567236337eba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e78516b0-6f90-4b98-89fb-b63446cd6a7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f263c9cc-1af8-4c92-9342-6ecefbadc327",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2998184-ff3f-41ad-a758-1d1bdce64609",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f7531d-c284-4d52-b936-c1ac300fef58",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59bfe447-197b-4e3d-b3e6-a305fb771291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedc44b5-af58-4411-a9bd-2b9baccd0fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6857baf-a88a-4048-a24e-75139400e250"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce33b356-aebf-43a5-ba76-404d779bd28f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57891c3d-16f8-4a74-8618-5f5f55cea770"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e4cb20d-3b22-46ea-aee5-7faddccf1342",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "731c305e-49eb-4341-9fdb-830b8851ae02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdc72eac-91d4-4e64-81de-1df1a23a04fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "181c1208-45a7-462d-89bd-945dd15d93dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7d3f339-e41b-4daa-86f8-12fea7adb2e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7eea269c-13f9-4475-b49c-eabd591858ad"
            }
          }
        ]
      },
      {
        "id": "3a70e9f9-1c37-4056-abe6-d2057b7c06f0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a571b4d2-d939-4551-97be-abef29c97473",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d030c46d-fb37-45c2-96d2-02df4543b4db",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d78b59ea-8db3-4af6-a3b7-9ff3536d3bed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9a84e62-8b5c-4600-afe2-3bf1c58a5b1a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82bf4ba8-9ccf-4919-894e-d2cd2cebfa9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 354.6514084507045,
      "responseMin": 20,
      "responseMax": 8925,
      "responseSd": 1073.5067658712062,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692232273898,
      "completed": 1692232387259
    },
    "executions": [
      {
        "id": "998f126f-c6a0-4fc6-ac87-1f3098ff94fe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bbc77dd8-b53d-47cd-9ef4-5ad2452ac3b0",
          "httpRequestId": "e68de75b-1a83-4012-94da-977b08abfbbe"
        },
        "item": {
          "id": "998f126f-c6a0-4fc6-ac87-1f3098ff94fe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bb49f100-8324-45b4-96c0-b8f70b117737",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 0
        }
      },
      {
        "id": "af29d3f3-ac9b-40f9-8188-e55bdc33b002",
        "cursor": {
          "ref": "ec02e96c-6fda-4308-91c8-cf49cbb13041",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf341c58-11cf-470b-b305-56971ae17d5d"
        },
        "item": {
          "id": "af29d3f3-ac9b-40f9-8188-e55bdc33b002",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc8f107d-6fa3-4ffa-9ca4-ff466db84551",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "3d287879-e277-4f79-9c12-e9fb7a9c65a5",
        "cursor": {
          "ref": "d8c09392-054a-44b1-bcec-1cc2a66d40c0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a435a9c0-1b81-4ab3-9ec2-7f901b3fc336"
        },
        "item": {
          "id": "3d287879-e277-4f79-9c12-e9fb7a9c65a5",
          "name": "did_json"
        },
        "response": {
          "id": "df347dc6-8398-435e-9b43-ab3f05a3b308",
          "status": "OK",
          "code": 200,
          "responseTime": 1702,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d1eef7-7154-4698-a7bf-2e200c9fc47c",
        "cursor": {
          "ref": "b241c283-028f-49b9-9211-3f82407d4aec",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a1563d7-5506-4be7-a6f1-71a14a1eb78d"
        },
        "item": {
          "id": "d0d1eef7-7154-4698-a7bf-2e200c9fc47c",
          "name": "did:invalid"
        },
        "response": {
          "id": "40f559ea-b853-47fa-95ea-3862dc25dcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d1eef7-7154-4698-a7bf-2e200c9fc47c",
        "cursor": {
          "ref": "b241c283-028f-49b9-9211-3f82407d4aec",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a1563d7-5506-4be7-a6f1-71a14a1eb78d"
        },
        "item": {
          "id": "d0d1eef7-7154-4698-a7bf-2e200c9fc47c",
          "name": "did:invalid"
        },
        "response": {
          "id": "40f559ea-b853-47fa-95ea-3862dc25dcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52964835-1081-4565-ac4a-ed1e6a694486",
        "cursor": {
          "ref": "be89d8c0-911b-4204-be38-cf72ee502c17",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "150b9a6c-5502-42b6-9dfe-bd295417438b"
        },
        "item": {
          "id": "52964835-1081-4565-ac4a-ed1e6a694486",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c775779d-6d45-444b-9be8-e6d6dc56febf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 498,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709b228e-1874-4313-9089-1184824fb1ad",
        "cursor": {
          "ref": "67d721b5-cae1-4c74-bf31-99ede752dd0e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c630bbce-b895-4bdd-9de0-ce34c7298eff"
        },
        "item": {
          "id": "709b228e-1874-4313-9089-1184824fb1ad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dd87c77b-2cea-4677-a1db-38db9efe7f58",
          "status": "Not Found",
          "code": 404,
          "responseTime": 252,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b006c5b7-1319-4be3-9890-8ab4bf85ff25",
        "cursor": {
          "ref": "8d550b43-dbbf-4354-895d-6f79e7c05549",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7503dc00-7c8d-4123-9862-e723f2388b64"
        },
        "item": {
          "id": "b006c5b7-1319-4be3-9890-8ab4bf85ff25",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3af60b2e-c0eb-4925-a527-c4588bbc79dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 91,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e024a704-79e6-45fb-bb86-0beeccc29a36",
        "cursor": {
          "ref": "bb0ae3fb-958c-467b-8994-3d2e55e5b90d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47671393-c4c7-4d77-a150-2e1ce9a17bca"
        },
        "item": {
          "id": "e024a704-79e6-45fb-bb86-0beeccc29a36",
          "name": "identifiers"
        },
        "response": {
          "id": "7e13d038-fd13-44bf-9be4-f09e3a15b14d",
          "status": "OK",
          "code": 200,
          "responseTime": 1567,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29818481-2ca2-4cfb-9f3f-7c6ae3097ab0",
        "cursor": {
          "ref": "6a250d08-0b3c-4116-88c7-5b8ff0601bd8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3713705b-46dc-4958-9fa7-ba0e0b9abf94"
        },
        "item": {
          "id": "29818481-2ca2-4cfb-9f3f-7c6ae3097ab0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "36cd6135-ae33-43d9-b8c7-2955274e6c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07768ab1-0eba-414e-988e-53da47496521",
        "cursor": {
          "ref": "34abfb0a-257c-4a2e-8d62-730906d1f9c5",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c1c403a5-57d8-4cf0-8e96-bfac7441cc1a"
        },
        "item": {
          "id": "07768ab1-0eba-414e-988e-53da47496521",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bc005fd4-0a7d-4de9-861c-b1a6e28c7a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbf2ea1-8a99-417c-8930-fa1c2db6891b",
        "cursor": {
          "ref": "354be50c-61c2-41bc-8b97-abd4e67dbca2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b5eb5dd0-5245-433a-9013-7b8373529230"
        },
        "item": {
          "id": "0cbf2ea1-8a99-417c-8930-fa1c2db6891b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c6034d6a-180b-4664-ac11-2ac8b8d521a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aaf72b5-39ec-49a3-8919-2330b183093e",
        "cursor": {
          "ref": "783f8470-4d43-4edc-91a8-66a8c25aa584",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "32046680-9531-4b01-af15-2afdd889f1a4"
        },
        "item": {
          "id": "2aaf72b5-39ec-49a3-8919-2330b183093e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e4964af7-6d75-411e-9db8-8c9c30e8a820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f262cbca-e62b-4325-b7a7-53799c768086",
        "cursor": {
          "ref": "728f4ac7-fa5b-47f6-9a72-a220967f96e2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0fe729ee-bb51-419b-9afa-29102d94fc37"
        },
        "item": {
          "id": "f262cbca-e62b-4325-b7a7-53799c768086",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "97cb8895-fc94-4244-a0b4-7f90fa8e429a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac41bb7-fe01-4d61-b1a8-ae4d27aa20f6",
        "cursor": {
          "ref": "b90d8cf0-0b88-49a4-8aea-a9f73e6a54df",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e5da83c9-6d44-4786-a524-1740a0bc6a5f"
        },
        "item": {
          "id": "cac41bb7-fe01-4d61-b1a8-ae4d27aa20f6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "da23cd6d-63fc-4048-b939-6286440dddc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7e2c1a-6aed-479d-b240-f3c37d8b9ea8",
        "cursor": {
          "ref": "8937fddc-c534-47ed-839f-c9e12023e1bf",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e8e1ebf4-65dd-48a7-b6b3-5e1c177f90c4"
        },
        "item": {
          "id": "fb7e2c1a-6aed-479d-b240-f3c37d8b9ea8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5a7d3366-8aee-4d2d-b27d-879aca80367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1a3e52-41d6-44b9-9b13-bf4fedf730bd",
        "cursor": {
          "ref": "2c30ae60-3d92-4654-8b15-48dcb4dc5ff8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7ce690bc-0e5b-4dd2-99e8-804181bed9cc"
        },
        "item": {
          "id": "ea1a3e52-41d6-44b9-9b13-bf4fedf730bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f453222-4dc6-4997-b348-e6ed7259d64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b33168-5d37-45b0-aa77-170ad0d5b052",
        "cursor": {
          "ref": "2569ee0a-c701-478a-b30b-acab27057c56",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1463930b-2bda-4cdb-b6ba-2137aad1c151"
        },
        "item": {
          "id": "69b33168-5d37-45b0-aa77-170ad0d5b052",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ef1be88b-8a37-4e33-9101-4e2dbcd9ac44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1370d60-7b54-4c90-98c8-8d9da6fd1215",
        "cursor": {
          "ref": "b5a23e69-60c8-460b-8c20-737ce8f03bba",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "15ed9e99-a663-46e1-a1d7-97bd2fc57764"
        },
        "item": {
          "id": "c1370d60-7b54-4c90-98c8-8d9da6fd1215",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d5865362-bfb6-4d60-ac85-25809a6b9064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4070f3bd-1a2d-4e90-96d7-d3645c2fb1e5",
        "cursor": {
          "ref": "3b37eb58-ed11-4837-b262-46c54d2cf2db",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a51ea45b-34d4-4deb-a222-73ad09189458"
        },
        "item": {
          "id": "4070f3bd-1a2d-4e90-96d7-d3645c2fb1e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "198b5a8d-92ca-4fd1-aa03-5b0914f2de3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f57247-5f72-412e-a361-50af7ca31eb2",
        "cursor": {
          "ref": "7b905671-f420-474d-b00a-3511a2234e1b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "962fda85-aa81-49ef-aa49-3289b4dbfee2"
        },
        "item": {
          "id": "75f57247-5f72-412e-a361-50af7ca31eb2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "14857c4a-0f95-4939-a25b-41cd35a4cdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1025924c-d8f6-43ec-bc65-89b71d2f9745",
        "cursor": {
          "ref": "df54d49a-913f-4b47-87b1-3a8997bc6bc4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "45dacf2f-3c45-41af-9118-cee840ba770d"
        },
        "item": {
          "id": "1025924c-d8f6-43ec-bc65-89b71d2f9745",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "24fa05a7-4971-4e1f-9119-2128d766eea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2f01b5-db05-4486-9c34-b1017b1dc4ae",
        "cursor": {
          "ref": "4204c3c8-fea2-4437-a987-08be79ed835e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0c80853e-903c-48c3-9ed9-44576bb0c296"
        },
        "item": {
          "id": "ba2f01b5-db05-4486-9c34-b1017b1dc4ae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ddce37c3-e9a4-48c2-b092-ad434b360ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71abd463-5c7e-4908-956f-da353cdd62ef",
        "cursor": {
          "ref": "a5a42bee-0718-442e-9e9c-643938651b43",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "071144a9-2e71-4d31-ac87-a85492005a27"
        },
        "item": {
          "id": "71abd463-5c7e-4908-956f-da353cdd62ef",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "31c4f741-97f4-4c2e-8015-7fe5bbbbdf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c216505c-7c8f-4956-a1cd-dace399b68b3",
        "cursor": {
          "ref": "9af72d99-733d-4670-a069-9cd093477281",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8dccd09f-5c87-4816-a271-47cae0d54641"
        },
        "item": {
          "id": "c216505c-7c8f-4956-a1cd-dace399b68b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "506085a1-b117-409b-ab3e-31ca2b4a4b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc8e683-2f12-4d9c-8403-64827d42ea8c",
        "cursor": {
          "ref": "94ccfc0e-7e67-4cf7-87ad-4968b31eaf4d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b1a0bebf-3ec9-45bb-b2eb-da2369f2e8fc"
        },
        "item": {
          "id": "1fc8e683-2f12-4d9c-8403-64827d42ea8c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0574a02e-c838-4fbc-9e4a-6a4ff4769ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d7b504-08a5-4b63-97b8-26240ed86452",
        "cursor": {
          "ref": "0e3f1276-fc3f-4216-8751-f3ad40c17258",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f07c4a5-9e34-4218-bdf7-7d76e5b68422"
        },
        "item": {
          "id": "04d7b504-08a5-4b63-97b8-26240ed86452",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "efdd5dd8-938f-45b4-af65-a2be9c747195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc876b50-1512-4161-8070-8959b4651b02",
        "cursor": {
          "ref": "06de56bb-03e9-4a94-8b88-82e291728fda",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a59e9086-367f-453b-ab94-d70fa2366014"
        },
        "item": {
          "id": "dc876b50-1512-4161-8070-8959b4651b02",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36f81067-0a26-4e99-a81c-04cee4d52127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf6fb0-aa3a-4ff3-aa5c-06aa66dc9ca0",
        "cursor": {
          "ref": "d8fc9c86-c2ce-4e60-8c6d-57c2b8331846",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d2828744-2b71-4388-86b3-eb484b73bd06"
        },
        "item": {
          "id": "36cf6fb0-aa3a-4ff3-aa5c-06aa66dc9ca0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a16f0a8b-8544-40cd-8ca2-bda5bf376b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d620dfb7-5282-488c-8636-95c0c6a78353",
        "cursor": {
          "ref": "8592bdf6-4040-4ad5-9dc1-94ea41ac0ee0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1367f237-bd2f-45f9-90de-4bede29a2da5"
        },
        "item": {
          "id": "d620dfb7-5282-488c-8636-95c0c6a78353",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b24bd93f-7692-4430-95e4-b3a903336d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458179be-6a8b-4f04-9bf5-04d7d5c1ecc3",
        "cursor": {
          "ref": "abdbdaa5-dd79-49a8-90ad-37c17d2dfa40",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ce69b856-cec7-435d-a9de-443566162417"
        },
        "item": {
          "id": "458179be-6a8b-4f04-9bf5-04d7d5c1ecc3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a23f36a6-0972-4c80-94f1-a5cf7f9f1ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d9423e-93c8-4853-9c83-9b698edf617e",
        "cursor": {
          "ref": "6d435aab-9e7f-4c17-a4fe-c593f6da266b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "af1ab74e-82eb-45e5-86dd-174cfb0e99d8"
        },
        "item": {
          "id": "f6d9423e-93c8-4853-9c83-9b698edf617e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8eb5ead5-b9be-4417-a221-d61038492854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e96d36d-8b2d-4944-bc79-722f5601f0a6",
        "cursor": {
          "ref": "ebee7711-99ac-4d4b-8b15-7659bfa61627",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "455bdbf1-99e6-4101-a8b9-9996721147b1"
        },
        "item": {
          "id": "4e96d36d-8b2d-4944-bc79-722f5601f0a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fdb013ba-a151-44ff-a782-bbdcf30bd534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9ee18c-b61e-4710-8a3d-f1ea1d2a9f24",
        "cursor": {
          "ref": "639704d7-f51d-4513-ae51-15b11f3789b3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bcc9f5ef-40c7-4383-99f6-a330ef111c73"
        },
        "item": {
          "id": "7c9ee18c-b61e-4710-8a3d-f1ea1d2a9f24",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b12c9fdd-b780-43cf-9f02-f3e1158600c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ade6fe-058c-4e59-98da-951c9286a905",
        "cursor": {
          "ref": "4b4f9c38-833c-4ebb-b049-c3f19c0a9906",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "59a49140-7f5f-4f51-98fd-96d103402633"
        },
        "item": {
          "id": "64ade6fe-058c-4e59-98da-951c9286a905",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dbdbd7db-411c-4470-8fa6-592c53495fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a859a8f0-063f-481e-830b-3ad49a0fa1d9",
        "cursor": {
          "ref": "69dce3c5-535a-457e-bf02-edafae2012b5",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b1b996a-39d3-4dd5-bd61-8094e2abbfc0"
        },
        "item": {
          "id": "a859a8f0-063f-481e-830b-3ad49a0fa1d9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ffe45295-6c59-42dc-99f6-278c2c8ecd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71b21e1-8d79-4359-98fb-e69dba44490c",
        "cursor": {
          "ref": "e57b9cd2-8ddb-4a3e-9c6c-302c67c9b718",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c3575ef2-4395-4027-a516-2408f362e22b"
        },
        "item": {
          "id": "b71b21e1-8d79-4359-98fb-e69dba44490c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "816657a9-39cd-488b-adfc-a1935c2d9203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609be407-3eaa-4860-be67-c0898f673b34",
        "cursor": {
          "ref": "a6b06911-8dd3-4e2c-bd4b-270c41442a6f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39c67810-7177-4192-a031-d6e1a9d5110d"
        },
        "item": {
          "id": "609be407-3eaa-4860-be67-c0898f673b34",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ced2a6f3-a99c-45d7-83af-0296008daab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51fa197-6bc6-49c7-816f-7204f1dcc518",
        "cursor": {
          "ref": "44c42edc-25d6-415c-a84a-0903c163bd2d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ff9832ef-fdc5-440f-a9ad-1ac08ae83413"
        },
        "item": {
          "id": "d51fa197-6bc6-49c7-816f-7204f1dcc518",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f04094c-b499-4fa2-b7bc-640024d08d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993b743-9019-4426-8f9f-84454180adef",
        "cursor": {
          "ref": "c2f8c527-991d-435e-8af0-8afad1954478",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ce41d642-c726-4575-a468-c71c2183f7d4"
        },
        "item": {
          "id": "5993b743-9019-4426-8f9f-84454180adef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "073f9691-b570-425e-af67-a285cf3158f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8198c6e3-0790-4653-9d3b-bd9cdd11feb3",
        "cursor": {
          "ref": "cf757721-1e0d-4c66-96b8-1ff288d5a1b4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ee527745-efdd-4520-b2a6-7dbe7bfdfa74"
        },
        "item": {
          "id": "8198c6e3-0790-4653-9d3b-bd9cdd11feb3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bd7311d1-711c-4990-9bfa-b2cfb322817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2163156-a08d-458c-9377-ea48bbf638a2",
        "cursor": {
          "ref": "e08620ff-d4ce-4b40-a35e-89b9dd2fab21",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d9a13e14-58f0-42a4-80aa-9b782654b7b3"
        },
        "item": {
          "id": "d2163156-a08d-458c-9377-ea48bbf638a2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a992d501-27f0-4154-bbde-76ee60d86593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9455ea7a-1637-46f1-924a-647b1f0b68b4",
        "cursor": {
          "ref": "a0e035fd-1a63-41ad-a135-9a808349c909",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ecf9ddf5-dce8-4836-998c-4c342c0df4fc"
        },
        "item": {
          "id": "9455ea7a-1637-46f1-924a-647b1f0b68b4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "141d91e2-c6a2-4fbf-bd49-3871bf44e63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cbb92d-f6ac-404a-883b-e2b56cf4fedb",
        "cursor": {
          "ref": "e3a89ea4-1ced-4e29-88c8-352c70589c11",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b0e777ce-74ef-4c8e-9694-7597d8e58cde"
        },
        "item": {
          "id": "81cbb92d-f6ac-404a-883b-e2b56cf4fedb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e28510f0-82bd-4d8f-8fbb-805a0d6dc176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254794d9-424f-44fa-b1e5-0f8d1148ecbd",
        "cursor": {
          "ref": "ac227fcf-90a3-49bb-8d31-c5eb1c78a60e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5d756291-2ab9-41cb-95fe-a810575642f9"
        },
        "item": {
          "id": "254794d9-424f-44fa-b1e5-0f8d1148ecbd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ad529dd3-d842-4d3e-ad43-e9b59cb4df51",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 622,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff8cd58-1307-4b66-a7d2-96c3a3646d5b",
        "cursor": {
          "ref": "9523406d-0d5f-44c0-8e71-912cbc1a78c0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9e8bc5a7-134c-4701-ab8d-1fa1a3200f69"
        },
        "item": {
          "id": "bff8cd58-1307-4b66-a7d2-96c3a3646d5b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bab238af-2a0a-407c-9fe2-c50bdb7553b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8b3d77-fb78-49b3-adf8-cbcb5b7974d7",
        "cursor": {
          "ref": "385824f7-95fe-4cb0-b0ff-5184f86e1f3a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "206d8677-4e37-4191-bf3b-eddd9a8df1a4"
        },
        "item": {
          "id": "1c8b3d77-fb78-49b3-adf8-cbcb5b7974d7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e0d68413-9087-4eaf-9fe2-39d8662bfae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be24ff88-4e2f-4fe7-bbc5-4a9c1af5f091",
        "cursor": {
          "ref": "33c11c0e-5748-49a3-8067-7908b89ae7b0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0e9d8d14-e416-4e57-b50d-34718b214958"
        },
        "item": {
          "id": "be24ff88-4e2f-4fe7-bbc5-4a9c1af5f091",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eebadbf5-ddf4-4213-bcb9-43ade0b09ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ffee80-d0fb-4604-800e-51516f39c320",
        "cursor": {
          "ref": "1be2787f-ad60-4019-b22b-3077a9532c26",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "88314c32-8a6a-424e-a74a-f7e03bbfbdf5"
        },
        "item": {
          "id": "03ffee80-d0fb-4604-800e-51516f39c320",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "044f9f1b-d8b2-4353-9682-cce4ebc7e82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd9cb65-2116-4925-949a-ed44eccab854",
        "cursor": {
          "ref": "dd0a7c93-d8e4-4978-aed1-5458a7334d13",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "931ce228-0e9a-4af0-b0ef-af43861b7113"
        },
        "item": {
          "id": "edd9cb65-2116-4925-949a-ed44eccab854",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5d20aa42-de9e-46cc-a71d-7e5f8994b6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c9eb5f-c057-425c-a2b5-c5501199c187",
        "cursor": {
          "ref": "5e4c0896-fe51-4bdb-a916-b8853902ec95",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e586d867-c98a-4df9-aa28-fdec24cad6cd"
        },
        "item": {
          "id": "22c9eb5f-c057-425c-a2b5-c5501199c187",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "659ae15b-2760-4915-ae73-7b9096404017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3c6726-6ccb-4f01-aac9-0d5ae43b61dc",
        "cursor": {
          "ref": "0c6e165c-e5f3-41fa-aa6c-1ba6ec8103ab",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b40ccd74-b120-40d8-baa6-509ed35ecac4"
        },
        "item": {
          "id": "0c3c6726-6ccb-4f01-aac9-0d5ae43b61dc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "889768f9-5720-4f47-b87f-5bbe8d1d4c4f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 610,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb41228-309f-48e8-ba44-5fcfc2cedc48",
        "cursor": {
          "ref": "0f05b058-7545-4333-adae-8802c324b7ed",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9799af6a-5fda-4af4-a544-1c9955c50c9c"
        },
        "item": {
          "id": "eeb41228-309f-48e8-ba44-5fcfc2cedc48",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "63312355-103e-421c-8d47-d7399844ec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b865440-0e16-4be8-9c6f-ff87fe7307fb",
        "cursor": {
          "ref": "c82a059b-bcc9-49aa-8139-ab8cf04c68db",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a90ef555-9db2-40be-9889-dc70f9879227"
        },
        "item": {
          "id": "1b865440-0e16-4be8-9c6f-ff87fe7307fb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aeb7a3ae-4f93-4451-bac7-0dd729a762f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1072eb5d-71ac-4ae6-9700-4ecd1e4e671f",
        "cursor": {
          "ref": "e8fe51d0-c0b2-40cf-b6c9-c953bfd7162e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a0c24e7f-530e-48a3-a9b9-0e648abbe511"
        },
        "item": {
          "id": "1072eb5d-71ac-4ae6-9700-4ecd1e4e671f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3fff2683-b15b-46c0-920e-89488abf7053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112ad950-8774-42ec-8568-80ac7b741790",
        "cursor": {
          "ref": "4d800479-32d5-419f-85d3-06756de17f5a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c201c183-5f57-4add-8134-2e7f6fc3d916"
        },
        "item": {
          "id": "112ad950-8774-42ec-8568-80ac7b741790",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0cdad59a-96bd-4066-baba-81bd139415d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b2e90-55c2-4bf3-86ac-de5a42d1032e",
        "cursor": {
          "ref": "9225814d-98bf-42cb-8abf-3dd901557a7a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0b24d1b2-db4e-4d5d-b23f-99328d2671d5"
        },
        "item": {
          "id": "595b2e90-55c2-4bf3-86ac-de5a42d1032e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4411c54b-4df2-44fd-b7e2-e4bc82d75b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375056cc-f003-4578-b855-7bcbc9a70eda",
        "cursor": {
          "ref": "221d83c7-9307-45d8-a59b-6fa6f81dde81",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "074806b9-2798-4ae7-84bd-901253f2ffd6"
        },
        "item": {
          "id": "375056cc-f003-4578-b855-7bcbc9a70eda",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b398c029-22f1-4d49-953e-52dd1cb87c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9fe4ee-981d-4724-bff1-96c89538b8bc",
        "cursor": {
          "ref": "ab0f3338-96d7-4488-9758-bc5d34943570",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0cf2d0c1-d56f-4657-bf37-9caba9807741"
        },
        "item": {
          "id": "6a9fe4ee-981d-4724-bff1-96c89538b8bc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "47469777-160d-40b0-83b5-d3bb8c272d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb36c4e-0b68-4ffc-82fa-70105dc6754a",
        "cursor": {
          "ref": "b68648b6-3fd6-4e08-8f80-de8cb85b6497",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0e5fe5e9-acad-4067-b577-18ec0ccd0a50"
        },
        "item": {
          "id": "9bb36c4e-0b68-4ffc-82fa-70105dc6754a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0e43e459-da12-4d54-81e2-c2577bebcf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54be0593-5759-458e-b525-2b557c1da8d3",
        "cursor": {
          "ref": "a8c3de02-34bb-4d1c-9d4c-a4ee74db4427",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "af758e5e-1008-4544-a971-ba536635086e"
        },
        "item": {
          "id": "54be0593-5759-458e-b525-2b557c1da8d3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "716e19a9-4e98-4f30-bdab-47f614147fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca69653-c45e-4ade-bad3-bbf508a5dc86",
        "cursor": {
          "ref": "d02be0b9-31ed-4a3f-8a12-e0cefabdf393",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d3bdec73-180c-4e34-b3b3-1c9a55e5d271"
        },
        "item": {
          "id": "aca69653-c45e-4ade-bad3-bbf508a5dc86",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "74e50540-5c98-43fc-b5f5-1dc462027383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72617af3-11e6-458b-8a2b-0aa17bf9b1b6",
        "cursor": {
          "ref": "7b2b67ee-b779-43ae-973e-66f0f4b4ab44",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "06b232ec-7efe-4e23-8add-e45cd1adc99e"
        },
        "item": {
          "id": "72617af3-11e6-458b-8a2b-0aa17bf9b1b6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "07fc5b79-9cd2-4b9b-aab8-2da35857373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69d1f5-f14a-440d-819d-6971ba837583",
        "cursor": {
          "ref": "b9d6d839-3af7-408e-8078-6f4badda695d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "60015a91-0aa6-44cd-92d4-071aa08b03aa"
        },
        "item": {
          "id": "1d69d1f5-f14a-440d-819d-6971ba837583",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9a66c4f0-9042-41de-85d0-608fb519527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae988c-1f3c-4538-aa3e-cadc67c7d4dc",
        "cursor": {
          "ref": "1ef6e256-fa1a-4370-93f6-ec321142e6cc",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6846f799-b675-4c76-84cc-ba18b697f9e6"
        },
        "item": {
          "id": "66ae988c-1f3c-4538-aa3e-cadc67c7d4dc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a6769260-b766-4b99-869c-f13df37e81ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5969f2c8-7701-4c7d-aaf6-cbf3c9dc565d",
        "cursor": {
          "ref": "4c6e9b19-35df-4355-90df-4555f5608a7f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e91902dd-cbf7-4771-acb6-009783e30808"
        },
        "item": {
          "id": "5969f2c8-7701-4c7d-aaf6-cbf3c9dc565d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3b2701dc-4dcb-4813-be24-fc48e843a8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad79447-dffa-4743-b3ad-2c24d5decdcd",
        "cursor": {
          "ref": "80e51192-1694-4979-9b02-59ed4655ce01",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a133ae41-80f4-425e-a488-bf3ec31f0851"
        },
        "item": {
          "id": "5ad79447-dffa-4743-b3ad-2c24d5decdcd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0762e67a-3ab7-4ea4-87f7-2fe07873b80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844df6dc-7093-4f90-af6a-1dcbe71723f0",
        "cursor": {
          "ref": "02edf90a-0ff1-41c5-b527-88cf8d63b83a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "03b29d18-fd71-4f92-b907-9a58e51c0a31"
        },
        "item": {
          "id": "844df6dc-7093-4f90-af6a-1dcbe71723f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2c8f9473-6640-4e4c-9480-50324d67b9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796d4360-7f19-4d3d-9edc-a5815c87202a",
        "cursor": {
          "ref": "41cb4ea9-8033-4db3-8711-44c28120584b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eca3cbe8-f461-4be4-949d-479bf5ca82f1"
        },
        "item": {
          "id": "796d4360-7f19-4d3d-9edc-a5815c87202a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9b871398-2bff-4c76-becc-1660ca34fd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc681fa-29c9-4520-80a3-4480139e565e",
        "cursor": {
          "ref": "3093c3a8-afdf-4459-931a-48c3e47bfa98",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "902257a5-5192-44bc-82af-2b0bd1e0a6e4"
        },
        "item": {
          "id": "dbc681fa-29c9-4520-80a3-4480139e565e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "869f8264-575c-4698-afe6-36135aac9b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9c17b9-84e0-4afa-9ced-d25ceaa57ad5",
        "cursor": {
          "ref": "d676ba3a-530d-4702-b403-4e040127bbf1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "adb5a851-97e3-421d-ba5f-7bfc008b98e2"
        },
        "item": {
          "id": "7f9c17b9-84e0-4afa-9ced-d25ceaa57ad5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "da002259-4c81-4cf3-b572-468df9547b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a9971-3111-4554-98f1-9e558bcc544d",
        "cursor": {
          "ref": "b304420c-0235-4dd6-8a91-746f40ae84cf",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "de95a398-3f77-41d5-bcd3-26932a4293cc"
        },
        "item": {
          "id": "746a9971-3111-4554-98f1-9e558bcc544d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5e8ecea1-b7f1-412f-bea5-642173c228a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d253370a-978b-4eb8-af3a-35b9953aa8e6",
        "cursor": {
          "ref": "c75629df-998c-4725-9bea-09df2cbb87ab",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "39b29dac-6195-4643-8ca8-cceb7fd1a663"
        },
        "item": {
          "id": "d253370a-978b-4eb8-af3a-35b9953aa8e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "92d3bc9d-7d88-46e5-9690-fa475230da06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7dfb44-9673-41ab-b900-f2c8cfa7ab40",
        "cursor": {
          "ref": "29ecfc2b-3944-47c9-97ca-888cc85479d9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "720cd7d8-11df-4d40-a8e8-e224513007ff"
        },
        "item": {
          "id": "5e7dfb44-9673-41ab-b900-f2c8cfa7ab40",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "42f40030-99f0-4747-9d4b-ebecff54fd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63e2248-e616-4db1-8b89-7d24cc55247f",
        "cursor": {
          "ref": "54124073-0492-42eb-bda6-1771ecf6c7a2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e01f8741-1113-4da1-bdf5-f94fccc91196"
        },
        "item": {
          "id": "a63e2248-e616-4db1-8b89-7d24cc55247f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7b3725d8-3451-4375-b89f-8d020060e53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85efb9e3-1f60-41d6-b4ee-88a72b607aaf",
        "cursor": {
          "ref": "e4513bc7-3726-4e7b-a64d-9547a1b60336",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a2cc312f-1ac7-45a3-8925-ad69ffe4059c"
        },
        "item": {
          "id": "85efb9e3-1f60-41d6-b4ee-88a72b607aaf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d95b48cb-d5c7-4140-9caf-ffd3c3105e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ba77b4-5b2a-4c9b-9528-1f2f7b3c1ef8",
        "cursor": {
          "ref": "d65c3254-b2d0-4a91-aacf-b886cbb59db5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3c0d3fa0-b246-4ee1-93bd-5219a2ce44e5"
        },
        "item": {
          "id": "00ba77b4-5b2a-4c9b-9528-1f2f7b3c1ef8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3cff8bc3-122e-4456-8a75-e863a3a948bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d603b88e-0b55-4a32-8ae2-9159935f7545",
        "cursor": {
          "ref": "f0d12e91-be26-48ef-b65a-2cdc7ebfb13b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9de3c20b-cd25-46e9-98a7-758353e42253"
        },
        "item": {
          "id": "d603b88e-0b55-4a32-8ae2-9159935f7545",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38942158-d856-433a-82a4-a6586f16a255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b6d04d-148d-4cfa-adbb-0d2bd1ef6301",
        "cursor": {
          "ref": "1d4c72ee-16fb-4db7-a08a-442b89761db1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f01dd737-6e1e-43fa-af42-45d33ade87ae"
        },
        "item": {
          "id": "f1b6d04d-148d-4cfa-adbb-0d2bd1ef6301",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83cebfa2-9587-4b0c-89ca-795216430a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef79081d-bbad-4128-8fb7-4022c6afc5c2",
        "cursor": {
          "ref": "67aabd4a-622a-41f3-b653-b05846f05082",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0ae679f0-38a4-476e-81ab-a30eefcbcd5b"
        },
        "item": {
          "id": "ef79081d-bbad-4128-8fb7-4022c6afc5c2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "677b3901-5a59-4589-9e20-9f270c0fdb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaa2154-6743-4cc5-ace4-615882fef93d",
        "cursor": {
          "ref": "96dfca08-3a47-4aa3-921d-fc006a95e633",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "916212ec-7126-40c7-8a29-44d793c7117a"
        },
        "item": {
          "id": "afaa2154-6743-4cc5-ace4-615882fef93d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "496bcaaf-7bd9-4868-b617-0c36f3f846f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0d5c9b-32d3-4a6b-b240-96e3ad6928ae",
        "cursor": {
          "ref": "b5eab4db-9d13-4dbb-a5ef-4efd2256589a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "48c462a6-4134-470b-9850-a4711ecb0a3a"
        },
        "item": {
          "id": "8d0d5c9b-32d3-4a6b-b240-96e3ad6928ae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb87ce93-c179-4c2f-8ccf-6c856274a7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c34557e-0f76-4244-b996-08aa986c52c3",
        "cursor": {
          "ref": "93d8e4b5-8c02-41ab-a228-2af12bb7bcfb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7586c6e3-4cd3-4864-9513-ce4612e8534f"
        },
        "item": {
          "id": "4c34557e-0f76-4244-b996-08aa986c52c3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "23d9e718-6e16-4dd7-86b0-9df2cfe42b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0b3228-cbd6-4729-b77d-80289e284311",
        "cursor": {
          "ref": "8ddf234b-b4ce-4341-aada-af7ba9b44bc4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "64992596-e63e-4620-98a2-a1fd84009066"
        },
        "item": {
          "id": "9c0b3228-cbd6-4729-b77d-80289e284311",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9f5b56c5-138a-4cb1-bb78-c4faca687e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e502875-5f2c-40ed-8909-f266fa45c5ce",
        "cursor": {
          "ref": "37154c73-7b31-43e3-bb4e-213c4c7996bc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bbf7559-761e-43bf-a3ef-39f4cf855000"
        },
        "item": {
          "id": "6e502875-5f2c-40ed-8909-f266fa45c5ce",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7ceeaf67-9fd5-424e-9601-ad5b21189641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327990af-69d5-4ffb-8f50-06149f609652",
        "cursor": {
          "ref": "f0e4e6ab-5d3d-4d76-9287-e0d1873c6563",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "32469529-db0b-457f-a1d6-9fb01fdfb1bb"
        },
        "item": {
          "id": "327990af-69d5-4ffb-8f50-06149f609652",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db5359dd-0e4d-45e4-9c76-4c8997db186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a9355a-191a-4dc7-9d52-ebf3c9bf74ec",
        "cursor": {
          "ref": "3e452eb5-e6d2-404c-85fd-2f9c50c2eb97",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "26fd90e8-4162-4f1b-8bc9-be284aabc63c"
        },
        "item": {
          "id": "44a9355a-191a-4dc7-9d52-ebf3c9bf74ec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec375547-abe1-464e-bc9b-a6fb317d9e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9467bb6d-1cbe-4177-8c8f-c105a5157b37",
        "cursor": {
          "ref": "bdb518c5-1f1f-4c88-a7ee-2987ae13195b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8f43c970-d609-4222-b2c8-a697fdaecdcf"
        },
        "item": {
          "id": "9467bb6d-1cbe-4177-8c8f-c105a5157b37",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e06fd005-b00d-4719-8985-131564855ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffe8ae7-2214-443a-806f-7fbeb78876e4",
        "cursor": {
          "ref": "09275d4a-d6e3-4aee-b2a2-76560c98078f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "782d5207-ae81-4cc6-bc56-a035d0e5ad07"
        },
        "item": {
          "id": "7ffe8ae7-2214-443a-806f-7fbeb78876e4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c1021f05-1dd5-4f88-93b2-0e1ffe81a8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42af4995-1c8e-4645-a270-a8bddf13b5ae",
        "cursor": {
          "ref": "33e0fd44-2fdd-4e19-b934-fbd6d2d9bc48",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "59b502dd-8371-4a0a-963b-2a3a14b96579"
        },
        "item": {
          "id": "42af4995-1c8e-4645-a270-a8bddf13b5ae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "10e60748-a860-4237-8ddc-29edf2ae1200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1e4ec4-ee43-4248-8faa-df360a01a30c",
        "cursor": {
          "ref": "c1251857-52bd-40b1-bf40-822ce68a97f9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3ff9584c-ea79-4de0-968a-d715cdbbb82b"
        },
        "item": {
          "id": "fd1e4ec4-ee43-4248-8faa-df360a01a30c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "05613a4a-36ad-462d-8dcf-471d07f69c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69a8777-41a8-467a-bcaa-b4b0d59fe4e5",
        "cursor": {
          "ref": "cf7bb533-70ac-4d4f-b1d2-39c5884fc554",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f07a6e82-7b82-4787-940c-c0d3210c9b3b"
        },
        "item": {
          "id": "c69a8777-41a8-467a-bcaa-b4b0d59fe4e5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "da40d2d0-d4fa-4a14-9213-707b63b4c5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaeab90-8746-4a68-9419-0cbb02b090ce",
        "cursor": {
          "ref": "22cc8316-65f1-4684-8f20-d1c7502bb1b8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a3625089-e66b-4e3c-a7ac-0f8c51167184"
        },
        "item": {
          "id": "bfaeab90-8746-4a68-9419-0cbb02b090ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5bf8eec1-557c-430d-826f-1a40af9d4bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1577f7d-f82f-4a72-b1b1-2b8ba6cbb9c2",
        "cursor": {
          "ref": "e7c7ff4e-4c09-4e1a-b0bc-752a901f65cc",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fdc3cfeb-09fc-456b-863f-e73e46f30807"
        },
        "item": {
          "id": "d1577f7d-f82f-4a72-b1b1-2b8ba6cbb9c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e70536cd-cbb5-43c5-8c44-44113542d716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ea5f1-28fc-425b-9967-3650c85dde3a",
        "cursor": {
          "ref": "0b7bd5fa-8d4a-4b91-baae-4e873a1e824c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bd3cf825-5f32-45cd-80a1-1f00579349d7"
        },
        "item": {
          "id": "698ea5f1-28fc-425b-9967-3650c85dde3a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "892f70c3-176e-47cb-9093-43d951962df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cace7f2-e48c-491b-9fae-803b3afeb7e5",
        "cursor": {
          "ref": "39d0c940-a6be-4554-b718-f65de9c44bde",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1ddd7836-1be0-4be9-a666-62a879c07848"
        },
        "item": {
          "id": "0cace7f2-e48c-491b-9fae-803b3afeb7e5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "579506a5-34d4-45c8-89f7-bef9ad3e7561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932ce281-438f-4eb0-b17c-53a88283329f",
        "cursor": {
          "ref": "32dd8337-8e7c-48a2-a48d-c408b7a569fa",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ab572ba4-01c0-4064-acdb-dadd3e038c0d"
        },
        "item": {
          "id": "932ce281-438f-4eb0-b17c-53a88283329f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "83b720fa-2415-4c94-9a3c-a8db26c4db90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5923ba7d-975b-4b71-8bae-6232f7d08a61",
        "cursor": {
          "ref": "bb49eb53-aea5-4cc8-afaa-97d928f74927",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "00d17d73-8264-454a-b4b7-28921a4b21d9"
        },
        "item": {
          "id": "5923ba7d-975b-4b71-8bae-6232f7d08a61",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ab54f7f8-64c7-4ab3-a274-5358e3d9af28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961c008d-6e7d-4bf0-bf06-003b9e7cbe6d",
        "cursor": {
          "ref": "e40e6033-c27e-42b9-ba0e-d4e356057cd1",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b7a71e88-b998-44f8-8358-5cc677cfe82b"
        },
        "item": {
          "id": "961c008d-6e7d-4bf0-bf06-003b9e7cbe6d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f3c18cc7-5165-40f2-bd98-56d372363788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5088a8a1-4840-4c31-8df3-111235ebe032",
        "cursor": {
          "ref": "8af17309-7d57-42fb-bee3-a20bc0bd339c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac3a46eb-f725-4782-970b-5db1b3d6cc45"
        },
        "item": {
          "id": "5088a8a1-4840-4c31-8df3-111235ebe032",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "58d0aa40-d891-4740-acda-70c6c1ce1b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae8bc95-a5d7-4890-a9d8-cb379c494755",
        "cursor": {
          "ref": "6234f427-1ce8-497f-b263-31bf3d6fe474",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6f178e81-ceb6-408c-aa6b-df39b841c09e"
        },
        "item": {
          "id": "5ae8bc95-a5d7-4890-a9d8-cb379c494755",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9bca244-51fc-4660-a1cd-f4dfab1e3ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4871b7e3-f262-4f7c-a123-934a102d4f6e",
        "cursor": {
          "ref": "6f1416ad-6e20-4f38-ac85-a6eabce00ab8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb850a02-8689-4ba1-8881-421daaddaf7c"
        },
        "item": {
          "id": "4871b7e3-f262-4f7c-a123-934a102d4f6e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "78211f43-3c9a-48ec-8f8f-1efa78eb44e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f500d6-d01a-4b5d-9b2b-c49815e8aaf6",
        "cursor": {
          "ref": "bd130fd3-0a8a-43df-b632-9e536c20531f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "83022c56-0e75-4262-a36c-b4f4fe89d918"
        },
        "item": {
          "id": "b2f500d6-d01a-4b5d-9b2b-c49815e8aaf6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bd17a7ec-1a43-4e33-8e17-44cb8b2cbc51",
          "status": "Created",
          "code": 201,
          "responseTime": 8379,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd8c811-1283-48e7-8c6e-8301c87b43bb",
        "cursor": {
          "ref": "f2339160-81d0-43e9-9866-406841372bce",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fdf33855-7893-4c28-ac63-bd2c81117b38"
        },
        "item": {
          "id": "fdd8c811-1283-48e7-8c6e-8301c87b43bb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c013d583-9ea7-4790-b49c-68ea48787ae9",
          "status": "Created",
          "code": 201,
          "responseTime": 7683,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f870c5-a0ea-426b-bf6b-502be0a463d8",
        "cursor": {
          "ref": "51e8fa94-3d8a-4569-ae8f-c4341283a4a4",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d803351e-c0a3-40d3-b2ca-ece65586ac3d"
        },
        "item": {
          "id": "d5f870c5-a0ea-426b-bf6b-502be0a463d8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "820caf07-478f-4628-bfda-7c8e48fa7259",
          "status": "Created",
          "code": 201,
          "responseTime": 8925,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27866bec-d7a7-408c-917b-075f6fc61bb2",
        "cursor": {
          "ref": "a42a55ac-34be-4ff2-98c6-c9749d3ff08d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9ea6967d-6424-4a0f-9653-d1a73bb1ddd8"
        },
        "item": {
          "id": "27866bec-d7a7-408c-917b-075f6fc61bb2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b77ba63a-1e87-49e8-a0d9-40b8933c5319",
          "status": "Created",
          "code": 201,
          "responseTime": 8289,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5291418-e45f-4084-b348-fe7ea00c4e7c",
        "cursor": {
          "ref": "be12fc34-9cdc-47e2-96ab-05d8f4ed4538",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "57acc78d-c22d-4dc9-9b51-f30a762c3d63"
        },
        "item": {
          "id": "a5291418-e45f-4084-b348-fe7ea00c4e7c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "26eae935-296f-458d-afde-bfdb4f930d4b",
          "status": "Created",
          "code": 201,
          "responseTime": 7824,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52aa8e5-eff6-4985-bf65-ab675d0d8c4c",
        "cursor": {
          "ref": "ff10549a-169b-4dcc-bfdd-6654f8f89f45",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2adcf6c0-313a-42af-b5f2-adccfcfc00f7"
        },
        "item": {
          "id": "e52aa8e5-eff6-4985-bf65-ab675d0d8c4c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9493d072-922f-4b11-9d58-816927fa6477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "9663aca1-7df0-452b-a322-f0712a35a547",
        "cursor": {
          "ref": "bd5e2edb-25ef-45f9-8b9b-3b90c3bfe662",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6326d9fa-9fe9-4775-a66a-6263386988bd"
        },
        "item": {
          "id": "9663aca1-7df0-452b-a322-f0712a35a547",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4c4371f8-caac-4e7f-af74-3cdae26d8b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd98d957-7593-4176-85b1-32e6ee2347e3",
        "cursor": {
          "ref": "fa8df984-58e2-4bfd-8525-4497496e8a1d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f4bb1911-f1e6-444e-89b6-fb3a03bd858a"
        },
        "item": {
          "id": "bd98d957-7593-4176-85b1-32e6ee2347e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2730082d-6b75-4398-8d08-64526a211e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4677af-a679-4e48-89ca-270deee99fa5",
        "cursor": {
          "ref": "9fe3cd8d-feec-4a8e-b5c8-4516760a26cc",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b3f72394-6ab0-47f4-81e3-ca53a290545e"
        },
        "item": {
          "id": "1f4677af-a679-4e48-89ca-270deee99fa5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b7ab926a-32c9-4c84-af45-bdc0bacfaa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bba6b4d-b035-4973-99f9-9557e050689e",
        "cursor": {
          "ref": "b647059d-f78d-40e0-bf06-f5d23dc786e4",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a04d7199-e45f-46ab-a026-045d8c8eb18a"
        },
        "item": {
          "id": "5bba6b4d-b035-4973-99f9-9557e050689e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3f5fcd7-7d95-47d9-8ff8-2d3a575c62f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d766ec-0895-40de-a8ec-9b3f08bf8d68",
        "cursor": {
          "ref": "f4b603f5-cc6f-4e88-b42e-a0c07bb99dce",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "31133232-b94f-459f-a0b5-4c56c73e2dab"
        },
        "item": {
          "id": "d8d766ec-0895-40de-a8ec-9b3f08bf8d68",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b49cf4b4-b116-4d7d-8176-127fd3b628e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72768c87-7487-4807-a0c4-9b649c19e5e3",
        "cursor": {
          "ref": "a61da225-3011-4290-a23a-c7ce991ad5c1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3baf8335-d83d-4848-82b5-637834fca035"
        },
        "item": {
          "id": "72768c87-7487-4807-a0c4-9b649c19e5e3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a6210a9c-bc31-48a7-8810-b3fba2076cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782a21b-b96c-4fc3-8397-213ebb288d6f",
        "cursor": {
          "ref": "3c1c14d6-66b4-4129-a809-9073d5ac52d2",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9bf9dc3a-af7e-47ac-9af5-edd0695adcdc"
        },
        "item": {
          "id": "a782a21b-b96c-4fc3-8397-213ebb288d6f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "18873f03-5335-48e0-bf2a-474967588e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab081e3-b391-45b1-8c50-050ff2f356b0",
        "cursor": {
          "ref": "49bbe635-2c2d-47e1-829e-a0126cf2da33",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ba95c62f-ac0d-4c58-937d-aab177793635"
        },
        "item": {
          "id": "cab081e3-b391-45b1-8c50-050ff2f356b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6c7fb2df-40a3-4ace-8736-59b734f6835b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253b3782-3a27-40a8-8e3f-ec7789eb1750",
        "cursor": {
          "ref": "8b14ddc6-74cf-4062-984e-efb2c96774b9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3622e6d7-2ab8-4539-b66c-5382c5c2f8c4"
        },
        "item": {
          "id": "253b3782-3a27-40a8-8e3f-ec7789eb1750",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6442828c-2c9f-48f4-a5ae-bfda9082992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c12a24-679e-444e-9b44-10e9c81d433e",
        "cursor": {
          "ref": "1c59bf93-4021-47ef-9db9-8b88f5258775",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c1a3e3de-946b-4de0-957e-e6ff84306572"
        },
        "item": {
          "id": "c1c12a24-679e-444e-9b44-10e9c81d433e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14927714-0534-4e08-a53b-82ed9446f8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c46e0d6-19c7-4c9a-af1e-2eeb10896506",
        "cursor": {
          "ref": "d09a9b54-ecb0-4560-9d3e-f1c6a40f8273",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4ad2eae1-53aa-4568-84ca-deb9d7eb4b70"
        },
        "item": {
          "id": "0c46e0d6-19c7-4c9a-af1e-2eeb10896506",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16efe74e-b5aa-4d01-a276-c3d1f9119716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b07f30-c4a4-4429-ab41-9ea582dc8022",
        "cursor": {
          "ref": "de707cc2-dbda-4c94-9c95-bb6abaa32233",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7003025a-8f05-4554-8e9c-881d05249a14"
        },
        "item": {
          "id": "04b07f30-c4a4-4429-ab41-9ea582dc8022",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a1f7b469-85e9-4ddc-8755-eb94e25dae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ffa32c-043f-42fa-86e9-88845529b802",
        "cursor": {
          "ref": "6c94eacc-a1ca-45e8-bb82-e0a72b2eb779",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1b8638e8-c763-4f2f-8c59-348b5667e0dd"
        },
        "item": {
          "id": "b5ffa32c-043f-42fa-86e9-88845529b802",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7b05df0b-2363-4800-ae15-f3aa10c0cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0a70e1-c352-4a62-a610-05c4d4e2881a",
        "cursor": {
          "ref": "78d819da-f295-4319-8a3a-50ab8f9015c8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "912d479c-aac8-4c92-bd66-1fe5dd780166"
        },
        "item": {
          "id": "fa0a70e1-c352-4a62-a610-05c4d4e2881a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2f80decb-cc62-40e6-bda1-7488b8a0aa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20f0330-7af7-406f-8363-ad8be51e28ae",
        "cursor": {
          "ref": "b2dfca89-56b4-415a-a193-6ff390b110a2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7e16df3d-2dc4-41fa-ac9d-e308da833168"
        },
        "item": {
          "id": "d20f0330-7af7-406f-8363-ad8be51e28ae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9f8e06c0-2336-42a8-86f7-450128eabfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b106d7e-08f2-4179-8ed1-c0aadf65aac8",
        "cursor": {
          "ref": "8bc15b37-a137-4466-82a7-d73acf75fb7b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ef1cab9c-e01f-4e73-b97a-fc72037c2353"
        },
        "item": {
          "id": "6b106d7e-08f2-4179-8ed1-c0aadf65aac8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec664575-59c8-409e-977a-1d5e3b5fb119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8535f4fd-9c49-4232-b3b8-1bff9aea9b06",
        "cursor": {
          "ref": "7dbe5843-f07c-4da6-8808-0d1cf1c3a108",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a5980b4-8f81-4cc8-99a2-f57e918615b6"
        },
        "item": {
          "id": "8535f4fd-9c49-4232-b3b8-1bff9aea9b06",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81259f2c-e5a0-4cd6-8bf7-56b9f5d262bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4fb247-8108-4706-8d8c-fb5f6d46ac22",
        "cursor": {
          "ref": "02cc0a84-8c5d-4cf0-bc4b-1097923c660a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "93f6478c-1428-479b-a6b0-af44ab446bfb"
        },
        "item": {
          "id": "aa4fb247-8108-4706-8d8c-fb5f6d46ac22",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "275adc08-c2d0-4a79-a733-3eee55b12692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11245c3-d3cd-4d32-a0e7-5464024955d4",
        "cursor": {
          "ref": "3262eded-2dcb-4e1e-9751-11b06050367a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "66d258af-2e78-4da6-929d-f360ca8d8bad"
        },
        "item": {
          "id": "f11245c3-d3cd-4d32-a0e7-5464024955d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "24edd640-3c01-4565-b48b-47da09d04dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4236ff-a39f-41bf-a7c7-e0640ee7acf9",
        "cursor": {
          "ref": "49ad7d96-1cf3-437a-bf08-2eace3ae3115",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "778f5a6c-87a2-47a4-8ba2-a905a7fe65f1"
        },
        "item": {
          "id": "9c4236ff-a39f-41bf-a7c7-e0640ee7acf9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0b8c16a3-97c7-44e8-9303-c9be76d20bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc8bedb-7a8c-4b42-a79b-a72fba593276",
        "cursor": {
          "ref": "2eefac06-a3dc-457d-8f3a-dd18c13413e5",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "22da1c84-540a-4046-bbce-4aaaa7be62d3"
        },
        "item": {
          "id": "4dc8bedb-7a8c-4b42-a79b-a72fba593276",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3a8d6c28-b779-4d81-8097-75e1a85cb209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5177c559-f3c5-4af2-8021-93e787e7374e",
        "cursor": {
          "ref": "deefb332-3c23-48d9-8e8e-e83d5b3fdf14",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "da72338e-20ba-4184-9d4b-4416c491076c"
        },
        "item": {
          "id": "5177c559-f3c5-4af2-8021-93e787e7374e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "32ad6a5e-53df-43bc-9375-847c3c2c3633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe8cb5b-05aa-488e-8a27-f99bdd159226",
        "cursor": {
          "ref": "83b359d6-6cfb-4d72-ab72-c06aa004f8d3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cce84974-66de-415d-8d76-2afc63f26a28"
        },
        "item": {
          "id": "bbe8cb5b-05aa-488e-8a27-f99bdd159226",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b3c8fd3b-252e-4f05-907e-63a9c9c10d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b2746a-b5ea-4ae1-bf0f-3f04707a9436",
        "cursor": {
          "ref": "1f7683a2-2883-4faf-8eef-2ab671a56ed8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "31dc6015-7ac6-4983-a01d-4cb81d00cc37"
        },
        "item": {
          "id": "d5b2746a-b5ea-4ae1-bf0f-3f04707a9436",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "485f9915-9992-4416-9cc6-d9745a22f1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abed9a6a-3018-4de4-b2dc-0d73a7d92873",
        "cursor": {
          "ref": "bd798aec-7085-4f52-b50d-a31f967b15ee",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "99e9e791-9894-46c6-a5e4-fdbc485bb1aa"
        },
        "item": {
          "id": "abed9a6a-3018-4de4-b2dc-0d73a7d92873",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "df011672-407d-415d-8a80-0ad8f04368ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def10f1f-1232-43d9-a293-809f86683b3a",
        "cursor": {
          "ref": "a5af8cb8-7633-473d-a67b-2dec797407df",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ae7b16ff-2582-4c92-89f5-07759a44d422"
        },
        "item": {
          "id": "def10f1f-1232-43d9-a293-809f86683b3a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "521110dc-b022-4ec0-a094-bf4326cbdb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05037e2a-513f-494a-8bef-0a5f3a784e08",
        "cursor": {
          "ref": "0f8711eb-26e7-41b1-919c-732220c6888b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e7183987-ef51-4451-8883-e459ee9fee5a"
        },
        "item": {
          "id": "05037e2a-513f-494a-8bef-0a5f3a784e08",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e8387e85-20ad-4284-a315-b763f0930c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10fd2e-9e12-435f-9baf-4187f76a0bb3",
        "cursor": {
          "ref": "4e122442-59e4-46f2-88c7-4f613736e592",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4a4aace6-2346-471c-89e5-ccd6cf0ce71e"
        },
        "item": {
          "id": "5a10fd2e-9e12-435f-9baf-4187f76a0bb3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ce3c857a-adc1-4f00-922e-35a1a2b6534b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0efbd-0491-40ff-85b6-dbf41cd3e8a3",
        "cursor": {
          "ref": "5a4b3a54-e2fa-45d7-8ae5-e47c11b7e6c8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7b42df1b-8310-4a8e-9588-fecdb962f15e"
        },
        "item": {
          "id": "76b0efbd-0491-40ff-85b6-dbf41cd3e8a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4a9bc942-0917-4bd0-bd73-dfd878bd6cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424ffa06-369c-4ff1-8d5e-73d125769a18",
        "cursor": {
          "ref": "ec6ec9a3-ef5d-404f-ba07-b7afccf4a267",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "110f0756-3159-42d3-9d69-8d06fb9db4e0"
        },
        "item": {
          "id": "424ffa06-369c-4ff1-8d5e-73d125769a18",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7221b526-f3eb-48fa-b340-1f4a4da7915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf4c766-2c19-4b63-99ff-4e19bdaeeb2a",
        "cursor": {
          "ref": "eaba5216-ba5d-49c8-bda2-c6f172a5cf7b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "501c8eb9-459d-4811-891a-041644cdae8b"
        },
        "item": {
          "id": "bcf4c766-2c19-4b63-99ff-4e19bdaeeb2a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9bb96cd6-172a-4122-9ea5-e28cec34549f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ad287-7e54-4e0b-aa7a-259f3d536e90",
        "cursor": {
          "ref": "516f4cf6-3136-4d8b-9733-101bb25e09b6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9a2b6068-3caf-47c1-933d-3760059811e2"
        },
        "item": {
          "id": "581ad287-7e54-4e0b-aa7a-259f3d536e90",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "71073f74-58e2-4cdd-a479-0d77f2792a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ed1574-e24c-4e8f-8204-2b717f48c8c0",
        "cursor": {
          "ref": "0a35b848-6e04-4b34-a63b-c6baef470b5e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "890bd48d-0d75-4ae9-a0e1-3c21f37813aa"
        },
        "item": {
          "id": "b9ed1574-e24c-4e8f-8204-2b717f48c8c0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e6c06eae-9d0f-49b7-854d-20858e900d85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84adf96f-d4e0-45ea-b952-855a6c36bbb9",
        "cursor": {
          "ref": "cf11f3a2-94f8-44b6-b147-7cb199e7956e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "acaae6e5-349c-4944-a90d-c3b451b11f04"
        },
        "item": {
          "id": "84adf96f-d4e0-45ea-b952-855a6c36bbb9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e360e55-2fdd-43b7-83fb-6f6e9811c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5962b6e-95f0-4cd0-a61f-12fc5370a2eb",
        "cursor": {
          "ref": "e7ccac53-c5b8-418a-8a3b-90511a9cfa36",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "901deb6e-bd5a-4b27-baa0-6479f8e761dd"
        },
        "item": {
          "id": "b5962b6e-95f0-4cd0-a61f-12fc5370a2eb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aa82f510-69de-4688-9e63-f67ca46229bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f8b7a-9d97-4675-8cc3-330e1983fa69",
        "cursor": {
          "ref": "4d69d98a-c9db-49e1-8260-5318465164a2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "83745720-328f-4972-af76-871bc7574da5"
        },
        "item": {
          "id": "dc1f8b7a-9d97-4675-8cc3-330e1983fa69",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eff7ae73-0190-44cf-b2a0-1dc877575c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6578f72-d0a9-4d4d-bf3a-68c59bb61103",
        "cursor": {
          "ref": "e1fa72db-1063-46a7-988f-82d1841d4590",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9be55f7-76d8-410e-9873-545b4652e84c"
        },
        "item": {
          "id": "b6578f72-d0a9-4d4d-bf3a-68c59bb61103",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "84c6d149-7362-4a9e-8136-2fea131f498a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49951090-e15f-4c8f-ab41-bee03a417fa0",
        "cursor": {
          "ref": "8ba16014-9773-460b-9565-1f6771fb8de7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9ce7d5e7-c1b7-43b4-b920-6ff67260e8e4"
        },
        "item": {
          "id": "49951090-e15f-4c8f-ab41-bee03a417fa0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "540b2a15-94e6-49fc-9ac8-ab35d31e7807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf60b34-8472-4128-9338-adb357376d19",
        "cursor": {
          "ref": "94c3e845-6cba-4b11-8248-5447b1e65da9",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "863f713d-22ac-4bb0-839b-62c3bfad8749"
        },
        "item": {
          "id": "ddf60b34-8472-4128-9338-adb357376d19",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f9390474-055a-426d-9b48-030998456166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef68b6ad-83d7-45e1-ad85-a7242d13d962",
        "cursor": {
          "ref": "6bb10b6a-f330-4d38-bd85-70869afbfa69",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "466364c8-57c7-482b-b925-62e1234ef56a"
        },
        "item": {
          "id": "ef68b6ad-83d7-45e1-ad85-a7242d13d962",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9cf350b-3453-423b-ab19-b29d9ea60c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7506eb-b9db-41bc-a929-431e90469701",
        "cursor": {
          "ref": "2ee00e8e-9303-4212-bfe1-c8fe7321d3cb",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "449e2624-4a50-477f-9f1d-c2dc9bc75502"
        },
        "item": {
          "id": "ea7506eb-b9db-41bc-a929-431e90469701",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be1f0aaf-bec2-455b-9baa-d5a951102ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8629b15-57af-4ecf-93e3-d00d50161e1f",
        "cursor": {
          "ref": "25907c49-bf5b-4a9f-9cfd-c2b81e833df9",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8bb154e1-7c04-46d1-ae6a-34efa42e6f42"
        },
        "item": {
          "id": "e8629b15-57af-4ecf-93e3-d00d50161e1f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f2e2c823-55a2-4c28-92c1-e482b1f43e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcdbf72-8183-433f-a784-4306371af950",
        "cursor": {
          "ref": "2309f32f-9b77-4ed0-a8fc-bdfd787be94e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cb7f2d4e-f405-4217-b893-e12028625c66"
        },
        "item": {
          "id": "dbcdbf72-8183-433f-a784-4306371af950",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f46345d-f0e9-4321-86b7-2c21e471dced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672e4cf8-1058-4793-9b49-9c22d79d6915",
        "cursor": {
          "ref": "685c43aa-8b95-42e4-bce6-4566fa28f382",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "243f7d57-1cb7-413d-b0fe-9e28f0a125e2"
        },
        "item": {
          "id": "672e4cf8-1058-4793-9b49-9c22d79d6915",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bfc858d3-9b44-4cc9-a5fe-f4e30274aeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fd2ec5-1bb1-4118-a46e-b3ac095a949c",
        "cursor": {
          "ref": "11248c76-28b4-4aa8-9896-f38d4d64a819",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "12d310cd-0b43-46bc-8f88-bfeb6e03590b"
        },
        "item": {
          "id": "e6fd2ec5-1bb1-4118-a46e-b3ac095a949c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bacde35a-a9c0-441c-bfce-4ffb870d62e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2408877-1f8e-4d4b-8705-4fed0d8c8401",
        "cursor": {
          "ref": "10fc8f2b-c16a-4d6c-8540-874d002090fe",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aa9a3d3a-3dcf-4108-8fbe-1591fa2c53d0"
        },
        "item": {
          "id": "b2408877-1f8e-4d4b-8705-4fed0d8c8401",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb18a492-660d-440e-857e-1a70035f6a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5d6e5-bd0d-4357-9b6e-42cc4f35e34f",
        "cursor": {
          "ref": "447eb6b6-d525-41d3-bba4-29efbee12129",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "048b569f-5c80-412c-9236-cd38e03af64d"
        },
        "item": {
          "id": "a9d5d6e5-bd0d-4357-9b6e-42cc4f35e34f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "304bed07-15e5-4a44-b2f5-148b40dbe80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79604123-7cac-466a-85c8-7f6f009986dc",
        "cursor": {
          "ref": "39bdd3d8-9936-4c80-bfb4-d410b3a8113b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fed17674-c322-4596-900e-484bafe30b22"
        },
        "item": {
          "id": "79604123-7cac-466a-85c8-7f6f009986dc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8f6137ab-7d88-46e4-b589-2301e37626b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c318749f-993b-48d6-9360-cbfdd36cfa11",
        "cursor": {
          "ref": "d73e12bc-3c66-47dc-b5ae-3dc7e1a70b05",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "700cd6f9-4310-44ae-8ab9-dfe41c3bd2c5"
        },
        "item": {
          "id": "c318749f-993b-48d6-9360-cbfdd36cfa11",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "12a063aa-0903-4880-b8c6-8c725062c4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9922c38-9de7-49c1-a193-2457c98b73d4",
        "cursor": {
          "ref": "2d582b8e-5541-46cf-8881-f86f1584c1f1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5d04c9a5-a9ba-40a8-b522-904ce7fd7c31"
        },
        "item": {
          "id": "f9922c38-9de7-49c1-a193-2457c98b73d4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1a2e3864-9d3a-4367-99a5-7fe9eae97294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87da4c1f-826a-494c-af24-ba96a59047d7",
        "cursor": {
          "ref": "eab249ac-a191-4f07-99b5-c73fb766dc5b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9bfd2242-d2e0-4ac3-9e45-ae32050f7956"
        },
        "item": {
          "id": "87da4c1f-826a-494c-af24-ba96a59047d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68974b8b-9415-4436-8edd-dc65eba5e63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea3d26b-ef49-4bc9-97fe-83faee1f67b3",
        "cursor": {
          "ref": "0a21ebfb-85f4-4a53-81f8-e106f284296d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13f55175-8f32-44c6-9b8b-314d94f2adcc"
        },
        "item": {
          "id": "9ea3d26b-ef49-4bc9-97fe-83faee1f67b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c30dedd0-0722-4645-946e-524095b3d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecbc445-d0e3-4512-8d5b-1ed6788efa54",
        "cursor": {
          "ref": "5bb49d4b-c5f8-4a73-82d8-394ecde2adb2",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "187eb487-a69b-4a18-8194-4c2c4e9c0e51"
        },
        "item": {
          "id": "fecbc445-d0e3-4512-8d5b-1ed6788efa54",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a58f923-2933-4ff4-98c0-6955e8502dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0534528-4745-4121-8f10-47fff45c4fb2",
        "cursor": {
          "ref": "d20c7091-4969-4714-97b2-c114db53b619",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "579894e3-85e5-4412-91c0-1d0e50bf2af1"
        },
        "item": {
          "id": "d0534528-4745-4121-8f10-47fff45c4fb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d18ea003-a333-4890-92ad-881aaf6cdb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b403ef-7eb9-4f30-a05c-1445d30af7d7",
        "cursor": {
          "ref": "59df4582-d81a-4618-aab6-9301b4f4b29d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5227b415-ce05-4333-93bd-3fc04439d202"
        },
        "item": {
          "id": "06b403ef-7eb9-4f30-a05c-1445d30af7d7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "09d747d8-9227-4c8c-af10-1935444051b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd48c25-1baa-4257-beb4-498060ab7230",
        "cursor": {
          "ref": "b40dd218-8f66-44e9-8c13-89691934f64e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a449bc55-28e9-4673-b5b0-154bed84e8d7"
        },
        "item": {
          "id": "2cd48c25-1baa-4257-beb4-498060ab7230",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ae86634-4608-45e0-a941-ef52c8c2f76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179612e9-e580-4436-a35a-35892bdc974d",
        "cursor": {
          "ref": "b3267232-45b6-4d8f-9eb5-05af4a58fae2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "02bea68c-622e-42e1-972a-6084a341cc6f"
        },
        "item": {
          "id": "179612e9-e580-4436-a35a-35892bdc974d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7ce24a6a-c3ad-49fb-a6cb-15af1bddea92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabac922-f5d7-4b25-a96d-84e6d0594fe3",
        "cursor": {
          "ref": "faaabbe2-c1a0-474b-99e9-931c3b8cee31",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "581b2768-5395-46a3-b8ae-839460d111be"
        },
        "item": {
          "id": "dabac922-f5d7-4b25-a96d-84e6d0594fe3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3efe929c-97c9-412e-a115-19cfa9f12fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b235de-3cc6-4597-bb21-23158b8eaab7",
        "cursor": {
          "ref": "2627910a-b4f1-4f8f-a68b-46645235b89d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "36b895a4-0ed8-4d58-aead-f5f2e13fd757"
        },
        "item": {
          "id": "e0b235de-3cc6-4597-bb21-23158b8eaab7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9c10ecf4-5355-4958-bbf2-ac19128f1771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7539ef2c-4c43-4042-a9ea-7e747a12e0a8",
        "cursor": {
          "ref": "a9f69b92-e6b9-4d76-b111-7645becbdf1c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7f7aebff-b799-465e-803e-4a77b08b12f4"
        },
        "item": {
          "id": "7539ef2c-4c43-4042-a9ea-7e747a12e0a8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f44afab0-150d-4c2b-a8e4-94a014b0e6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afa1a79-7640-440c-ad1c-314a4ad5c126",
        "cursor": {
          "ref": "b66cab26-4191-4216-aa83-60d71dee744c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b39f909f-39c7-4ce4-a416-1bd406a45954"
        },
        "item": {
          "id": "8afa1a79-7640-440c-ad1c-314a4ad5c126",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "655a4a6e-0fa6-471e-99b9-b4005f1d409d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0289a-8b3b-424b-8fc2-a609ded388c2",
        "cursor": {
          "ref": "05fbba7a-3492-4adc-a0db-430d08a56b4f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "57917ce1-2583-4338-abdf-9bbf4f5b0523"
        },
        "item": {
          "id": "88f0289a-8b3b-424b-8fc2-a609ded388c2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a420fe1-d551-46c7-b9d0-14c761d29de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe504c2-2baf-402c-81a3-542c4df37149",
        "cursor": {
          "ref": "da0ef43d-efe9-43c5-a746-69d953980778",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "204be186-c83a-4a20-8fc7-7ee28ec8ae6a"
        },
        "item": {
          "id": "ebe504c2-2baf-402c-81a3-542c4df37149",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ff5ed671-ae31-4586-8c7f-6d51f925465a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d770871b-36e5-4093-8836-02dc60c80079",
        "cursor": {
          "ref": "7059ccef-a101-49d4-9652-2f88883846af",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "18275abc-4c0b-4d0a-9a77-58b9ce1219e4"
        },
        "item": {
          "id": "d770871b-36e5-4093-8836-02dc60c80079",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb849321-4c9c-4f51-a1f5-9ba692790b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0493a1d3-5fea-4778-a98a-e09262438c56",
        "cursor": {
          "ref": "8d3d5414-fade-472c-9ea3-9d123a503b1f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "82eaee25-5c3e-40f7-9a02-b0e7ada3898b"
        },
        "item": {
          "id": "0493a1d3-5fea-4778-a98a-e09262438c56",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a408b48a-bde2-48c5-9109-eea7de705ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532d9156-881f-47b5-9ad9-f55e7120e09c",
        "cursor": {
          "ref": "346ba768-8697-4a23-a359-a92d64ba8505",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c95abee0-20b5-43b2-a739-92d5325e9a9b"
        },
        "item": {
          "id": "532d9156-881f-47b5-9ad9-f55e7120e09c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ae2c100d-f93c-4b05-97a3-ae1097d89f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1992587-6189-4b4b-913c-be1706e554a9",
        "cursor": {
          "ref": "29abd1d8-7e89-4705-a13a-3df88e70c207",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "672fb005-af46-41d9-bc5b-201bd09a2637"
        },
        "item": {
          "id": "e1992587-6189-4b4b-913c-be1706e554a9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7e063604-336f-4c00-bb47-f110639d22c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeb1598-b619-4b64-b164-ab73bab0f79b",
        "cursor": {
          "ref": "1eb7f6ea-fc58-4dc0-88c6-6acd756341d6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e0fff65f-69d5-4e5a-8973-982ec2acf539"
        },
        "item": {
          "id": "fdeb1598-b619-4b64-b164-ab73bab0f79b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "080a8476-4f88-4661-8cdc-f2bb2670e41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f0eb28-9108-4d5f-8b3b-4f5a2c912e8f",
        "cursor": {
          "ref": "327d352b-8b84-443f-a825-6753ff9d16e3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a325ac1b-a71e-405d-8cb0-4b6e398ffe61"
        },
        "item": {
          "id": "68f0eb28-9108-4d5f-8b3b-4f5a2c912e8f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "91e430ab-c321-4e46-b6e7-ec301b66bd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee3b3e-9de8-45c9-8afe-e00944d7769f",
        "cursor": {
          "ref": "c40a8398-69a2-4558-b736-35d5f1305ba4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "59b0e884-c5f5-47fd-85b1-71b9c8577582"
        },
        "item": {
          "id": "e6ee3b3e-9de8-45c9-8afe-e00944d7769f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d5bafe4f-7c05-40c4-bdf5-630d7d5d7bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b4460d-0c86-47f3-9c6f-6ef6b543ebb9",
        "cursor": {
          "ref": "45f91b0e-e492-48ae-93a4-5647f3edbf4f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b0a26528-3f98-46d7-b91d-c431ac79ab96"
        },
        "item": {
          "id": "19b4460d-0c86-47f3-9c6f-6ef6b543ebb9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "60ef51b1-e8e2-45eb-9395-db7b3b4b4c84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc9b3e2-90ae-4542-a4e5-00a81af1711f",
        "cursor": {
          "ref": "f3ead4df-f959-4b72-a00c-9837f13b767f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ff2badc1-730a-4c25-91cd-f8e295316c98"
        },
        "item": {
          "id": "2bc9b3e2-90ae-4542-a4e5-00a81af1711f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7eecaa98-c004-4854-89da-57c067cecde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2867d688-e19a-4117-b490-61692d7fd124",
        "cursor": {
          "ref": "280179a8-8991-4b48-b593-f0b3c1ea048e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "70e390cc-86d7-4edd-9f14-233bef085c9d"
        },
        "item": {
          "id": "2867d688-e19a-4117-b490-61692d7fd124",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5d19b03d-5b2d-436b-a04b-916eb275efa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c553a8-7417-4ed1-be40-f3654c03633f",
        "cursor": {
          "ref": "b4fda62a-9f9a-45c9-92f9-05dc092f65bb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "be84ba90-3275-4bf4-b753-c6b9600f2be8"
        },
        "item": {
          "id": "00c553a8-7417-4ed1-be40-f3654c03633f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f293a75f-a50d-43ba-9fd2-ebff54222e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b39ee-1bf0-4575-a31f-0d62cd529d3c",
        "cursor": {
          "ref": "11b730ef-77b1-4012-9d9c-aa964071c784",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f9782044-f6f5-4015-bc69-461563d41a2d"
        },
        "item": {
          "id": "794b39ee-1bf0-4575-a31f-0d62cd529d3c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "75cbfb42-acc9-4adc-8282-0d79ba83782b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae1e859-d845-415e-9236-fc9dd11643cd",
        "cursor": {
          "ref": "515781e1-aa32-4fcb-a556-e58d3327b4b9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5913cf06-6aeb-4edc-b185-d5160161ddd2"
        },
        "item": {
          "id": "0ae1e859-d845-415e-9236-fc9dd11643cd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6ae21b6a-e042-40f2-a65b-414747f7b244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f036c60-a5db-43eb-8f14-ea9db7f01ac8",
        "cursor": {
          "ref": "3280f670-580c-4ea5-952a-d1d3215dfdea",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bae861f8-4e50-4ee3-b23d-d715bcb7e407"
        },
        "item": {
          "id": "2f036c60-a5db-43eb-8f14-ea9db7f01ac8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ef474bbc-a23e-410c-992b-b227709486b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b948d6a7-32fb-49df-b687-3e2397094cf2",
        "cursor": {
          "ref": "96a23b5b-095a-4c33-8fdd-7f1f376da2ab",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "378f89d1-6ec2-4775-91c9-d41641f69480"
        },
        "item": {
          "id": "b948d6a7-32fb-49df-b687-3e2397094cf2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9e7da06e-5175-4de2-a38c-01f6b118b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd5274b-21a6-4464-88b5-a0d9518b67f3",
        "cursor": {
          "ref": "096c0c4d-b8d2-4f83-b454-6877cd90b569",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1778b8b3-e0cc-4302-a720-6fe5d43ee4f7"
        },
        "item": {
          "id": "9cd5274b-21a6-4464-88b5-a0d9518b67f3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e1f02557-52fc-42e8-bdbf-e4b08ca12c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f35ee3-9781-41ca-88f8-493a8eb0fc9a",
        "cursor": {
          "ref": "b0a8d517-60c4-4ec3-9ef7-dd1e2ef3c02b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a3d92984-237f-4de6-9991-c0fff678f7ea"
        },
        "item": {
          "id": "d4f35ee3-9781-41ca-88f8-493a8eb0fc9a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "95c55546-7ff4-481d-a0e9-c615ea9d4ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4981b9-b397-423c-91a4-8e65814ad101",
        "cursor": {
          "ref": "1b3ac76c-e165-4774-91d0-59f94e6db761",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e18dc93-3bc6-403f-8757-a0636de96ab4"
        },
        "item": {
          "id": "da4981b9-b397-423c-91a4-8e65814ad101",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a29f8e1e-e7ba-4c77-8bb8-fec458240ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195979b-e696-425f-a5a0-ac7b1e878fdb",
        "cursor": {
          "ref": "b0e971a4-6ef8-4854-b688-9c76968807ab",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a1ca5880-11d7-420b-ab1a-afc22e32d740"
        },
        "item": {
          "id": "4195979b-e696-425f-a5a0-ac7b1e878fdb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "97a1bdbb-8525-422c-a433-9b61b200b292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab79b20-dd1b-4009-b065-a855e3028d5f",
        "cursor": {
          "ref": "d8f15456-a377-4116-ab62-7275dc287d2b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee86a817-1ccf-4e70-a244-22ccfcd94b46"
        },
        "item": {
          "id": "9ab79b20-dd1b-4009-b065-a855e3028d5f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "10e13bc1-3254-48dc-bbeb-01029f70dc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d8ce85-2693-4aae-88c6-6459c5d82354",
        "cursor": {
          "ref": "34b37462-cbea-46a9-b9e6-331d678cb99d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca39465d-b854-47bc-8fe9-285cb9c14d46"
        },
        "item": {
          "id": "79d8ce85-2693-4aae-88c6-6459c5d82354",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e34195d0-0719-4953-bc32-2264b80e3c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9122df0e-60e6-4652-9454-9a7eb93ca8ee",
        "cursor": {
          "ref": "73275ef4-42fb-4e53-9490-e5b227494a6b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8405949e-0376-4b8c-9145-c03d5cb3b865"
        },
        "item": {
          "id": "9122df0e-60e6-4652-9454-9a7eb93ca8ee",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "af42d463-dca5-4f97-ad2e-aca40ba2a840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dab48fb-75df-493c-88b1-8c5c1a3dc939",
        "cursor": {
          "ref": "d9a75773-a4b6-47f9-a477-51ee72fc5551",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2f11f26b-564b-4af1-a24c-addb7ffdd01f"
        },
        "item": {
          "id": "2dab48fb-75df-493c-88b1-8c5c1a3dc939",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dcefc85d-4b9b-412b-8e2d-181bfeb3a947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524e7bae-0516-4deb-99b9-044d134f1f11",
        "cursor": {
          "ref": "09594014-978d-4967-9e6d-baad5665890c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1501a10e-7937-408c-9c58-59cea9a5356b"
        },
        "item": {
          "id": "524e7bae-0516-4deb-99b9-044d134f1f11",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "81ac9374-5a08-4c68-ae56-374d2f9244c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712a8e8c-5b22-404e-a13a-3dac44146148",
        "cursor": {
          "ref": "28f7599b-154f-46e3-8df7-950e04adbc66",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3b671965-b38b-4f5d-a282-d33042cab2e5"
        },
        "item": {
          "id": "712a8e8c-5b22-404e-a13a-3dac44146148",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "464970f9-f13b-4e31-aa64-75d32a9249c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d412dafe-f60a-4b70-b857-ecbdf8072bda",
        "cursor": {
          "ref": "84b055cb-25e6-481f-a727-c87c0ca50982",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "41dc079d-6616-40ba-a5ab-1a8839108fc5"
        },
        "item": {
          "id": "d412dafe-f60a-4b70-b857-ecbdf8072bda",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f0ab702d-25f1-4ff0-a527-bcb1218f768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a922b3e0-0649-4550-ba7f-5eb28797491d",
        "cursor": {
          "ref": "001d9fa9-1ef5-44da-8599-9f031147b165",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "06e81c58-381a-4817-a671-c44db0309138"
        },
        "item": {
          "id": "a922b3e0-0649-4550-ba7f-5eb28797491d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "75789b3c-405f-4be5-996a-9a4936b18c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b92ed-b9c9-4787-9a28-22d375b652a5",
        "cursor": {
          "ref": "19fd308c-2e3a-47b7-92d7-3f097488ca2e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "66cb2cdf-ed71-4aca-958a-74f2250e42cd"
        },
        "item": {
          "id": "559b92ed-b9c9-4787-9a28-22d375b652a5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ab6873aa-3e97-42a4-95a5-879a8e15c005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f021b4-03a9-4925-a336-df5555a538bb",
        "cursor": {
          "ref": "b2d53dd0-51a3-406b-8dd9-592fcc178a57",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3be0ca39-912c-4685-9dbd-235129249a8b"
        },
        "item": {
          "id": "f3f021b4-03a9-4925-a336-df5555a538bb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ff24642b-57cb-4eff-9e98-679a935d26ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cd580e-d703-4715-96ca-85950da7abc2",
        "cursor": {
          "ref": "15c1f603-972b-4442-bd86-23a3eb6e3cdf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ff1008a5-a104-42d1-b20e-b4471ab8a12c"
        },
        "item": {
          "id": "09cd580e-d703-4715-96ca-85950da7abc2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b4047d7c-64fc-470f-866c-6c996e51c7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a326e72d-9697-4870-bbe6-66633473ea0e",
        "cursor": {
          "ref": "b3c15df9-9395-44c1-ba11-87d278ba92a6",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c2f9e141-517a-46e6-87a6-e679eb29c53b"
        },
        "item": {
          "id": "a326e72d-9697-4870-bbe6-66633473ea0e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "42b02eea-0db1-42dd-b322-37ae53d1dbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df433e4f-348a-4b80-8ec0-ef866469d572",
        "cursor": {
          "ref": "2c5b6bd4-9dac-4b45-b329-b2f8d43e2a46",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "95422abd-0801-4b5d-9858-bd1c17398aa0"
        },
        "item": {
          "id": "df433e4f-348a-4b80-8ec0-ef866469d572",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2d9c170d-fe31-4fb6-ae13-0158b30569e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aef81d-30f8-472d-8153-226213d60ac3",
        "cursor": {
          "ref": "76b199be-895c-4e55-8f35-2118c6d21bd8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1df02507-c5e3-4d3a-b9d0-f4fd6026a1f5"
        },
        "item": {
          "id": "c0aef81d-30f8-472d-8153-226213d60ac3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eac91ed4-0ede-4f00-bc43-c75e4631bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d648471-cfd8-4563-a285-cdc671294850",
        "cursor": {
          "ref": "70ac8e28-ff20-4a9b-8dd0-ed01049163cc",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e31a571c-7d8c-4426-a8cb-655b15831ccb"
        },
        "item": {
          "id": "6d648471-cfd8-4563-a285-cdc671294850",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d831079e-a887-4abd-a076-9c543f9ab08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f45efdd-b129-476b-83e5-4fe4355956a9",
        "cursor": {
          "ref": "080a75de-37a2-42ac-873b-14948293e95e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "42b3cc17-c97d-4feb-be7f-23597fdf4d5b"
        },
        "item": {
          "id": "6f45efdd-b129-476b-83e5-4fe4355956a9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "02f3d68d-5946-4a54-9dbb-749808b09e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee536d95-d5a0-4e04-91a2-665678326889",
        "cursor": {
          "ref": "6c9f8e20-4b07-4d92-bd8e-d8f31585955c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d009fb6a-1af4-4608-9e1a-e5aea0bd6324"
        },
        "item": {
          "id": "ee536d95-d5a0-4e04-91a2-665678326889",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "84d2fdfd-96b7-4a08-bda8-fd78aeee1111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28761f1c-f907-4cfa-a6df-623229000c12",
        "cursor": {
          "ref": "a171f1bc-b3d0-4fe6-b967-b6683d06fd04",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "786001eb-3844-45c4-9e0c-762df53acf63"
        },
        "item": {
          "id": "28761f1c-f907-4cfa-a6df-623229000c12",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a43ef324-257e-4828-97cb-e2eda89faf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5c81a8-c276-4ad2-9f2d-b228cc3e1eae",
        "cursor": {
          "ref": "3c0447d6-688b-402c-89e7-08f66745a6dc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "abfdfd72-6f70-4858-bb1a-9e04f4f580b5"
        },
        "item": {
          "id": "8d5c81a8-c276-4ad2-9f2d-b228cc3e1eae",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "217fe701-5bf2-49c8-98f1-70b0ad09f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05bc8f9-379a-430f-8b7f-5f8b9b8cca98",
        "cursor": {
          "ref": "a7b32d9d-dd92-4fbd-a1ca-d53eb3398cb6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c0baaccb-1115-44ab-bcf9-aa2ee8d7fc0e"
        },
        "item": {
          "id": "b05bc8f9-379a-430f-8b7f-5f8b9b8cca98",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b7a0b213-6433-4882-b46f-365c278b9156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756a2473-5295-45d8-99be-bd3beb135d93",
        "cursor": {
          "ref": "14fc2c61-dedb-4e75-848a-5443afa0b632",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "664e75f9-d502-4f6b-81fb-e5c2154e4639"
        },
        "item": {
          "id": "756a2473-5295-45d8-99be-bd3beb135d93",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "05b706d1-87c1-4186-a451-7269d391c292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43baea38-4307-4780-9a82-274eb6927967",
        "cursor": {
          "ref": "8223cde6-efb8-4f27-befe-bca3ec8c55ba",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2de6156e-5a44-4ea4-89a3-ef69d1cf33d4"
        },
        "item": {
          "id": "43baea38-4307-4780-9a82-274eb6927967",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "04af0235-bc5f-4b69-9510-3725713e01cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304e3469-2f95-4347-925e-6ba1758e66cf",
        "cursor": {
          "ref": "4ba5741a-21b1-4f9a-ac30-86db8ee53032",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5520febc-d859-4958-b7c9-9efb350e828c"
        },
        "item": {
          "id": "304e3469-2f95-4347-925e-6ba1758e66cf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4bd8f097-40db-47af-a6de-91b3d9abe9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a7ba47-19b0-4f69-a45a-285850af1a7c",
        "cursor": {
          "ref": "96fa952e-4786-4314-bcdb-dab006696edd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f80642a9-779f-499e-93e5-07d1a01a04af"
        },
        "item": {
          "id": "e9a7ba47-19b0-4f69-a45a-285850af1a7c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "770df896-ab7b-4e90-b93b-be15f3b81879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca46c36-9569-4735-9b8b-0072754d3a2e",
        "cursor": {
          "ref": "03ba8d1b-2a61-4f14-aa63-1175a1e970e1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fc531b13-36d4-4695-bbc2-878cc7ac3868"
        },
        "item": {
          "id": "7ca46c36-9569-4735-9b8b-0072754d3a2e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a08a799c-63d5-4963-97cf-ba58f20b57b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c3a94d-ac90-450e-bdf1-c0cd16b6dc64",
        "cursor": {
          "ref": "85a4625e-8c0c-4401-bad1-4bc8e884df0d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "57556e8c-8469-4747-a9c0-73928dbefa2a"
        },
        "item": {
          "id": "88c3a94d-ac90-450e-bdf1-c0cd16b6dc64",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54b983a0-c762-4f31-8509-943b07daf891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd93324-1856-4d5d-b2de-c712dd7f8d72",
        "cursor": {
          "ref": "4e343ec4-3f94-4ce1-bca6-9fb944ce8a3b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "68fa41af-080f-41dd-b105-ddd391344962"
        },
        "item": {
          "id": "6fd93324-1856-4d5d-b2de-c712dd7f8d72",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d1ca9e36-946d-4580-b65c-6ffe0115b60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f00ff8-42c1-4e3f-9906-3d7ab103f82f",
        "cursor": {
          "ref": "57a21aac-7a7d-480c-8149-0c25c971a4d5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cb236b9b-114e-4919-9133-d1235fdb9fd8"
        },
        "item": {
          "id": "72f00ff8-42c1-4e3f-9906-3d7ab103f82f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2ea19511-ac0e-4d91-a09e-42441169f3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fa1ef1-1958-4195-b5a7-683e8ecbb3da",
        "cursor": {
          "ref": "c9ed97c5-dd91-4464-b22c-6c94224fb769",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "def21463-d8ba-484b-8eb9-f2d73504a4cf"
        },
        "item": {
          "id": "94fa1ef1-1958-4195-b5a7-683e8ecbb3da",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b9c2e999-8c60-4649-a25b-ef0e0edb6a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce690b5e-4df3-47e7-9829-1b96b056b7bb",
        "cursor": {
          "ref": "39c88854-c34b-44b3-8dd9-11896902ec39",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8b657010-8391-44e5-b3f4-d05108055e59"
        },
        "item": {
          "id": "ce690b5e-4df3-47e7-9829-1b96b056b7bb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "567502e0-6c39-4412-9a56-5353be37ba5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2d8db-8619-4bf8-8b54-e79c7595e07e",
        "cursor": {
          "ref": "af7f9f75-867e-463d-a219-d131ff218e88",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7587a93f-ab6a-4923-a3d7-31de0e8ac216"
        },
        "item": {
          "id": "bfb2d8db-8619-4bf8-8b54-e79c7595e07e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d4669614-3f13-49c4-9bb4-3bfb828c25f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e3aedc-7f81-4c41-9adc-b7eae634be63",
        "cursor": {
          "ref": "c42355c6-4e7c-4db1-982d-be1d28b4837d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fc7eea54-faa1-44e5-8525-d3f5d5a5f113"
        },
        "item": {
          "id": "17e3aedc-7f81-4c41-9adc-b7eae634be63",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cc891167-cb9c-4558-8c42-ce5d6c59a161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8543acb6-3492-4b75-b916-66950f9f465f",
        "cursor": {
          "ref": "fe2c54f3-2571-45c2-8aa9-0a40f9ac18e0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "01b9bd83-90ca-4602-a597-72398ff609ce"
        },
        "item": {
          "id": "8543acb6-3492-4b75-b916-66950f9f465f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4eab5422-4481-4972-b2f4-f09749003277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d238745a-0562-40cc-90ce-9129187730f6",
        "cursor": {
          "ref": "ac387e0d-14c8-4c61-87cc-9cc864666845",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f95a90c5-b1d1-44a5-95c6-4615b163c25c"
        },
        "item": {
          "id": "d238745a-0562-40cc-90ce-9129187730f6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "33d2ae7d-7de3-47ed-986f-7f647c525008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6bee41-da67-4eaf-ab34-a8d0f1f640cd",
        "cursor": {
          "ref": "d359f8d2-8428-421c-a65d-adbd260650d2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9468bb08-bc3a-44bd-b930-ebf59ec9bb74"
        },
        "item": {
          "id": "7a6bee41-da67-4eaf-ab34-a8d0f1f640cd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "955bef37-c0a3-4c8e-b58a-b19cc94c31d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d2f744-d4f2-48c3-b865-1c531125386e",
        "cursor": {
          "ref": "81c83775-a790-4053-9144-fdce2d5be86b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6b631fd6-c085-4cc0-b346-4af5045f7be3"
        },
        "item": {
          "id": "d6d2f744-d4f2-48c3-b865-1c531125386e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d368c0e6-28ba-406b-940e-80dcf02e9ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe70f27-cd37-4508-871f-0aeded44d454",
        "cursor": {
          "ref": "44f8f3ee-d7d4-44c0-8440-822994de3876",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a0f40b5-5a40-4ae0-873f-fe52f6406c70"
        },
        "item": {
          "id": "ebe70f27-cd37-4508-871f-0aeded44d454",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7df1c197-8eb3-4dcc-96f7-7214f467380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5335c4-f52b-487a-89a1-84b5883ec524",
        "cursor": {
          "ref": "3b369f75-c8c8-4e34-924b-9d0c179970af",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "433b691d-dfb3-43f5-bf9f-9943e86d25fd"
        },
        "item": {
          "id": "dc5335c4-f52b-487a-89a1-84b5883ec524",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c11e6da-1120-405e-b803-89a52d7aac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c902c01-502a-4b90-83b2-0a7941f8b1e6",
        "cursor": {
          "ref": "6abb6611-1083-46ee-8939-88ed6c8bcd7b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "20a85683-6576-4b69-9c1d-4a017900f9ab"
        },
        "item": {
          "id": "8c902c01-502a-4b90-83b2-0a7941f8b1e6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ee238645-4216-4949-abe5-5fcb7553db47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28caf591-1d4a-4d7c-94ba-779844b79e74",
        "cursor": {
          "ref": "6f1dd193-479c-46c5-a295-49d5c1af79fa",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "756b2d13-43f7-45d1-91e2-f4c266f46ca8"
        },
        "item": {
          "id": "28caf591-1d4a-4d7c-94ba-779844b79e74",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b4c37be1-9685-416b-bb70-88b914b85d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad668a-2760-47bf-aa6e-5c91ef927511",
        "cursor": {
          "ref": "11f65110-fe82-43ca-af4a-80dff7851f96",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "44d6a9db-1b8c-41e9-ba7a-13f599e662f4"
        },
        "item": {
          "id": "f1ad668a-2760-47bf-aa6e-5c91ef927511",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "33983fe2-b984-4135-9458-610a75fa448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b09ad-f105-41a5-8f36-67b70e1dbea2",
        "cursor": {
          "ref": "be1b09a5-f0a0-4737-becd-5754baad1764",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d47f3bba-5d38-411b-851e-e764790709a5"
        },
        "item": {
          "id": "680b09ad-f105-41a5-8f36-67b70e1dbea2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "52ff02e8-cbf2-4ba9-bca8-d6238e2d213a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afe2039-a48f-4876-a356-af4c12c2a726",
        "cursor": {
          "ref": "88532b40-2902-44f6-9a65-cd5ee808cf7f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bc5f5151-1a58-4ba7-970b-7b18b6ced20c"
        },
        "item": {
          "id": "2afe2039-a48f-4876-a356-af4c12c2a726",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a28ff83-0145-4f16-9645-f185d5e00dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d714ff-36eb-47bb-87ca-5d5fb393a38c",
        "cursor": {
          "ref": "75ed0f55-1778-4d96-9ac6-de67ee45018c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c4568b26-d9b2-4b51-91a6-fee7c2ab4ad8"
        },
        "item": {
          "id": "47d714ff-36eb-47bb-87ca-5d5fb393a38c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "22f1d083-4b00-42ce-a19b-0286eb4e09cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4772336-e273-4faa-a70e-129850d9e36b",
        "cursor": {
          "ref": "19c3930c-9394-4ef7-b7ef-7030feec6110",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "149205f9-aa0e-4c52-b9eb-865e5a42c732"
        },
        "item": {
          "id": "e4772336-e273-4faa-a70e-129850d9e36b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9e04593e-492c-41ca-af68-3cdd935ac8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df908ee4-753d-4eae-aa34-1514c03e3251",
        "cursor": {
          "ref": "a8204836-643b-4687-a985-b415f50f464b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0330b3ad-bf8f-4852-ba1b-e3d27a690a0c"
        },
        "item": {
          "id": "df908ee4-753d-4eae-aa34-1514c03e3251",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "af984203-1f2d-47e6-b8a4-c1a5ba926ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfc46f7-c3e9-42f8-8755-03ee1258c6ac",
        "cursor": {
          "ref": "8a63851a-42c9-496f-8da3-ff25ae1f7c83",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8226642-6912-4afa-96b1-61679ed44968"
        },
        "item": {
          "id": "1bfc46f7-c3e9-42f8-8755-03ee1258c6ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3fdc9a1f-a831-45e4-9c0e-8b9a72cd9554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faf98f6-f991-416c-a039-66d904d4b883",
        "cursor": {
          "ref": "593aac58-6d6c-4e32-b7c9-49b410827733",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dd55b314-76b5-4007-a177-1cfd40629d17"
        },
        "item": {
          "id": "5faf98f6-f991-416c-a039-66d904d4b883",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2c295897-982f-477c-8278-3f9f82efd262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbcde45-c04f-4906-93d6-3880c62b5769",
        "cursor": {
          "ref": "d06deab9-d9ba-47ed-bbe8-b5108badf7b5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ffffc3cb-daac-4db6-a55b-01a9b7542ef8"
        },
        "item": {
          "id": "9dbcde45-c04f-4906-93d6-3880c62b5769",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc972b70-32d5-4020-a6b7-aa7939f55e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9685ef-b05f-4fc1-ad3c-bb39b0e117ba",
        "cursor": {
          "ref": "d405ea1a-6183-4c90-9f7c-b4150556fb3f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d97c73d6-975a-4b50-a6b6-0d34c09281bb"
        },
        "item": {
          "id": "cb9685ef-b05f-4fc1-ad3c-bb39b0e117ba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ddedf231-386a-4be8-bf71-4cd015162e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb67b17-b204-4afa-8f44-a5d6c07b2036",
        "cursor": {
          "ref": "ae40d13e-e29c-47a9-b4c3-4dbb6dacac9b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0ffe8dad-2b50-45b4-9936-fdaf37eaf529"
        },
        "item": {
          "id": "adb67b17-b204-4afa-8f44-a5d6c07b2036",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9681a3c4-1294-40ce-b921-884662d97952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf32b32-678f-46c6-8ada-7e816fd5e935",
        "cursor": {
          "ref": "05471106-ca93-4af5-bea6-f093e26845ae",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4d4b878b-8a8d-4b22-91b7-c71c834f3661"
        },
        "item": {
          "id": "2cf32b32-678f-46c6-8ada-7e816fd5e935",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "651d0d74-450f-42c0-a19c-2310dc5ab12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5bee09-f998-4bcb-a066-42fda6c33f07",
        "cursor": {
          "ref": "1439d9ff-631d-4678-94ca-97a0e0b7300c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7d919398-91f4-41bf-bc17-ee5a12df9662"
        },
        "item": {
          "id": "6b5bee09-f998-4bcb-a066-42fda6c33f07",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d306b1b9-60ce-4d58-a3ba-a5d595a91e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5b17cd-6c59-4fa9-a088-cc89e492b80a",
        "cursor": {
          "ref": "c0b9dd1f-6823-496b-8b37-d1f174149636",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7527dcdd-0cb8-45dd-8486-63d366f75f83"
        },
        "item": {
          "id": "cf5b17cd-6c59-4fa9-a088-cc89e492b80a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b1dadc96-2093-401a-8d4d-3f395497089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5e6b40-a0b2-4677-86b3-c3c6832cafa6",
        "cursor": {
          "ref": "f2a76be8-0ed7-460c-b4d9-9f3436fa77fc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "288fba80-28cd-43e7-ac98-a0b7344a566e"
        },
        "item": {
          "id": "9c5e6b40-a0b2-4677-86b3-c3c6832cafa6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1e9319ad-7183-46ac-85b1-b9a93b8a4910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ec14c5-66b9-4123-97f7-2d88c871fe43",
        "cursor": {
          "ref": "93f75b1b-133e-4033-986d-4003b5b0aaf3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e785431e-4724-479e-83f2-2ee610469bd0"
        },
        "item": {
          "id": "c5ec14c5-66b9-4123-97f7-2d88c871fe43",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8535399d-91af-4794-b41e-9fdbbd6e8e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc5fe65-061d-42e3-b6f4-734747cf3ca9",
        "cursor": {
          "ref": "86fd593a-94f0-4271-8d1b-746b5caf4bb9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e634125b-11c7-4a86-8e4d-4cade3fe8b56"
        },
        "item": {
          "id": "9cc5fe65-061d-42e3-b6f4-734747cf3ca9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c4665b1-af20-4953-81cd-f02c77653ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25afb2a1-f22e-46f7-ab78-d3d3bd1d8fcc",
        "cursor": {
          "ref": "1996b8ab-6f53-459f-bf2e-d5c48453b0f9",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cff39969-ecdd-406c-a0cc-0f2cef525228"
        },
        "item": {
          "id": "25afb2a1-f22e-46f7-ab78-d3d3bd1d8fcc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "13a78163-3686-4f77-828d-de80ad202c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a895d0-906e-47aa-8628-fd2996a0d788",
        "cursor": {
          "ref": "5adb3586-e596-4e7b-8cc6-24b6e2088619",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ddb69383-bb3e-4eef-92a1-604935677e27"
        },
        "item": {
          "id": "43a895d0-906e-47aa-8628-fd2996a0d788",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5150fc09-bb65-48cf-923b-a6ffa0444009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7785369b-6fbd-4669-97e2-1579bb585030",
        "cursor": {
          "ref": "3229b073-329e-42e2-b137-3e393b257474",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "16a57c2b-2240-4920-b726-7ae82c53fc21"
        },
        "item": {
          "id": "7785369b-6fbd-4669-97e2-1579bb585030",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a02eb49d-b48f-429e-a265-04479d0cfd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47f51b-9f41-43a8-a0f9-df998923a5dc",
        "cursor": {
          "ref": "a0e59987-80ca-486f-951c-e7a254f77e88",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ba6b3f7c-c2a1-4245-b89b-6f68dec34902"
        },
        "item": {
          "id": "3b47f51b-9f41-43a8-a0f9-df998923a5dc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "196a1281-e856-4455-bede-dccab86fba48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ababea-78e1-4215-ac34-b2d39a0741cd",
        "cursor": {
          "ref": "00f30188-8c0d-4ae9-9f30-f00466e20f6a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b569cc92-9efb-40a8-88e3-04d71c027032"
        },
        "item": {
          "id": "48ababea-78e1-4215-ac34-b2d39a0741cd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "63fb7ff6-a45d-4660-aad4-64ed8fd668f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4b2ea5-d64a-44e6-a9a9-5fa8a00639dd",
        "cursor": {
          "ref": "401be4bc-e628-4fa5-b8ac-c1823581af6e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f7887ca1-4640-4f1d-ac35-b12a7968d29d"
        },
        "item": {
          "id": "fc4b2ea5-d64a-44e6-a9a9-5fa8a00639dd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f57d91dd-5708-4419-88ae-258646df79e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ad8f67-7daf-4c7d-9186-67f95fb09b59",
        "cursor": {
          "ref": "1a387ca0-8dba-4dc6-b48f-3c9fb58181c1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9bc6eebe-fa94-4ca7-8b62-3a9acfbcc28e"
        },
        "item": {
          "id": "81ad8f67-7daf-4c7d-9186-67f95fb09b59",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "477064e9-fc36-4f33-8611-e0d2ab76e4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6d3918-dde2-4e16-8b19-0394a943b02e",
        "cursor": {
          "ref": "e2025eec-16dd-4a03-983c-c37323a64536",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0a531ae0-00d2-41dd-b51a-a2c6c446e945"
        },
        "item": {
          "id": "fd6d3918-dde2-4e16-8b19-0394a943b02e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a4eb93b3-9bc2-4b4e-b909-a314b68b790d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cc115c-79fe-4e37-bff7-d39192988dc5",
        "cursor": {
          "ref": "05d85709-6bb0-4c0c-868a-715e79ff609a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "064673d5-8c99-4e58-b8a5-ccc84d8364e5"
        },
        "item": {
          "id": "b0cc115c-79fe-4e37-bff7-d39192988dc5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c06d3fa6-de7a-4354-9297-b786322080d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af5270f-760b-422c-a507-78e725ab0d34",
        "cursor": {
          "ref": "d197100f-8776-4cf7-ab9f-53709bdbd60f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e71fc1fd-1636-42ca-b6c3-735dbf10d2c5"
        },
        "item": {
          "id": "9af5270f-760b-422c-a507-78e725ab0d34",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fbaa7246-8ec6-4121-99a0-a80942f2871e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ace7da0-eb11-440e-8d52-d4775f96dfc2",
        "cursor": {
          "ref": "88068243-1000-42b5-994c-e86650c6ef58",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f8f0d043-fa57-4768-9d6c-2e75c874ed9c"
        },
        "item": {
          "id": "1ace7da0-eb11-440e-8d52-d4775f96dfc2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ba7975dc-763c-4084-9187-3d2c06a1747f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f33f23-eaa2-4b02-b6ce-711ddce680ad",
        "cursor": {
          "ref": "3a5c420f-1159-4b91-9217-dc2e7ba34a08",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3d4eda96-15bc-4b91-b213-71639b6ac6da"
        },
        "item": {
          "id": "b6f33f23-eaa2-4b02-b6ce-711ddce680ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1e9b43a1-2709-4161-9675-3940f83c8f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40084c8-2c1b-4317-b56b-cecda1195894",
        "cursor": {
          "ref": "d44ef905-feba-43a6-9bdc-70208583eeaa",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0b439ecb-63ca-42cc-ba79-9d4c9c0a3130"
        },
        "item": {
          "id": "f40084c8-2c1b-4317-b56b-cecda1195894",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f25e6a21-864c-4abb-b4da-5f71e22db9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b70dd19-82a6-43f8-9f02-df71744b4c35",
        "cursor": {
          "ref": "a8a2bfe1-f599-458f-9a36-9d6196e8fb87",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4b73b724-6b32-4348-bb57-d6a638052de5"
        },
        "item": {
          "id": "0b70dd19-82a6-43f8-9f02-df71744b4c35",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "22b0453b-b2ba-4333-afa6-c6f5b9aea5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93282275-ace6-4619-8e98-5ac3c2bb5967",
        "cursor": {
          "ref": "fed56ece-8f86-42d9-9e02-67f5129d7ea2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cd197046-3893-4229-8818-fb78413a7db8"
        },
        "item": {
          "id": "93282275-ace6-4619-8e98-5ac3c2bb5967",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8b2f3b5f-eef7-4183-9188-e304dea0d6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e5e8bf-4fae-466f-b16d-df27e30b0f8d",
        "cursor": {
          "ref": "d154112e-23cb-4dfa-9ed2-6fc65847b3b9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4090f760-ce64-41a0-9827-989a063a2ea8"
        },
        "item": {
          "id": "01e5e8bf-4fae-466f-b16d-df27e30b0f8d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "32680399-137c-407f-b497-5055d75ea825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf644850-cddc-487e-a67e-f41606063e50",
        "cursor": {
          "ref": "9f243d63-e15d-4e99-9284-891fa69a7d10",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d73d3513-857c-4b5c-af75-6222c84cb204"
        },
        "item": {
          "id": "bf644850-cddc-487e-a67e-f41606063e50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a9ddd2e-9dfa-4dc1-b474-e1dae2cb9c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f91ce-7b93-4cba-93de-ae0b3d1ed247",
        "cursor": {
          "ref": "84617165-7d2d-4508-ba81-ef033910d688",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e619c3e8-e3da-4dbe-8b44-97f1947fe6fa"
        },
        "item": {
          "id": "c35f91ce-7b93-4cba-93de-ae0b3d1ed247",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "faaa055d-9821-4efc-af6f-a5d672226861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81955c03-0d85-47c6-951f-4ecec718fb40",
        "cursor": {
          "ref": "68bcac84-28c1-49da-8e3a-5b7a6006681a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4f7be154-330a-4a69-a9dc-78c0d678fef1"
        },
        "item": {
          "id": "81955c03-0d85-47c6-951f-4ecec718fb40",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0b76d6c7-cfe1-4ac0-9580-d12a5aac915a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e272fdca-61f6-4fc3-80ba-a28cc4e54b6e",
        "cursor": {
          "ref": "c06e86b0-c4c3-4ab7-9fab-52a40decce9d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cfd4a99d-d755-497c-af87-39aaabdb3b28"
        },
        "item": {
          "id": "e272fdca-61f6-4fc3-80ba-a28cc4e54b6e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b850cf5b-5fae-42b0-826b-f55748a824a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a514ca4-2287-4dbc-bc3a-fa05c3db829e",
        "cursor": {
          "ref": "3ace65d5-b3ad-423b-ac51-59a059719686",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d644f5b6-ac63-490f-996c-1c5caa8b0bab"
        },
        "item": {
          "id": "2a514ca4-2287-4dbc-bc3a-fa05c3db829e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3dc059d3-5341-4f3a-9848-0d13efb87f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8f3110-262e-47ce-a18b-d74ffa6e5a7f",
        "cursor": {
          "ref": "08bfce79-4be2-459f-b172-f3185b11f1b8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c1de5455-1b5f-4a88-8ce2-02fcbdfecc40"
        },
        "item": {
          "id": "cb8f3110-262e-47ce-a18b-d74ffa6e5a7f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f948690c-c5f9-4d78-8e23-06bad29e2b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae31cb8f-2d12-447b-8bc6-0fe4174f6ec3",
        "cursor": {
          "ref": "e78e38f8-4305-465f-9283-b7c414641de7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "71d11c1d-9609-44d5-b629-972ce23f43ee"
        },
        "item": {
          "id": "ae31cb8f-2d12-447b-8bc6-0fe4174f6ec3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b4aed2fe-4962-4c86-96f0-17c5e20cfa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a08e2d0-26fd-4d40-b179-7803573c3dfd",
        "cursor": {
          "ref": "ed5e0dd7-ff3f-4154-8c65-345d4c4ba0c5",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2e05a60d-597f-4afe-b825-feec5fffcbce"
        },
        "item": {
          "id": "2a08e2d0-26fd-4d40-b179-7803573c3dfd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "83c4d72d-bf78-48ad-bad1-d598f1817aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6255ae1-b63f-461c-a90e-3dacaec584c4",
        "cursor": {
          "ref": "aef74d7d-bb26-4999-918c-6402dc2865e4",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "300e3e9b-b9ba-4464-b131-5a5fcf04d7ca"
        },
        "item": {
          "id": "d6255ae1-b63f-461c-a90e-3dacaec584c4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "23b67994-ed19-46ac-a141-08e982df47a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba358d5-be73-4e41-bd50-394a1d846f63",
        "cursor": {
          "ref": "8946fd19-ea41-4da8-b788-f805a5bb15f9",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8032851c-6528-4bb0-9d0f-f0464033699e"
        },
        "item": {
          "id": "3ba358d5-be73-4e41-bd50-394a1d846f63",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae89ce98-bd16-436a-b12a-f91f0dd48baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43907053-4fe8-4497-adf8-f8b0f84c611e",
        "cursor": {
          "ref": "442dc590-d959-458f-9e8a-25933e296777",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "af59e20e-c92e-4e34-bbcb-123cc7a8246c"
        },
        "item": {
          "id": "43907053-4fe8-4497-adf8-f8b0f84c611e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cad7df63-60df-4ae5-8d54-de4817e98c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac3bbd9-7b76-47ee-bc2f-4d13ca4864fd",
        "cursor": {
          "ref": "1131d209-db50-4fc2-ad1d-edfd509bcd1c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "78b37a7e-e79f-4667-b6be-5fe7e9b98de8"
        },
        "item": {
          "id": "dac3bbd9-7b76-47ee-bc2f-4d13ca4864fd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f5189a27-91ce-4fea-b09e-78bd562f151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0830d20a-a5c2-409a-a6b9-c4b8c8e19155",
        "cursor": {
          "ref": "f2f4c4f0-d681-451e-be6a-e6f523660cb0",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2db49343-4157-47a4-bb66-329a388d52c0"
        },
        "item": {
          "id": "0830d20a-a5c2-409a-a6b9-c4b8c8e19155",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8e93550f-a3e1-42ef-98ed-ca3f72ebfc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4240815c-2313-4d2c-91dc-e9fdd0d68fb6",
        "cursor": {
          "ref": "69bc8b98-4a69-4a09-9895-615d1a7c83d5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2395d3c0-5db7-42e3-ad44-a31b9d8d444e"
        },
        "item": {
          "id": "4240815c-2313-4d2c-91dc-e9fdd0d68fb6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "25896fea-a87c-4adf-9ef2-8ecbbb6efb40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580150f3-1eb2-4af2-a17b-8739ce76b67e",
        "cursor": {
          "ref": "cada46a8-3a79-4fdf-ad6a-b10011b610a3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9a0099f7-adbf-4a98-8b81-745469993c07"
        },
        "item": {
          "id": "580150f3-1eb2-4af2-a17b-8739ce76b67e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e0e7ac63-f5bb-43f9-bed2-b073f09badd7",
          "status": "OK",
          "code": 200,
          "responseTime": 228,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a578ac-4ee4-47e9-b301-2a547c3d0a1f",
        "cursor": {
          "ref": "d21d8bfa-5a76-4761-8a85-5ac74edeb700",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "70d9c4f2-7e22-4d7c-b171-423cc5507f56"
        },
        "item": {
          "id": "92a578ac-4ee4-47e9-b301-2a547c3d0a1f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "22218f00-9258-4c0c-b6e4-f661fa8e5bca",
          "status": "OK",
          "code": 200,
          "responseTime": 1365,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a484ed6-475a-48ba-a9bf-729ad25ec2cb",
        "cursor": {
          "ref": "870c553b-6aa3-4c86-bbb8-132ae49e4eca",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bdd5f1a5-ce07-4f83-a8e0-332e194f1786"
        },
        "item": {
          "id": "3a484ed6-475a-48ba-a9bf-729ad25ec2cb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b5e9b413-9316-4cb6-8c41-3df7994f560c",
          "status": "OK",
          "code": 200,
          "responseTime": 1403,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d92dff-6cad-4c36-9890-85732cbfbaed",
        "cursor": {
          "ref": "e441aa6b-676f-416e-9608-a21139cb2d85",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f9508246-0a51-4bd4-939a-0a1f8937b147"
        },
        "item": {
          "id": "f1d92dff-6cad-4c36-9890-85732cbfbaed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30e268ba-aa49-4e22-898d-0a6cf725083a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d92dff-6cad-4c36-9890-85732cbfbaed",
        "cursor": {
          "ref": "e441aa6b-676f-416e-9608-a21139cb2d85",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f9508246-0a51-4bd4-939a-0a1f8937b147"
        },
        "item": {
          "id": "f1d92dff-6cad-4c36-9890-85732cbfbaed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30e268ba-aa49-4e22-898d-0a6cf725083a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc68c11-faa9-4975-bba8-45afffc2f4cb",
        "cursor": {
          "ref": "48075f59-4ee2-4360-82b5-9d99490864a1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "44f99476-a184-4823-8a12-8869748932aa"
        },
        "item": {
          "id": "5cc68c11-faa9-4975-bba8-45afffc2f4cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5df5828b-a94b-4358-9602-aac2adb3430d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2998184-ff3f-41ad-a758-1d1bdce64609",
        "cursor": {
          "ref": "5aaa4f70-b94d-4793-b6af-70086d11fd5b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "af61a338-6803-4795-b673-0672b840d126"
        },
        "item": {
          "id": "a2998184-ff3f-41ad-a758-1d1bdce64609",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9727e9f0-1954-4b36-9dc0-17d3e702de7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}