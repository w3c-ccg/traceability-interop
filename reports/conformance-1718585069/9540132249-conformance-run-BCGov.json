{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e7591fca-c720-487d-8b40-6950301a48f7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2ba3574d-239f-49a0-8c7e-7735cb576dfc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccdc9607-2221-42f2-938e-d3f50a39a68a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a05f723b-45ce-42e6-9e78-04be6bf80b58"
                }
              }
            ]
          },
          {
            "id": "8f1db61d-3d75-404c-ac9e-4aee224508b3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12c53d64-936b-4e30-bdff-e13379ed457b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05700513-d337-48c5-ab2b-1a929b81bdb2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c3a61db6-0cb9-4d97-a9fc-561da7a57199",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bd22f34f-0925-4425-9057-ba6686ea916a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca4b2d5d-19b3-4790-bf0b-34b09c9fb414",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c55b13d0-ad45-4890-b4e5-935dc5a160d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca901dac-d1ff-4bfc-b828-e5dcc8784f44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74307dd3-d61c-472b-9c1d-11fce36f0e65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "686c2799-d817-47b0-b747-a6b42bbc5b3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfd20fca-d9a5-4fa7-bc81-98c6576aa798",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97cc586f-b86f-446f-8fec-40c6967f5614"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "617d90ab-1b07-49ec-9ceb-d0a4f83c5799",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0745a118-03c4-47a7-8567-77471aacb43a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0667bd4-75ca-4395-a7af-b83ec1d4671d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74e95c1f-3239-44f3-ab77-35cbab3ab4d0"
            }
          }
        ]
      },
      {
        "id": "611effd4-d4b7-4e4e-b7ef-486f76f4081c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2fa0ee45-b2f3-4639-b44d-56d431956c12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efc70315-a743-4a3a-abc1-eff17a0b167f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f830a51f-a37f-4123-a699-3b68ff4a73f7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b13f72-cf35-48d3-8d4e-a4395a9fb0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "508a22a4-2298-4f4e-b9d8-2de6736156aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9124c4-0153-497b-8534-c815251438df",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8a8a5-7798-4c5a-9b7a-bc7f8bc497e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "202335e4-0a90-4634-8542-638da5f9e60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81b4e3b-3e2a-42f8-bb88-f21459a79d66",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc0b7af-d9c0-4ded-8f0b-04ca4aef6fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7ef178d-41dc-4cd8-93db-1d79a535f895"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86e9adf8-f0e8-44a7-a693-9a4353ae8724",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c764ddd-4553-440f-ac72-ab569bb4ee34",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a50435a-3d4b-453d-aafd-8974bd70f4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c70fccd-6589-4808-9f86-c62c9ae1f36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e185677e-f7cf-4bce-b860-b41cecee57e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad822622-19c6-4cb7-b9dd-ef84e81958ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6588065-1adb-4435-9f6d-ffd8e6a3baef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6753af52-fbc5-44f1-8a44-f6feafd2e625",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8209a4a4-d820-4b79-9dbe-bd507bce5301",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6e4c47c7-9266-4f6b-a179-a7691737d1a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "866140b2-52a1-4e33-92e7-035c7d04558c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "03f1c938-2b92-413f-bf48-75ea7ec1e215"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cc09095-7ead-41f4-ae71-295fb20de9de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e23bd1f2-aa2e-4986-b65c-afcc9ac7a3ea"
            }
          }
        ]
      },
      {
        "id": "d5bf8738-a5a3-499c-a3e8-a90444f511bb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0c4087cb-64aa-49d5-9da2-c15dc4229255",
            "name": "Negative Testing",
            "item": [
              {
                "id": "529b0848-3021-4302-9d45-8536b1b7fa9a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f3c9eb1f-7187-4a96-b8d7-35e51a395129",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ffa37b-cc04-4150-bf49-c7a9a9d7550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be0abdd-919e-4466-b7f6-4d117ca295a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fb428f-f311-43e4-ba16-95c258764cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e649f0b-8c12-4fb6-9cc4-8d4ea56f0ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fcf6c0-0d67-4e7c-b1ae-40987bac73aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d3132b-02c8-4a6e-9302-a2392e96680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b936d68-1f68-440a-80a1-e3e05423cf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891049e3-d705-4395-a618-fc72d66090f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89857fc7-739d-4cf9-a03e-00bc1288347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d0a75a-f887-42d3-98cf-cabaaa57fce9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e230de2-296b-4481-b0d0-7fd6b30289b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e1fd15-1079-4d6a-a05d-e1e163cfbd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205a0eac-7cdc-4c7e-846f-a9d8e6b40491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8f44f69-6c60-44a9-92b7-bcdc2c20a3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb382ce-2d2b-4046-bc89-b3173ee54faf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1712fd1-819b-48fd-9913-0cb3fcf9ad7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adf71f5-e9b6-4494-bda7-e39c1db7fd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1995f4fd-f2da-4d13-bee2-18d2c8981194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0ab6dd0-b69b-4f79-b370-312d9d2afd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e769c5d0-935e-4238-9a93-48f74a2aaeab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a3de94-2356-4a88-a2a5-93ec067618d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8ae1c5-8b8a-4fdc-a3c9-3379b1f5d6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad107ab8-c254-41c2-8430-db3c4313d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbc1a8b5-158c-486f-80cf-1d02c5c89b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12c1245-5686-446e-a450-2fe1c5df21a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68d119d-843e-42fc-8267-42072d7551ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c63df1-9c6d-46d4-8f19-deb73b7aeba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50cccf5-bb46-4e15-81e2-2bcf8659bfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "024f6648-f8f0-475e-83de-dbf16c38c510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3648b199-5da0-4d94-9b5c-5524729d09c3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bf8eb5-28fd-462f-854e-b94303f299c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19c229d-7a70-4612-9b64-512657834517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc73789-b43a-4c58-87ae-6fc7c7616a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23ad54cb-6239-431c-b896-de1e4acbcd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d743dc-eec5-41e6-930b-777232b0f004",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a8f45-e9cc-464e-8864-733c118f02a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3fcd70-5cb5-40c5-ab19-84126a897b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18dff01-a412-4c20-bde3-927d34734454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b97f85d3-4792-45ff-93ed-bb2cc400ac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00520b6-5393-4699-bf6f-e769cdf2ac3b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3149ff-c99f-41a6-b00a-62c92382b705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4988abe0-e729-4e00-adc1-c22e6c42800c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0583698-9a8f-4a75-9aba-cf0ef687ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f34571a-ed17-4557-993f-3967be820bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf7b9de-dc67-4dec-8f88-212ee64e953e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e302a8b3-b827-4659-9751-4490284837f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cafe71-a101-4648-8575-576116da03ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db84ab15-9df3-48be-9911-a4af8c88d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcd59736-0729-4a8f-b13b-91dd7750444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4468ccf-25f0-4876-b897-44f17c863b80",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e1a7d5-1680-4c7d-bc4b-2f22b426d785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3722b2ae-1e36-4498-979c-9e3ac9ed4067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f0d54e-4ab6-4a8b-999b-f3b5d26cb96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd4a4d3-cb2b-42ee-b29b-2df4791b463b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c739d715-fcf5-4451-98e9-af2f24a5ccef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294a5b0a-c408-45d5-a1b1-60d177481c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27eff345-4206-4020-b0d2-2a1e17a62a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7092893-ac2c-4926-9e63-47075c593d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4171b100-5103-4d98-884d-24422a668e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b6fd70-1368-436e-b728-6d0f387e3503",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57db537-fa87-4620-a74a-7d988928a142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0a361b-0345-446d-97a7-14e1821c7417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da8af61-2b80-4c9d-b02c-c62c6cbfc1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4a62915-53a0-4c80-b5b7-3651c3ec3764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc6182e-5051-4ba8-ac93-51dfc9486e41",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5586a70e-c394-45ee-abe1-df59830759b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e90de4-934d-4ed4-ac38-141682ced2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c1fe55-593f-4338-b133-a361b047c906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "244a6a41-840e-45ca-a586-e87443ab1ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968bab7a-5a06-436f-91c3-8c10eb42692e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef078b0-d2ec-416d-abc2-70e889bcf670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c9a9ba-74b6-40e4-99c1-5d02d67042fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3860f563-28fe-44d5-b996-1fabbe3a5611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cfc9b85-eba1-470d-9bf1-503988740423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060fea8-cdc5-4cb6-a5a9-57ece6167800",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedad350-4dc0-445c-8712-2e93c7f5cabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae95c72-a9c0-44b3-8070-175cee3f0fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8845db45-1830-4a43-88ab-586ab50b50a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107ec6c8-715a-43ea-becd-c84e22083cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfb01f9-18aa-4310-9b05-b24c56db1548",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0bb77c-d9f0-4058-a33e-d046f7c02a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afae5080-a620-464e-a3d7-36628607c319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd48508-dc44-4532-b0fb-8a4d8d104cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "564d1162-fe16-492e-a60d-db29ec7d530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dba2e03-80ad-4718-af7f-999725a83932",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf099282-9a26-4082-afd6-aac066248fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bf1f92-c18f-4804-bc7d-64eeb45c27ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc2787d-dc89-4dcb-b683-9101691807f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4b1a8c-d131-415e-b00e-c22b771cb156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c08f576-adc2-45de-9b2a-0eaa57c8aacf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c59c98-3c04-4690-a219-3c4eb1e6bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8042c11-bec3-42ed-909c-2d0534853394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714b8db8-53bc-4000-8436-6b634bf33823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e804dd-decc-4baa-a29e-c20311323b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea58326-bbd4-4dc5-ace2-c1c834a826c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2791d1-f3e7-4ed1-ae3a-905a808066eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bfc1fb-94c6-4667-96a6-8d1bdc13ca0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562e3e22-b708-425c-b870-5f4b90a32a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7a4370-c680-4679-9d0d-f6ceb84ed5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ce101a-7143-4580-bacc-beda996bc11d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38442c-9138-4510-819c-582ccd3e62c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dc1f16-b6a2-4963-ac1d-7a4fa961055a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f246b379-5e57-4ef4-85ad-7441af11d586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f61d2f-86fd-4fce-92ea-3cc913705d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede29cae-ed9b-466d-a44c-65cae09566c8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ab1a7e-f4c6-460e-b751-e1bd6870e628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d64f6dc-5559-4948-8340-7d116d4a82e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e78e4c-66ff-4bd2-aeae-cb56efeb9d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5347c12-1afe-4b03-97bf-3bee8401494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f211569-29c5-4717-bb55-8ef37c45f3bf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f95058d-b5a8-45d2-9b74-7784e4fdbe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0a9b0b-c5c7-4a8e-a67b-e519f382da04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb27861-2c1e-4fd1-b9fa-f07ceb86ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea26cd72-ebcf-48d7-9132-4082c07e502b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89be8b3-f06c-47cb-9dd1-df5b4c888d5d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1118f0-192f-4f45-adc6-2b66403ba939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a7e002-4adc-4f1c-8302-cc57d7856985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1440f6-5ea4-4671-b812-919f2ebd6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e22f5fe-b812-48c5-90d4-296c13f8532b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb145b1-6e60-4337-8a77-1a779ee3f1c4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f742559-28c7-4e18-8c3b-64dc1b742089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6710347-43b8-4eb5-b2a6-c4e3a364d740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043ee7af-afb4-4dbb-b63d-3cc1bdd96a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "771dd632-04cb-4621-a428-38cb2f9ce014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396e5597-791c-4f05-a094-d309054d2463",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02970c85-d225-41f5-904a-9282547bdc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8688231e-8bd5-4b16-bea9-ba6b1f84bc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd29c19-dfca-49f2-bf1b-1370fa8df75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f103b94-69be-44fa-8b04-8940d908684f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032d9329-0011-46c0-8a1c-a23cc9344787",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c300022-1493-4b8b-bc0a-7e259951d05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53cccdd-bb00-415a-8179-ede236994e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b518b7f-5523-468f-bd76-ba13977dffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecd4676-6f3d-401e-988c-532ccccc1ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b74037-589b-4618-8d35-477b2de3abf3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc2f16-ab96-45fc-8339-17fec18b415e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d21119-e1a7-449c-9af2-7d7b6113f88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd4bb17-9094-47a3-9c47-8402a3265224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db48d23-e386-42df-9ae9-66a914a605f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d296c6-1787-44c2-a2d0-515916a8056c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2905cf-40b3-47bc-8646-4c5ba7510899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7ed902-04e6-4b9d-a0ca-425190331f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dec207-6a14-4033-906a-8d37e9f95785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47649da-3718-46a0-a2c9-d6e5b305da96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20410a76-14e8-4138-a5a1-b89cec6c4e4f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0b8a15-a632-4cc0-bf8f-bd577e7fb853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c749e8-d66b-4e58-854b-56f93a38f5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e50115-2bad-458b-9096-f9005c845515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f21e29-e6a2-4bf3-b487-9c54909e4af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20ef06d-a65c-4d0b-b985-d9b94bc481c3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f065da9f-4c9f-496d-8fc9-08b8e1f0b175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd848ed-5059-4495-bca0-914e53333423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a3fc5c-c1e6-444f-8bc9-0f4d46a52b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "429ff51f-b7b3-492b-b153-8985b88282f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6382e2b0-74a8-4e78-a896-d44e58f8b10a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee7db8b-edad-4168-8574-c3f2ea7c8c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8180d9-4f71-48a2-8cfa-9df16f774868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd1bc7c-c741-453e-b460-f5286dffa672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84284789-313f-4d91-ae35-a2f789b5bfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ece01e0-a430-42d6-b826-da601e9793f3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5037c5-5eb1-44e2-ac1d-44a2395f6ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aebfab7-8b98-4ceb-bb84-1efe6a39f772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6b9937-861f-4e89-8274-cb48fbef880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb1d98c-f34e-47bd-8628-df12d6f53270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69b992a-8bc7-41dd-b03f-2caa43289b7a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca86988-7201-493b-a801-257bf50b4dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26e2089-8f27-4ab3-bd5b-ac608b39d246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf302548-7c46-4e2b-bc4f-218c9f17be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a018439-d38d-442a-aa52-a275c8b3356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44805f1-beaa-4494-aa53-d8f97a084685",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9534971-11aa-43b8-9943-4e93fbd23d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039e9e9a-37b6-4ab3-9a3a-84b6e241669d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e1952a-c1ed-4dd0-b46b-e7934e611a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b91de289-b4f9-473a-922d-670622585af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78704b3-ca9e-4318-8c3f-7e329dd1ff8a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cfebf0-79e4-4a0e-9dbd-17fa75e4efca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2de4beb-decb-480b-a743-30f85b09f24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc00866-96fe-49ec-826b-203c05032611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec09053-53bb-4b38-a303-af5c3b405bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014e1146-083a-4233-80a2-665c22d9fac9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8909d84-2dfc-4ab4-a594-a8a679cd5978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e1ba2-83dc-432e-b1e4-0ca01d9eabbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0b0253-286e-4c19-89c2-3199a7db2704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d507397-f8b8-4b7a-a5d4-23bfcba5ef12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72de96ae-b3b4-4830-9a72-41724ebd6cef",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d9485f-595d-42a2-86df-d9433675c5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6c56a7-89b9-4316-b7d6-704f22bbdf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fac68e7-b4ae-4269-8b4d-bfb593f6f3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3b0104-9249-47ae-a4d1-c1ce446d672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9dd8de-ae68-4e28-b5a2-b718b595973b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217b117a-a947-4548-87df-848b8d5d9d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fd7cf4-918e-435f-844e-0a2e115421ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226bc58b-4fc4-47c0-8a84-dac7cd4cdd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef44dcb-4dd0-45b5-89c6-202f467ce8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf9e841-3c62-4dea-9ab4-3a05efd1443a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd365e68-1ddb-4b50-979a-e79a174c4bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a982c63-e74d-45d5-8f6f-20e9ecbfe00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed7e5cb-1237-4f40-847f-ba7b69fa5e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90c1dfbf-0938-4859-b6b8-31b275bf4a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5441e380-8d28-4bca-8d7e-33b0603dd416",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36134372-6e46-46f5-88f4-27cdf5b7b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf1cf1e-f63e-47a6-ab18-6c444e9b6530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ee0302-cd1c-4757-b874-12611d40a5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "745c1fc1-7de3-49e6-8832-5a06c9bb0cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae647ba-453c-48e4-ad99-bb7fff1da085",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d16c73b-e546-44e4-8748-841825c22aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263ca614-89bb-4a4c-bc94-f4ea0f616975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf3cbba-24e1-49e4-959c-62c6b9572003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b30fd7-f021-4385-981f-efe2d2942bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716e6398-5fd8-4ce0-ad05-268af207d98c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf2390a-bb07-4224-a25c-7ce4cf18b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817bf330-1b1f-4348-92c6-13ead4ad95c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722313a2-df9e-4bbb-9c93-6a2c6f93a158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "766a7c41-651e-4ac6-9cfd-64024585b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a229bc91-b990-4534-87f3-babd528f3c92",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29528790-33ef-473f-8c5e-8949a4108357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdceeae-1da4-4052-9396-aaffceb71870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd3087b-1ddb-4498-b76d-8831d382c146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ec4a13-efdf-436a-aa24-e48725c1f971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99de3cc-37b9-440d-bf9d-78171bbb8539",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e480f64b-99ab-40d2-9f59-6e822f63a009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83acedae-5087-44f5-92e2-371bcfdcbff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501828ef-357d-42a8-89a2-8e58bbb61f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c623aa-5b4e-427d-914f-123c4899de5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee3f1d1-0b98-4ecf-b3e5-ffdf874d13f4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942947c-5f48-452e-adcf-54dfe28483ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f7f390-a051-4f2f-bcc8-b10b436bcee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d3a8b3-3974-454f-8014-bb348d543952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c596ce1f-5d22-421c-a306-5bef4b1e190a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d54be3-764c-4300-aad7-f0f6c202e82e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72de64ff-0fd6-4a14-8edc-5f47c931fd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653b29ef-3cd0-4ac8-b66b-a80e14fdc48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a73216-6cbb-4731-a923-13fa2909bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af027811-facd-4678-b4dd-0593c949231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe89cd2-89e6-485a-8ea1-5840724d2d7b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de1b356-88cf-481c-9ab0-61084c70ccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfe9c0c-4348-4d67-bcb8-c7116d568e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1955efc-a9f1-4038-b7dc-d12c21ee772c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d6edf1-7684-4f5e-97bb-4d881241cdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a93059-0dcf-4ff0-9a43-8739ee9b09a2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89f292-cc9d-4f08-9edc-bd4f07c3da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf6255-c4c7-4b48-bc5f-d352825ce26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea89b45-90c9-4d8a-a487-cedc50c43054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6036ad90-e467-463b-b297-7c8139c846be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36a7c07-eec1-4f01-872c-6207d82ac420",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e703826b-9175-4825-abb5-97c94c6beabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d922288-7c14-4039-b7de-0fe1531f0ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e51426b-f5ec-4563-9f35-04b728d6725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "340c8c3a-d7d6-4875-8f94-e1caba3232ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac01c707-efd9-44ae-a0db-6c8baf1b66f4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d367c30-b51d-4f0b-ac52-0a29bb88cfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5b76ee-7306-439b-a3d5-85e2ad1425cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c5a290-6a78-46e1-a5c8-5d26592cef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cff53f6-3b5a-4f2c-a798-fca4d936da8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42af24f-aec9-4f9a-9579-87b607fea2f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56203d1-011d-4b13-8b59-c81dac06baaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bb4413-4d2f-4793-ad4a-33103c5e52a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74391bb9-f2c9-470b-9d00-d2a5f8ab17ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d00dd55-9608-4908-b73a-c21598325a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7f2052-b248-4763-b838-32e44915de30",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bc19bc-cd4d-4bb5-ac23-316d66df7816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c60236e-64a9-46b1-9f94-eeeb6d561135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494ca5a-f0c4-4239-9e66-9249e7cdf368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3eb72ee-f97c-4b79-86c2-fd9c6e93d47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff83e04-b2e3-4a19-931d-e75dab5b2cb0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f19555-a3aa-44bc-aac9-40723768fb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d44f3fb-3339-4aae-a3d7-20bf3b81554f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdf2b62-891c-49b0-8f08-74e8da19b123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6260dc-d58c-4007-af03-050692d838c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4409703-0adc-4b86-8cc5-4b4b3eae12b1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c01d07a-ffe0-4d8b-8512-ffec2f40ea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23a494d-e6a0-404b-95e7-2cb2b1b92555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bffafea-02f4-43c4-a3a9-448aec3ef0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "031e2f20-a263-4000-af39-e1d7c02092c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef5b630-9550-49c1-a0d6-aa669d1a053f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f293723-f3a4-48d7-a359-116daf16186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4401d064-4413-4517-b6b2-2b08033f35e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8feac9ba-9481-4755-bc53-c9217f1396a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "44521978-dae0-42e3-bd25-0db87984068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01706e20-7d73-4e24-aaf4-f0ef08fed5b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76094f79-106b-4cd6-a59d-6f8e26b66c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e4afc6-39c0-470c-94fd-d10435bc9e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54432e5-6611-4af3-8a3f-c8af5c46a901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d720df-30da-402e-b377-a20d254c63fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a5359a-11da-44d6-a27a-a82c65fd66c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e65ce7a-07cb-4e36-a064-7dc61f5cb8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bd04d3-8e33-432b-9fd3-b36cd1528449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237b16bc-0d08-4f86-ba63-0456a88ab134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e243f7c-44e8-403d-b6c6-e32d499dac2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e39338-f755-4af9-8944-354fdc32c86e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcd251a-e55c-4020-bd61-44b3dbe63384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5934f0d0-3749-46b2-bcbe-106b7dcda848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b36732-b236-4ee3-b10f-f81b1ba2987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb690c39-4f84-4f94-9e87-9a40d61f64f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53d4aa0-6520-4907-880b-62cd40818ac3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c40b58-0338-48b8-bf6f-5c9770083edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c732c4b-d53b-4376-a4b6-74f60e9e2095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441eb4b5-3b87-4fb9-8e80-c6854a9934a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffef1775-1003-4ba8-8d1e-4b92c4209f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caafdb0-1d68-442e-8a35-14ab0d6e8ad2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a335a3ce-e836-48ef-b2b3-23444d324adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2d1a19-a8e5-4de0-807c-fc55022907c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a84dbc3-0d29-408f-9ec4-583e2ad330e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22977f24-8cc8-42c4-9c6c-2df68b3cbef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fcb265-cc87-4ebc-9cb6-0c0e474751a6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441bf917-21bf-4cab-ab1c-7236642857fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e512c0a-ad3c-4b83-b382-e33de4363b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a655f805-a3a3-4ee7-bbde-d3c1ff9604bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56f784a-f210-4d1b-aeef-d40691b2c833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81a8b1a-f40d-4d8d-9687-9b85c2f2beef",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e065a6-2108-409e-a91e-1ea6322f0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b004498-3bbf-4223-b7ce-088307ef9b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83f7f33-fbdf-4793-b523-83129c81d917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "013ac987-2ff1-4938-9d0c-8732dfa6b6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e455d07-4f5f-4ce5-8fd6-39ff2860d393",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40105ff4-b2f2-4c61-ad4a-7eb00c4ff5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c46cb08-f167-4e06-8b73-12dd34e5cc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397d55ca-c253-4627-b409-4b9798ba46da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e489fe0-41dd-47a1-89a8-a3d58c00724a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc50bd71-422c-4b88-baad-86c64ed95548",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910240c1-f124-4cab-8320-14d4b3b7dbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2c283a-ffe9-46f1-8037-5eb8098fd6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c75d2-47df-403f-a227-7fc88ffbe44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8abe6e56-ec1f-4fb4-a39f-59cc2a6db68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5667e86-f87b-4663-9397-21bffd8078d2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5444623f-a3c4-4444-980c-7e9d9db67f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13a715f-8849-4cf4-a030-116a5134f01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b6a0b0-fa8a-49b5-8678-85705fdc7d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5530dffd-6048-4a0c-9f63-a8c6d34a8048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a85b0e-91cd-43d1-922d-ada75efbeb8c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c1fef3-7442-43f2-8982-96600a381dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2f1450-e934-4755-a671-cf32146759d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d3c66-464b-4340-b6e8-2dcf06cdbf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f890f92-702c-4690-b613-b780e629e70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39742a8c-8c55-4010-b10b-562b64bddf2f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c7fd58-14a0-4e77-9ea4-15d973f8371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa7eb30-85b4-410b-bafc-64411705792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70899a60-eb5f-4a40-813e-b3c8ed72ba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca08c15f-57f5-4466-ace5-5b37b60739aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6881dfbd-b3ad-4023-aa57-d3602c6066bc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc8bf39-eeb9-475f-854a-8fd5dcc7e20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8cbf45-6049-4edd-9eb8-023f35674693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302e77b1-86b6-4a35-addb-ac1abc248684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d45cf60-c401-44b5-bd8d-fd66122e36b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f5d637-bf7e-49b2-a4ba-87594f021b8f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99187fa6-e7ce-4632-b406-ce3a9877abff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d756479d-aad8-4f64-976d-ade527424ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9db239-3dbe-4f7b-a185-95a9aac6c00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70754aae-6d70-40b3-a0a3-51c8915c40ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6c2d4-88c0-4641-b271-05f31dddbde7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df738bc2-8f7c-4540-a428-605891cc2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e9b4a6-0b5e-4665-ab64-e44dc7dbede2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063eca36-af49-41b0-b388-a9b3dce45729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa169c55-c865-4dac-95fb-c09eed77c1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a139c63-9f18-40dd-85b7-6c37ad4f6522",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a76e8-13ec-4ee3-ae1e-7db2c0d83a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b87f00-8157-4790-8b89-c39c1e8eaa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31defdc1-0e92-4277-874b-890be608f274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d586b24-f3ed-402d-8034-97894aa75da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b7507b-3cf6-4c5f-8253-ffdb7d1dd97e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc96634-d85d-4fff-8c15-70f0d106ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a42317d-d17c-40c3-865c-c632151cf36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf903fa-3542-4ce6-b229-0d2244df629a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8688e336-af76-4b73-a180-ad32a6aa2192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a27054-aa71-4f49-acd1-35d413cbc50f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d689e1c0-ea31-4357-b2cf-0a13291f5839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7821f0ea-178e-4cc8-9e6d-5b0dd8d70517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a83d64-b9a5-4a87-a562-c4a9975912e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bae5ee39-f8fb-4dc4-b777-db86b9303891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239524d0-494d-4f01-8e6c-bff29e43e0fa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7d524a-cf44-4325-b7eb-a86be274c7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6568e642-7473-4d49-92da-a242cf170dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10301a4f-ad0b-4671-a80a-4b46fe8fec12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa073b2-c269-408b-82c8-fd1c1cfdc306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914910e4-4e48-4b6a-afc4-88f359048738",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6ec3d6-76ab-480c-8409-cdc24408cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372a2ede-4ba3-4456-b1ff-c638946f03f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58471be4-3ce0-4dee-90ef-6dc20cb79ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23374f0-6a0f-4238-9e6b-f9e1d4fff05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaafcf3-bd2d-4688-b590-6aaa0a0993e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42ea5a1-fb59-41a5-94db-90404148d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443607cd-acfb-47ea-ab31-e2dcca1d0f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee57fbf-20d8-4e1d-8d25-0c86deb0f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6d3f99-5365-49be-8bab-58f6414f6bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f07a0-0913-4e24-8694-c2f153d0c215",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5144a17-4d8c-48c1-920e-110844ffe48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19303c2c-24d5-487b-b59d-220fa571fd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812399bf-24fb-44fc-94b0-1993bc13fe85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9175a4a6-c93c-467e-a0a0-aacc599a6148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67303c1-2a7a-44ae-a5b1-40ce85049070",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d8fbaf-cc52-4b0e-8735-5eec51831085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe183ca-d299-4e7e-a0c6-2f1d5acd11ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777c463c-81d5-4d82-b1ac-694b93215d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5d8504-9439-459a-8edb-e0dc6c406bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff9ab86-b6f4-43b2-83a1-1dfc23eaa5cf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5624f5ed-0127-4714-98a9-85795c0065d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c385d3a-5351-4bea-b803-407a13e3ba42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c360be9c-8033-4987-86f3-8a76af922def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "019d5db8-6e93-4b3c-8ccb-206543481945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a20ddd-947b-48d3-845c-1efaa5133ebb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453b25e2-cee4-4181-a745-186f040e6773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cb8825-7ba4-4a03-bb92-3ffb12012918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24932352-1216-485e-96b0-ebd6b9003de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc69a0b-62c5-4dcd-ae26-0fdb62bc9a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaf491c-d678-4a9c-81b2-d7686986f61e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a3ee3-b6d8-4158-8da1-0d97da4fbf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3701c2-96ae-4e1c-a388-7428d6c34aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be72f418-f470-4a05-a638-78318bdda195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "866a38c5-6b35-48c8-9c62-c1389236d410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63051e1c-1056-471c-9000-acb4bcd85970",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1f8150-da05-4f1a-bcdc-f78cba8b1856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a588db00-100f-4836-a037-f1ec0b923fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba990053-9803-4ec4-99f3-f5723c64c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61ffae17-e332-441a-8ef0-342b9f24526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d27984c-00b7-4f1c-a4c3-90825b9d77b3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3eef62-936f-4bb2-9672-76c4af442433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac38dd53-621d-44c9-bb63-915df383a4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66b3199-97b1-42fe-a83c-7b40f869a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f39860-06ea-415a-a570-60f2d99fec31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32280486-ec26-4314-9799-36469ac93f62",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3975eca8-587b-46a3-9c7b-72c1995066fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ec2938-e8e8-43fe-ac35-37550a927d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac876db5-f0be-4912-b86f-eeee3d31eec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2160129a-05c2-4e55-a4d2-55ac0b3ee880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f745b26-0b01-45a8-bebc-cbf46e7ff803",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fa677d-613d-4bd1-98f1-0529e88770c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac056b7a-a882-426f-9474-e783756302ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71b684a-a0ad-4bf1-9336-eb75f8be8d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f212fc7-b0d0-4e26-92be-2c315a3b23c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dddccc-6099-40dc-a5f0-b604df319d3f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddcb164-96fe-4607-bff0-2e6a761b7fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0838fd43-a3ab-4e05-8660-182914220960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bd1a68-b43f-4e6c-bf6e-71c00db7328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "269d189a-8a91-4185-93dd-c65e7831e083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c32aa-513d-4829-9e29-705802b42d64",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e895e41c-1a2a-4494-9f5e-64731d7d8ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f46043-0810-4067-8dd3-98f21eb9300e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4156ce82-1738-4728-a8b3-59b6c12998e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63002e18-ce4c-4293-bea5-ca19a79d1758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271d1ac8-93af-4819-89f0-6868a768c03c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0349c13c-47c7-431b-8009-8de5fe3857e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943e14e9-a073-4684-a387-e94aeb7f37d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af438e9a-7a00-4c39-9623-dd624364092d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aab0955-7ea8-45df-a7d1-7edde7e95df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b19b65-ec70-4acd-bfef-b76c0b06621e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07328f00-0287-42ac-95aa-4bd207ff0674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f147c228-fcd6-4f76-8f18-8ca1e63ab75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3658d8e-7655-4bda-a0d2-cd544171569d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b48f9273-3678-4a84-bbdf-d7930dba8fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb43b841-31e8-42de-9626-f1a1cad591bb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52e4b4d-9e67-4daf-9e85-546aaf4e3aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86e7664-d19d-40a7-a1a1-b7cbc1c7b64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40e3b05-4ce1-41c1-9586-15ea9d79f95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fbb98b-e5ee-4c6d-a4c1-d5d59ab50b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19db04a0-50c6-4473-8639-bb2a271905a4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5216202-2189-4d0f-a648-8789c69f99f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cac4c057-f2d9-46e7-ab4a-3a32d7646de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2048c41-58b8-45a8-8611-f7d481a869e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22480b36-023f-4330-ae3c-de2cf28906ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4cb6ada-e323-4035-9a3e-d9760f91c558",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f187bd3-01b1-426e-b60b-7763ed2c6b54",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c23258-eecc-4ed3-a85b-789d61700eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84a226f2-541a-4f5f-bd70-54f9e72764b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0551016-bfa7-4001-aedb-6b93d99d7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b0f6325-29a2-4797-a290-de1dc6a54261"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7e78379-c312-4823-b876-e39e9c9c30b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c1d9c76-3844-4851-a959-cdae2f25c8c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe261d01-f7f7-43ac-af8d-9462ee37223e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33531c18-05b3-4c08-adda-9f8af24a1798"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83dd99d2-44ac-4506-b96c-cc0f5eee3aa2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e20bae01-10de-42c9-92f1-374aab747b59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0eee6d37-dedd-47cf-a824-b766fb2ba7d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "078342c0-0852-47be-8c80-900c0c1e2674"
                }
              }
            ]
          },
          {
            "id": "cc2aeeb8-6f74-4fcc-a4c8-b64c12e2c109",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e7b7ef4-e5fa-4136-a3c0-64e0ed7e43bf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6d12117f-9584-4ff5-83b9-1cc71fe64636",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9479dc8-ac8d-4aed-8cbf-11548e7ee8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1c3327e-2fe0-4baa-bc12-108b44b5affd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627e313a-34b9-4eb9-a38e-cb4041a9a00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625dad5b-0e87-439b-89d3-37f8b9be3f02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e704849-1913-4a4b-b153-25eba1b24065",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fb70322-560a-4b54-926f-b3cc673350a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6264bbc9-27c0-4b7e-8f67-8096379d4de3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97439c09-53bc-4b68-a87c-806330827965",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e92fa13-1adf-42a5-a4a6-c51cde87b7f7"
                    }
                  }
                ]
              },
              {
                "id": "4484c1e9-b64c-44c3-b7b3-15b2c54fdc51",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8d248c3-cd46-4780-9b20-5066c0b34c52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5c049be-9173-4cea-acca-cfdf94c685e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08928158-6171-4a37-8e96-7f9a32267050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a544cfd2-62a4-43dc-9ccd-9b072cfd72a7"
                    }
                  }
                ]
              },
              {
                "id": "1c423f34-3def-48e3-b5e6-e45ac67c5e2a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8690bbc4-e2ad-4dc6-b6f2-05434b39d385",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b82e228f-92e9-403e-b341-debd059c23f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ef8abb-e4cd-4ff2-8afc-65ae215d1e77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1cc53a03-ae20-46c2-9ddd-35d3f2289351"
                    }
                  }
                ]
              },
              {
                "id": "a59cf02d-e522-4a3b-932b-71b67f62755f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e0e906-02cd-458a-b865-f983f6702624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f6a9545-f45e-46a6-85f9-c47fa4e5d6f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71eaef5e-6167-4adf-966c-54c751c4321d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "331823bd-6654-4efa-b449-0ba73dfe4cfa"
                    }
                  }
                ]
              },
              {
                "id": "cfd08c24-7309-4eaf-b57a-b06b2a2d1000",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "404fd1bc-cef9-488d-a7e3-538fe777b662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb39b3fa-cab5-435f-82db-ea0749734a72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1254bf4c-16cb-4092-a8a2-04615c453337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "805311ba-6a76-42f3-83bf-6b460a1ceb0d"
                    }
                  }
                ]
              },
              {
                "id": "993e367b-d41a-4a9e-89f4-273688696ef5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac6d44ee-aab6-4e0a-b016-0f4a5de55a32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a703119f-506d-43fd-acdf-0ae53ac5e72f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e43baaf-a123-4072-8d9b-511051126874",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80c0b96b-6ed1-4879-8534-9d9b22f84b81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d19d958-3016-4d1b-8ca0-5bb572d4b8d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a63a3178-16ce-4990-9547-c68684cf2a8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ea0a411-800c-40c3-93f6-fb2bbe0feb43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2282941b-2c13-42f7-a639-e83d37e992bd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a902f09-eb93-4c39-8ca0-2e0b0a3aa4cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e761986c-a9ba-40d3-8607-37f10c07690c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f83f8d8-30ff-4c52-86c3-9a4f513815f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27ea504b-cd8b-4653-ad75-7299cd3bfd88"
            }
          }
        ]
      },
      {
        "id": "e4bb6443-1947-49b0-a191-53694eee9376",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b342f7fa-61f4-4795-9d87-2c1479603a49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd5e58d0-20ad-447a-bc1e-5ee8a8ad77a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bc3182c-3c4a-41c7-8c64-b89eb59c3c91",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b95d4c1-3ea5-44a3-b13a-6fa4b068857d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ff3e39-0ee6-4c8b-8d13-ca2ddd3c27b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e3702a-6397-4f4c-8aed-81d6f2d2ac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df23aa96-6d97-4fcc-b00a-775e5af3695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd11eaa4-6dc0-4966-900c-7139c4edb756",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d68513f-28eb-4e24-a72b-10857607ea60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baccbeca-a47a-47ff-99be-820b7ab880b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd27d65d-a6ea-4a7c-a2a8-c11624cf5ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d649fc-4f3b-445f-ae53-089d63e6df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49595d0-7cc8-49db-8443-3a8c7dff19f9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d695b7-875c-4b49-853d-3fb52d0e7f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b564d9-5e41-4c89-9ae0-8022412a1146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef7961-6aff-44ef-9167-b3a7e96596ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2271ce7-e075-4b8e-9b76-86cf12ecd8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5635964-79d0-4c01-ac25-234a6cfaa606",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205ec50a-487a-4447-b741-5f19faec12d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443b9fff-9bd9-40cd-b1e1-50ab9d55e6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd6f49-61a7-470a-97dd-7a83f0e5ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5516356-ae57-48f9-a098-4d11e2032c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9255a770-7dac-4461-a48e-a412b8d590b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80b7378-c189-41cd-a982-6f1eb93b884b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b5ede0-19f6-4efc-8e16-bbf903c886d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a48f5a-b922-4756-85d2-ab3e28d81a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "504a1edb-6af9-4d3b-8f84-98e431976886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e90e58c-4e97-4d48-aebe-f7296d5f0709",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d78c615-587a-4eb5-90de-ab389811308c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7514c52-e7df-4e9b-aca1-181fac041d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae5d3b-006f-4696-beb3-f5de4f0e45bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92dac140-55c4-4ec7-a8f7-0b1c9e6fa014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba339a7-cfcd-44c5-b7c6-1c1cac68e181",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b06e21b-b0c2-450e-898a-73201532f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293b9507-042c-4845-bbf6-7422726441ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bf6f27-7d74-4c9b-acad-370ac546153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ba258d-7003-4b5e-bfa6-e2632db9ac18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f7e9b1-17f9-4f6a-ac29-ffe430ce8b23",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a5e2de-e839-4c29-a712-04cbdfcce0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eaebe77-aa34-47e7-9e85-cfc81d342cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1452a4-46b0-4553-8600-78bfa9fca054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "547c4fca-f3a5-4544-9638-de4ea15cbd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06858302-d832-4c09-8074-58140e9148d6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93d5b1f-c07e-4121-8567-9ea45baa1801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb18822-0a1b-4140-a9de-d670c2aeb8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1379a7-f2f5-4f93-981d-6aa2a1391f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6731a701-2ad5-4c80-97ce-c77c429b513a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae9dd9f-72a2-45e5-9434-b17773901e4b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231dfb68-46fa-432c-89ec-8d2fcd5ef82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023dc927-fb02-4770-8b60-3d52e815cda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3499089-659a-4fa4-847b-14e7f19452cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24d3028-8082-4b29-baae-3e8fc5de9878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb58abb-c667-4ea0-b6dd-3c4eeb65300b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a26e4cb-f991-49a4-8a87-34f5909cd1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fedb27-259c-470f-aee1-7d6da59340f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a2e12b-957d-45cc-b1ff-b359582b8666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d608614e-a125-40d9-9a6c-46d764efc844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cbbc7e-075d-45e9-82bb-62689f099e90",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909ecf92-2c09-48e7-a5d1-078fc93bd799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b16230c-80d0-4512-936f-9ab34925b497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe708d6-384f-4a07-a3c9-7a2e3dee166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "630834e5-cc03-4246-80da-1aa9db7b422d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dde719a-4a37-4603-b05a-38747660f4b3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b937ef2f-d66b-4b00-ac75-1ca4156f0e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f58c69-d4f9-4a9c-ba4d-a99e88935096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58058d36-1241-49e4-bd22-9f776c4b30e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a515b864-8f72-4b6e-a45b-2dbc5c5add8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98343aee-0953-4c83-8bee-58f94a43091f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0465098c-db17-4bca-91cc-1d286b800535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bbe633-6171-45ba-ab7a-1cf2fc88c675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d3f695-7a27-4062-8c4b-5bf21d97565b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b97015b-6c25-4275-84af-749344f04401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5190cff-ce47-498e-b84e-d74ffb76429d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0584ff-5a78-4e6a-8636-0c8e4587f72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab76bba6-278d-4f55-b0ae-44329b0d8b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9867560-91f8-4315-b397-4cb65e02ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ae7639-ad6d-43c9-923c-2f7c34082016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939d2007-850a-4fe8-85eb-f3dca42712fd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb4d38b-2358-45b7-b596-bb5e63a6b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d808ba2d-f620-4073-b838-d61ee4ce67e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3559ed9f-2783-4e8b-9d14-e8666d8878de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "772d1a94-6fc2-43cf-8eaa-81fe7bdf307e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c01fbe-8615-4f31-95c3-efc23abef338",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55370b0a-818b-491a-8bde-7d1740b400b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3322e4b4-a768-4d74-9d1e-2ab54c18c963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9429f8ed-b92b-4ec7-a651-505986866922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d52157-5206-4dc2-b590-bfecbf44a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ea091d-e5f0-472b-bdc8-fd0464a29b1f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e0de5-8bb7-48cb-bcef-344d29920c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2927aa2c-454d-4f42-a4a4-fd93d4f0f61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad2523-fddb-421a-8648-2c221cb5ccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfba1e0-7573-46bc-9085-5b9b99d3b010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afec1165-fa83-438c-8d7b-94b5c37e92da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe5f47f-068b-407a-8caa-47c2571d99b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765260da-f15f-4704-ae6a-7f192de12c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedc5240-6b46-4ef1-a294-733ebd6239f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e84ee2b-9531-4cee-8aef-f6fd90dc6a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ecc51e-14a8-40e6-9a81-e8a54b8567e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb154b3-959d-418b-9bb9-dcae989bafa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57a4fcb-1493-4e3e-9af2-5d399609c0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6440cdf-1daa-4004-8f0d-b4ea64ffa17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6c0222-876a-4f51-a760-b8d158c5fbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9005361a-6c91-4d03-82a3-b8f5b1bfec26",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3450c811-01f2-4053-8620-b5bfc2fbc3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fc2d21-60b1-4c0f-ad82-8260d7a99188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a4cd67-f5e1-4ba6-bc6a-d875e9d700db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5e2a3c-d401-497b-8720-065bec4e379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97773463-f196-4e1f-8821-39304a1c7d41",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bc1c68-1d58-4e60-9916-1b8a3dcfd16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a96073-58e9-4f3f-85e9-983ca3066c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d4db45-9cd2-411d-ad48-4d20f7a6acd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89edea4b-690e-41b9-b55d-9054b602dc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b3ddc0-13ca-42bf-ae11-5d700f81aebf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6877a761-3336-4c8a-8d84-e7ffbb27c728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e145dc5-8426-402f-8d24-4aa3ec0aeba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca27600-503d-4676-b26f-882fe7d0734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d1be7e-d326-4b48-8109-7fd69cadfd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fd328f-5f36-4a3d-9d62-5ef6ff9ed32c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829b34b0-21a2-4cf1-8cd7-f627959ae456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e44c59b-080b-4646-8e1a-941d7e83f173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a38dc2-fcf8-4a27-b1ad-955dd49799c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb21936-585f-4cae-9f7b-8f144b16283d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b649e437-f59f-4e4e-81a2-d9fc104748db",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d1d4c9-590c-451f-8ee1-383a618d81df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2877dbfd-9b28-4813-ab9f-21b3b61f4d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040f992-792f-4ee3-bb50-e08885812ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa97ec3-15e3-4a9f-85d1-4071a08069ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932105be-768d-49b6-8712-02aa7cde9c54",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f473762-43c8-4f73-bfaa-073b415796eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc75c470-f2ac-4d11-9a86-a1f1699a770e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2c5d8d-7d57-4541-b03d-c1a25c07ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4c4443-99ea-4193-8760-ef48e7475a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9106445-1ba3-45e6-b304-abe435488297",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c766d14c-a1e1-41c9-bdf6-3f26fa1cbba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b81633f-bc50-4fff-bc67-b8b46c629a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eacd97-bd13-40dd-960c-4dab3509989a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a931e64-6d47-42bb-bc34-0d54a5fed57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797f6507-c9e6-48cb-baa0-026ab3b0a698",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f604a5fc-d0e3-4c3c-85ef-e2071e06e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224006f3-0e13-4caa-b90e-c20125c6f7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94f4c4a-4641-406f-af8c-3f766c7f854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "137a175e-512b-411a-9db0-8bed15b6d334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ec185-c29c-431b-85e6-cea2dfde863e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3fc12f-4b5a-450f-a479-9e38b6608788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ac21c0-6dcb-4b0b-a567-3f42392fd5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d378a6b-a7af-4d51-b223-3725a68f332f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b28b06-6be2-4ffa-9476-e866df862ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80604d79-c8d6-4bce-b003-59b7437d7465",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f518c155-fda0-4a47-8cab-2eb96a9e1921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79adea4-967e-4387-b4ff-12eccdf180f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097b705c-228d-4a59-b878-19fcda929ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fef52a-22f6-4a8e-9127-18a44490896d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4fb78d-b6a3-4847-aea8-6b177fe2f6b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0194a20b-53ce-42fb-8872-84753420a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de73fd5-ac7b-48ff-88e7-cc81017d31f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13e13c1-4073-4573-9607-975b6a5fce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1294ac0-c3cb-4dfc-8b74-2833a8201c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278d963d-d045-4d68-bed9-1b24618688da",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf8f73b-398c-4182-8cff-11cdb2111a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad12b34b-cd6e-4ea0-86e5-f38a4549fad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69580881-ce82-4f9a-bbe5-11919d57ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a172707-9f3d-48d5-8b2b-b449adca14d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da8935e-750e-4cb2-8bbd-04abed342f95",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d7cf4f-4563-4231-8e88-fcb928202be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c39d04-b778-4dc1-925e-0cc288498d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81737369-fd33-4f10-aebc-8097cf4981c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc82c80-2510-4bf2-ad22-275cd0963fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e3d45-7825-4b19-a2b9-c696d4edd769",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5780fc-8ecc-4ee3-9556-0cf53819938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de9b00a-9f6c-4472-a978-cba28fb988ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82526767-8888-400d-b64f-70e87ac16c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053eac0b-380f-427a-9c43-17f985dc4e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb48cb88-04da-4ee6-93ba-80ef80890c11",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70006e0-758a-4a50-8a95-d6a01d741fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1361edcc-61dd-448b-92a1-1827b772f3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa85c2b-fe67-49e3-a9f5-89f66c0af3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80255de7-db18-4b2a-aab5-0d1e569a0d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326a0063-fbf3-4de2-8001-f327fb5eacbf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3c264d-46df-4183-93bd-e2c16b96c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd18423-926a-4811-8d58-9d8349dc0204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e9c5a8-78a8-4631-9917-f696e12485df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "888725d8-3ff3-4fd3-b20f-e68bc50edc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1ef071-1876-40e3-901d-cd05ba41ef2e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f21e70c-27da-4a7f-a1a8-6d9db113fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fc8535-84cb-4cf3-b82f-c33dbb48091b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556664ac-99a3-43cf-ab3e-5bd8fbf9753b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a5b7fe-e67c-462b-9f5a-ed75d51146e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "405d3051-a8ce-4696-b897-8af59c336626",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0e314dc-8716-42f2-a027-5b3c9d42dbe8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e544b186-7465-4e13-9a5f-f7da354c93ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c108cee-3b5e-4620-be28-b20a332a01b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d41f48d-1342-4d90-a494-59e20d765a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02141dfa-4128-4c89-beb5-41239871e9bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53cb6a3e-89cb-4a55-96f4-88983e62299a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "701cee88-5cf1-410e-9f9b-b6898cf91101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d816e0b8-e4c8-4721-8377-b0af3f648870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f45d225d-06f4-4f39-a518-c4ca2351da68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fec81c0a-6ff5-4019-b34c-6c8644e6f2cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "364c3ca8-1c39-4c42-9fd8-d33ca80556c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7440628-386f-4d9c-a2e5-84ef7c13b371",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70882031-1e73-43eb-939e-72812ceeb7ba"
            }
          }
        ]
      },
      {
        "id": "2f429b16-9178-4ce1-b4f6-fa69d3630190",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c39b58da-bf29-439b-a580-7afc83bd6480",
            "name": "Negative Testing",
            "item": [
              {
                "id": "840a55e1-9829-4107-8fb4-8191d700ae34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d47f86fc-0143-46d5-bf64-0c7935cde018",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de55d17-d2e1-4e69-bd28-90199aaf10fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cbdbf1-2bcb-4574-89cb-dad99fe80e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ed328e-e8df-4d64-bd64-646ff1540f48",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cab75e-f7df-436f-b543-218554455b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8239d518-e55f-4334-8411-ec1cb2eeac47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abf446f-a75b-407c-9f06-06310d4906e5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8962d496-5efb-4bed-8fc6-21c5e0ff43bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047fffc8-e805-4940-8a96-e7e78381eb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b856836c-ea1b-45e2-b6f9-ed2af76892b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff4a30-8e3d-4a53-a6bc-4e668ddd2eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5109e1-b43b-4487-8c81-6e5c8668df09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e14a46-9e9e-4790-ab72-d44c075bbdb5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677c0aa5-67a9-47bd-ba88-ff1b8aee2191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbf9c04-18c8-4264-8ad3-12a5322baa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2912ee-24cd-47a5-a141-be9dda6ca27e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ed7f41-13cf-409c-a01a-516ea527242a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528a47af-5bb4-477f-aef0-1854c67b7ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9690d67b-89db-4ade-b88f-40d7f8f89840",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6ee6d3-4680-4416-9bd9-686a43c7cb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31c3af3-6e3d-4a83-a001-a49499cecadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97bb3de-7bfd-4fcf-a63d-dc1070c7cada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03269ecd-8f5b-4953-8279-6c16fa664405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2eb2e1-33cd-40d7-a31f-540d117802ba",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8152f6f7-dac0-43c2-aa3d-068d60b3607e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abdf5cb-5ecb-4345-baff-ab5105bb2eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b779cde6-6bde-4cc6-bcaa-3a52dd19238f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f009a1b-a651-449f-929f-466cd87b67dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f6038e-7456-4386-bc43-23210a5d6906",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83946e5-619e-42c6-889d-ede2a91072f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cb1a02-7844-47ea-a012-92e9670813f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e1de89-e3e8-4fe4-9fbc-177609c1c0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4b8aa4-dc30-49ac-a9bf-562b7bfd0e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b8bcdf-3d2e-48b6-a3ad-4b55524ac084",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f2abb7-7e9d-4903-a352-05b83f0fe729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c730d4b-76e8-4f5b-b663-39f5c85d48cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94819fc-568c-4238-bc20-8bc45ae0f315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffbdfd2-a202-472b-ba8c-4e465b4a3718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eef1174-3893-4352-b48d-58af41cce96a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d55687-4cd0-4bfc-8524-6df8cf0500a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1927768-951e-4f98-a722-7b460d50db85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef6e23c-1a58-4321-9431-533d181d23a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe928087-c0c2-4b60-8099-3c350c83627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f399543-72c4-4856-8d5c-ad71025651c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb677bf-88a5-4a1f-86bd-4890495e40a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d239288-dfba-4caf-99df-e1af876298bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533371e2-f99d-417a-9e61-3ffedb0052b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925ebed9-bc35-4a9d-9d52-ab3b216a3516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced8ff19-878a-49ca-82d2-a64712d82240",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d430fc5d-ca00-4add-9e5f-b712884240c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16599feb-6fc6-4504-975e-68efe38b6f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b44fd4-749d-4938-aaf9-5801b37eb045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa0c9ef-54af-453e-8555-6a0264f5ac98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be9863e-a562-4193-ae19-ced26a70cbc5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb3b7f2-9ebb-4ff8-8b21-2153ed2c7862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47247dd0-c9aa-4272-a706-f21f17759577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e84471-24bf-4331-a210-e6c296e0ba7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478597fe-fc79-4bcd-806d-89a27a2d462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc41d19-e638-404d-b32b-7c9b84503157",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06eccdb-6e8a-4353-9e59-bfc8daad44b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868e0bcb-d5b6-4ec0-af77-42b217b22f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacd5fbd-7fd5-4cc8-b84b-586cd5ff0ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19006395-8657-4602-b8b2-33bb372f5cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df89f97b-3ba7-48b5-a113-7c9d42771088",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46426002-8373-457b-a093-00d6411d78f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1a247b-1389-47c1-94ba-c8014be3b50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ac61f2-37c7-47f0-8af4-b5ae421cb82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55a5f32-3f03-467c-b45d-436206e6f479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271ece8b-1dbe-48fb-b72e-961d6210ff4e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5489a9eb-202c-448b-aa56-b3586b830b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770f636f-a1a1-4f90-8c6e-4b112ddb2a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6574d5d4-4495-46c0-a371-5f314406d7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3416313-5fef-4f11-8b31-9981612988fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f379673-89fb-4985-9a8a-11d7ab3fd86d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940ad461-a86f-4b9a-b6c7-02b95631f7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655fd4ea-cf8c-4526-9155-d28f68c2e01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f69488-0dfe-4b5c-a8a7-75fee289b6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32cded9-9f68-4f69-8fe5-98b294a16692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795a4644-6b9a-4b17-8df5-32662707b937",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893c7461-ba31-4b6d-95b0-86d090691a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a711b5-f1c5-441e-849a-1664ccc0efe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b974d-a253-4f5a-9e13-58c40a0ce9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c490ac7f-deb5-4be7-b4cc-ed05774e50e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb74e0d4-8d0a-4263-a897-b3ec9cee9c2e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2cade1-15c1-47a1-aa44-bd07e7a47d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7958c33-e4e3-416b-9d1c-ba69c67a95c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab01201-cf20-4636-9c50-c02a477bf73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64260c6-b430-4861-8c5c-0ed018a680de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6840649-f04c-46fe-9f75-963d1098997a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3e5978-5c43-490c-b09c-762f02b0262b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceeaa936-9129-40e8-b3c1-e199c5f6c420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db00015-25f0-4b4a-a3fb-8215d20e2e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4738c8-9de9-4005-8ff6-c0c9e3cdcb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc39c8a4-3257-4ccc-98f5-75d3b095627f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a140d54b-4391-4ccc-be4a-1ea4bd182563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60fb0f5-8e42-4995-8ac8-809c911f39ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e654fc52-8a79-46a1-8a00-a43e35fbc549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105fa857-1746-4eaf-9b13-89defd1dbb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715dcead-15b6-44d7-978d-42d3318d7d0f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5148361-58c5-417b-a712-4c149c789d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be6363b-2e4a-4690-9cd1-c2037bf0cdcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325892fa-a437-4dc5-89be-94b89dcdd0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff4432c-e47a-4330-b1a6-fba995274409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc909d9-db3c-4f99-89d9-45de4fbb52fd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a699462-f56e-42b1-8d08-2fe14d363fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f7af81b-06c6-4a3b-a74f-029c7bc91ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d3130b-30e8-4897-a349-a7cbf1c9ea10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095ee9d8-1a1a-4d8f-b1c1-95022937d3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5439a5-1b81-45b7-98c7-fca7ac3206f3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2255c2-12b3-4923-9b44-0c88905756c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa536e8-7792-4474-8bb1-f3870fe041a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70376085-3e05-4ee8-9ae0-ca5cbfa9c478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af6f1a-e011-4a98-b0bb-66914d13f865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55ddb5a-41ea-454f-b3a9-f1f534a592f9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d795f2-e974-4705-ba21-f24b43a969d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f2f239-5d41-470c-839d-f0eb701bb0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c37c2-e11b-4541-a7a2-bfd87c87530c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5c2b69-2449-4af5-bdd8-94b174a48063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72aa683-da17-4969-92e4-ff791a6d0cd3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42c3a9-e9a1-4d94-ad6d-d8f169a64334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199dc6ba-edb4-4d9a-b21c-33ca965640bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce13f96-c7b0-4ad8-8d8b-ab2e082d7faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d73358-c6ae-4941-a8d4-a4e1dca6dca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d0fcb2-b541-46ab-b924-7055057477b7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780cca0f-f5cd-4b34-a210-dded12391c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b98a4a5-2334-492a-9c65-df753e31f0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0deaaa-d25c-4674-a689-fbf49dd0bdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6e7daa-62ed-4274-a8a8-ee976d0f572c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f79a7-34c2-48a0-95ec-c5464afbeea5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba0e31b-d9f8-43a7-b1ed-ae51995b2439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc58857-6a47-4bde-8c34-d68df1caa8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fda81fb-d8b4-41a5-8008-c3569c60b883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d2f3c0-c994-4359-9ef3-4a7724a84085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ed91cd-7301-4858-aa8d-a403d41838d3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d816d22e-3602-4ff8-a43a-dc77dc7fe1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4e961d-268d-49c4-8c9d-afca5a63172f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27131d-c17f-470c-aeb7-c9efa723748c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40083db-4f19-4a30-aa31-82c2b729e135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fae3550-6517-43de-950e-477472e9a05e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc04903-e5ef-4c4f-9514-5c82bba2feb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542ac7ff-b90c-44ba-b38f-9b9a555b0b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a4f3df-200d-4c2d-b7c2-9a47bc963323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7553c64d-14be-4748-ada9-c3c15f9f99d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dee0d8-d1e5-4590-b04f-020413d2b979",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f0a27d-cc4a-42ec-90ed-b99a54cc31a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7ef879-bd4a-4a05-807d-3b4f52e112d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92acb1b-b74f-4783-a3ee-ef67af63b832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cdcfe0-2c8e-4c95-be9c-cbddadec6ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b43c96-a91c-4efc-9c0b-d92b7c51db9a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d954f9-228b-4d09-bb23-4f3a6feee8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625c89d4-2dc9-484b-838d-948b1e5c54c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029712ef-fca4-41c0-af6c-19e842959dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd47a1c-6ab4-4c98-a7f8-d4dee93377b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514fe43f-4b93-44e4-a4d1-2965d85ba633",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c1de53-9e52-4b64-90e3-75c881fcc29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ae801c-5e4d-473d-b451-6a7529d1d478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40c0da8-31eb-4da2-9592-c99bda13cc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d010e7b-e510-4334-b36f-116630ec6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0db9635-d03c-4a2f-8128-eb75f3781388",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f55a768-838f-4edd-857b-e470d64aa4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434e7949-3d27-4734-86a4-ec402dce1552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be1a0c2-fa67-4239-803b-bbeeda031111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84d0dd0-7f24-4525-bc1d-d0ac0631eb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356d6556-10fe-4b18-b161-f3d38139b97f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520dbf93-a14d-420f-8b77-cbf103d0d828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39ce144-d2dc-4617-b3f0-fa98ce3d4b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4dd9f1-5f00-4d49-9217-30183462d23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edd7c9e-763f-466c-beeb-8813bcac8de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdf5f97-6993-4da7-a013-417c95069d6f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b8086b-b50e-479d-a6b7-a2f49e8c2238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60524181-d785-480d-b0ed-b03298d4a5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97250a6f-3bc3-4a24-a909-266715bd1ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbb79ea-2f86-4127-9ddf-cd00ac42c2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcbc424-a90a-40a3-917d-c038a2f45343",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756034d2-9a93-49e1-8528-7334dae0ae88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8590798-9946-4e87-9a2b-c3242d02533c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a000e229-3914-4e88-a431-6db976d19b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18a5f91-0d44-42d2-9658-3c8c9b118fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f057707-bdb3-41aa-b3d9-f8a78acca47b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10218402-e8ac-45aa-8b5c-e0d688de7c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f19a5c-eba4-4b53-9494-ef1774ed3038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd53f561-5da3-408d-8ae1-a5e8841c78dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4042ebc-8c52-4318-9280-e5ba5464a8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fb6116-6c92-4f73-81f5-d4471effa5e5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6342bac7-d27a-4a40-addc-ccdff02a2051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea49c2fa-a5da-48f6-8306-d945c33022b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740152df-d927-4488-83cc-dc35538823c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d43d5f1-ce05-4750-9895-b60d9f4e7ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82351cd8-d0af-4d1a-8b4c-e702bffe7912",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea8491-9d0b-44d6-8dc3-630a33a24ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d9b9ce-cfc6-4040-a016-c931805751ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1449c11e-ca0c-4f46-8581-93a75984dd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ad1e34-7b94-4845-be28-6729123b977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a019f937-d173-4d10-95a2-30ab1f2d4a8c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2774caf8-1b67-4a0d-8095-3f983305add8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bef0ba-a4c2-4333-aaee-3c1097da9caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e542cc5d-eb88-4e3c-9985-22cde57fd258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4ee226-9f52-4c85-b30b-77e3cee5edfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9439fca-d127-47ab-9422-3c5994b21998",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4568a9b-a643-47af-8a94-b46d89b933ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ed2155-3c2e-4a5c-8fab-a32bb37bf5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b341428-20c3-4602-82d3-0ffe99bb2287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f061e2-6f80-4198-bc34-40f82ec83951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5b6ee7-5d91-495a-b974-f72dd9662a45",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f3281d-2b38-4bd5-b402-43289faa5d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f489421-e6f1-4071-bd87-16be040976a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a18223-0bc1-4b92-a9e1-1079b567712b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f504b2b-728d-4f8b-9cbe-2ebe4ffae15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fd009a-65e7-4800-9a83-3ef632f2f731",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f56115d-e403-416a-8e80-79d74b0d45bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b3f657-f7f2-455b-a341-06938ab5f17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ed78e5-f251-453c-8142-5a713997fbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3404da-e053-452e-9873-b58c45385c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a80e54d-8aba-4fe8-8d23-852e951325e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb5527b-84b7-400c-a655-678c70d7ef26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fde01e5-5536-4a45-ad52-57cf7d01be27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1164c506-b955-4f7d-a27a-e2afc977d1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3379e729-1530-4153-a8da-6fcd889d031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad78031-8e25-43b5-92a6-1dbb79bdf1be",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd797bc-8c5c-4aa1-ab6a-97d8031b5fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bb5a62-543c-4fbb-b854-36883ce415ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10026fd4-73ac-48a6-ad9f-d173ba431436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b86ed59-fa3e-4e6b-b1e4-7a3bdda4e4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d39729-2d83-4c12-b161-c4809e68a6d4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39887bbf-1d60-400b-b43f-d09ae5430367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd17750-0ef2-4887-ae3a-94b65fdbb5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72491a5c-da43-459a-a4d0-c2f4342eac7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd5f89c-73dd-4503-8930-145465b7e1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08096b10-9fcb-413f-b951-60bb6f76658f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4838b0b4-b38f-43c7-9faa-9c5f92fbb4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c63b42b-ea9d-4c08-b694-cca3ee80d2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94b0d04-32b2-402b-8657-40119bb69019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbb36f0-bd0e-42b5-82fa-0fdb41976d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb97727-f861-43de-a0b2-012b226f00a4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b1e4b7-1974-453b-b07c-7f41b0b8a812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33badea-6d66-4120-ba1d-a53aa211b058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30fcb06-d7f3-47e8-b853-d871bbe8db40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c158afca-faba-4d02-bc6c-0acc69984b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9769fe4a-4653-44eb-8eab-6fff778b6055",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a80c9e-5b69-486f-80f3-37dff2591259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21477cce-ca49-420f-95d9-2e96d4c9302c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e74ec4-bc66-40e8-8e65-0bb732b10bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bcfab7-a3d3-4726-8de5-6501d4608fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf3cdc0-7c62-44dd-b0b0-4fac49d87d45",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28274edf-99ef-4cb1-b0aa-12e6846f2dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147caafb-54f4-4c71-8b7d-81183e71a386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c413e595-2dc3-442e-b1b2-d2bd4dae15c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255814fa-132a-46ab-9407-a69b801f9b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df301f92-b1a4-4cb7-9327-52fc7dafe642",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32734993-24b7-40ba-9f6c-e42995f19ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e4a5eb-1752-411a-80eb-e759495b0b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf20739-1b6e-4cdb-b2b0-d3b5dfe7e74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02913a86-1d34-46a9-a306-3c6750e7f759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a6b0ce-1247-433d-8219-a886a22a2f60",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb856a5b-5acf-43b2-8a37-a86bd99374bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751c7dfc-c6a1-48cd-8c81-fd6333f55225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2e50bf-a4d7-4088-ac71-ce1bc9c57b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c03ffd-e916-4607-bf4f-d85f24ab710c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd2c321-5ae3-44c2-891f-a51a7a4a90dd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4e7ef3-fa6f-47f6-a3dd-f0288b2af6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4785e709-4c01-4b28-a5a1-997656bc1778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29453d5-0359-4511-baa0-ad1c883a3b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf518ea2-d6e8-4930-95a2-69462b13f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0214a44c-e358-46fc-ad5d-2f1a1223937a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bea18e-c51b-4dca-ab93-2586247125ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434b3ae4-b1a8-4e4c-9a70-0e37e7729127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b355ded-8e03-4994-91a6-77ebd1057b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9f5183-57c9-4cb2-81fc-6778c684264f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b024f658-42fb-4165-b2ba-a89e1ac3613c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5480de2-cc7b-453a-bf66-4ca44e6feeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29439e8f-80db-4f09-9186-d91348cd372b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd24ec5-62ac-4945-9cdc-19e285703b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da469a54-f711-429c-8c92-0bbb3eeda992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec12534-e5a1-4cf2-9224-a51c563f8c4e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432444da-31e6-4499-a1bf-6879025e2d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1104df-201a-4ea8-97a5-eb9a08519b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d5a91f-4cf2-4c32-8733-0b487028cd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9151c2-9f9e-4cef-894c-54ab9a6cd25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f53491-3644-41b2-9f56-92292a5d0df2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988181b1-5a9d-431a-adcd-456fe80d4c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fd3f87-024d-4d44-b040-6e19f5925ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f8246b-bfb3-416b-83ca-1381324e121e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527f2782-4783-49e9-b3f7-f0540a94f780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0097a24-f20f-4f50-ae6e-bbb8a58c1434",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c78f4f4-dad3-4c69-a0b3-04b368498591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9619411f-8cb1-44f4-a674-4d72a9af629e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4027e7b-3977-4be8-8167-32c58bc1bca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea3f7de-91ec-43d1-95a1-71654e5fb6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbd2688-557b-48f7-9f18-363e98825b0d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b4634e-9143-4e5a-8d36-e4fd344dcfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cc82c8-e3a0-410e-a2cf-d39cd7524976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c878794b-2b36-49cc-a54f-9471dd3fba24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e8bd42-4a8d-4bdd-baf6-2b30efaecec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ea7184-bcc3-459c-87a7-5965c58d39e9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f054ff-a01f-4478-b6dd-7c49ce6b0015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b389eaf1-c3d1-4005-9a2d-7a297331d595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bed8a64-7dd7-41f2-8a30-aec131cac123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a98b7b7-e500-411d-87ae-0f67b58818db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb10823b-9a13-4ca8-a753-6e215f7eb0ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db60cc5f-95ae-4b3d-b547-24d3852c32f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29afa86-d99e-40fb-ac5e-cf4739456b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5cf00f-aaeb-4181-bbdc-2cd11b5c8e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700af726-fbb3-4fee-9a7f-a3351bfa7f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e384ab2f-7c1b-4b15-b7bb-3bde249c5571",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0bc863-4d9b-4f45-8c74-2894785ba13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73fcfc2f-59b9-49f5-82be-dfa112951a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fbecb5-e2dd-4ca0-8a44-99077adeee90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b073bafd-76f4-4442-8c13-9c235192a6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7608ec8-2264-4d55-84cc-4130e86fbe5d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e2968b-6496-4e14-b9d8-be893c093626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbf72af-e445-4a4a-9775-4cdb6335b7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05a6bf8-c5ff-4ada-91a6-9276f96c384c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e926793-29bc-43b9-8220-b347b3b9881e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47da37-be5c-4df8-88e5-2c2652ea783c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61af28b3-014d-4c13-bef2-f44e6ac5cf65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05f2b70-c6c1-471c-a1a7-a8acdf6fefc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df40ba9-ab44-4e1d-a8c8-93154094fac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c32d504-8c18-4ab4-bd8e-9ac28bbdea3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aac0930-8021-4e04-b360-b6b566729f4f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b395d0-9865-47c4-8767-0916f8993f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9373607f-c2c9-4a75-b302-31428fee5641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcd0dbd-6057-4e7d-9254-3b3de7706d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faac3bc-269a-44d8-882f-6f44784a5428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31599848-9706-4050-9b76-97f729370bbc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912bc990-120b-4fd2-845d-d7cf4edaa353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874947de-f0c0-40da-b5d0-cd69feb3665d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece18378-31b2-4c00-9500-4dbc5d26c8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06c14b-9fb1-4eca-aa73-02586f6ee044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1795ad1d-9c71-472c-965e-764dce990085",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85d931c-1a65-45bc-8833-d51d428d3948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e502312-c31d-482a-b39d-3111e1802828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f8bda-8204-40c1-a264-61eb3ca1c992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e7db30-bf23-4775-9e11-3c67d5404054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536e6a74-0281-42f2-9eab-b250e25328ed",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6918f6-90cc-4d2f-9a3e-c16ba54a81ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3421b3a5-2d27-4471-8fc7-dfcd2afe7f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd7a206-0dcb-4988-822a-7c6a776583f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd37cd0-b34b-4b8e-95ab-2385528a8e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217a86f-d730-4c39-b645-8f4b53707b64",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6900950f-fa8b-4c12-b8c6-8a7b2c5c34b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd03f7d-1536-4028-b9b3-41c9cc534555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a617bc9-d73e-4d24-a691-beacccfbf12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24f1f69-099f-423d-9386-4d357887c52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23215b0-27de-4b89-8ca3-701b886b8d67",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e47f3d6-28e1-4e65-9e6c-6b663b42802f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0364201a-bb92-4729-a414-a3b0ebf020bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0e2c4f-43a9-4708-b910-5dbb67de4f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ad38fc-0ab1-4ec6-9c55-d6a5078a3ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149e60ca-9ae0-4651-a817-8e00e1ef1f22",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a0338b-f555-4b1b-822d-4f406b68f351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2aa8b3c-548e-49af-a9ab-35ee40395982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d8b6a3-b8cf-4399-ab42-995147056e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3cb994-965c-49d2-9652-f381333f6ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24025210-a232-400f-b6d8-0601a9a288e2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f4a727-538f-4d5e-9470-8fd3ee45ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ad63cb-ea3d-4797-b498-0d7cf51005ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7becae7-1003-4272-a007-936d32149ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d3645a-f308-4e73-a543-2240f8f40bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3c70d2-d9ed-4c0a-9483-6f995de37cef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f72d24-47cd-4e6e-ae70-35df3d27e3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141bcc81-dc95-4228-846b-0a70e687f156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bac580f-fc6b-43eb-867c-31a2a378ed73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc51e07c-0af9-4772-8fa1-bcd10c602429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cce12c-cdc9-45d4-a042-2285f73c9b19",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a2d219-2174-4d95-80d5-aa8a31f4ec53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea19b46-fe5f-459d-82c1-1fa165445266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e6013c-1cdb-447e-9dfc-e2b1c4e96a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2966d6-2f74-4317-a6c8-bbe782f9285d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71c2ed6-8a79-4d98-a3b8-99fac754ae10",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaebbd4-1e9d-4b56-b20f-f986c23d32b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a0eb9e-e967-43d4-90cf-f9653db47ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359a0b51-2f9f-4eba-b7e1-2d6800f5dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67843e63-f5a7-4f17-9833-06a6ef3ae9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99ea32e-1027-425f-b72b-08b457ff7aec",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc5ea4e-bfca-4692-894d-182f6452ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1049945a-da4d-4a13-bd20-17ca6bdb9e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c5312d-d48e-4af5-bde5-cd211505de83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa17f8b-4ac2-4ba8-aaba-e0a60679993f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dca9c1-0524-4b32-bd29-bb0ad056407c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ad3247-2e3b-4089-a057-7c27b005f29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad9b1e0-42ee-4fab-982c-0e4e3a83d21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ecd9f-b395-4201-9a01-b27311a31d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f27c77-e00e-47da-a69a-00c1dccd0d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18be8878-694e-4068-8c46-1d14edd78f31",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e0e478-84fb-4566-84c6-9958a2d3a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd122f0-538f-494b-b263-cb4a324ec20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2978ea-5cbb-4ab4-8e35-873d9f2aba51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fb8626-ffca-4d05-b783-7e6362d8e0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7e6ddc-775e-4f7f-b4ca-b0ae154da872",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fc691f-862e-452a-9738-d14581bc492c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53e8f42-7001-4e07-977f-27b77d6fb7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4a9ad1-af8a-477c-860d-652a9901c548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857ea509-3390-4dff-858b-e7089d344a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491f5ed3-a522-48e3-99b2-46893e6ccbe3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd6dc6f-d7eb-4728-b009-958d7f14a826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c4e8e5c-71de-443a-a608-5720d0886937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045c247f-1640-4207-8188-99b8dd3eeb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5de00bd-53be-4fed-ad86-9faaa4374128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c767ace7-4b56-41b5-93de-695f2360d7f7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e9bd2a-ce3e-4abb-8522-817409c521fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43855c26-4f4d-49b3-9844-88efb8196898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d504f42-05d5-45ac-8e96-bf0f2569155a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e959896-f851-4525-a733-e5c0b7045314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314b0bca-9b3a-4c51-8b46-f7f42c29b3af",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fc7d00-465a-438b-97cc-ec1539e05c31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43cd2710-baed-4626-9604-bcda403c38fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe5761-7e66-43b8-b018-c1803f20a5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5924661c-afca-41fb-820e-4b74d9a12d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6e8b8a-626f-47c6-8bd5-c7652fddc8cc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df621ba-9677-4c9e-8079-f31f96b582bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf999f9-9ba6-40c0-9413-65253d2f083d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147b3623-6ab2-475b-b4ed-7dee61af9bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a3684b-15fa-4e57-99b4-c1c93b053c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39315042-af42-413e-8895-329906b7d513",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca6ca9-0558-4a38-ac40-ffde878a6094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1c6977-e866-4a16-9751-d2d1e664a1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9872de83-e7ee-4b79-b846-033d1c5c2abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3dbaec-3e3f-4eaf-a55e-6126129b6d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032be62a-f8df-4f2b-8d33-edd7606166a4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4139c4-49eb-400e-a647-c0435858f551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648ba67d-b13b-465b-913c-f81bc79a62ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc58caf2-438a-4b7b-a4e9-3a1405b93a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17a2751-d7f6-4d4d-aaf6-1fc024460506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4fe205-aae9-4631-9f82-4a459636cfd6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944340ce-e8d2-4140-85dc-afe2a40e0db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0424e7f-c82d-4aa1-a6c6-7d5fe350fe22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c957d78-a75c-415f-8a27-4640bfa0844e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02357093-339e-43bd-b28b-3d04256c0ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1ba22c-6b76-4c32-b9a3-24a3710ec3e4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861c505b-303b-43d0-a8d2-f2945b5c0964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b81428f-d1a7-4cd4-ab72-9710f6a471ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2547abb3-25e1-4c2f-be5e-7c8412e7663c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb61deb2-e415-406e-a71e-03a5129c4039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61992c2-a700-4343-9cda-a575706b945a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839043b7-269f-4264-b7b8-736342cba3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcae8c7d-ba85-434b-9ab4-e859cce8bd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3791fd66-29ad-49f6-b9c5-01b0034b3b3c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba293234-be18-4ccb-a84d-8b3191408fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb485a1-5775-4608-bafa-f96f2f8171f8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10324b7d-8a67-46b3-9879-74659cd7b7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7644cc8-3a12-44ff-b794-b6d0cbbb8dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08ed7f0-ddf4-426f-a63c-ddc92216238e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be253fde-2a1a-4e48-8de9-c245bce3d610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cff60e-9cb7-4b9f-ab0f-b6bf8e6093a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435e7206-c278-4b4e-af5a-66b1d98cd661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21581a85-da9c-44ce-913d-b3875a489e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647805cb-ff8d-417f-8e14-22b3449cfbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad09b8ae-60a0-4c92-a1a8-847a67964bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d820de6-a9b7-4978-897d-ad31773b9d83",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6d621b-87ef-422f-9448-b3845492b0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e7a93a-a557-41ce-8646-e32458b963c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5eae31-dc87-4297-becb-9e91ed0d0365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810d4092-e896-427f-975a-8bdb239fdd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1912bcd-e394-4d83-a711-0203c8f329a8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dc5416-5320-4276-b5dc-7cdc1e38925e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92f58dd-5827-41ca-9b12-0e7f1af62f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef858d-2fec-46bf-ac0e-a6aedfb4a5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e662087a-abea-4ba1-a781-59643f815173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0994b1-d60e-4a65-9b77-49daff60f772",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f56e09-71e6-4d97-a131-0099f84754e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7c6f88-161d-483f-b074-dfca6752ebb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57af5733-ec94-41e8-ba6a-ea30f37d5ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dbd955-5482-468e-aaa6-cb04cfccc520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ce75ec-7918-4b74-b7c2-29a52c106e7e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a728bcf-aced-45ea-9cb0-a81b6f3b8338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e065a9f9-1d58-4a67-9764-c871c83f3c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7fd9a6-10ed-42e3-855d-62604a5b9fab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd19d9a8-24ce-4ce7-9d01-30067b2d01ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86ae5d2-0e4d-4873-87a6-ea26cf2ac1dd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4098ae75-0e23-47c4-a39b-1ffa5f6989fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5a94b5-34d7-461a-8170-e44e7bb4e7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca758cba-b1a7-4803-b02b-ad1183720a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fb225b-40ac-418e-87da-84c1a6a5ba74"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "419792d4-8adb-4aba-baa7-deddd79c17a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4343763e-682e-4c65-8cdf-647863e90784"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ecc64e7-68f6-4b82-88b9-f42298ae761d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a53033c1-6d46-4751-9398-6a918a1b96dd"
                    }
                  }
                ]
              },
              {
                "id": "ec28dd39-32ed-446f-ad76-df2f6548dad8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae55c349-670b-4edd-bbe9-f2b6c500dded",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8436571b-5185-4ffa-bb3e-0d3442038ea2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c029154c-3b80-4713-8fed-393a50aaf8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857822a2-bb8e-4b39-b6a9-d24408fcdc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c7db7c0-78f6-41d9-8106-5d3240cd6f4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa8127a2-965a-4105-abd5-538116d84e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdcab54d-5404-4b6f-853c-b2c2b56e4ed7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd084740-f776-4d65-b9e3-d4008fb16f08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8020718-e776-40de-8ad8-8e3694c16a14"
                    }
                  }
                ]
              },
              {
                "id": "4af1ee84-de03-412b-82b2-fa07ea18c391",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4d343156-b621-4809-b8f5-fec044ca604b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aea22ff-2f2e-4516-97e9-933297d99207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a6a5d0b3-978d-402a-a767-347adca01f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1710ec65-e5de-4071-91e8-35278c697853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d524c15-d2a3-4570-bd21-d088eb0f3bbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a3fb518-3d3e-4e65-8adf-c278fe049e6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a236fe5-dd89-4d08-9452-90b82a04c777",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd906073-ab78-4070-b1f2-f862305a42d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "abef11c8-9c91-43d4-9ac8-784ecc6c7b99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9586130e-8663-47a4-b4f9-729bbcde2525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f828d92-0d5a-4215-aae7-ffde3943d0e2"
                    }
                  }
                ]
              },
              {
                "id": "a0467fb3-97a1-432e-a68a-1218335a774b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a62fe6f3-25f3-4e53-92ff-bf4e0529486b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d88d30f4-292e-46f6-9c90-49f180666dcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "077f5a85-84b3-41b4-a130-c080bca8b4b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d66b09-99e3-4346-b3f1-c99ee15e8e37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bc12219-567e-4ff9-88c1-766297eade7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "80b505ed-e3de-4e82-bca9-87200ac108a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3570728d-13b4-464f-8c82-1237408d5f0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "140e5f02-5041-4589-8758-7e7116a97945"
            }
          }
        ]
      },
      {
        "id": "52a76192-9ab3-40b7-8b0e-9368ae061259",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a1efb0d2-2035-40a4-9a44-84633b9a4bd2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47971ac5-6321-484b-a69a-db83268a8ca6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d9c2db5-76c2-45dd-a782-31c91e516314",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65908550-3b3f-4a21-a409-ef5346670093",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "acbcd914-988d-4261-a803-3b9aab706588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d3618f-060c-4474-8c19-194be098c82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0a90af6-3742-4950-85b2-42cd125db4a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9670b876-c1d7-4a22-a502-ac49334f5498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3a903b6-ea64-4bfd-854c-2fe5e08524fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c44d5381-1523-4fd9-bec0-42a79886cafa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53493f0d-451d-4c1a-9180-f7c5eb763f5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98fac8f2-a07f-49f8-b278-1be149e25f35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8c430286-06e3-46e4-8830-f26ffc3d01f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3af3fa8-a6a2-4a5b-bb0b-89bd4a31e0c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1f3490c-81dd-4c63-91fa-cf632dddc1e7"
            }
          }
        ]
      },
      {
        "id": "acd66a6b-9ba4-4d03-b47d-f5a13734414a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cfd4bd55-10df-40ce-862e-074910493ed0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9edfd7f0-6f57-4430-bea9-dffb2dc7aff7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aa8601e-1125-42a4-813d-cabd61040945",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2ecba7-0247-452e-b4d2-0fffc104c614",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7bcc048-1ddf-4a7b-8e1c-b6a3799569a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa5cbe-5415-4743-9a8a-dddd341ac135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeeb1088-c0c8-46d5-9ddd-5591169c0b3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "377abf35-cca6-4d8e-adae-fa5b2ff10f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0587d3ea-0fd9-4daf-93ee-5941b9f31c08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3b11ba5-7ea5-4272-8b99-faffbc9558b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44f39a50-2822-4c23-84a1-975b6b449283"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "275b53ec-e6fb-45c9-93cf-d1b0a9210f1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5c1b094-4c7a-4b51-8f60-5d87081ca42c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeffdcb0-fe8d-482f-9ba8-8dd1dd011f8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37900d71-a5a0-48a0-bf21-b2001f2f5364"
            }
          }
        ]
      },
      {
        "id": "c22db354-43d6-469b-ad9c-8465af9076b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5473e85e-2d53-4d7d-8ded-856d1bc6ff82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7be5266-a012-490c-ae95-d36536f7fd3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adbcd639-e9af-4b65-8070-bad04d1c662a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bc9cf-c37e-427c-a041-6b25ff91d40d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb502f6a-ec3b-4fbe-832f-b4fca4bc1d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2cff9b-c1ef-4035-8823-900ff61a5e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b0c97cd-bb09-44f5-ae4f-b0d6b66dc236"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbdab98d-6069-423b-b4ee-e588a1ece011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1d0619d-7e35-431f-83b9-36dd2d3f1884"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e790c3b3-d7ed-4104-b446-3af462c549c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e873cc4c-5af6-43ab-a9ce-5950d79f4e81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c4f5e1c-eeb9-464f-af7a-f66d939d8ccc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a799cbf-6574-4582-8829-367b38e3ed4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "654fe171-39be-4d60-acf2-04e55aa10684",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a3eb4a3-56ce-4afd-8527-798058f0b2f1"
            }
          }
        ]
      },
      {
        "id": "708053ee-6b9d-4b07-9391-fe99406ec730",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b488c59c-6a15-401d-aec7-68b9ea915a0d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a3b45d7-74d4-41e1-ab6d-18229e4936fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "305cedbd-3410-4b38-af81-248282141e04",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5e9c49c-b583-47e0-9bea-cb0973ee27fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4d6ab40-4dab-42d5-a790-7db041b2712c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 269.6230158730162,
      "responseMin": 6,
      "responseMax": 7681,
      "responseSd": 1140.0051224935523,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718584802665,
      "completed": 1718584878980
    },
    "executions": [
      {
        "id": "2ba3574d-239f-49a0-8c7e-7735cb576dfc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8808599e-e4bf-4057-bfbe-628554b24627",
          "httpRequestId": "4fe5d1e3-273c-473c-8415-5c3e59e4dc6a"
        },
        "item": {
          "id": "2ba3574d-239f-49a0-8c7e-7735cb576dfc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dbbdd240-a6ec-4c10-b551-3000f5c708a4",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "8f1db61d-3d75-404c-ac9e-4aee224508b3",
        "cursor": {
          "ref": "55094051-4088-4a19-b17f-9eacef4e08f3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ede63e0f-ca76-4e88-b360-16a7dc43ca77"
        },
        "item": {
          "id": "8f1db61d-3d75-404c-ac9e-4aee224508b3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7f1e9566-e880-4fa0-a96d-c4481818abb5",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ca4b2d5d-19b3-4790-bf0b-34b09c9fb414",
        "cursor": {
          "ref": "22e890e6-ce04-4f73-a97d-375690fc46aa",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c68eac50-1726-4ab9-b1b1-f2af0e38ef10"
        },
        "item": {
          "id": "ca4b2d5d-19b3-4790-bf0b-34b09c9fb414",
          "name": "did_json"
        },
        "response": {
          "id": "5be76335-fff2-4045-8bd5-569c74dd7cbe",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f830a51f-a37f-4123-a699-3b68ff4a73f7",
        "cursor": {
          "ref": "ac0f8627-4f1c-4617-894b-af9520ab8e3a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7fd604a-2a21-4a5d-bb3f-74d1c78ee28b"
        },
        "item": {
          "id": "f830a51f-a37f-4123-a699-3b68ff4a73f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "bf99137a-126f-42a4-9172-88cbee3bffbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2339,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f830a51f-a37f-4123-a699-3b68ff4a73f7",
        "cursor": {
          "ref": "ac0f8627-4f1c-4617-894b-af9520ab8e3a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7fd604a-2a21-4a5d-bb3f-74d1c78ee28b"
        },
        "item": {
          "id": "f830a51f-a37f-4123-a699-3b68ff4a73f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "bf99137a-126f-42a4-9172-88cbee3bffbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2339,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9124c4-0153-497b-8534-c815251438df",
        "cursor": {
          "ref": "e025d277-85e5-43bd-a392-feef8bbb5abc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "78b9cfcd-cc93-4eac-b57f-5ee87d0c4ae9"
        },
        "item": {
          "id": "7f9124c4-0153-497b-8534-c815251438df",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3c9fff6f-9f28-44aa-8df9-ee94efccdf2e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2180,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81b4e3b-3e2a-42f8-bb88-f21459a79d66",
        "cursor": {
          "ref": "c713a1fb-1f2e-482e-9548-a154a862e054",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "04d91091-855d-4ab6-bec4-73f683059af4"
        },
        "item": {
          "id": "a81b4e3b-3e2a-42f8-bb88-f21459a79d66",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ec873b5-211b-48e6-b0eb-4abb8a6f1b92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2363,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c764ddd-4553-440f-ac72-ab569bb4ee34",
        "cursor": {
          "ref": "b48690ea-9343-4e9a-b7d8-3722fee1b8b4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a34caeef-c199-48d1-a340-214826b4189f"
        },
        "item": {
          "id": "6c764ddd-4553-440f-ac72-ab569bb4ee34",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "54171c98-6ff6-4b53-a9b8-3941c97d7203",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753af52-fbc5-44f1-8a44-f6feafd2e625",
        "cursor": {
          "ref": "59c8ee41-424e-4bcb-9d6f-dedcfc2e9ec7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b58c023f-fdfd-4876-88c1-515de9133860"
        },
        "item": {
          "id": "6753af52-fbc5-44f1-8a44-f6feafd2e625",
          "name": "identifiers"
        },
        "response": {
          "id": "fdbdbf22-58a2-4174-b208-2b8b92906272",
          "status": "OK",
          "code": 200,
          "responseTime": 2480,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c9eb1f-7187-4a96-b8d7-35e51a395129",
        "cursor": {
          "ref": "1b75ce9d-8bfc-47d5-88d5-db1fd65ccfb9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ac4633ce-b172-4678-b651-83f544330c6a"
        },
        "item": {
          "id": "f3c9eb1f-7187-4a96-b8d7-35e51a395129",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ad971ca-78aa-4364-b7ec-2a73d1862f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fcf6c0-0d67-4e7c-b1ae-40987bac73aa",
        "cursor": {
          "ref": "fdd16472-74cc-4b68-91b6-354296408ccd",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d031995d-2d10-4ebf-b1ca-9a41cb680272"
        },
        "item": {
          "id": "b1fcf6c0-0d67-4e7c-b1ae-40987bac73aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e49ec0c0-821e-4a01-bcaa-fca063b98469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d0a75a-f887-42d3-98cf-cabaaa57fce9",
        "cursor": {
          "ref": "3939cb3a-e656-4ebc-a74b-1d12c2c95dfe",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "61f7e4fd-fcad-4f35-b08a-e55c4c821067"
        },
        "item": {
          "id": "14d0a75a-f887-42d3-98cf-cabaaa57fce9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ecc3433f-77dc-4805-b480-5472613e5622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb382ce-2d2b-4046-bc89-b3173ee54faf",
        "cursor": {
          "ref": "697b7ce1-68f8-40f4-a652-84a4c62199a4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "82ccb4d0-09bb-4297-8948-a47dd8c62510"
        },
        "item": {
          "id": "bbb382ce-2d2b-4046-bc89-b3173ee54faf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5eb4f3ee-3a84-409d-8789-eb587a77c4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e769c5d0-935e-4238-9a93-48f74a2aaeab",
        "cursor": {
          "ref": "d5f3e50e-e686-4f33-8db1-753b1bcbeee9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "43171aa5-d631-41e9-b000-cc92fcd5f167"
        },
        "item": {
          "id": "e769c5d0-935e-4238-9a93-48f74a2aaeab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3d9f9319-14c4-4c09-a7f4-b682e3197ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12c1245-5686-446e-a450-2fe1c5df21a8",
        "cursor": {
          "ref": "9985145a-5181-4ff3-a11f-58e59b7af105",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bdde6ef4-8386-40c5-a1cb-f16842d6d38e"
        },
        "item": {
          "id": "b12c1245-5686-446e-a450-2fe1c5df21a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e74d230c-e918-426d-9d1b-8333f38eed2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3648b199-5da0-4d94-9b5c-5524729d09c3",
        "cursor": {
          "ref": "35471477-4975-4530-a2c0-b5eadd6d3ad0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1e1689db-7d9c-477c-bd33-ac61a398bfc2"
        },
        "item": {
          "id": "3648b199-5da0-4d94-9b5c-5524729d09c3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8285bde5-18df-4d5e-8b0e-a2d9510b4e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d743dc-eec5-41e6-930b-777232b0f004",
        "cursor": {
          "ref": "79fa2665-a859-46cf-b384-6fee4e65efc6",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "58171d73-0903-451a-b76c-7aa183027a63"
        },
        "item": {
          "id": "11d743dc-eec5-41e6-930b-777232b0f004",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8e392c4b-af20-4db6-af24-7647980272eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00520b6-5393-4699-bf6f-e769cdf2ac3b",
        "cursor": {
          "ref": "be572e96-2abe-47f3-9768-9cd5e89f453d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c010aaf0-ccd9-49c6-95bf-db0d6ad137e1"
        },
        "item": {
          "id": "d00520b6-5393-4699-bf6f-e769cdf2ac3b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "03df49d8-f99b-4117-90bc-8dde7d9ce5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf7b9de-dc67-4dec-8f88-212ee64e953e",
        "cursor": {
          "ref": "7da31746-ebee-45d4-96d1-701dba617be4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c050ca3e-8e3b-4a61-9381-0ae615954a97"
        },
        "item": {
          "id": "8bf7b9de-dc67-4dec-8f88-212ee64e953e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b87970c9-5696-4494-9b68-e9079b9e239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4468ccf-25f0-4876-b897-44f17c863b80",
        "cursor": {
          "ref": "59095673-a520-4f36-9692-2932d9818507",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9fcf8831-3431-4195-894e-f066ae7c0f05"
        },
        "item": {
          "id": "e4468ccf-25f0-4876-b897-44f17c863b80",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4d5955a2-9a56-4812-9db9-9f6153394312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c739d715-fcf5-4451-98e9-af2f24a5ccef",
        "cursor": {
          "ref": "f66cb6a4-a7fd-490b-be06-aa8bb575cd85",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aea5a512-8e52-49a1-b948-de9794707715"
        },
        "item": {
          "id": "c739d715-fcf5-4451-98e9-af2f24a5ccef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7c6f0807-6886-489a-8cba-a8bf9d23db36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b6fd70-1368-436e-b728-6d0f387e3503",
        "cursor": {
          "ref": "b14a6fcb-34ac-4ff2-a33c-9ac2fae3f630",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0b10c331-4b57-4f90-9b60-7ae73746d106"
        },
        "item": {
          "id": "66b6fd70-1368-436e-b728-6d0f387e3503",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d1709dfa-e1af-4afd-a124-aa9e2e2795c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc6182e-5051-4ba8-ac93-51dfc9486e41",
        "cursor": {
          "ref": "3406ce08-c85c-4880-b840-c5957089c89a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4800d5d8-cec0-4490-a009-68e2003ec7fd"
        },
        "item": {
          "id": "0fc6182e-5051-4ba8-ac93-51dfc9486e41",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "30e85be2-0e35-4287-ab31-c70819743756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968bab7a-5a06-436f-91c3-8c10eb42692e",
        "cursor": {
          "ref": "959b99e6-39f1-4b43-a36f-b7d94cda1342",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7ac53a1b-98cc-4226-9e08-62414e452df3"
        },
        "item": {
          "id": "968bab7a-5a06-436f-91c3-8c10eb42692e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f3303c8b-1fc4-4abc-ba8d-572921191fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060fea8-cdc5-4cb6-a5a9-57ece6167800",
        "cursor": {
          "ref": "07648407-bf97-4226-9aba-a07aad2b170b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d9b9dbd7-0563-4966-8edd-af5bb866ae1f"
        },
        "item": {
          "id": "f060fea8-cdc5-4cb6-a5a9-57ece6167800",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "43c38f28-dbd2-4ff4-8d6b-8f399675a96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfb01f9-18aa-4310-9b05-b24c56db1548",
        "cursor": {
          "ref": "826efd57-e995-40b9-b6d6-af00cd4b3eee",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "90ae08d0-9ffb-4ac1-9d94-c4692d6a4f89"
        },
        "item": {
          "id": "0cfb01f9-18aa-4310-9b05-b24c56db1548",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ef1e7fde-f9c1-403b-9249-cf3f7870f586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dba2e03-80ad-4718-af7f-999725a83932",
        "cursor": {
          "ref": "3ff395a3-0ed6-4f5e-981b-054df7b1336a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d5985402-8bec-402d-a8f2-b0f6170160fb"
        },
        "item": {
          "id": "6dba2e03-80ad-4718-af7f-999725a83932",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "320bca51-5767-43ab-aab9-53b3470652e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c08f576-adc2-45de-9b2a-0eaa57c8aacf",
        "cursor": {
          "ref": "50f41dda-dabe-475f-95a3-d399c373fbe9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f9a20f56-55f3-4f4d-9dd5-1802a2882f40"
        },
        "item": {
          "id": "8c08f576-adc2-45de-9b2a-0eaa57c8aacf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c3ffc2e2-e086-4ec7-97b6-ce19caaff61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea58326-bbd4-4dc5-ace2-c1c834a826c6",
        "cursor": {
          "ref": "17b2a313-8a7e-45e3-a5f1-9144c6d1d7e2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9f23628-87e2-449c-8778-65716da42345"
        },
        "item": {
          "id": "8ea58326-bbd4-4dc5-ace2-c1c834a826c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0503c5bb-32e4-4492-9853-0ec906b04f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ce101a-7143-4580-bacc-beda996bc11d",
        "cursor": {
          "ref": "148a88e1-584c-4ed8-ba17-614b108d5067",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d38d2a2-16e8-4148-90b7-c1d119dde18b"
        },
        "item": {
          "id": "74ce101a-7143-4580-bacc-beda996bc11d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "df5b978c-0cb9-4fd6-98c6-9e7a7b83b47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede29cae-ed9b-466d-a44c-65cae09566c8",
        "cursor": {
          "ref": "b666dd45-969a-4946-8aaf-2501913a6198",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fbc5d5b2-6c25-472f-8509-cbf7e70b290e"
        },
        "item": {
          "id": "ede29cae-ed9b-466d-a44c-65cae09566c8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8577fde6-28ca-4244-925c-65b890b80082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f211569-29c5-4717-bb55-8ef37c45f3bf",
        "cursor": {
          "ref": "d871d904-924d-45cd-9fd1-42b6591a51b6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dd9d60c6-df51-4ef3-adf2-7e38e9818222"
        },
        "item": {
          "id": "3f211569-29c5-4717-bb55-8ef37c45f3bf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88d47c55-4430-46df-9790-e95f7bb8c73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89be8b3-f06c-47cb-9dd1-df5b4c888d5d",
        "cursor": {
          "ref": "27ebf84a-981d-465f-a058-d8a8094a6262",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "736f87a6-4a41-48e4-a45b-58ff20971c1c"
        },
        "item": {
          "id": "b89be8b3-f06c-47cb-9dd1-df5b4c888d5d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "26f95dd4-28de-433c-be21-3582683575d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb145b1-6e60-4337-8a77-1a779ee3f1c4",
        "cursor": {
          "ref": "89e7dfbc-db26-4e88-9e8d-231afc1c8376",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "68464be4-3c62-4ca7-94cd-94c5514196c3"
        },
        "item": {
          "id": "5eb145b1-6e60-4337-8a77-1a779ee3f1c4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "46c5312a-ef75-4181-b67d-24e5f93daa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396e5597-791c-4f05-a094-d309054d2463",
        "cursor": {
          "ref": "05d32fff-9466-49c7-80aa-c787c608c650",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae617461-dedd-4a05-8927-87c0895d45d3"
        },
        "item": {
          "id": "396e5597-791c-4f05-a094-d309054d2463",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b47d8d63-c488-40f7-913a-d0c9af777aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032d9329-0011-46c0-8a1c-a23cc9344787",
        "cursor": {
          "ref": "9eda1116-b6af-4d09-8159-0aefd63f42a4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "df128b2d-ca9f-4bc5-8c29-11bc428bc000"
        },
        "item": {
          "id": "032d9329-0011-46c0-8a1c-a23cc9344787",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2f0aa975-2057-4977-85c1-97a3441f1ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b74037-589b-4618-8d35-477b2de3abf3",
        "cursor": {
          "ref": "87e75b2b-b7f1-44bc-b0b6-b0f887eee800",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "135aecbd-2ddb-4e71-9b0c-10e5171edaf9"
        },
        "item": {
          "id": "f2b74037-589b-4618-8d35-477b2de3abf3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "170a2c4c-4efa-4b0e-b49e-a03bb5424613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d296c6-1787-44c2-a2d0-515916a8056c",
        "cursor": {
          "ref": "081ecfad-530b-42de-8541-85f558cbab1f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9785dc07-a759-4ae3-92af-da05631fbe3a"
        },
        "item": {
          "id": "07d296c6-1787-44c2-a2d0-515916a8056c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1a24dbc9-76d7-4e8c-a912-884a7b1abe99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20410a76-14e8-4138-a5a1-b89cec6c4e4f",
        "cursor": {
          "ref": "8ce85d85-0e7a-4d71-9cdc-c67958923759",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6107df0e-56ff-4406-b5f6-89007225145b"
        },
        "item": {
          "id": "20410a76-14e8-4138-a5a1-b89cec6c4e4f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "30a7d611-2158-4a38-8f95-108df20b9f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20ef06d-a65c-4d0b-b985-d9b94bc481c3",
        "cursor": {
          "ref": "19740d92-9f96-4f5d-a10b-7801881c675e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e8763919-7737-4b37-b012-f8df7d8bec45"
        },
        "item": {
          "id": "e20ef06d-a65c-4d0b-b985-d9b94bc481c3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d700a20f-b244-4cce-9d9c-445612463325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6382e2b0-74a8-4e78-a896-d44e58f8b10a",
        "cursor": {
          "ref": "59656cf9-751b-4b88-9a0e-d17dae76b3f1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c41deb5a-c92c-4ac0-9b1f-4b87c3877606"
        },
        "item": {
          "id": "6382e2b0-74a8-4e78-a896-d44e58f8b10a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0e81969d-25ad-4307-8f55-26aa07b55c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ece01e0-a430-42d6-b826-da601e9793f3",
        "cursor": {
          "ref": "1c0f0a62-1029-4b34-a59b-9f76146f3d23",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "91ddada2-97f2-4ca8-8e4c-8faf4784fc4c"
        },
        "item": {
          "id": "9ece01e0-a430-42d6-b826-da601e9793f3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dc803cdc-5c6c-487c-81db-a210c834fbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69b992a-8bc7-41dd-b03f-2caa43289b7a",
        "cursor": {
          "ref": "d83bd985-eabc-45d0-9a5f-9c5efcd169b9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f3abfeb4-8b34-4038-b496-1a56bd6fba1f"
        },
        "item": {
          "id": "c69b992a-8bc7-41dd-b03f-2caa43289b7a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "02511550-d0f1-4b69-8996-809bcae1a008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44805f1-beaa-4494-aa53-d8f97a084685",
        "cursor": {
          "ref": "6ac2e314-6808-411e-aed7-b8be62753e71",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9fe532d0-5534-4a53-91f7-d534b986b68e"
        },
        "item": {
          "id": "b44805f1-beaa-4494-aa53-d8f97a084685",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e299fe48-d3d8-4bcc-92a4-c9c793407d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78704b3-ca9e-4318-8c3f-7e329dd1ff8a",
        "cursor": {
          "ref": "0d907c8a-aa56-4d37-ac0c-8685aecc9c66",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5171249-dde9-4d71-a35d-52a9c602ec03"
        },
        "item": {
          "id": "f78704b3-ca9e-4318-8c3f-7e329dd1ff8a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "640a0679-4a3d-41e3-9deb-d3e492b80633",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014e1146-083a-4233-80a2-665c22d9fac9",
        "cursor": {
          "ref": "bddf965c-1159-40c8-9b8a-8c811626bfd2",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "46f2853b-5586-4d59-af3f-0fc9976845b1"
        },
        "item": {
          "id": "014e1146-083a-4233-80a2-665c22d9fac9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8ec77975-8a08-4240-9f6e-99c3f157b70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72de96ae-b3b4-4830-9a72-41724ebd6cef",
        "cursor": {
          "ref": "2d51afec-73fb-4dc6-9987-e3a1aa5a5f7b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4636ea59-aa72-4ce5-8fda-876ff9060faf"
        },
        "item": {
          "id": "72de96ae-b3b4-4830-9a72-41724ebd6cef",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "838e75cb-63ca-43c8-a525-f55ac72d3b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9dd8de-ae68-4e28-b5a2-b718b595973b",
        "cursor": {
          "ref": "43606061-5b8a-4359-9e1e-63621e9bb795",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23c2a19c-bfa8-49a5-a8c1-a8bb39a7b7cc"
        },
        "item": {
          "id": "5b9dd8de-ae68-4e28-b5a2-b718b595973b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "80f548a1-e567-42c2-bdce-342bd2f27bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf9e841-3c62-4dea-9ab4-3a05efd1443a",
        "cursor": {
          "ref": "6480b747-f34f-4254-b220-387f7855aa34",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "af3ebea4-569f-4158-8a7b-e556cc367c03"
        },
        "item": {
          "id": "1cf9e841-3c62-4dea-9ab4-3a05efd1443a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "93194075-5034-45d6-8fb8-84b8b43afc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5441e380-8d28-4bca-8d7e-33b0603dd416",
        "cursor": {
          "ref": "457c9c20-6e63-4d5e-9dc3-5910726a4b43",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bc65cf1f-04d2-4573-9020-da11f5cceaab"
        },
        "item": {
          "id": "5441e380-8d28-4bca-8d7e-33b0603dd416",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "387669b2-31f0-470b-8235-7c6586c323f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae647ba-453c-48e4-ad99-bb7fff1da085",
        "cursor": {
          "ref": "e8a4e7a0-48a9-489d-8147-07febbfdf572",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "956594aa-4047-4b83-b46d-a3237b2f790e"
        },
        "item": {
          "id": "5ae647ba-453c-48e4-ad99-bb7fff1da085",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2c7a8998-280e-41d9-b88e-bf34ce82f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e6398-5fd8-4ce0-ad05-268af207d98c",
        "cursor": {
          "ref": "90db2514-4a7d-44de-b01f-5eebb20e70b2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2fac494c-625d-4f33-9503-7ad40c59a0ae"
        },
        "item": {
          "id": "716e6398-5fd8-4ce0-ad05-268af207d98c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e9422265-0404-4939-b765-4b7d794b7eda",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a229bc91-b990-4534-87f3-babd528f3c92",
        "cursor": {
          "ref": "cb4f46b9-10ae-4bc3-9716-e7e0b0269f94",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9edf92d9-ca02-4aa6-b02d-53287a4e899a"
        },
        "item": {
          "id": "a229bc91-b990-4534-87f3-babd528f3c92",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f72c5c0c-ae49-4fef-8590-f6139fb976f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99de3cc-37b9-440d-bf9d-78171bbb8539",
        "cursor": {
          "ref": "2989a8a6-6108-470e-8385-21ef5b7b8e68",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "476b5d9b-d6fe-4737-ab78-221d10b76447"
        },
        "item": {
          "id": "d99de3cc-37b9-440d-bf9d-78171bbb8539",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a6c0181f-eaf7-4cc0-86a7-5cdcadca8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee3f1d1-0b98-4ecf-b3e5-ffdf874d13f4",
        "cursor": {
          "ref": "8544db3a-0676-4599-9fb9-03c5ee97d6d1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3317ae78-fcaa-466c-ae72-5bf32c513a88"
        },
        "item": {
          "id": "6ee3f1d1-0b98-4ecf-b3e5-ffdf874d13f4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "52992752-0809-4249-8145-2540d90fd9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d54be3-764c-4300-aad7-f0f6c202e82e",
        "cursor": {
          "ref": "44076be8-b5f6-4398-8740-5ec921d8bc02",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "28589df9-5d48-4b97-8671-c22387878446"
        },
        "item": {
          "id": "38d54be3-764c-4300-aad7-f0f6c202e82e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "734d5943-0f84-4dfd-a02b-cf2cc314dec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe89cd2-89e6-485a-8ea1-5840724d2d7b",
        "cursor": {
          "ref": "25d92bcc-38e1-4c65-8b44-f11cc1934bf2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "15d8802d-5131-4337-946d-5fabcafddb0c"
        },
        "item": {
          "id": "efe89cd2-89e6-485a-8ea1-5840724d2d7b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d8689684-8a9b-4abe-a858-6a35ca3b2b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a93059-0dcf-4ff0-9a43-8739ee9b09a2",
        "cursor": {
          "ref": "0422e43b-8445-4617-9036-8e9d67bb246c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "10534b51-207f-4b36-8821-6de9d5ae7d90"
        },
        "item": {
          "id": "53a93059-0dcf-4ff0-9a43-8739ee9b09a2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b91221bd-05ec-447f-83e9-426f8fdfc29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36a7c07-eec1-4f01-872c-6207d82ac420",
        "cursor": {
          "ref": "ef1db565-9a46-4fd6-8857-500b87975b70",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2fe1c517-20c9-4ae5-b49b-8ccdc5a87fe4"
        },
        "item": {
          "id": "f36a7c07-eec1-4f01-872c-6207d82ac420",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "54b7e1f8-f60a-434e-9ea9-e0a363ac6bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac01c707-efd9-44ae-a0db-6c8baf1b66f4",
        "cursor": {
          "ref": "c81fece1-4ef1-4877-9be8-708c89a8fa28",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a15dc709-69ce-4418-a806-783e0cf940a7"
        },
        "item": {
          "id": "ac01c707-efd9-44ae-a0db-6c8baf1b66f4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "120dcadc-1000-4d2f-9667-64076cd7c1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42af24f-aec9-4f9a-9579-87b607fea2f7",
        "cursor": {
          "ref": "5035f307-5be3-4df5-a0dc-d93a937c8fb2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fd5f98fe-14cf-4316-b6be-d3bd1ce5ac5b"
        },
        "item": {
          "id": "c42af24f-aec9-4f9a-9579-87b607fea2f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e30d72a6-9a56-4428-a365-d7b554f5b212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7f2052-b248-4763-b838-32e44915de30",
        "cursor": {
          "ref": "6b4863df-d2ba-41f4-929c-3189687de832",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed3c71ab-b349-4db8-9ae3-0c7ad5a8a4f3"
        },
        "item": {
          "id": "7e7f2052-b248-4763-b838-32e44915de30",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b9181dbd-aae8-4dcf-baa8-93ac9c342d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff83e04-b2e3-4a19-931d-e75dab5b2cb0",
        "cursor": {
          "ref": "a9fad981-a03c-4c31-9bda-09f34198a4c9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "301b5fec-657c-4dff-abed-bb82dc94076c"
        },
        "item": {
          "id": "9ff83e04-b2e3-4a19-931d-e75dab5b2cb0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b6376a85-000f-438e-a924-747970f14654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4409703-0adc-4b86-8cc5-4b4b3eae12b1",
        "cursor": {
          "ref": "e56fa228-5ca2-4fb4-992d-2d60f24cd060",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2e74333a-2464-4e12-81e2-4c89fa0ce28c"
        },
        "item": {
          "id": "b4409703-0adc-4b86-8cc5-4b4b3eae12b1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3306b967-08e7-4872-85e6-f939440c512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef5b630-9550-49c1-a0d6-aa669d1a053f",
        "cursor": {
          "ref": "b9ce894f-2c2e-4809-b42a-800aad3a9761",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "10ae6b9a-5fad-4d72-9a99-3cbe15647546"
        },
        "item": {
          "id": "8ef5b630-9550-49c1-a0d6-aa669d1a053f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ecadb683-353a-4748-9eab-7d0a33ad2261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01706e20-7d73-4e24-aaf4-f0ef08fed5b2",
        "cursor": {
          "ref": "7cbf8675-4bb5-4a14-9540-7171005b5584",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3c80bc43-2296-4ddd-b7c1-ab1c7ca78dce"
        },
        "item": {
          "id": "01706e20-7d73-4e24-aaf4-f0ef08fed5b2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "271c777e-9d14-4a89-a5bd-55c4fa935022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a5359a-11da-44d6-a27a-a82c65fd66c9",
        "cursor": {
          "ref": "7afeabee-8b56-4098-9ede-69d9d52e9f28",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b785e874-01e6-4e02-b9b4-5464409ed992"
        },
        "item": {
          "id": "e6a5359a-11da-44d6-a27a-a82c65fd66c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "118bcfa3-7c3b-4b1f-93c2-b6852ff1d242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e39338-f755-4af9-8944-354fdc32c86e",
        "cursor": {
          "ref": "735d01be-a84a-4fb4-998c-d65e9c330c94",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "99c1a597-1e8c-41fd-a448-e3789f33d525"
        },
        "item": {
          "id": "78e39338-f755-4af9-8944-354fdc32c86e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "13bbfe4f-e521-49ed-8f66-18ac08f45b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53d4aa0-6520-4907-880b-62cd40818ac3",
        "cursor": {
          "ref": "c27429f4-76b3-48a8-9ff9-c35695d2237f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44ad410d-0a9c-4827-83a9-43757eea26c6"
        },
        "item": {
          "id": "f53d4aa0-6520-4907-880b-62cd40818ac3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3392320c-8cb4-4de3-a9de-3634c5ebe21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caafdb0-1d68-442e-8a35-14ab0d6e8ad2",
        "cursor": {
          "ref": "dffad3de-9903-4a42-93bf-321a0d4f6801",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c9b85b61-d95c-4e3e-92ee-e46fffa89024"
        },
        "item": {
          "id": "4caafdb0-1d68-442e-8a35-14ab0d6e8ad2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9afd70f0-7c3b-4823-ab1d-a6b8b6b0cece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fcb265-cc87-4ebc-9cb6-0c0e474751a6",
        "cursor": {
          "ref": "2c5c116a-f04c-490b-ba48-fdb616a3c29f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "de730599-2f31-46f6-98cb-a41e3125100e"
        },
        "item": {
          "id": "73fcb265-cc87-4ebc-9cb6-0c0e474751a6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9ee81bc5-fe27-4ef7-bc69-f99d66b0318b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81a8b1a-f40d-4d8d-9687-9b85c2f2beef",
        "cursor": {
          "ref": "a5d82896-10c9-42c4-9f28-ec2dfc42ae2b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "43fca1f7-d997-420c-9cb1-ec6550780de7"
        },
        "item": {
          "id": "c81a8b1a-f40d-4d8d-9687-9b85c2f2beef",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6c0f40b6-9d81-4bf9-bc90-3be8458bcbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e455d07-4f5f-4ce5-8fd6-39ff2860d393",
        "cursor": {
          "ref": "0b8c5cf0-1292-4945-9ca9-efaab14a9c9a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2216d814-2fbc-4f10-ac37-95a14a9ada45"
        },
        "item": {
          "id": "1e455d07-4f5f-4ce5-8fd6-39ff2860d393",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "43e07972-55ca-4b24-9e93-d155a2d1d661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc50bd71-422c-4b88-baad-86c64ed95548",
        "cursor": {
          "ref": "a101037e-e3da-40ca-a745-bc7f098d2f3d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b47e9d19-e86b-48ca-b2c7-129dce841a5e"
        },
        "item": {
          "id": "cc50bd71-422c-4b88-baad-86c64ed95548",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b467520a-47ed-4228-b7bd-7a763d1328c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5667e86-f87b-4663-9397-21bffd8078d2",
        "cursor": {
          "ref": "4133b146-2d4a-494d-8984-3173009e9027",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "78366743-b08e-40b7-921f-f4907b532be1"
        },
        "item": {
          "id": "d5667e86-f87b-4663-9397-21bffd8078d2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "39a05557-e4ee-41c6-987e-1a21733a85fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a85b0e-91cd-43d1-922d-ada75efbeb8c",
        "cursor": {
          "ref": "7a12114a-3f76-4da5-a90b-25411bf9c4b6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c206cd31-c69a-4fb8-b4fa-d28b7d4ba166"
        },
        "item": {
          "id": "b0a85b0e-91cd-43d1-922d-ada75efbeb8c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4b68cd4-ca23-4d86-8557-c011ce399c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39742a8c-8c55-4010-b10b-562b64bddf2f",
        "cursor": {
          "ref": "8766cb2d-2414-4475-b6ec-81c1f47069ee",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2131e59f-78ef-4a15-9b60-27bbf1832eeb"
        },
        "item": {
          "id": "39742a8c-8c55-4010-b10b-562b64bddf2f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e7276b16-9534-434f-af1f-6e7b20819734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6881dfbd-b3ad-4023-aa57-d3602c6066bc",
        "cursor": {
          "ref": "7c1f4382-febc-41f6-a755-e607624b47de",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "45ad2ef4-8772-46c6-a0ca-1eac3e383c06"
        },
        "item": {
          "id": "6881dfbd-b3ad-4023-aa57-d3602c6066bc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ae051573-48d2-4b64-8204-acb4e155fcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f5d637-bf7e-49b2-a4ba-87594f021b8f",
        "cursor": {
          "ref": "c6ed47e0-d32d-4ea8-9c29-54dfd600b09a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b98be1f1-8114-4e76-a228-8168a18e8fbd"
        },
        "item": {
          "id": "41f5d637-bf7e-49b2-a4ba-87594f021b8f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0b6d04cb-61e4-4512-96c4-da4ea45b8815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6c2d4-88c0-4641-b271-05f31dddbde7",
        "cursor": {
          "ref": "d4bb2fef-6808-4fcd-864f-180274d9e468",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3a241a5a-aa81-4216-92b9-f50c2aa777e1"
        },
        "item": {
          "id": "bfc6c2d4-88c0-4641-b271-05f31dddbde7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9269a406-0930-4a56-852c-1310bb93be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a139c63-9f18-40dd-85b7-6c37ad4f6522",
        "cursor": {
          "ref": "fd22859d-88a7-44f9-9d0a-9372be1da3cc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3e9af8ae-4e76-41d8-a1f3-a3e731b15f83"
        },
        "item": {
          "id": "4a139c63-9f18-40dd-85b7-6c37ad4f6522",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d80770a4-97c8-413a-ab36-22d18af40a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b7507b-3cf6-4c5f-8253-ffdb7d1dd97e",
        "cursor": {
          "ref": "ee4cee82-6f88-42df-b6cf-a7733b06a920",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f6472d0b-d464-4605-b0e1-bd39c76152af"
        },
        "item": {
          "id": "55b7507b-3cf6-4c5f-8253-ffdb7d1dd97e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0b32ec35-4c77-47a7-8034-4b280afd70d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a27054-aa71-4f49-acd1-35d413cbc50f",
        "cursor": {
          "ref": "35551515-5ce3-4064-8673-ae15d856f223",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a4d1940d-9d5a-420d-ad25-342ff676ddf3"
        },
        "item": {
          "id": "64a27054-aa71-4f49-acd1-35d413cbc50f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5e6948b0-b539-4f30-8094-2745d87ba662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239524d0-494d-4f01-8e6c-bff29e43e0fa",
        "cursor": {
          "ref": "2d4f5164-f21b-433f-bf93-054861ea5e34",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e2370827-2dbb-4a9f-b813-2e35ee043629"
        },
        "item": {
          "id": "239524d0-494d-4f01-8e6c-bff29e43e0fa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "982e8f9a-2ef3-4d74-a017-640779338541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914910e4-4e48-4b6a-afc4-88f359048738",
        "cursor": {
          "ref": "690fcbd3-8f7a-4c8c-b0c8-4a06a9aaa7dd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5faf74b6-83e9-414c-8d46-100ca72f08e9"
        },
        "item": {
          "id": "914910e4-4e48-4b6a-afc4-88f359048738",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d82bdf25-bfdd-4b68-92f8-51817f3d6ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaafcf3-bd2d-4688-b590-6aaa0a0993e1",
        "cursor": {
          "ref": "f80c8cfb-7670-445a-8b80-fff5f8c8bbe6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7cd9030f-7183-44d7-bc91-bb40ad29eba7"
        },
        "item": {
          "id": "fcaafcf3-bd2d-4688-b590-6aaa0a0993e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0d78badf-b230-4cec-91d8-d939e817a1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f07a0-0913-4e24-8694-c2f153d0c215",
        "cursor": {
          "ref": "11adcb2d-7248-4002-912e-0aed854b60d4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9bff329a-0f8f-4cbd-91ac-24e0cb55106d"
        },
        "item": {
          "id": "501f07a0-0913-4e24-8694-c2f153d0c215",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3e8a7fe4-6988-4218-bf77-0f5bd4dba880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67303c1-2a7a-44ae-a5b1-40ce85049070",
        "cursor": {
          "ref": "8744f040-2c3e-4469-93d6-c84785f2bb7f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "45777d80-fdfc-48f9-b02d-547427decab0"
        },
        "item": {
          "id": "b67303c1-2a7a-44ae-a5b1-40ce85049070",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "782d1ed5-9070-41e9-ae92-758b8f2ce14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff9ab86-b6f4-43b2-83a1-1dfc23eaa5cf",
        "cursor": {
          "ref": "ed5c3235-82ec-47c4-81a2-643e9226b3be",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b8d2947e-e5a7-44b0-b1e2-818e7e07058e"
        },
        "item": {
          "id": "3ff9ab86-b6f4-43b2-83a1-1dfc23eaa5cf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9ea8dbcf-9863-4c97-b380-02107d344967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a20ddd-947b-48d3-845c-1efaa5133ebb",
        "cursor": {
          "ref": "878ce861-4515-4e66-9476-8c9c23813f61",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4124c09c-27c1-4fbb-843b-7c237b227a15"
        },
        "item": {
          "id": "d9a20ddd-947b-48d3-845c-1efaa5133ebb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "88340537-e5bd-4e72-a501-de179c844a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaf491c-d678-4a9c-81b2-d7686986f61e",
        "cursor": {
          "ref": "b911782f-18e7-4ed7-8597-294c841ffb85",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "028bac3a-0dd4-4b46-b8ab-a1a97b70075f"
        },
        "item": {
          "id": "afaf491c-d678-4a9c-81b2-d7686986f61e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7e9ca340-c5fb-4bcf-a130-d94255d2f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63051e1c-1056-471c-9000-acb4bcd85970",
        "cursor": {
          "ref": "66139672-44b8-46ec-887c-8f48622a734a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c23e1428-da98-4d91-b602-a574e1da77d1"
        },
        "item": {
          "id": "63051e1c-1056-471c-9000-acb4bcd85970",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7eda4479-d934-4745-9d41-2bc4ff4cd9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d27984c-00b7-4f1c-a4c3-90825b9d77b3",
        "cursor": {
          "ref": "562f1260-6f2b-4ef7-b377-03b17ff10a12",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "330181d3-a5da-4cdd-af78-68d81dd5e352"
        },
        "item": {
          "id": "2d27984c-00b7-4f1c-a4c3-90825b9d77b3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "441a6d1d-c3b6-4c2b-8dfb-9050c130d5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32280486-ec26-4314-9799-36469ac93f62",
        "cursor": {
          "ref": "276150d8-609b-4161-8d6d-16356cd6b7d7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a5d73c16-88df-463d-81ea-1108c5730f30"
        },
        "item": {
          "id": "32280486-ec26-4314-9799-36469ac93f62",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "92d7111a-a242-45f1-88f5-dfc6021d0241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f745b26-0b01-45a8-bebc-cbf46e7ff803",
        "cursor": {
          "ref": "4a77de4c-38dc-4fd7-998e-05f940f21cfc",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "faa869de-5787-43e7-a37f-51c649e3e891"
        },
        "item": {
          "id": "2f745b26-0b01-45a8-bebc-cbf46e7ff803",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "04142b2c-e11a-450c-a33d-27dd59aee6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dddccc-6099-40dc-a5f0-b604df319d3f",
        "cursor": {
          "ref": "4649fc1e-e5a9-4b07-8d56-a87835d716d9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8cca334f-02c9-4818-ac22-95c061b3904a"
        },
        "item": {
          "id": "a8dddccc-6099-40dc-a5f0-b604df319d3f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7c017faf-4711-475c-a456-db172ee4215d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c32aa-513d-4829-9e29-705802b42d64",
        "cursor": {
          "ref": "3cc17469-4107-4edd-9123-3b04905f2c82",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a04bcdd0-a57d-404f-a66f-b83948425331"
        },
        "item": {
          "id": "7d9c32aa-513d-4829-9e29-705802b42d64",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "41ab1482-9a27-4d20-a03b-8cd017428229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d1ac8-93af-4819-89f0-6868a768c03c",
        "cursor": {
          "ref": "fb669ccb-cd1d-4162-93b4-5eb4f1af0fa1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bfd0f8b9-21f0-4ac5-8f1a-1108c718709b"
        },
        "item": {
          "id": "271d1ac8-93af-4819-89f0-6868a768c03c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e0b2042d-6175-4643-9b66-039d6cfb23a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b19b65-ec70-4acd-bfef-b76c0b06621e",
        "cursor": {
          "ref": "a13a0c91-803a-426a-8a79-e9fe14806f9f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cca3d572-b031-4065-8739-f1dc064fbfb2"
        },
        "item": {
          "id": "39b19b65-ec70-4acd-bfef-b76c0b06621e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7730bb72-3acf-43cf-a7fb-1dcf57848942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb43b841-31e8-42de-9626-f1a1cad591bb",
        "cursor": {
          "ref": "3203e14a-c42f-48c0-ba64-eeb7e40ad923",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c804cdd5-3f39-470d-b2dd-1e220717f5ca"
        },
        "item": {
          "id": "fb43b841-31e8-42de-9626-f1a1cad591bb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8a502963-d64c-4d72-9c56-39159ba48683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19db04a0-50c6-4473-8639-bb2a271905a4",
        "cursor": {
          "ref": "b2387ed7-5d17-4957-a7a7-c0809057df45",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "73e5e0f1-c223-4796-b5fc-ffddde847fae"
        },
        "item": {
          "id": "19db04a0-50c6-4473-8639-bb2a271905a4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "035eff7f-2850-4c0c-ac69-45ccee124536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f187bd3-01b1-426e-b60b-7763ed2c6b54",
        "cursor": {
          "ref": "18e41b4c-ec2c-48f7-b06b-5218bbf394ef",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f5e47059-f28f-4645-b5d5-07a27a440008"
        },
        "item": {
          "id": "0f187bd3-01b1-426e-b60b-7763ed2c6b54",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "89213cfb-fcb5-4f09-8f86-2cd6864e04fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d12117f-9584-4ff5-83b9-1cc71fe64636",
        "cursor": {
          "ref": "df59972a-2991-4dcf-842b-c1ab69b3688d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ccc7db27-c920-4371-9175-95efca14b9db"
        },
        "item": {
          "id": "6d12117f-9584-4ff5-83b9-1cc71fe64636",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cb5cd1de-0838-4610-8970-9253827e3c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9e704849-1913-4a4b-b153-25eba1b24065",
        "cursor": {
          "ref": "1435bdeb-8d13-4f52-9ba0-b98b9750c490",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c2ef39fb-fca4-474f-9977-cb37c3ef48b1"
        },
        "item": {
          "id": "9e704849-1913-4a4b-b153-25eba1b24065",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fda1307a-2dea-472b-a3b6-a0dde9f84ad7",
          "status": "Created",
          "code": 201,
          "responseTime": 7681,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4484c1e9-b64c-44c3-b7b3-15b2c54fdc51",
        "cursor": {
          "ref": "00fd98b6-8c5e-4089-b522-0ac4093ee328",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d38f44ab-cf18-4e2b-89dd-ed149998abd9"
        },
        "item": {
          "id": "4484c1e9-b64c-44c3-b7b3-15b2c54fdc51",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "69210531-76b3-4217-8a89-d0d70cf1e7b4",
          "status": "Created",
          "code": 201,
          "responseTime": 7326,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c423f34-3def-48e3-b5e6-e45ac67c5e2a",
        "cursor": {
          "ref": "7047fc3f-0551-4602-8699-461b57c1bd36",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f04c96cb-18a4-4b79-81ad-cbf092584feb"
        },
        "item": {
          "id": "1c423f34-3def-48e3-b5e6-e45ac67c5e2a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "99246f1f-c95b-4f96-8f2f-46a24ee18ddb",
          "status": "Created",
          "code": 201,
          "responseTime": 6986,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59cf02d-e522-4a3b-932b-71b67f62755f",
        "cursor": {
          "ref": "7c57f9c3-db89-4bab-a670-e7286c074d74",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "84e282b1-734d-480c-b6b0-2cd4f3727bbb"
        },
        "item": {
          "id": "a59cf02d-e522-4a3b-932b-71b67f62755f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "69548a82-a18b-4ab0-8582-f769dabfb90c",
          "status": "Created",
          "code": 201,
          "responseTime": 6894,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd08c24-7309-4eaf-b57a-b06b2a2d1000",
        "cursor": {
          "ref": "2e451c08-1d11-4e37-a997-93bee1c3cf81",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8d60be8-2fd7-4bb2-8ed6-9fb49338e917"
        },
        "item": {
          "id": "cfd08c24-7309-4eaf-b57a-b06b2a2d1000",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e5086751-05d5-4270-a4b2-0fabfee52658",
          "status": "Created",
          "code": 201,
          "responseTime": 6798,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-17T00:40:54Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-17T00:40:54Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "993e367b-d41a-4a9e-89f4-273688696ef5",
        "cursor": {
          "ref": "b21662fc-bfe1-48ec-9e2d-72143cd80a85",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ebe72b60-031c-45d0-9488-7b872758352a"
        },
        "item": {
          "id": "993e367b-d41a-4a9e-89f4-273688696ef5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "792bbe79-2b81-4cc1-99c7-21bbbf6b3ef2",
          "status": "Created",
          "code": 201,
          "responseTime": 6972,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc3182c-3c4a-41c7-8c64-b89eb59c3c91",
        "cursor": {
          "ref": "2f71ce14-6ab4-4a36-bf6b-0bd1b26697be",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e23c061b-af54-46b7-9ee7-99174fa5f752"
        },
        "item": {
          "id": "9bc3182c-3c4a-41c7-8c64-b89eb59c3c91",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16d1c0a2-9b73-41cc-b46f-e3dd67efedbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd11eaa4-6dc0-4966-900c-7139c4edb756",
        "cursor": {
          "ref": "4c6ea4a8-9085-448a-b7c1-bcd91e532ebb",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4b6e7ca8-7405-4301-ba09-6c4ebb8f9777"
        },
        "item": {
          "id": "cd11eaa4-6dc0-4966-900c-7139c4edb756",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba895f55-52f3-4e18-8872-60f0f5391fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49595d0-7cc8-49db-8443-3a8c7dff19f9",
        "cursor": {
          "ref": "7a7885c6-dd71-481c-9e49-c62097b9fd12",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a5c2757b-ef1f-491f-97b7-2cf6a0f73720"
        },
        "item": {
          "id": "f49595d0-7cc8-49db-8443-3a8c7dff19f9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1ea4f854-d202-4850-b4d7-c2aa87153159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5635964-79d0-4c01-ac25-234a6cfaa606",
        "cursor": {
          "ref": "896ac9e1-1f92-4af8-917f-84acdc17f9c4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6ac352d3-f939-41ce-baa1-0ca05b8d6dbf"
        },
        "item": {
          "id": "e5635964-79d0-4c01-ac25-234a6cfaa606",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "231ed04c-dcdf-481d-8b52-e549c4da67f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9255a770-7dac-4461-a48e-a412b8d590b2",
        "cursor": {
          "ref": "5bf199a5-ef36-4c4d-80e1-9a34ff3550a4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f6675cb9-8099-4a7d-b24d-4943e7828edf"
        },
        "item": {
          "id": "9255a770-7dac-4461-a48e-a412b8d590b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "67c377a9-70b0-4fc2-b5fe-f2be93ed3668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e90e58c-4e97-4d48-aebe-f7296d5f0709",
        "cursor": {
          "ref": "536ec9cf-2567-47fe-9d38-e96aed2b9b0c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ded020e4-8b0d-4137-b44a-a3e718b912d1"
        },
        "item": {
          "id": "2e90e58c-4e97-4d48-aebe-f7296d5f0709",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b1733788-27bb-4bc9-9f6c-033c0fc319ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba339a7-cfcd-44c5-b7c6-1c1cac68e181",
        "cursor": {
          "ref": "5f39c7ee-2efd-4e1e-b0e3-c655504a9d1f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a110a93-a1fa-494e-9f07-7d9bae1f7532"
        },
        "item": {
          "id": "aba339a7-cfcd-44c5-b7c6-1c1cac68e181",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cb5ab029-7408-429a-b6d4-b14c293cb628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f7e9b1-17f9-4f6a-ac29-ffe430ce8b23",
        "cursor": {
          "ref": "3bbc2461-9b89-496e-8b87-756ce6d53d74",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b1d24f1-2623-40bc-a309-418fd2052936"
        },
        "item": {
          "id": "47f7e9b1-17f9-4f6a-ac29-ffe430ce8b23",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2cf454ac-2103-46a7-9f30-8cfa72311963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06858302-d832-4c09-8074-58140e9148d6",
        "cursor": {
          "ref": "fde6c1e0-b041-4be2-a29a-8bc815510ec1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d97beb6e-d5ee-435b-bd37-c4b1f133cfcb"
        },
        "item": {
          "id": "06858302-d832-4c09-8074-58140e9148d6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54c83a9d-e51b-403b-8af4-1d52449d1b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae9dd9f-72a2-45e5-9434-b17773901e4b",
        "cursor": {
          "ref": "a57f42ee-1752-41e4-99d9-79878a878b2f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ccdae98f-5724-43f5-ad69-e0ba3ed59e3b"
        },
        "item": {
          "id": "cae9dd9f-72a2-45e5-9434-b17773901e4b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2855e81f-adca-4f0f-8350-f713f9c3f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb58abb-c667-4ea0-b6dd-3c4eeb65300b",
        "cursor": {
          "ref": "4bbd56bf-3f75-4962-bed7-2c3f349ebae3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dfed075c-6121-4646-9646-907bc9aa2344"
        },
        "item": {
          "id": "fcb58abb-c667-4ea0-b6dd-3c4eeb65300b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80375c03-1252-4e9a-90e6-39ed2f459789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cbbc7e-075d-45e9-82bb-62689f099e90",
        "cursor": {
          "ref": "979b628d-9d4e-4cc7-9297-d643005a6456",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ca70f44e-37f7-4524-94e4-82cab57541d5"
        },
        "item": {
          "id": "00cbbc7e-075d-45e9-82bb-62689f099e90",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c52af87-0dd5-4310-985c-778c4e525b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dde719a-4a37-4603-b05a-38747660f4b3",
        "cursor": {
          "ref": "1267909b-f53c-4b83-8405-9199e7a946a9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f62afb27-2464-43e9-9d7a-838118938c4a"
        },
        "item": {
          "id": "2dde719a-4a37-4603-b05a-38747660f4b3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11020a30-323d-427c-87a0-f5b21cc05502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98343aee-0953-4c83-8bee-58f94a43091f",
        "cursor": {
          "ref": "acbca7b0-5182-4847-8123-230ec8d6c007",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "091d21f7-3986-4bf3-90bc-014fd145830d"
        },
        "item": {
          "id": "98343aee-0953-4c83-8bee-58f94a43091f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ceaa9a73-0c86-4b29-9d2b-45c9c24620fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5190cff-ce47-498e-b84e-d74ffb76429d",
        "cursor": {
          "ref": "b06187f2-e942-43fb-a187-4298d1e25f26",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a9113436-404a-41ee-98a4-c1753a04da14"
        },
        "item": {
          "id": "c5190cff-ce47-498e-b84e-d74ffb76429d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "79fe052a-5b17-48de-a119-c8d71b7cfc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939d2007-850a-4fe8-85eb-f3dca42712fd",
        "cursor": {
          "ref": "4fd5d705-1f35-4ee9-bca4-ce720b764fe4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5ed1ccf9-1ee0-4ef2-bee9-f16619637096"
        },
        "item": {
          "id": "939d2007-850a-4fe8-85eb-f3dca42712fd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "19b3d334-ed74-4b35-a87d-a32728d8417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c01fbe-8615-4f31-95c3-efc23abef338",
        "cursor": {
          "ref": "7a548c6b-323b-468d-963b-33f3b9e037f6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f0f29d16-78c4-4117-bf9d-96450dbcaf9d"
        },
        "item": {
          "id": "f0c01fbe-8615-4f31-95c3-efc23abef338",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3a2a8dca-81df-4d09-adb1-5b8584751896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ea091d-e5f0-472b-bdc8-fd0464a29b1f",
        "cursor": {
          "ref": "86e824e1-91e9-42de-bce1-e092218e4d62",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d4e8a3e1-ac9c-4843-979d-292176cb8300"
        },
        "item": {
          "id": "e4ea091d-e5f0-472b-bdc8-fd0464a29b1f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51709573-1c81-476a-b46b-f8b077a3daf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afec1165-fa83-438c-8d7b-94b5c37e92da",
        "cursor": {
          "ref": "8ca8073c-36a0-49e6-b8bc-7a246bb2db05",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a265dc91-750f-4e7e-970a-55db0227e04e"
        },
        "item": {
          "id": "afec1165-fa83-438c-8d7b-94b5c37e92da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81c86451-1105-4a2c-9153-1c936f376f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ecc51e-14a8-40e6-9a81-e8a54b8567e9",
        "cursor": {
          "ref": "6cc4ac5f-930c-462e-9d06-1e77c167c2fc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3baca1bf-9127-428a-b0ae-f79424ae92e9"
        },
        "item": {
          "id": "06ecc51e-14a8-40e6-9a81-e8a54b8567e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a7bd8eea-b0c5-4e67-a007-7db3dfb8f775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9005361a-6c91-4d03-82a3-b8f5b1bfec26",
        "cursor": {
          "ref": "a8c4fd58-7f2f-482b-b8b9-e2a624ac5235",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f83268ea-b3a7-401e-8f15-30529f6c4403"
        },
        "item": {
          "id": "9005361a-6c91-4d03-82a3-b8f5b1bfec26",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0d310fc5-88f7-405b-84c1-b23c32bade0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97773463-f196-4e1f-8821-39304a1c7d41",
        "cursor": {
          "ref": "f8b7b6ec-5bea-4d4a-bc72-496a6bb50551",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "43dc1d54-1dad-4cf2-b939-0d71adee491a"
        },
        "item": {
          "id": "97773463-f196-4e1f-8821-39304a1c7d41",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0be11f9a-87d1-4d28-859f-e527bf5aa2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b3ddc0-13ca-42bf-ae11-5d700f81aebf",
        "cursor": {
          "ref": "ce9ad499-9be3-4948-8223-2e255e66bd2f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "89946586-629c-48cf-b15b-4ad573ed50e7"
        },
        "item": {
          "id": "f1b3ddc0-13ca-42bf-ae11-5d700f81aebf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa0bfcc8-fcb4-4feb-9e84-38a36ca1f10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fd328f-5f36-4a3d-9d62-5ef6ff9ed32c",
        "cursor": {
          "ref": "5df281be-97d6-45d3-b366-59ffc13a5752",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9c3caf59-0026-4c1f-8dc0-a2b1141e3a58"
        },
        "item": {
          "id": "97fd328f-5f36-4a3d-9d62-5ef6ff9ed32c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2fb5a671-1832-4a90-9da4-f6fe2957f962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b649e437-f59f-4e4e-81a2-d9fc104748db",
        "cursor": {
          "ref": "9b0de9d1-bb81-4b6c-839b-047d6ef256d5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4f552ca4-535a-4ee7-8fb3-92b6a2cafa31"
        },
        "item": {
          "id": "b649e437-f59f-4e4e-81a2-d9fc104748db",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "891c630d-cfd4-4b97-b913-010fe2558e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932105be-768d-49b6-8712-02aa7cde9c54",
        "cursor": {
          "ref": "0ad2388c-4632-4b4b-be3a-270eead10061",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bea23aa3-fe15-42c0-a186-f21d5bcc7f30"
        },
        "item": {
          "id": "932105be-768d-49b6-8712-02aa7cde9c54",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a829d7a-2527-4a00-94b7-5af15c925589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9106445-1ba3-45e6-b304-abe435488297",
        "cursor": {
          "ref": "2612a9d9-06ed-4660-bf66-552e98510d96",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b493cea-37b3-4b0b-91ea-6d492429ee57"
        },
        "item": {
          "id": "e9106445-1ba3-45e6-b304-abe435488297",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bc52b496-8763-418b-b2b5-0633c415b73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797f6507-c9e6-48cb-baa0-026ab3b0a698",
        "cursor": {
          "ref": "4f8fd0e0-9c80-4559-ada0-71653344b895",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b2a64e5c-85bc-4cf0-9a8f-6cf852f07596"
        },
        "item": {
          "id": "797f6507-c9e6-48cb-baa0-026ab3b0a698",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37b95b41-44ce-4836-b8a8-b7bafea5a142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ec185-c29c-431b-85e6-cea2dfde863e",
        "cursor": {
          "ref": "435e59a6-b3c2-42df-a219-e5a3e801376d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fc515b28-cbc9-457b-b649-701cf6a8c359"
        },
        "item": {
          "id": "150ec185-c29c-431b-85e6-cea2dfde863e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "55424cce-6067-4af1-bc6e-c037e1954b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80604d79-c8d6-4bce-b003-59b7437d7465",
        "cursor": {
          "ref": "31567633-6208-482c-8c7d-002916b29cf9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "da730739-3f91-41f4-9aee-f2a4ca6767e7"
        },
        "item": {
          "id": "80604d79-c8d6-4bce-b003-59b7437d7465",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7095af9b-613a-4d92-b8ff-e5853706d12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4fb78d-b6a3-4847-aea8-6b177fe2f6b8",
        "cursor": {
          "ref": "3174ea9a-085b-445b-a2d3-e7f31e34b0eb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bad2f724-acbc-4e0b-b0db-5114233ca65c"
        },
        "item": {
          "id": "9e4fb78d-b6a3-4847-aea8-6b177fe2f6b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "95bc1a73-94db-4091-8eb4-8ce5a16fddfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278d963d-d045-4d68-bed9-1b24618688da",
        "cursor": {
          "ref": "59b27015-b497-4265-8e96-c4f750a04518",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7810a988-17f2-45bb-a637-ccc738cbd33c"
        },
        "item": {
          "id": "278d963d-d045-4d68-bed9-1b24618688da",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b17f3c16-fc56-44a2-b1fd-43a9e31800dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da8935e-750e-4cb2-8bbd-04abed342f95",
        "cursor": {
          "ref": "1697f0cb-774d-4f0f-a0e0-969228726ad9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "15dec5b8-b3b0-4ef1-92d2-7842c383e8fa"
        },
        "item": {
          "id": "1da8935e-750e-4cb2-8bbd-04abed342f95",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2c8be586-32b8-4ac6-8756-2696844a4477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e3d45-7825-4b19-a2b9-c696d4edd769",
        "cursor": {
          "ref": "3fe813dc-3691-41eb-acf6-dbab632c88fa",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e0c5c708-564c-492a-abb4-250d61f45816"
        },
        "item": {
          "id": "660e3d45-7825-4b19-a2b9-c696d4edd769",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2c81715c-bb4c-49b1-97a1-cb40144423bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb48cb88-04da-4ee6-93ba-80ef80890c11",
        "cursor": {
          "ref": "31df8916-0810-4578-b1ea-43dc354fa6f0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fd18b695-3938-4338-bd7c-cc742a6c830d"
        },
        "item": {
          "id": "eb48cb88-04da-4ee6-93ba-80ef80890c11",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3e84896b-cba6-490e-8a0a-7baa40512888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326a0063-fbf3-4de2-8001-f327fb5eacbf",
        "cursor": {
          "ref": "96cfef52-e7d3-40ce-bab3-2789a01ff0d5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "94599491-e21e-4083-8eb2-3a4d4156c432"
        },
        "item": {
          "id": "326a0063-fbf3-4de2-8001-f327fb5eacbf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "302fe42e-af43-4ad0-8e1b-def65dadae5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1ef071-1876-40e3-901d-cd05ba41ef2e",
        "cursor": {
          "ref": "5c3f1ac8-266f-4670-8e7a-cad79c636404",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e3c124b-2b2f-454b-a30c-5bce2e998d87"
        },
        "item": {
          "id": "6e1ef071-1876-40e3-901d-cd05ba41ef2e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9ef58958-bf13-49d3-852c-dd6aa3e2c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e314dc-8716-42f2-a027-5b3c9d42dbe8",
        "cursor": {
          "ref": "eda83dee-9574-435e-8986-faa63beb9f96",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b3fe41f2-f317-46e1-a0d2-ccf4e5cb0af1"
        },
        "item": {
          "id": "b0e314dc-8716-42f2-a027-5b3c9d42dbe8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f89a64af-78f9-4ee0-b4b7-63d1dc0e6d51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47f86fc-0143-46d5-bf64-0c7935cde018",
        "cursor": {
          "ref": "7f101ba6-a8dd-4eb2-80cf-83fadbd465b2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fc7c1c02-2901-403c-bbd7-2b87b53ada09"
        },
        "item": {
          "id": "d47f86fc-0143-46d5-bf64-0c7935cde018",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d5fe997f-2e3a-42c4-9cb4-90def5e4b2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ed328e-e8df-4d64-bd64-646ff1540f48",
        "cursor": {
          "ref": "bd5c65ea-b731-4786-918b-419e146e6c11",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6e21c5e2-9051-43bb-a934-a9000e42dbbc"
        },
        "item": {
          "id": "a8ed328e-e8df-4d64-bd64-646ff1540f48",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b00f1812-7367-41ce-9f66-bfd9d595ad95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abf446f-a75b-407c-9f06-06310d4906e5",
        "cursor": {
          "ref": "d1804041-9621-416f-98d0-d77bd0c5aa9a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "87cb2de9-ee4b-4351-826c-eee177096951"
        },
        "item": {
          "id": "1abf446f-a75b-407c-9f06-06310d4906e5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0c67e116-7814-40e0-bfc6-d030edb3f432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b856836c-ea1b-45e2-b6f9-ed2af76892b3",
        "cursor": {
          "ref": "71d93534-54a2-434c-a545-2e0cda2a0df2",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b9aa2832-9526-43c3-9b18-d875c19992af"
        },
        "item": {
          "id": "b856836c-ea1b-45e2-b6f9-ed2af76892b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b3b29d97-7e68-4c10-80ab-7fb0b8b3c979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e14a46-9e9e-4790-ab72-d44c075bbdb5",
        "cursor": {
          "ref": "dec375ed-b6dc-4a71-90a8-c43ad5b0dae8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c274ba3f-2ba8-43a4-8758-d18481b5bfaf"
        },
        "item": {
          "id": "d6e14a46-9e9e-4790-ab72-d44c075bbdb5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3c71ff93-6096-4892-8818-9eb6b64d4700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2912ee-24cd-47a5-a141-be9dda6ca27e",
        "cursor": {
          "ref": "e31c6e7a-a8dc-4d26-9aef-93a671798402",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bd8f07b1-8ca3-409c-a9ac-e5d26b58d9f1"
        },
        "item": {
          "id": "4e2912ee-24cd-47a5-a141-be9dda6ca27e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c69da5fe-77e8-4904-896a-f1c5f27b8362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9690d67b-89db-4ade-b88f-40d7f8f89840",
        "cursor": {
          "ref": "e7327414-a8a7-442b-9e22-7c97b1ebfae9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "02bb5daf-3df3-41f3-b5d1-b9e230b17af6"
        },
        "item": {
          "id": "9690d67b-89db-4ade-b88f-40d7f8f89840",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a32addd3-2322-41b3-bd07-42fad0691b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2eb2e1-33cd-40d7-a31f-540d117802ba",
        "cursor": {
          "ref": "27773a66-ef76-4071-a96d-2a8ff627e2c4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a66d3383-f17a-4411-b266-8110bed7c7ab"
        },
        "item": {
          "id": "7a2eb2e1-33cd-40d7-a31f-540d117802ba",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0dbeb40a-2c7d-4dd0-b51e-ee5911a3d7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f6038e-7456-4386-bc43-23210a5d6906",
        "cursor": {
          "ref": "8186016f-dd7f-4417-b2e3-7f0f4bb2d537",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "718a5130-e4b1-4a81-8ef9-5186891c832d"
        },
        "item": {
          "id": "47f6038e-7456-4386-bc43-23210a5d6906",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "606e3280-5321-4356-962b-8d5128e6d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b8bcdf-3d2e-48b6-a3ad-4b55524ac084",
        "cursor": {
          "ref": "9f149dab-d18f-4a0d-82b2-79f7fdb53682",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0e80e948-150a-435b-9c72-429a2d2e6937"
        },
        "item": {
          "id": "60b8bcdf-3d2e-48b6-a3ad-4b55524ac084",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "329c3409-22f6-4d22-8326-738ce6ffc811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eef1174-3893-4352-b48d-58af41cce96a",
        "cursor": {
          "ref": "bb9c1220-fa24-4e88-983e-764769b9b47e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a63c1b02-cd41-4f06-96ef-47786b8e6b98"
        },
        "item": {
          "id": "3eef1174-3893-4352-b48d-58af41cce96a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ede90b84-08fd-4185-bc41-cef3125961bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f399543-72c4-4856-8d5c-ad71025651c6",
        "cursor": {
          "ref": "4d1e8645-4cfc-45d6-aca2-105aa873e8f0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9c2e61e1-b3b4-4ffe-996f-028d2f7f7486"
        },
        "item": {
          "id": "3f399543-72c4-4856-8d5c-ad71025651c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11fafd6d-e50d-4de0-9686-e2e86faca788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced8ff19-878a-49ca-82d2-a64712d82240",
        "cursor": {
          "ref": "d52ff047-0e7e-48a7-8022-760da033ddc8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b22859b9-5621-4c6a-baff-a91606f0fbcf"
        },
        "item": {
          "id": "ced8ff19-878a-49ca-82d2-a64712d82240",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2b9048f3-5ff7-4b02-95b0-df612b10ecda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be9863e-a562-4193-ae19-ced26a70cbc5",
        "cursor": {
          "ref": "0c5a7c5f-b4e2-4fca-94c1-443fca09610c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9e371d9f-58d2-49de-b610-9aab5088bee1"
        },
        "item": {
          "id": "3be9863e-a562-4193-ae19-ced26a70cbc5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6f281efe-a798-4c05-8661-30c68eab9e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc41d19-e638-404d-b32b-7c9b84503157",
        "cursor": {
          "ref": "5b73becc-4919-4dab-81d6-bcc033b231e0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "36399f34-53fa-4a40-a404-172ad8dbd953"
        },
        "item": {
          "id": "9fc41d19-e638-404d-b32b-7c9b84503157",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da54a17d-0e8e-410c-8e99-d73131987a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df89f97b-3ba7-48b5-a113-7c9d42771088",
        "cursor": {
          "ref": "224cfaeb-b68d-4cec-a56e-2be0de148562",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a8c62cc8-350a-4a85-b4fe-9fcb7b5d9695"
        },
        "item": {
          "id": "df89f97b-3ba7-48b5-a113-7c9d42771088",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c9ecaa6-89c1-4238-a469-3ecb37f4e555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271ece8b-1dbe-48fb-b72e-961d6210ff4e",
        "cursor": {
          "ref": "9a807059-7926-496d-b84b-39668a3f7989",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c6a8e280-bec5-4a95-9fc1-2144c84347d8"
        },
        "item": {
          "id": "271ece8b-1dbe-48fb-b72e-961d6210ff4e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "68227abc-2e65-429f-99e0-5f2c1b9b2b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f379673-89fb-4985-9a8a-11d7ab3fd86d",
        "cursor": {
          "ref": "786ee7a9-d9d3-49f6-b96b-c477d7281e4c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "caf46c29-dc95-41fd-8f81-fc9b985dd7ce"
        },
        "item": {
          "id": "9f379673-89fb-4985-9a8a-11d7ab3fd86d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ce3a8949-56dc-448d-a5e6-a8f13d419fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795a4644-6b9a-4b17-8df5-32662707b937",
        "cursor": {
          "ref": "313e4584-4280-4916-8b34-bf3cb06625d5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9f17eff1-8239-4a06-a0f7-46fc2650fb3f"
        },
        "item": {
          "id": "795a4644-6b9a-4b17-8df5-32662707b937",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2f523bc8-4995-4ec9-9147-54c85992ed59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb74e0d4-8d0a-4263-a897-b3ec9cee9c2e",
        "cursor": {
          "ref": "d4ea040d-df09-4251-acf3-493846d17e48",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4507841a-ab25-4484-bdcd-3c3b8e68f6aa"
        },
        "item": {
          "id": "cb74e0d4-8d0a-4263-a897-b3ec9cee9c2e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9a21c538-78a6-4069-8714-4a5bac92aace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6840649-f04c-46fe-9f75-963d1098997a",
        "cursor": {
          "ref": "855befbf-3f69-42aa-8fe2-b58d0916b31c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e618edb6-4a17-4b4f-85a2-ab026872af28"
        },
        "item": {
          "id": "c6840649-f04c-46fe-9f75-963d1098997a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0750f70f-2260-4b39-ba04-ae2e503c02b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc39c8a4-3257-4ccc-98f5-75d3b095627f",
        "cursor": {
          "ref": "1bd5815e-22fd-468d-be78-029b42fa2eee",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f12ef76b-2cf4-4c8b-9d98-712aa9078915"
        },
        "item": {
          "id": "cc39c8a4-3257-4ccc-98f5-75d3b095627f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "211ad640-1555-4084-bd2d-e73e02c3c573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715dcead-15b6-44d7-978d-42d3318d7d0f",
        "cursor": {
          "ref": "dc1794ca-0817-4488-a17d-b1e6494584e9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "499b3893-a06f-4e04-a3bb-e46c1f2ee4ed"
        },
        "item": {
          "id": "715dcead-15b6-44d7-978d-42d3318d7d0f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a42cdba0-511e-4fe4-aee8-5166f7f90b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc909d9-db3c-4f99-89d9-45de4fbb52fd",
        "cursor": {
          "ref": "a9723901-9d29-41c5-ac0c-ef23e894c72b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "59748ff6-aa91-4aaa-a1d5-a5fd79fa3c73"
        },
        "item": {
          "id": "fcc909d9-db3c-4f99-89d9-45de4fbb52fd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a16a249f-22d2-4fa2-9865-90f727b716bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5439a5-1b81-45b7-98c7-fca7ac3206f3",
        "cursor": {
          "ref": "258722ea-ef68-4c08-801f-33ccf0617a94",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4bb4a38e-9ce4-45aa-8a62-78af552ae98f"
        },
        "item": {
          "id": "8f5439a5-1b81-45b7-98c7-fca7ac3206f3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9fb19294-e86f-4906-8791-236cb9f31314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55ddb5a-41ea-454f-b3a9-f1f534a592f9",
        "cursor": {
          "ref": "98b51bd4-f60e-4dce-b502-e8ceba9f5f2c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a879336b-4b47-47e8-bc8c-52be36a337f7"
        },
        "item": {
          "id": "f55ddb5a-41ea-454f-b3a9-f1f534a592f9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1d4d2a30-9bbb-4e49-83f4-078cbd857190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72aa683-da17-4969-92e4-ff791a6d0cd3",
        "cursor": {
          "ref": "69d58607-92ca-4538-9bae-dabc9290ae47",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9b60a60c-588c-42a8-8a73-0e549349aa58"
        },
        "item": {
          "id": "d72aa683-da17-4969-92e4-ff791a6d0cd3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ed8bcd9f-0e16-4326-8a7f-43272bdd561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d0fcb2-b541-46ab-b924-7055057477b7",
        "cursor": {
          "ref": "34972f43-e908-420c-b0a5-867a44e0df04",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "40018183-b3ca-43c2-acf8-f864e0a94d88"
        },
        "item": {
          "id": "49d0fcb2-b541-46ab-b924-7055057477b7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4528e1d6-7489-4fa7-809b-070f64830436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f79a7-34c2-48a0-95ec-c5464afbeea5",
        "cursor": {
          "ref": "b1ff1f3d-6697-448e-996e-5e5b4df12e7e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bf62f7d7-cf21-4928-801e-1d32b29b8fbb"
        },
        "item": {
          "id": "4b7f79a7-34c2-48a0-95ec-c5464afbeea5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d6dac43d-8dbc-424c-ab89-993d3c4376fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ed91cd-7301-4858-aa8d-a403d41838d3",
        "cursor": {
          "ref": "86fc5b1b-e032-453d-9be2-44eb6b644964",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7c45ab12-9dd6-40d2-a89c-59ddb03c3f56"
        },
        "item": {
          "id": "b2ed91cd-7301-4858-aa8d-a403d41838d3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "23de5e4e-bfd6-4086-ad3d-873fb767b678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae3550-6517-43de-950e-477472e9a05e",
        "cursor": {
          "ref": "02365787-5a48-42cd-a4e0-7ead54f4bd68",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f311d6c1-dc22-4a98-b71d-627344b1398e"
        },
        "item": {
          "id": "3fae3550-6517-43de-950e-477472e9a05e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b64aa574-62e8-40f8-af38-d00f2ec866be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dee0d8-d1e5-4590-b04f-020413d2b979",
        "cursor": {
          "ref": "ce462390-c441-4f9a-84b4-4e10c26e1fdb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0d9fedfe-dbf5-4f7c-add6-4bafdf7817a6"
        },
        "item": {
          "id": "f3dee0d8-d1e5-4590-b04f-020413d2b979",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9c927dcf-b9f5-4006-8ee1-767408f6d767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b43c96-a91c-4efc-9c0b-d92b7c51db9a",
        "cursor": {
          "ref": "70e19e41-f2a3-4510-8049-874cbb2887c6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "11e2b4a3-ab9f-4a1f-8e6a-a250b6473b46"
        },
        "item": {
          "id": "58b43c96-a91c-4efc-9c0b-d92b7c51db9a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5caa213d-d533-468d-8458-5130c2e76317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514fe43f-4b93-44e4-a4d1-2965d85ba633",
        "cursor": {
          "ref": "8d3fa6e6-cc7d-4d9a-a28f-cbf5bfc87797",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a21583e1-e3ff-4b75-ae69-dbbb328b21bc"
        },
        "item": {
          "id": "514fe43f-4b93-44e4-a4d1-2965d85ba633",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d05bf441-110a-475e-ac82-846fe911ef16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0db9635-d03c-4a2f-8128-eb75f3781388",
        "cursor": {
          "ref": "512fecef-d849-41ca-8be1-5cf07f8502a1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9124361-ce0d-450f-a13c-a59abe1bcf33"
        },
        "item": {
          "id": "c0db9635-d03c-4a2f-8128-eb75f3781388",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a9113db-c18c-46f9-82aa-3946428ca400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356d6556-10fe-4b18-b161-f3d38139b97f",
        "cursor": {
          "ref": "cf9a77ea-05ad-479f-a206-850e3b191bb6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "555b5375-a14d-4ec1-9290-df650a6b1d30"
        },
        "item": {
          "id": "356d6556-10fe-4b18-b161-f3d38139b97f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1c2be936-1c54-4bd6-8cda-47b31e71dc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdf5f97-6993-4da7-a013-417c95069d6f",
        "cursor": {
          "ref": "caea95d4-b9ee-4e42-bf78-ee7fa9c9df31",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d8b3cd40-251c-4469-a809-c4fb7c09c374"
        },
        "item": {
          "id": "3fdf5f97-6993-4da7-a013-417c95069d6f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c6d5b856-e633-4d49-a47e-d5e61b1084e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcbc424-a90a-40a3-917d-c038a2f45343",
        "cursor": {
          "ref": "fa0b51ff-0155-4289-9a83-ca307b033bc7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb934f0e-a4ce-4c7a-9a77-d458f01a2ffe"
        },
        "item": {
          "id": "9bcbc424-a90a-40a3-917d-c038a2f45343",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89315198-407a-4a21-a927-759e1ca8827e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f057707-bdb3-41aa-b3d9-f8a78acca47b",
        "cursor": {
          "ref": "8298e2ec-b439-4b94-a07c-514cd3d65a3a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7ccb22bc-f1c3-4456-9228-80b1a3e9dce2"
        },
        "item": {
          "id": "8f057707-bdb3-41aa-b3d9-f8a78acca47b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4cf57ebf-815b-4e0d-b79e-d68dc739a736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fb6116-6c92-4f73-81f5-d4471effa5e5",
        "cursor": {
          "ref": "41d2a8aa-2969-4307-9b05-76f20ca0a575",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5af2edb3-fee7-4165-b78a-6468c9f4470d"
        },
        "item": {
          "id": "26fb6116-6c92-4f73-81f5-d4471effa5e5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2484717a-8a5e-4424-858f-c0dc7577d78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82351cd8-d0af-4d1a-8b4c-e702bffe7912",
        "cursor": {
          "ref": "489eae5b-8ec8-466a-a4d2-6104903c547c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9a4b4ebd-57b3-4124-8be7-7b467694313e"
        },
        "item": {
          "id": "82351cd8-d0af-4d1a-8b4c-e702bffe7912",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1fecdb56-fd40-4453-80a3-a0cc706667a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a019f937-d173-4d10-95a2-30ab1f2d4a8c",
        "cursor": {
          "ref": "773328fa-e196-4615-a3ae-4969eba2405f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "12bae96b-829c-425e-bf08-542801433cb4"
        },
        "item": {
          "id": "a019f937-d173-4d10-95a2-30ab1f2d4a8c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4362e8b2-9fff-4436-81e5-d7644435e114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9439fca-d127-47ab-9422-3c5994b21998",
        "cursor": {
          "ref": "ff2801a7-c900-4a70-817f-b46bbd7a053f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b04e72a5-9ece-4fe0-b75f-64c0376cacd2"
        },
        "item": {
          "id": "b9439fca-d127-47ab-9422-3c5994b21998",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d4431664-3ee3-47eb-83ef-400bd33c6da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5b6ee7-5d91-495a-b974-f72dd9662a45",
        "cursor": {
          "ref": "3cfc51c4-49d3-4900-aab7-8236d484b570",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4b1690c5-3241-46fb-9649-e125b0f1b085"
        },
        "item": {
          "id": "6e5b6ee7-5d91-495a-b974-f72dd9662a45",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c371416d-d507-4876-975c-7b9128668c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fd009a-65e7-4800-9a83-3ef632f2f731",
        "cursor": {
          "ref": "8ef532f9-f8a1-4117-9c9a-bed683f68795",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8e1a93e5-d5f9-4507-b047-8babfe18eb5b"
        },
        "item": {
          "id": "56fd009a-65e7-4800-9a83-3ef632f2f731",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "43982dbc-f4b0-4042-9740-203aeba0a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a80e54d-8aba-4fe8-8d23-852e951325e0",
        "cursor": {
          "ref": "6daa5707-9485-4662-af77-bccaefba6e69",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "39ece2c1-eb74-43f0-b42f-25bfa40f5350"
        },
        "item": {
          "id": "5a80e54d-8aba-4fe8-8d23-852e951325e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4d64376f-3805-4cf3-ab56-061ed74cdc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad78031-8e25-43b5-92a6-1dbb79bdf1be",
        "cursor": {
          "ref": "5281e708-30af-46d1-aa45-0f0aab026ad5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "53d8b95a-7b46-4112-9120-9c5e5c71223e"
        },
        "item": {
          "id": "3ad78031-8e25-43b5-92a6-1dbb79bdf1be",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1848cf4e-be65-4c4c-ac80-d62798717c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d39729-2d83-4c12-b161-c4809e68a6d4",
        "cursor": {
          "ref": "32ea92c0-ab7a-494d-b0df-fd62cd47f374",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ffc6e555-20f9-43d6-88a3-ed0c94f5a803"
        },
        "item": {
          "id": "04d39729-2d83-4c12-b161-c4809e68a6d4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4b4738dd-f401-4886-b32c-e7ce2dbf7f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08096b10-9fcb-413f-b951-60bb6f76658f",
        "cursor": {
          "ref": "9cbc2e80-ccf8-45d7-9c87-1a6043de30e7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f30923f3-f511-4b85-995d-08e55575a4e0"
        },
        "item": {
          "id": "08096b10-9fcb-413f-b951-60bb6f76658f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b474a6bc-19b3-4bc2-b9ab-7f3724a549d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb97727-f861-43de-a0b2-012b226f00a4",
        "cursor": {
          "ref": "34903931-c312-4f52-aab5-b1df9292f990",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "822239c6-03d3-4977-93aa-03edd2c6ea97"
        },
        "item": {
          "id": "4cb97727-f861-43de-a0b2-012b226f00a4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6686ced1-eeab-4b2a-9ef4-51fb8ab933ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9769fe4a-4653-44eb-8eab-6fff778b6055",
        "cursor": {
          "ref": "8a0691fa-904e-4c85-8807-77991b734965",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8a206431-4ae9-4066-8b7e-b5e1ce82f849"
        },
        "item": {
          "id": "9769fe4a-4653-44eb-8eab-6fff778b6055",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed3a4536-9951-425d-8a2f-d84d8c32ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf3cdc0-7c62-44dd-b0b0-4fac49d87d45",
        "cursor": {
          "ref": "a5f9f223-1689-41d5-bf32-9d33be944f8e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b845001b-d269-4377-a1c7-b8153555d96e"
        },
        "item": {
          "id": "ecf3cdc0-7c62-44dd-b0b0-4fac49d87d45",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eef449dc-50c0-4166-b3af-032aa5c78e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df301f92-b1a4-4cb7-9327-52fc7dafe642",
        "cursor": {
          "ref": "ee112dae-bfce-4e42-b934-9f53709dc525",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c226cc06-ea86-4dda-804e-acd9964820cb"
        },
        "item": {
          "id": "df301f92-b1a4-4cb7-9327-52fc7dafe642",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "140b51d9-6af5-43a5-b9b0-d7fd09674d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a6b0ce-1247-433d-8219-a886a22a2f60",
        "cursor": {
          "ref": "527a8438-b844-44a7-bf5e-50032a1f28d9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dc9e8d17-301d-4ca0-bba7-b0086ae94785"
        },
        "item": {
          "id": "35a6b0ce-1247-433d-8219-a886a22a2f60",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "865c57e1-ea92-4260-a1c5-259fbd09f7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd2c321-5ae3-44c2-891f-a51a7a4a90dd",
        "cursor": {
          "ref": "3862e200-9709-4e98-bc12-7f60b6ca16c1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "05818c39-b9d1-475a-91f5-e0ecc697e56d"
        },
        "item": {
          "id": "9cd2c321-5ae3-44c2-891f-a51a7a4a90dd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7de36b56-2c99-459c-a5ea-fdf0cf085e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0214a44c-e358-46fc-ad5d-2f1a1223937a",
        "cursor": {
          "ref": "bfa64728-50ab-4dd3-9875-16f16c157226",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b1b9cd16-7739-4335-ad23-71779e02b893"
        },
        "item": {
          "id": "0214a44c-e358-46fc-ad5d-2f1a1223937a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0017d38f-64c5-43b6-ba47-975f2cb94df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b024f658-42fb-4165-b2ba-a89e1ac3613c",
        "cursor": {
          "ref": "b1e68423-19f6-488a-a350-b91b9965a737",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e243b39c-e543-4609-9012-48fb7a0006e3"
        },
        "item": {
          "id": "b024f658-42fb-4165-b2ba-a89e1ac3613c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "87b276c2-a802-436a-890f-7703ae6f487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec12534-e5a1-4cf2-9224-a51c563f8c4e",
        "cursor": {
          "ref": "b50deff7-c4e5-4160-9418-d5a5eac32a72",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a4885e69-e138-4847-98a3-bc3f9f76b88d"
        },
        "item": {
          "id": "0ec12534-e5a1-4cf2-9224-a51c563f8c4e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e9e7875e-ed57-4aaa-a148-a5a68a66d52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f53491-3644-41b2-9f56-92292a5d0df2",
        "cursor": {
          "ref": "3d6923bc-934f-42dd-8475-e2dae7984a48",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c246e330-97d6-417b-a2a7-bfbe82da985a"
        },
        "item": {
          "id": "d2f53491-3644-41b2-9f56-92292a5d0df2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "825dd27a-2925-4dfb-a22c-cbfd9a16c371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0097a24-f20f-4f50-ae6e-bbb8a58c1434",
        "cursor": {
          "ref": "5cd04f0d-2c34-4a8a-851b-19e62e5bf916",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "59607583-d5ec-4388-b652-198bd1863d79"
        },
        "item": {
          "id": "e0097a24-f20f-4f50-ae6e-bbb8a58c1434",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ca810f8b-5a3d-4693-b3c0-ca2f8680f326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbd2688-557b-48f7-9f18-363e98825b0d",
        "cursor": {
          "ref": "0dc44d6a-ccf9-426c-85b2-0d7bbfc34c1c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8a9ba360-0e0c-4213-9d3d-74d02c3bb3f3"
        },
        "item": {
          "id": "6bbd2688-557b-48f7-9f18-363e98825b0d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "24c5bd19-9200-415f-8e6a-228af7cd5e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ea7184-bcc3-459c-87a7-5965c58d39e9",
        "cursor": {
          "ref": "1c19919d-36d0-4695-9b49-326ff141f074",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "179236c5-0c96-476f-96f4-743523fcfbab"
        },
        "item": {
          "id": "c3ea7184-bcc3-459c-87a7-5965c58d39e9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a6e5619c-375d-49bd-b9a0-f9f32653c070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb10823b-9a13-4ca8-a753-6e215f7eb0ad",
        "cursor": {
          "ref": "58549ebc-9f41-4b2c-bf88-b186c81df44b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a63ee82b-7764-4f9d-95b7-e22ca44f2e58"
        },
        "item": {
          "id": "cb10823b-9a13-4ca8-a753-6e215f7eb0ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5a466d4a-79d6-4e89-a425-2d36b65ee5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e384ab2f-7c1b-4b15-b7bb-3bde249c5571",
        "cursor": {
          "ref": "595e65ed-1fe2-4d31-b34e-49d6c3fc3aa8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "723962d7-e8a0-4551-bbb7-9bb38ec8e0ce"
        },
        "item": {
          "id": "e384ab2f-7c1b-4b15-b7bb-3bde249c5571",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c931a2a9-bbe7-454c-a342-fa1638cdbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7608ec8-2264-4d55-84cc-4130e86fbe5d",
        "cursor": {
          "ref": "038d2f59-29fc-4709-b326-094ad1c77a1d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "41574f10-7bf6-4df0-8509-940112a33f69"
        },
        "item": {
          "id": "b7608ec8-2264-4d55-84cc-4130e86fbe5d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0df1020c-168e-4c12-bc4c-f6008210e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47da37-be5c-4df8-88e5-2c2652ea783c",
        "cursor": {
          "ref": "d2f54587-0564-44ec-b17f-14a9c71dd56f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9a22c723-159d-4587-b902-0cc2b111fa7e"
        },
        "item": {
          "id": "bc47da37-be5c-4df8-88e5-2c2652ea783c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "17bfbd66-982a-4f9b-a263-af19d4e31c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aac0930-8021-4e04-b360-b6b566729f4f",
        "cursor": {
          "ref": "4b706d4c-42ed-4c01-9adb-030f9a02d9fb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e476d00e-87ab-4746-add6-b973df2bd15e"
        },
        "item": {
          "id": "6aac0930-8021-4e04-b360-b6b566729f4f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a1442b67-26ef-42e6-a1c8-243b7f495dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31599848-9706-4050-9b76-97f729370bbc",
        "cursor": {
          "ref": "824edfda-b00a-4a2b-99d3-16c367182c6e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6b5a53e0-637c-4479-9788-422887269fe0"
        },
        "item": {
          "id": "31599848-9706-4050-9b76-97f729370bbc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "963aab37-64dc-44e6-a601-b01b647af63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1795ad1d-9c71-472c-965e-764dce990085",
        "cursor": {
          "ref": "5e27215e-d130-4d20-8a94-4e0e314dd070",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "542ba601-6f83-45ed-984c-d2d632f8b71e"
        },
        "item": {
          "id": "1795ad1d-9c71-472c-965e-764dce990085",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "799bf202-3b0e-42db-a5a7-ca68f9c8c3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536e6a74-0281-42f2-9eab-b250e25328ed",
        "cursor": {
          "ref": "3d774104-6139-4a1b-9204-3c25fa77c650",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f74c3df-0510-4a34-a3ac-bc8f6e820105"
        },
        "item": {
          "id": "536e6a74-0281-42f2-9eab-b250e25328ed",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6882e0ba-b60f-4bbc-b22b-e2fc6588d856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3217a86f-d730-4c39-b645-8f4b53707b64",
        "cursor": {
          "ref": "f7b07abd-5ae0-4846-bf9f-8e6e0a55d819",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7c2dae3e-42b0-4921-ab2d-6d2fe0a39331"
        },
        "item": {
          "id": "3217a86f-d730-4c39-b645-8f4b53707b64",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "248268b5-a621-4d56-8c5b-f32a6a398a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23215b0-27de-4b89-8ca3-701b886b8d67",
        "cursor": {
          "ref": "977a8b6d-d8a7-4827-a7de-b48c97a9514f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f7d07273-ea8d-4d6d-8bea-f6ab8468d2c1"
        },
        "item": {
          "id": "d23215b0-27de-4b89-8ca3-701b886b8d67",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eba4c976-1fb5-405b-8d15-fc078673fe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149e60ca-9ae0-4651-a817-8e00e1ef1f22",
        "cursor": {
          "ref": "9c3de21a-18a8-4abe-8ed8-d312a2bd1640",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1ba3b2aa-41f6-4a6e-bac2-d315560c6f0c"
        },
        "item": {
          "id": "149e60ca-9ae0-4651-a817-8e00e1ef1f22",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "151f0c49-dc6e-441d-8811-7d3fbdcf34dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24025210-a232-400f-b6d8-0601a9a288e2",
        "cursor": {
          "ref": "dcc04580-3a57-4dfd-84c5-517b3a121df4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4d9e492a-6ea7-4b5b-8267-8c6e0e9c2016"
        },
        "item": {
          "id": "24025210-a232-400f-b6d8-0601a9a288e2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6cb09465-8e1d-4467-8ba6-b59a7cdc4df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3c70d2-d9ed-4c0a-9483-6f995de37cef",
        "cursor": {
          "ref": "8e98cbd3-3e56-457c-b1d0-9bb38fbadeba",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d1cfef89-d70d-46e9-96ab-6f23846f5137"
        },
        "item": {
          "id": "6d3c70d2-d9ed-4c0a-9483-6f995de37cef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "55b00a11-4623-48e0-bbcd-00a031697e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cce12c-cdc9-45d4-a042-2285f73c9b19",
        "cursor": {
          "ref": "f92a232d-14b6-4b6c-abaf-fbf224789593",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "031a424a-7448-450e-b00f-58d2f9939b0b"
        },
        "item": {
          "id": "d4cce12c-cdc9-45d4-a042-2285f73c9b19",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "987154af-ae8e-44f0-bbab-5f36ab8a7f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71c2ed6-8a79-4d98-a3b8-99fac754ae10",
        "cursor": {
          "ref": "f5531874-4ea2-4fb0-9115-4f95831dee75",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "07b366d3-b4cf-4e76-94e0-0cc9f448761c"
        },
        "item": {
          "id": "d71c2ed6-8a79-4d98-a3b8-99fac754ae10",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "694327c8-75f9-4e61-8413-197109e5e2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99ea32e-1027-425f-b72b-08b457ff7aec",
        "cursor": {
          "ref": "0beb0826-bc38-4868-87ea-43896462d9fd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "01081c2b-0ca3-4cde-a2dc-e3064c247614"
        },
        "item": {
          "id": "e99ea32e-1027-425f-b72b-08b457ff7aec",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ffcbde5c-bb93-46f2-9172-21f5d84e6691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dca9c1-0524-4b32-bd29-bb0ad056407c",
        "cursor": {
          "ref": "d184e9f7-a6ac-4c43-a811-92b4e3458922",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33143290-83d2-492a-966d-f5635f2500c6"
        },
        "item": {
          "id": "79dca9c1-0524-4b32-bd29-bb0ad056407c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "53ba1179-9592-4592-904d-a52b4483be82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18be8878-694e-4068-8c46-1d14edd78f31",
        "cursor": {
          "ref": "7a102121-cb05-4a87-9762-86f8207e8053",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3eac04c2-d54c-487a-8317-b4db9372d724"
        },
        "item": {
          "id": "18be8878-694e-4068-8c46-1d14edd78f31",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "352b7be5-965c-42aa-8c23-c7b4c9dfd176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7e6ddc-775e-4f7f-b4ca-b0ae154da872",
        "cursor": {
          "ref": "aea46a8b-3db8-4c51-b0b4-e1fcfc8a0c3f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "43eec70d-5011-48c5-90b4-8373fa19f2e5"
        },
        "item": {
          "id": "2c7e6ddc-775e-4f7f-b4ca-b0ae154da872",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e1cc52c1-0495-4274-993f-c71ea9144372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491f5ed3-a522-48e3-99b2-46893e6ccbe3",
        "cursor": {
          "ref": "7302f697-16c2-4cf6-82b5-b4c2932eaa5e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bdf34755-71af-47ba-8ed1-22bd17e311c2"
        },
        "item": {
          "id": "491f5ed3-a522-48e3-99b2-46893e6ccbe3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "785851b4-7b73-4428-b309-5d1c7b10438f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c767ace7-4b56-41b5-93de-695f2360d7f7",
        "cursor": {
          "ref": "ab74e707-a9dc-4562-a98a-edb6cef64af7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b12a5ebb-b894-445d-96dc-b6b6acbdbec9"
        },
        "item": {
          "id": "c767ace7-4b56-41b5-93de-695f2360d7f7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "204a95dc-3d70-4ce7-819e-d8a58652a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314b0bca-9b3a-4c51-8b46-f7f42c29b3af",
        "cursor": {
          "ref": "0c9f89d1-7326-4ddd-8190-886ea484dc70",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "57954889-c34b-442a-916d-82d33b7dc4db"
        },
        "item": {
          "id": "314b0bca-9b3a-4c51-8b46-f7f42c29b3af",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29b9f025-78cc-45af-b214-e548db363b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6e8b8a-626f-47c6-8bd5-c7652fddc8cc",
        "cursor": {
          "ref": "c26e8061-eb29-4ca0-9edb-6e25181cdc43",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7767052e-158a-417b-9316-5cd4317daf43"
        },
        "item": {
          "id": "aa6e8b8a-626f-47c6-8bd5-c7652fddc8cc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eda8b193-f37e-4113-90ec-278a7d3022be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39315042-af42-413e-8895-329906b7d513",
        "cursor": {
          "ref": "0cef2ad6-0f81-494b-ba03-7b7b468d8c84",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "63f5a492-5080-4e9d-8175-edb2d970cdc8"
        },
        "item": {
          "id": "39315042-af42-413e-8895-329906b7d513",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4cfea23a-8ca2-4439-99e3-fa97e38b5501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032be62a-f8df-4f2b-8d33-edd7606166a4",
        "cursor": {
          "ref": "ef49290a-7e18-4533-b1d8-e859f9c39b89",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c63d8404-f71f-4556-b6d8-eea25f7da1fd"
        },
        "item": {
          "id": "032be62a-f8df-4f2b-8d33-edd7606166a4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3562396a-3411-48cc-8d02-993b2b89f93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4fe205-aae9-4631-9f82-4a459636cfd6",
        "cursor": {
          "ref": "8e12ccef-0689-4f75-b145-d49b3194bf17",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ea6a1c85-9dc3-4db1-8a79-2f87960e9943"
        },
        "item": {
          "id": "7f4fe205-aae9-4631-9f82-4a459636cfd6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d9c2836f-11a8-43ca-9009-8884b401fa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1ba22c-6b76-4c32-b9a3-24a3710ec3e4",
        "cursor": {
          "ref": "bdf26c72-3fcd-433b-af16-e32ae5b8e208",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "722a82c6-069d-4997-8240-451b42068096"
        },
        "item": {
          "id": "9c1ba22c-6b76-4c32-b9a3-24a3710ec3e4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f42f605e-f8dc-4528-8367-1732d0a08816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61992c2-a700-4343-9cda-a575706b945a",
        "cursor": {
          "ref": "1b271f48-fea1-42ae-88b6-0ebcf075a003",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5d8b5d50-ca93-4100-b030-993c37f5c0a7"
        },
        "item": {
          "id": "d61992c2-a700-4343-9cda-a575706b945a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "014f5189-8e00-4910-ac51-3d9d152cf39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb485a1-5775-4608-bafa-f96f2f8171f8",
        "cursor": {
          "ref": "d6e0b0c8-f533-48b7-8b8d-d3fba048f81a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad4c84fc-c12f-418b-b14e-258d84e05576"
        },
        "item": {
          "id": "9cb485a1-5775-4608-bafa-f96f2f8171f8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "86bec8c3-4c5e-4e49-a3b9-d207c938f4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cff60e-9cb7-4b9f-ab0f-b6bf8e6093a7",
        "cursor": {
          "ref": "7a5fa352-a97f-48c2-9d21-05bc9ea4e694",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "843203e5-1219-496c-abe5-0ffb6ed55c23"
        },
        "item": {
          "id": "36cff60e-9cb7-4b9f-ab0f-b6bf8e6093a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a19a0de7-2624-4be2-9bd6-e5bbd7a0c213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d820de6-a9b7-4978-897d-ad31773b9d83",
        "cursor": {
          "ref": "c9243757-5929-4b6a-96e1-8772f54da0a7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4883ade5-5491-4310-96f7-759621f7ef19"
        },
        "item": {
          "id": "8d820de6-a9b7-4978-897d-ad31773b9d83",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "eeb53e22-fedf-4aa2-9cc7-657abd32fc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1912bcd-e394-4d83-a711-0203c8f329a8",
        "cursor": {
          "ref": "210a600a-0cc4-4191-ad31-cdbff975bc1a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b5f920ca-29b7-4ac0-8e24-91d425e037cf"
        },
        "item": {
          "id": "a1912bcd-e394-4d83-a711-0203c8f329a8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "54263996-0c5e-480c-b6c0-e6a996a96a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0994b1-d60e-4a65-9b77-49daff60f772",
        "cursor": {
          "ref": "60e9a3b5-e1fd-4fcc-9113-eaac8c697e36",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a773a2b4-a783-4412-8379-0018b64457a5"
        },
        "item": {
          "id": "2e0994b1-d60e-4a65-9b77-49daff60f772",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5354ea47-32e5-4c1a-82b3-48a104db12f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ce75ec-7918-4b74-b7c2-29a52c106e7e",
        "cursor": {
          "ref": "3ec6b9c9-cc02-4df9-907f-3f3fec7fc061",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a340ddc5-aac2-469d-9c1a-ff2430162fd1"
        },
        "item": {
          "id": "b4ce75ec-7918-4b74-b7c2-29a52c106e7e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f7e118d-3173-43a8-8e4d-170ac048c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86ae5d2-0e4d-4873-87a6-ea26cf2ac1dd",
        "cursor": {
          "ref": "40ba9718-e67e-47cf-8030-4a3f1856ff74",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "38eeb70d-66a5-46e9-939d-ad779b6ea383"
        },
        "item": {
          "id": "f86ae5d2-0e4d-4873-87a6-ea26cf2ac1dd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "40fef6fd-cd8b-41da-8da8-12fa071cb833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae55c349-670b-4edd-bbe9-f2b6c500dded",
        "cursor": {
          "ref": "59986700-c61f-4485-a83e-4a9f1e770ad2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "84fb1af2-2b9f-4ab6-92f0-a7f933ebc1ec"
        },
        "item": {
          "id": "ae55c349-670b-4edd-bbe9-f2b6c500dded",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "65e6c438-ceb9-4ae3-8658-765fe09a1498",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d343156-b621-4809-b8f5-fec044ca604b",
        "cursor": {
          "ref": "888f3554-8714-47af-b35b-e9db6a6d3110",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "11a9415c-78f3-4df6-bf35-1c1bc7bb27c3"
        },
        "item": {
          "id": "4d343156-b621-4809-b8f5-fec044ca604b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "53b8b87b-3101-4d96-b360-c439636c6320",
          "status": "OK",
          "code": 200,
          "responseTime": 2277,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a236fe5-dd89-4d08-9452-90b82a04c777",
        "cursor": {
          "ref": "cac5162b-d7b5-4b3b-ab25-043fea0410f8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3e16b4f9-1027-42e6-abf5-3dac4f3955c2"
        },
        "item": {
          "id": "6a236fe5-dd89-4d08-9452-90b82a04c777",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4cf96e48-9783-4df9-aff0-3757ce8e3b2b",
          "status": "OK",
          "code": 200,
          "responseTime": 2883,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0467fb3-97a1-432e-a68a-1218335a774b",
        "cursor": {
          "ref": "fa03724e-b697-4ac2-923c-562698ac33c5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce160908-4d18-481e-91bd-5a3d508788c0"
        },
        "item": {
          "id": "a0467fb3-97a1-432e-a68a-1218335a774b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82550a95-f2f6-42e9-8958-ebc544675b5d",
          "status": "OK",
          "code": 200,
          "responseTime": 2483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9c2db5-76c2-45dd-a782-31c91e516314",
        "cursor": {
          "ref": "aa87efff-49c8-4bbd-ad2a-cec342d56787",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3bbfd7c-57b9-4f88-a855-6c82d754fffc"
        },
        "item": {
          "id": "5d9c2db5-76c2-45dd-a782-31c91e516314",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76c66786-7e4e-4804-b17a-008e117c66fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9c2db5-76c2-45dd-a782-31c91e516314",
        "cursor": {
          "ref": "aa87efff-49c8-4bbd-ad2a-cec342d56787",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3bbfd7c-57b9-4f88-a855-6c82d754fffc"
        },
        "item": {
          "id": "5d9c2db5-76c2-45dd-a782-31c91e516314",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76c66786-7e4e-4804-b17a-008e117c66fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa8601e-1125-42a4-813d-cabd61040945",
        "cursor": {
          "ref": "67930718-a7e1-4446-811f-a35b91043c41",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3afe644f-788a-423e-9765-3c0cae8903e7"
        },
        "item": {
          "id": "1aa8601e-1125-42a4-813d-cabd61040945",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "da6d04d6-077d-4e88-a9d8-d8e4a8ee9d1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbcd639-e9af-4b65-8070-bad04d1c662a",
        "cursor": {
          "ref": "61c5ac6d-df21-4de6-95d9-2594e4647fea",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cb436491-cc03-40ce-9fe6-9d1095011ebb"
        },
        "item": {
          "id": "adbcd639-e9af-4b65-8070-bad04d1c662a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3ddfdd31-d47d-4186-ae38-6770f1166444",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}