{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "497a066e-4774-4e08-b7ba-3f73bba1b7de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6cb7c9cd-869f-47f2-8b74-9291d6069d48",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84ddee4b-73c3-4484-a611-b7c5540a4654",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab0371ca-f361-4476-9385-a4c0fb671789"
                }
              }
            ]
          },
          {
            "id": "a042b88e-c3c6-4a51-aa9e-c03ffe37abc0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd29a8e3-e3d7-44ea-97b2-88a59ad02d9b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "efa92f7a-53e8-4f57-a367-3b340b70ba99"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "89f5205e-6d8e-4ea7-9bcc-65d06a1514c0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4b8c5d6b-1a15-4b1c-86d2-53b5db0cbbd9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c32d0fd8-4f10-4f72-bcbd-f0811cf953c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1147507b-b74e-46b8-833f-143df0613a75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61ce8fa7-7191-4f07-a8c8-e2a69036cfd1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7675d8aa-a471-4ccc-a89d-ea4257f6ea2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f415b43d-99b1-44e5-b527-f82f4ca2669d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93a67d95-7a78-4075-a2dc-db2c5f9f5fe6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82d81482-9f3a-4413-b024-30e22709a2cb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b20ff47a-235d-408e-b6e1-d477adbc01c4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c211905e-1cae-49e1-85c9-823d83b24f50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b86a6c3f-9bae-4594-9ec1-28f13d553be4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cf88d1b-120f-49fd-8a14-db9982ee30d8"
            }
          }
        ]
      },
      {
        "id": "9d5978a7-7f7c-47f2-b1cb-a13baf5d3e68",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cb54a961-40d6-4794-8f9e-fde28bdfd3c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05de5cd9-a713-498c-90e8-dbb95483f7cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d33e35ff-46b4-4868-a80b-33d649f62ec8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f68cc1-0757-4515-a239-592eb9db0f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f4f4975-1e02-44a8-8802-99228207198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a071285-2014-4cfb-ad39-5fcf289d1213",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5cb7c4-0e61-45ee-bf33-2c4a8d3dcff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17a1cb9b-46f8-44e8-97f0-a7aa86d04ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f390e83a-10cd-40f0-bc42-bd085c389fb8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ff26d8-00cc-458a-8262-f9d8fedd85c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "989c9076-5acc-478e-8ed7-e620928d8037"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a789dd3b-999c-4551-8333-dcb7e8c1ffd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "710d0796-4196-4d59-8dfc-4e6ae49c567b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76958a5e-ca98-42e7-b782-b4e1af6cfb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ad8af5e-366e-472d-8324-692e5aab8f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca7e82-2399-431f-8c5d-ec7479f92604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67613a39-bd81-4908-b3d3-f79c993a2693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d82ec7ce-ced2-40be-a833-0d2bb1054979",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ab63481-f5bd-46c9-8354-5846b39b876a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec28ccba-ed9f-4633-ac30-e0491bdc52db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c065deaa-3e5e-404e-afea-db31cdc41d16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff1cc2cb-7b48-4c5e-a19d-baa2501f2963",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c859100e-dc4c-4dc9-89cb-3079174b1017"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c1354bd-580a-40e0-9b3c-6703ea016076",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ac57d12-2b04-4009-8708-b1e17ce2cb84"
            }
          }
        ]
      },
      {
        "id": "daa9fcf9-e67b-4396-bb64-f20452fb4e08",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7b5f077e-c7d0-429e-8deb-af7abc0d2388",
            "name": "Negative Testing",
            "item": [
              {
                "id": "742fdef5-ba7b-4b57-8acf-06e5524c4650",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad490381-8e02-4a63-bc63-9786cd4f8a64",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d7c85-7790-4dd7-b24d-7eec24834f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa8d691-fb10-48dc-b911-66ae03629201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753b1877-4eae-407f-908d-a3c1728427d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "862a139a-b896-4144-9262-542ca2fd632d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7336486f-56d6-427c-bfd5-8987e31ebbb4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5087e7-2408-4eb5-a18d-abb66c46fbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e7a7b0-9bde-457f-bb45-0f1657805f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d384c-1cf6-4e8b-91f0-43646ab81259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9a84b5e-b546-4f4f-9a45-17d804de9849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202e0848-2ebe-475b-88a0-152d1781c806",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce888e5d-3abb-424f-a437-a8a8a64fa3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762c8cfd-256d-4790-a399-74acb30cab31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b2e638-5b84-4d93-86f1-8e6ffc57a635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18743460-9c6d-44ac-963c-75a0259233f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1492ce-fad6-4bb7-bb35-d6b7ed7832c1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2928a61-884b-4995-9dad-44756b51f855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824b0e95-fbcb-47dd-8aff-e0aa87806272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac7fdc5-acf0-48e1-ac70-dfd68e0c1a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c66afbe4-d110-4138-810b-a97d3c2609f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f15f87-6de2-47d6-9b79-2d77505996f0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d8dcec-f3a7-4127-bed9-a333da1c1ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c50aa02-0ef8-4777-8faf-d5e413dcb368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428817f3-e57e-47a6-a130-a8f7748970c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "440e35e4-abd1-4476-bb65-7762f086db8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d7a3ec-c20f-4da1-8ac7-b7e02c5ab38e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e8a089-8ac0-4374-818e-2cd3bf8370fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6961794-7e99-43e7-accc-60247c729cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d9ed2f-d762-4745-ba0e-3d369bb9baf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93d4c62a-2dcd-450f-a96f-a5f410a7a7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc174059-06b9-4d8e-b958-b7da5f8e5af7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c51bac-cee6-49c4-956f-8804de991e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b11d6c-09f7-49a1-9a37-42db3bf0875c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09085bb-f2da-4991-b014-a66cb5b65d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c59893b2-80c5-4088-a7ad-1a197788256c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76755002-2c26-4695-9764-fd9af0f31279",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70800ee0-a151-4c26-86b5-7c3cfa3bb963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0fee2c-220a-4c67-a558-d300feb44002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125528d7-5df1-4bb3-830a-f69a65e21cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3915bc99-18a4-43c3-a7d0-e2b415c36d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48f707b-7a43-4cef-8d8d-497f7228b850",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063d5f7f-841c-4845-89f4-99e3e1010508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598546f9-1b6e-404d-9d2c-889964d9ab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbc4908-a138-406b-ae39-02d548dde380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff98dd4b-3118-40b4-ab4f-0cb828b5d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd47100b-c156-44fe-843d-a07f79bfe7f7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fc169c-44f1-452a-a9ae-88a328b9f1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b838528-4167-40c6-a51d-27e5700b61b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86575773-bcdd-4f75-8ba2-7ed5ffbdf984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbcbd180-58b4-4049-b839-d2273db77d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93762a6e-e31f-4c2f-bb86-92bf1cfaf4ee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4805b9b-e0d4-4823-81cd-f859f829480d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be911ecb-4922-4df4-8362-c8fd4818d576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e2f85c-48af-4433-888a-02b6ebcd4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30f5d64c-cead-465d-8442-0d76597d6baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317339bd-f95a-4b2f-980d-b3695b30f8f9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e4ae97-5a31-4dae-bc57-133b703a7aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1280ac94-212b-49b1-8081-871b0700142e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c3a81a-58a1-41f2-83f9-f287062bcaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78b00628-ded7-4275-9808-2182eed1dc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800e7e5a-d219-4fe2-806f-74b1e1b88763",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08746556-92a4-4c14-897e-304623541db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6bd393-bf1e-45c5-904f-3a94ee325975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9022b846-ebeb-4f41-9072-fcdf12ceb5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e85861a2-8161-4078-a8d0-1ecebb0b7244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd4f2ee-cb7c-4803-809e-0feb53995302",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582437b7-1e40-4da9-8870-ebb37c689f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93f75a9-53e8-4b4c-a528-6f6fbbf88998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b002cbca-1420-40c4-bae6-1552eff2284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed22a474-c7fe-4c3e-af7f-87267e3909a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792152a-2a46-4bb4-be6f-1e4163070ffd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abf19a-32f5-49a1-b14f-1f702795485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711b80a2-25c0-47f7-a5cc-ed004c4928de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2bd475-d4b8-4bf3-a72a-cc7ada0ec0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea645d77-b6ac-4b0f-9b0d-579026623068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca62b1c-cd74-438d-ac69-8bcefc137f67",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50219925-4816-49b3-bde6-9c731fb97555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abfdf28-fc78-43ff-be7e-d61925eb4674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177330ad-e0f5-4724-9342-d6c50979f4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a4c4cab-f733-4063-a3c9-42f2b50f600a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69f636d-7493-4868-8586-cb165d349c5c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423dc7ea-a735-46ce-be9e-904b63b17071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8c3533-f2bb-43c0-81f1-b52e586b4e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7d495a-03a8-49da-a81d-8302acbd9fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce3a8cd-cc41-414c-986e-dfc21f970380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcfd311-0bb7-49b4-9ec2-e0d4b83fa04c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc8f78-bb0e-4f05-8aef-4faa13ebbaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c38094-6653-4aee-abf6-abf08c95e53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b260ab-1d37-4755-884b-d46b3da4ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "691b2708-3c93-48ae-8752-39cd777831fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579a9574-85a3-440b-95c0-e315069b1afa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a3658-40c4-4984-a146-213742c8676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cc844c-86fd-4e56-b572-eb134272ed30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67ac9ce-1c81-4910-a664-e8fc4403076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "243533ef-3fca-44de-b6ec-6eea92883096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8e32c2-8616-4f15-82c7-76f82e2c58b4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e8bbb8-a8a8-49e8-86da-82ea9f352e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a9c279-55bb-4272-a46d-c269ec1c9307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afb93bf-38d4-42b2-9c20-2d82345ca3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c041a3-16f0-47c2-92fd-9062e75a5068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a1f624-3b02-40a4-8dd9-d74d65956660",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a0d641-e360-4729-a0ca-4ba1526b48e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1632319-1138-4b93-a3d4-5a8a9dc20b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2409c50b-6096-4db8-ac4b-441b5c2852e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0738cc9-c853-4c08-a5d1-6b079ca157f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38675e5-cd1e-4c0f-b9b5-6413a6bcdb1e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1d668-97cc-466e-a712-fbcf5e564736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b144a36-8d4a-4465-9537-ead187d9a81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48181550-a8e6-49d9-b0e8-9e61f24c58a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "807ed173-defd-4ef8-ad12-391658ab9135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3044108f-680a-46f1-8cff-cde89a3cc46b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7aaff2d-7b05-40b5-bffe-d7c05f7986cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4538e822-deef-4033-93ae-1e8b611cdcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af9b9eb-d147-40aa-b436-8f3a194d1f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2bab8d-8dbf-4b36-8887-8a3bfa30dc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ae24c0-c537-453e-a5d4-4b8388361d44",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16996e3-0530-429f-9360-b3225990f124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76827ff-c76f-4168-813e-f578a5db6481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e95604-11b7-483a-b818-02fcaa03b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14e2836-6c90-4bd8-be1b-412617a81666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8203727b-ae94-47d2-ade6-24cb22e1bae5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1914dfae-2720-4ccd-a453-aa211382f7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bed193a-d277-46a2-b115-efd1a981f75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff18522-0e24-49ad-9f5d-8c62c256227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a084581-e3b1-4bb1-a355-5e1b70293cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472cfa50-7a81-448a-94df-aac095e2a81b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539fedcc-6adf-4b54-b622-e8ab70771c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e15ea5a-d174-44ca-ae76-4c918b22f74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e11917-a1ae-4116-8d12-c456ecce8684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2b0c05-cdd7-423d-8d01-f12299e30862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cb4647-f3de-448d-a198-67432d761b94",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f887240-f0df-4ba1-9a4b-f3a1aacb4967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad052ea-6856-42ff-a53f-a40380895c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c03bd0-f2c2-492c-8503-b4da63ed00a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46ed674-dd09-4164-8bf8-175ed9383b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0b653c-37ba-403a-9649-1b00f32b7912",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b37c5a-dc83-48f6-a115-abd458c7d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7f6103-00e3-4ec9-ab8d-5926b95e36b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53c0c8b-9ce7-4ce2-9990-1757a0625079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fa36d5-30c8-459c-ba0f-cbbfd7bb6f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f22deef-7c1e-4628-b6ab-22b92ea0d39f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7db898-1f25-4125-ab32-a653e1e05449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b295fc15-1bbd-4e95-a033-43c9f9edafa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f54e53e-5031-4ff8-99f2-e0057ff81c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a920f345-ce12-4450-88c8-3878e42b6873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce32da38-82f0-4629-9b52-92d9eb818f99",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7817196b-6257-43d2-8d27-739ca7ceda14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bfac06-8438-41ed-abe7-21781ec4b849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76faa222-9352-4319-950b-66259496af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "667a5763-12dd-4fe0-b79e-280a3c396853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc5b25-cf1d-41e1-8038-66834ecc0ebf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52459d4a-3daa-48dd-ab2b-b18e54c2b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271eabfb-94c7-4705-a54f-6204990c83d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bce313-9d76-41b3-978e-5abd9a71ac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "611d4a37-4abd-47ae-bca1-2eb44a16957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f68b524-3640-4f8b-92b1-fb2a3393a6e8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78db100e-cb78-4e13-baba-c94c712dcd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79386b4d-cfcd-45c1-8f85-2723a307bc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb2add6-e744-4b8d-86b1-289ecb683f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22b86c3-cdc0-4e79-b58b-a50a8b5f5989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f09e73-31c5-4c53-a1fd-32c835bd31be",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6f7b9f-b3ad-4096-81b9-0cbabfde8d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bf2449-154c-422c-a452-bccd50170c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816879a5-cbf2-421b-a0d5-6ef909345799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76da673c-c40d-4d28-97ac-cbed0e30d7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c53328-8e2b-44cb-b06b-528d339f2946",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011575f9-dc9e-4acc-b6e0-18dc7117bfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0aa4d8-c1f8-409e-ac1a-9e796e60d846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3c8c0a-2c17-4ca5-bac1-d4e77b28eb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6043f4-2ea3-4c95-b2d4-ade03fb28f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4799e21b-0923-459a-89c4-752d38beee87",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432a1258-87c8-429e-9bcc-4c77789e757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2292ddfe-456d-428c-b1eb-4e1a95c6ec12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad898c-f3e1-4f0e-8f3e-43555e6df6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "035bc943-b232-42ee-9fe8-d55ed273c928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08116b2c-af42-4ffe-802d-32afde369d47",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb83eb-8517-4826-8621-412cd5eab20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4db7956d-c038-4c81-a21a-c31de4b5d2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b112b01d-77b5-4eee-b72b-6695370a5b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4c7ac5-d429-46a7-89e5-60201719b283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1f9b58-b48d-478c-9293-309ed5265490",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c41a15-d025-4084-8cda-68066e2519ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2085018e-e9b6-4479-b270-63c29d088cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b408e7-cdf1-44a2-8281-f0d4c2ad2d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ecebfa-a0a1-499b-b168-c52b62749b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcce4631-38d0-422f-b63b-4e9dbf81804f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e44344-47c3-4212-93fd-c067a652619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864b5011-e5ea-4e4f-8562-0f21afb8703a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edb2659-6939-4ffd-b5b6-17345c1753ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d9879-aab2-40d1-91aa-41d1d4bf7095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d13cb58-84e0-401e-9b63-5fefd2a8d738",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e21cc0-7f37-487b-9ea3-b7023e5f4d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08df26c4-9502-489e-8618-bf78c6ddede6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a308c54e-3fa7-4f00-9d1d-9e66d4ac6a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "002c7c36-d0a2-4ff3-be32-30e67c570e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790ed01d-a405-472b-a07f-c79b06000391",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c99f09-fabd-4e3e-ad2a-85eaeb513f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e6c37b-37ef-4625-bb8c-4b7f130e423e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12c9a3a-7b1e-47a1-9dfb-744ac9e0911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf00fa9e-52ab-4597-875a-e65d715d28d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a85779-1fdf-4603-aa83-d8e58bfdc795",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34434d8c-ada6-45fd-97d7-d5d3d881f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed88e04b-7163-40ae-b92a-8670a428bf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46949231-041e-4198-86ba-db59f5852ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c421426b-6964-4ec2-9ef2-d4919601e5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5800d7b0-4cb9-48bf-b3bd-9d324a358407",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0648da23-e5c1-4d83-acbd-dd32c88a936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fcb619-878a-4d87-8541-27b4a1e85a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902bb0f3-c1fa-4311-b348-b173d0d5b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7bb983-c6d1-4a42-a20a-3a3c64b3d74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cb3cf9-9dd8-49e9-9166-02237a36c0ee",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ac3553-7f80-4f37-8815-ad3ad78682d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81d4c6d-0dd7-4c21-a1b4-da08fd6e882e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9fb1eb-6f61-47ba-8495-2a10f6553255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d717b670-4300-4cb1-8113-3e90f50cad52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81297c2c-0833-4e75-a319-df5e752ec96f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f57c6a-38e5-419d-93cb-c170a7eec6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0f217d-7e5d-4ae1-9a68-5445871a0c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f47b1-a73c-498b-8bea-c73de95ceb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d296b5-25b5-4702-9591-03d62e08be6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc14a70-5e2c-4b47-8734-4b70e9d6c5b0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693d8b67-f3dc-4b4d-9cda-117564b4f743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ede0a46-b288-486a-90d8-35dbd4298f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac442855-4881-4847-933b-9a5c2292bf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a142c14b-3659-45f3-b605-0d3bbee853c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c66953-4b98-4580-bfac-265655640b79",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3a3bef-f22a-41f9-9ba1-693f315eff56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75da136f-9db2-44a5-8a40-e0e1f7c42cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81f138f-a928-429e-adb0-cd22c7fdda09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e518cb99-3e50-4f79-8e68-718fd18e14ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c8ce76-94f5-4057-9a78-863e1d55cf2e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c302a-1442-4dfd-9bca-f42490b05513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8feb9d-e780-45eb-98c5-1ec209757f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6047f-5f17-490f-bae4-9e2b3d801b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4f9e4d-b1d5-4881-976e-ec52867bd812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b61806-14c7-4afb-9bc3-9fc0ea5510b0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58314be-1b00-4069-b5ab-7ca97b61dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca293831-5a64-44f8-9291-13b5a5841181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20aa3c0a-41ca-4f9a-b1ba-106206328968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bddc71-39b5-4476-83d6-cbff703b3405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb7f8dd-708d-447c-8e98-c51c97460f79",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84a5ab1-d9d9-479d-bae3-7a4416020b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d1c859-9a80-4c41-b493-17d58e551967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a14e10c-9f39-47d8-a1ef-e44395c53f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f174c446-b454-4e49-b0dd-0168bcddd54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e83fdb-5e46-46d0-86d4-5b53704f4a43",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42897e0a-05d4-43c0-a215-ea2ba0219cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90d7884-ee0c-45d5-83d9-16d4ee50aa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fe8e0c-4cb8-453e-a27c-e46c77effe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30d8042a-757d-45bc-b169-8ad50efa2e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d127c26d-3161-44c7-aa39-31f6c2bbe9d6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469b5643-c1d8-41c7-8985-7284c517d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35be0e14-1112-4972-b667-35bb0284d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6641264b-9b5c-4cb5-82ab-0774992d6c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "14848598-c3d2-4346-9b92-0a843712654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f337c57f-fcb4-4454-8c63-4be045db9dfa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ecb73a-4898-4f2c-a5bf-cbd2265515f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76579c70-1ed6-4739-9ab1-b4473b4cab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cd421e-5a00-4962-8ae9-5a888b095a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b884eb-07cb-4fcb-9fb9-0fa7a786fe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7552307-df26-4ba1-b6dd-49558ecc277d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7bda78-0632-4bfa-8cec-b8d5d87c0c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a32a1c0-1ae4-45df-b06a-a250b385411b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d0114c-6de9-475b-b0ba-df5f140bbbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d1752b-b643-426f-bbe6-7f3a3eb72f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a25f72e-03c1-45e5-bf85-5f4a8e85085f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7fdbce-7707-46a2-ab94-e4b853ea0a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9e938b-dfa1-4522-9fcc-3148cd6f7831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabd9905-4c5f-49f8-9003-f7a49df5619f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d3f7c5-75b8-43ec-87e0-5dbb4f77fe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6e5c36-7629-4972-9e9b-4c0f3f9d8bf1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624566a0-de5c-4dac-93bb-0b2d7ae329e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd86a1e-cd10-4c61-9800-fd51465fe118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef11aea7-3666-4673-ae61-bc4a23cc41cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "612e5c23-e96b-4a14-b5d3-fd50e653ac32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b86be85-ca49-480b-bb5f-a5088df05266",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8504984-3965-41d6-b0aa-8a62e482e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3233ea1a-ea15-41a1-ba9d-b2d7c713e015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a2e77d-e27e-4f9f-b550-42c0d0c25de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f63e106a-f006-459d-98c2-13759961dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf89112-a090-4767-84e5-8d071c961971",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc65a2-5f3f-4b87-8908-aaa597523f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be72d1a-dee4-40fa-940f-710be3c0a96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037d0490-ff96-4414-9efb-ccc71a80cc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8c113e-04b1-45c6-a0bc-1aeb9f9c1255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9836580-d09d-49c5-a826-34bf8f646ea2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a908d835-225c-4a56-98ea-3105056df7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa25969-4027-4068-9750-328ab8661fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d93f21-de54-44ff-a767-02cd526effd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f02acee7-dd6c-4c49-b609-9dcc77d0bd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0656aa-bad4-408a-a9da-f94db7547881",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71d86cb-af5d-403e-ae10-92f27b7f28e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3580610-c346-4112-9fdd-870099a7a7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3844607e-3f3e-4636-b32a-b59d49dd945d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a68df37-d991-467b-a0e8-a033cbf3645f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8373d44-30eb-41e2-a756-64654ca4b07b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f87d7e5-a1cc-451b-8e8b-740ffae4b01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea96090f-41db-41fb-a33d-76a60685f4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7faf64d-77fb-444d-a7ba-81223c92ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da930196-4900-405c-9bf0-8b5abf8bb606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08b7dd0-4b75-41c8-9457-811b90aaf424",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9315183-426b-4b0b-be24-7ee2e24da000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83717354-b6cb-4362-978a-ce020c464877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bde96a-87ff-42e9-bfa5-7d87fb382714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "abcc08a8-cfc7-4712-b934-7754cca7134f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352ed5dc-8b76-4fe4-9da9-90356baf8314",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a83437-9cf2-4d81-930f-b65f7a689718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e731fb1-131b-43b7-a04c-813649ff714c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778aa4e0-b0f9-41e4-9613-c8ad11efc0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b6c7dc-6192-490d-8c08-f10bdb6edcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf9d662-0ee9-42ba-aee2-197344c7b657",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b5f691-4339-434d-8274-904a751ca528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d406ed-01b4-4fd9-9e1b-d009df991704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9882246-d86c-4f5d-94ea-b550e0ddcab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e078e51a-7596-46f8-9de7-01e33cfb2ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55712f1a-613c-4eff-8abb-ca1ba62a14dc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cf685b-7199-4e9e-8380-8fc268f59325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da05f378-15d2-4c9a-8445-da522cb24347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b99ef3-ea80-415c-b7e8-5462a634a2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c761a269-ad59-4058-8600-29ad1afdf783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14879260-65bd-4588-a007-befad622d368",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bde617-020c-40f0-891c-ca8df306146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53005d0-514c-4d0b-a6e2-06fa5f07bf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46a8b92-9139-41ed-a567-8501d02d7da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "591894f7-8b58-4a19-b785-b0662016315f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b14af06-7f70-4d76-94fa-9605c5a5cac1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47afefb2-41a0-43a5-8d95-71aad3a53eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb1a028-466a-4ddc-8ef4-1d82fa4cd1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fb1f15-b1d9-44cd-8643-100a0334442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54cf22b9-cd73-4c2c-b2d9-c2d547f3839c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7601be07-0dc5-459e-b50e-8142afba8983",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379fb0a8-65f9-426d-b5cd-28f7c49bd8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0498558-70a9-4ea1-9194-842d2f7d1155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd8e1dc-1781-4278-84b2-7e8f14644bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2868a20d-fe8a-4d54-ad3e-c47c3dda84b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73e2de7-7451-474f-a3ab-4b5371cc49ec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7918a19-366c-4d6e-86d4-4098feed8871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927c9711-28b4-43be-a0c9-67b50f7cd2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0e9933-42eb-41c8-b8f2-1a37c8733e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccb5133-c4d1-4614-83cf-0c8e697cc6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c499991-de41-4825-b8d0-3fbbd39fa89d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b646c8-2f27-454a-b037-74b477804686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7dd3ad-cd94-4532-a745-ff0e46f50ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1328721d-9bec-4728-9f48-d1afc8dced42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec8dea3-403f-45d7-a739-8cc7ed9dfbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23fafce-dd2e-4092-a341-3df04a536b9e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c738926c-26ff-4985-839d-a8828f07a918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0ae1f8-f1ac-4b48-acbd-378e24ba3d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72545d5d-3d13-4f64-a912-5dc27b3ccbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa50a31d-3627-406c-b1af-9613be1cfa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80273b6d-fe1b-4b72-87c7-3809f0066283",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daed0067-c0bc-47b0-8b25-7d0c2492b9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64970974-66b2-4bca-b7a8-d34160825f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2720daf8-69e4-4c50-826c-82f01f8423f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2737671b-1601-4424-a4b5-4adfa003881c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c35182-7a8e-49ef-aa24-b8f378881ed4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047cd64f-d1f6-4ea9-babd-6a7051630a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edce4025-19d7-41d0-acd2-433a818a764c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e6deb2-4587-4c5a-8841-af2b52038628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20a5b3a-2fb1-4132-b8ac-14ae5edfa858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5079749-323b-4386-b6e7-b7463afa8f54",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50357cb-5760-408d-b8a0-a70343b4e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30035474-e48d-4809-9fa3-aeedf1fb31d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c89a94d-382f-4c8b-91a7-24c075293948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3e00e4-0f78-4d10-9a0f-e47895dcd3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9ab19e-9255-4b7c-991b-b278021c6a04",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedb1c97-e705-4cd8-b5d2-b0669039f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a548fd-dae4-43b2-873a-d136ff682e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3503bb-0cad-4439-800c-c223454bd570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e1588c-9b34-41a7-aa96-45736638c0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a6e4fb-f6ff-4b51-9409-533ae498b9e2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15462f3-38b2-4dec-8fa0-043071bd1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c469fefc-adce-424a-af8b-d09ed44e142d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0792c5f-41d3-4dd2-a5ab-8502ea593963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a21153-dea3-4edb-a8e6-ac3deb3974cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5dc269-0b0a-4eb5-9153-611aaceaf783",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd1354a-da0b-4216-9351-d077033f96dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4771695e-bb7e-4d98-81b4-17abf96ee76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c2bd3e-5800-49de-b1dd-9e52f3802714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4646295d-71f8-4fb7-a08f-c4b2b24f9456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01edd36c-ad30-4dc8-8c85-3b754c7663d4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30723be-d300-462f-ac49-8c3b5f59446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8a9d16-cc0f-413e-8b13-ad9e2d08e563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9878e67c-1573-4495-a71d-138d40853f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "624440d2-2cbf-493a-9d19-fbd1763ab04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd752e50-32ff-4355-bd7f-26249868a901",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac96d4e6-e984-4e3f-b4db-82c08de8301b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeb3fc2-4f80-4047-adaa-edc0b8af260f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7500f6c-c82b-45b8-9808-f7736b4c8ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f9bd0e-f339-487c-81a3-e0294706be42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b261b0-f505-4656-ac33-f7bf5b3cb5f5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9bf0c6-4cf7-4db5-8682-cc077f0b4f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0458932f-0ca6-4bcb-bcb5-3f3f2814c0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d71e382-004e-4686-a17f-95767fc6dceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7768ed5-cd5d-4a77-9703-e290cda90f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca6561c-abae-4843-aede-ceda058a1045",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1daea89-ef1c-46cc-87f9-ebd19e28c7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338e0658-6f78-4a1a-93d4-92b72ae725bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f9e620-f988-4e36-b36f-3ea08d6ee4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "322ad413-ec32-408f-8d46-90698c1f68da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90c9ff0-923e-4a41-89bc-9a9600b7ac3d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00643d90-d624-4600-a37c-a8a173dbebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dd3ca6-7b4d-48fb-8533-849b4f0b4440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb16afb-1257-421d-990f-debdc531cb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94750778-2e68-4648-be2c-34239f47999a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92916c1a-5185-437a-97d1-fabf88f9f8df",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb03e4d4-b3a0-43a2-8c38-536f66088503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f973257-ff9b-49fd-88bd-ed32a85d317d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0bac29-1899-4a26-846d-9b6ef0efdf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "946ef3dc-7033-41c4-a150-9abd8473f833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ca338c-2179-41b1-a011-0050eaba2276",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58027d0e-6f1b-4960-b308-6e9a42f9afcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fea47a4-97dc-4171-acbe-77b95b49efff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f615be8f-1a4c-437e-ae5e-8da02d0fc683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1e9c0f-366a-4be6-9efe-c9e3be0dd50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08bc7ea-9d6f-4adb-b01f-4dcadbc5cfbc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b593fe75-0d6d-4a73-a0d8-ef1d9ab9bdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d64193a-9829-4513-880f-6bd2b50d4038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2504d6-3ca8-41a6-a56a-1189d8c1ec61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcba050-1bf4-4a25-bb9e-c0eee10e87d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb20b8fc-e59c-4d87-a275-bc3e2410c312",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8069cb75-3627-40a6-bc30-bdb46478ecfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c59d276-54c8-49e6-ae60-1e8b9bd03a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c688ce-6b43-43f5-9dad-7055a8e39fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf14dc2-9724-4029-8dec-0cfc001a7ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd962e04-2b82-47f5-8a02-6db032bfc314",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e1586-6b82-4c9e-9837-53125770a426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a958e3ff-9eb3-41ac-97a9-adba0c3eb3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9257d2b-cf47-42c6-b07c-9256c7bd9fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "906249ae-f85f-4248-a7eb-a502178321f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4e649-4938-4d67-8607-472c6bf35aba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de24aeb-638e-4ef4-b95e-b91fb69c8df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894790c3-9ef3-4149-8a62-7cbf6f2f6d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0233dc0-341c-477b-a6a5-ce882d312acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "69bc1794-118d-4d4c-8c52-b16802961dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d3ce48-05f9-40c1-a5f4-7ec1c53326b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388cf4d6-3824-4b3d-a667-d970fcfe4c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c52b5d2-dc3c-4bd6-9503-1f1eaf74a9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf0275-4283-4d59-b89d-13167e9c74c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c8d111-1dad-42ca-a5eb-d1f4b4759c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5986d6c-6b42-42e2-8724-47b5bd3c3549",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f3ebff-582c-4e85-b104-8b8a70847f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0600197d-9b04-4a43-849f-e8902bb8c131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcfe024-76b9-441d-a6e6-304838314ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f054400d-a84e-4e2c-a717-cc7199cb8908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e81251-05f0-4971-836c-a5a497690d87",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c70fc91-d848-4fd3-b507-3333b2f420e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471f06b7-3997-4720-b493-dfc7d8d4eeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f595942-cdc9-419b-bc22-9c9f8c48d3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f7e1b4-30ec-4006-a8f7-223e7fff1474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454815e7-b4f1-447a-92c3-a02f329e5737",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc9f241-c4be-4d0c-9cf1-a3fdc80b5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76eea94-5833-4f77-8780-cee588abf2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d2d8d5-d5a0-4439-a424-b56414cbe20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b42404b3-6c01-4e48-a55c-535f9540ac25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82d2a8b-f4ce-4d53-ad4e-45f642051f33",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37c8528-3a98-469f-96ba-1c53b7b6b792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cac6dc3d-3f32-4026-abb0-2241db6a29d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6af5094-90ca-4361-a8eb-ab520ded5adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3123033c-386f-4959-a181-f6b8d0aab707"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60477226-b759-463e-86fe-a12887a1ccb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7921ebe5-e2ed-43cf-b105-52f4347deccf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da84202-5635-4ea7-864d-ae6142c24777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74496ef0-322b-4cca-bdf1-2416aac7bf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bbe9b4-4b3d-4d98-8816-f54acbc67d27",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02c773fc-c834-4f8c-b4af-4046b12b8dba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b12b967-b6ba-4cba-91d4-54e7810c058a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b75f85e3-08d3-4283-9b26-1a9e6a802048"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff82cc3a-88ba-4739-9f18-740b074fe83e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "381292cb-4b1c-46d4-af7a-6a5c97df95d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b16a3e2-aedc-48b3-a718-d5e68313c6a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7e13afa-73fa-441e-b31f-2d5917b04146"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecd8476d-aa63-4c05-a429-1de274046b0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46251af9-7e17-4d8c-b228-9353b3c15fe0"
                }
              }
            ]
          },
          {
            "id": "b922c99f-1f53-45d6-9d42-97a1adb60de5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed7694b9-bbf1-43ac-b9ec-de92f01b2026",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "04ccbb4e-0c66-4e5d-acb9-bd7ea334311f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7d2b5d-4cd0-4e79-9f31-a83793945559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a3b8a56f-9b53-4d39-8f62-644e4aee2aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d444aef-be72-4e00-aefa-25257106760c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ffb19c-4b1f-40b8-b136-f0a90d2b5c86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6445173f-4b33-4b2e-aea7-2332101ba332",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d87761f-b332-43c6-9134-92a7304e5622",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abb669f6-ddef-43f1-8223-1ea66b86b8a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8162572-1f47-4de3-a233-3c67110c380a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "742fb7ff-357f-4709-b97c-1f6bb760c75e"
                    }
                  }
                ]
              },
              {
                "id": "17b00324-ad91-418a-82b2-c04cd8653474",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "180452ce-ebf4-4018-92f5-b3fb219985f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc31f81c-2b8c-4a79-ba37-da3bacb22bd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8adcd625-7cfe-4b62-ae57-fd92051bc42a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3129327-2f17-4636-b823-b577257f141e"
                    }
                  }
                ]
              },
              {
                "id": "d22a65f6-ab8b-43f6-a492-044e4049071a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c76a8f9-127c-4c58-8ec3-938bd9e5d3ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b7c292a-95ed-481e-9f4f-efe46b273f11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "312cbb33-c6fd-4bfa-a5f8-b7c4a01d6eac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8100d591-9c3e-4d50-8df4-820c479f622a"
                    }
                  }
                ]
              },
              {
                "id": "b4f3ad02-c875-4cbc-ad15-d752fdf9a9ad",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3952f549-a790-4ddc-b6b4-d03ee4e5e4a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1121efc-a026-4d47-b8ba-34ecda5844bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cacdd200-470a-4d19-a0f7-a4056895bb85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e4dcc81a-8dc7-4b04-970e-4b761ced7d20"
                    }
                  }
                ]
              },
              {
                "id": "e6fbd8cb-527c-401a-89a2-72dce4a4c54a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e336ae3-d7f6-4661-9680-d59a3ba7fc19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfe38bb7-05cf-4686-add9-274e1f866576"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8faa8365-8cf9-4fb5-ab67-91cb46302077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b1be5d77-040e-4e7b-bc70-0f4b9f0bce00"
                    }
                  }
                ]
              },
              {
                "id": "ab453063-75c2-4d16-af10-32e451f08b5d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da392bf8-75f4-4ccc-b33f-15fde388e6b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03e7201c-b4e2-4e12-9035-6805272fea35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d03f19cb-c913-48e8-b99b-b590ad20b7fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ea2125a-0c18-4e5e-8063-03b59ba4284a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49a9d4d3-24db-46f9-9bf1-6a26e7a5c7c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51b968a3-fb7b-47c2-9a5c-497d1fdecd69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2ab72b3-8c9b-458a-855b-f741042683d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "686857f4-bb95-4ce1-a9ea-09621ebf1d03"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f85c823-8c0f-4f00-8ae1-909098743b6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "42f33299-3d97-4f16-83fe-3a7d4a23b246"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9b1135e-2c2a-4415-9183-81160944abbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12a17eba-8896-4a8d-94c3-fa78c5d5fcd6"
            }
          }
        ]
      },
      {
        "id": "4bf6c530-81f3-43fc-9ab9-d3d06f8c399c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c9f0fcbd-7ea2-4cf2-bb05-137e1f327ddf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e2596ca-c3fd-4916-9a02-7958ee5df5c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93c076e4-3929-46bc-905d-a463eefe5da0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5860b01-a6ec-42b8-8fbb-245118da51f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6034155-0d33-41f2-a601-698d21f5d8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5ec185-6861-40b5-9e81-c1c6738e6843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56a6dd2-68ee-448f-b833-65cdc4eb6ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdd0184-f965-4dbd-b8df-d7ca8212bf42",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849c5ec6-8d9c-4671-9a6d-f1c0d821b6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b4a80-f35d-4cbb-95de-15d1ecbffa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef51c94-5a20-419e-bf82-1b94a3ba898b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece9ad40-9fee-4081-95e4-4140a337fc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563a38ba-2395-47ba-b5e0-cf581f8dd9a8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be72eb-9ead-484e-a6ee-f8b4f29889db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f7fafd-fce1-4e97-8096-abea051c0ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d354a3f7-33fb-40bb-aef3-9fca0ef86c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08467078-7960-4ca6-b69f-a5f3e563df1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c858a5e-a255-4ff3-818c-94197ec0f236",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9b79a1-3ffa-4aa7-9c7c-a070dd9a87a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a774a312-a96f-442c-b588-7c225a75ed33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b21222a-99b4-4fec-afa9-4ab1363b3809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de544fa2-6186-4d01-a12d-ee7e033f6e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb30b722-f3ac-46f9-a9fb-429d06f171bc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8bb38d-2d0d-4bf5-9f6f-c12da5268f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3590e3a5-8baf-4acf-b6ea-e0e62bc0aa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476c9f59-baac-4941-9aab-6fbe52596c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "782e72e7-2b0e-48e5-a8ad-5eb73a3e746d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d77e8ba-039d-49da-ab20-54b16acc6156",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e863b3-5b2e-4f9d-9b44-608591d39038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8604e0-8440-447b-92c5-a6fddaf2f8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccb06d3-e452-4670-8eaf-efc2c92bb3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73583a44-67af-455a-af8f-a7fbb59428f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174326b7-2709-49b2-b662-55481778d37e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198395f2-9a0b-4ca3-a116-95c4f7a6c69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07bb652-1d53-44c6-8841-dea2a986787d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144bcf3b-466f-4241-9d99-f536d0f60287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d65e4406-c676-4404-b5b5-98c2fad8ef45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c1aba1-7b44-4589-b118-8acf336e6665",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610f85eb-6ebd-4c7f-88d4-7f8e7ecaa27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65315fbf-c931-4cd9-9ad3-bcec9ce94b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebcb0b7-7f4c-4276-90aa-fd7a7a21a831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81f91321-19c9-4b1c-be3f-b8c9d5bf836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7266bedf-e989-467d-bf7a-581d0702105c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61dc736-36b3-4d5a-9b75-c812c4740a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fc47e5-fb2b-4d6d-8366-e2a802d2539c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc45b9c1-4317-4c02-be87-2ea298a781f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05259e2-0f61-41a4-89f7-64fc2f609510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37479d12-0ef9-4b91-a34e-1bcdbc2f10be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8ab7cb-e932-44f6-9ad4-681a54174896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653d6b66-a57c-41c9-85d7-6742a3278f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ff036-34e1-4ff9-aff7-44136ae0aa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96562495-1541-4f62-a6b7-2b9bf3865fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e213e62d-0dc3-4997-95c3-2a7903e58a86",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb35d4cf-0769-494a-a760-d783efbfefff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c49703b-312e-473c-b0ca-e09a43daa9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1bd3eb-9253-4ab6-936b-084ba5b562e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbd6bdf-dae9-466d-96d6-1b69854b5397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbb4a6e-00d0-4b5f-8694-9e16f976d91c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c127e5fb-c0d9-4c52-b237-e389fa851a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d061e9-f9d7-45da-9b1a-c783cef441d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30345ff1-ab2c-460b-ab8a-9342a4ecbb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31cb7d85-d394-48de-8651-0ca47e649c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3007bbd-8db4-442a-800a-442646abe6f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd211834-740a-4e35-85b9-2a7f3c663683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4636d940-9a6f-4deb-b29d-479757b5a3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa779454-7251-4d51-bd77-3b0e397b2f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aefc2a66-ebd5-495b-80f2-659e850995c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b59f48d-53ab-484d-977a-d46e5353be9a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6b5c02-59cd-44b8-91b5-0bb22a6ceb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf54cb4-3c43-4e21-9581-85a91131c8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66fe7dd-dd7f-4361-a9ff-29e6752472f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb636ba-eacc-49ab-8d3a-4bb97cb09c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44b54e1-385d-40b6-8896-af6cd513209e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e57ee7-5451-433d-b3b8-61b04f665a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fee58af-8fdc-4abf-8c3a-f6ae4ae2af20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb104b-628e-40ce-a169-1e07a716809f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8f0fc9-7d36-40ba-b9a2-e42174b913b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e401656-f751-4087-9f14-04420e403d42",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26444aa0-86c5-4376-8f5a-13912e0e2816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cf12a2-b32e-4d76-9c3f-f627854a4f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0287bdb9-ecad-4676-bee7-c18e2d425f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdbedb5-d833-4920-b2fd-2acd13beb5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06eec28-ada5-446f-a88e-a7f271ccb80e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5eb14f-7cb7-4086-b1a4-a47f43edd674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c96571-2efc-48f0-acec-73c338951f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d00ea7f-0409-4ed7-abb5-ee62b018a971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6156c477-f6bf-4063-a737-bff64363105e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60953afb-b131-4cd5-b07c-f37949cabf87",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e30de5a-431b-450d-bffb-e019cffe4848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23d3f91-d968-42d0-afe3-555466435123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae98c854-9a6b-4de3-ac40-a838ed2d78de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f59e817-4514-4b21-872b-b6cda3f3a778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1946dce6-b900-43e9-9cd1-f7daf7cee117",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af7436b-2c1c-4aa5-b377-aec79cd1b679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42d3db8-a23b-4942-9def-989d70d2b3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8968aaa3-e53a-435d-a192-ec6c37b4f27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55de8cc9-9308-4c59-9504-7192dbf2cdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cc46a2-d04f-42ea-a483-3d0ce9c1e2c6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55e6551-2145-4a0e-8993-1ad183e5aba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd4633a-9273-4206-bfc7-296a31e3c059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08136a76-c748-42e8-a974-3c54ae79db21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6358fb8-e853-425f-a984-1b26446d0dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ee748-1b2f-40b0-b906-0afbf51dbcbb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc4777a-f48b-499b-abb3-ec69e5b9da7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fe63a3-2863-48b5-819c-2d2d6eae7c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e43b495-8cdd-446a-8335-d56e54d088ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01f9335-9d25-4b76-87d9-24c3f0fce734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c27a9fe-ae0e-477e-a6a0-165a2210b016",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bab043-9d34-43dd-8e9f-ec5b49294062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483fb5fb-1756-476b-b61d-3b335a2153fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a4ec7c-45b6-4f92-945c-6b6a41a9b901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d11d1907-620e-49e8-8c6a-6e7d8b74d57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a905cf-a8fb-42d4-9831-9d8a2829c310",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d23f46-edff-49e3-aef0-71fdb0775948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23941782-b5d1-4bf5-8d82-e001ab01f8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c97e89e-9508-46ef-b2eb-c47dedba73eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7ac09c-6b11-45e1-b429-bdd7b71e3403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c239bdf3-f8d0-43ca-a467-e3a9463af931",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ba9e5-0f2f-49ec-b7b4-8f79c2123b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466297aa-15e2-4a2a-bb39-c7a4927c3a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f122e7ac-2894-4efb-8f36-3173a810004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4519e171-22b4-4a06-b59e-ab337ebcfb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9197a6ca-9c0d-4061-8dff-fa626e143434",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9306f4-41d1-4cf7-ba87-fd38a235d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d64c53-e906-4aec-8512-086a0e0812a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d477cd3c-61e4-451f-bbe9-7d5924a4f292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f63e4f50-98ae-49fb-b183-2e38245d78a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594c379b-e5de-4edb-b6d3-b5f68432100c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53edabf8-f54b-433d-9d99-9a834057a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7534ef-7bfc-43d9-bb7b-fe6f31e601d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dbb407-9f88-4caa-8234-4db6dd184f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff03d60b-2091-499e-a3fd-ca3ee90cf864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d832d7e-c76d-40f5-9a97-24438319d9e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620372eb-7e97-4aaf-a792-362a1adcc266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745c15cd-07d1-498f-87a2-bcb3a7057a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f1642c-6c1a-4f8d-bc48-31234e441760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f3ce8f-61b3-489d-aae6-4d3867cb02cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78836f92-2927-4244-b9fb-bfdb032eb382",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b762ffd-99c8-4b00-ab00-559ed334c54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdd281c-b563-4c25-b6e9-53743eebf225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81faea5f-e556-47d1-a5e4-c0a4de91ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e63497-43a3-4a21-93fe-3577a66bbcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09719a19-e1f4-4e29-9220-79568898cda8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d0a6dc-7508-4335-9b13-bbba909ff602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac8126e-228c-44b9-b51c-e971712a0a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362071b2-b457-4205-9647-de953b301618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c6e7f8-ad8c-4c33-813f-48e13d49d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f9d8eb-e677-4ab8-b917-a0229d1afaa6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb5e06-5999-4bd8-aebf-bdc0e994f683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5d65a6-88cb-4f63-a1c8-e114652ea9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa24dbc-3655-4ca4-8bd9-cb12494edc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aafc24d-f9f0-4176-bd71-9cdf632568ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3102c226-e70e-4830-96b9-c465acc773dc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f2d30d-8cb0-46e4-805b-713ac638e050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6629db3-4589-4211-ac97-9ca1e9f23682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199ca26d-e085-455d-9777-19c6e791f606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d771da-c154-4770-b100-b90bd30764af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d6c558-42f7-4f3b-b7c6-64279103e4bd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d59d87-d18c-4468-a3e8-84da8c564d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1876dce9-8c15-4213-a9ee-868146fd837b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ac49ff-e72e-42e4-8460-0873b1d198c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a833b62-92d3-4ab3-92ce-feda24d37899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db166a7-fb4e-42c2-9852-40c8eeaaf6e6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b043665-4b16-48e7-98fe-d3c5c111acd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b512ebbe-afcd-40b4-b466-805da5a3ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d006043d-8d6a-4128-90d6-921c9aeeae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4aed6e8-ac0b-449b-b9a6-eebf9ffe754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7077ba40-5dbb-4cc8-b29b-d42ef02f4084",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e56ab39-30fb-412b-a689-2f477f296494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136a7867-1080-4584-a686-75583498544b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0dea64-1150-4946-b0e2-b655f83482cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e22408-9166-4493-ade3-e4ecb637ba94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d95e20-8b21-46b7-af4e-9bcfe2b19f16",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f8f90-3e05-4f9a-a89b-f6ba496b5f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ad0308-6792-4187-9a36-4572953970f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab8c97d-8d0a-4d29-83ab-2b0936a1823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "727e316c-ce46-4b99-8028-a3c5c8aa8f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1535514-49b3-4485-9524-95fec7cccbbc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d10de5-027f-4e90-995a-4b40a6ed840a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55c2872-f5f4-4555-9622-3ad4b05ded56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b7234-1690-4290-94cc-af4c08be6aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2ecaf9-2e65-458e-bcc5-d429adda4c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5cd54d-b59d-4343-83d8-8df80d9f8636",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb252cd3-2f0d-47eb-b0ba-d6bc70bc5e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71ae67b-40bc-4beb-b607-b38276a7e586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5ffd82-fc13-4f1e-986c-e44db28f38e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ba56fd-77b9-4f5d-ad5c-91b68917792f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db9c400b-80f2-47eb-82c2-fe21919255d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5dfcdd19-93d2-487d-96a5-51981f792214",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a24276-e976-409d-b64c-1c5386bea169",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4f24dd-b8d3-4ffa-b562-c2b7d8741014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250486f5-332e-4596-be15-6a85ca8e496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c970b7c-c1f1-4450-8d72-4a2ef803427e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bdddbfc-c3ea-442c-bd74-12015e57e174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "961a3ba9-9de9-4682-b866-31a3fa01a948"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2576b431-ecf7-4fe8-a089-d0f79c61860f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7e5d8b-1a9d-4915-8cec-b71d49073e2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9306ed26-2b84-4ba6-aff7-094faf42ca3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0fe509b0-989a-4349-b6c0-80b99b80781f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf9c704-d703-4234-8ee6-3a3cc5633623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec68c644-db32-46bb-b2e1-d12b44025938"
            }
          }
        ]
      },
      {
        "id": "99677296-fe2b-4e03-9616-75f1aa45212e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "934797b6-32a5-4bfb-8777-8fdc0e7bc81a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83b798ba-59aa-4c36-99a1-e1315ad3305f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19cd2b02-c97d-49a5-a18a-919072d2e679",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f5521-f606-45ff-8395-a9ad95d6bc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f817d75-13e6-4a01-8a50-2c3259d47fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093cb5f-b9cf-41b0-ad58-4daa8c45b74e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9b0e3d-2347-4378-9219-315ae47b0172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7949bd-0fc0-407b-93d6-00ca6717bb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418f7e7-0f28-43d8-a132-4a7c4aa25bd5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8aaa45-6c1f-4559-9ac0-20ca1842e2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f216817-2b12-459c-92bf-d49d8abf5cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec03a7b4-ab53-4257-b11a-db9b9819ac97",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb18e647-829f-4652-a0e1-177a01aa050f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4ebd0b-f7cf-424a-be04-fe511f7bf1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3add3720-9cfc-4bc9-a240-f2ef9ffa3250",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555c8585-ae39-484a-807d-ad28b53c5112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3353bc1-4139-4c2f-bfd3-11de5d75e36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abb5e61-58cc-4ff8-9216-5196949f6a29",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c31234c-0006-43fc-8d56-c02ebe6ab926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57849f3b-8186-4ec6-b38c-850f85539c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec21a6-b30a-4b5a-85ed-6d14496442ca",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf89061-f983-41de-96c4-01bb88a3af30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113c1f30-a426-423f-a207-868e155ff434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4edb94-68a6-45e4-bbf0-58ba808bc6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73107ba-8807-4bef-99c4-b7035e777bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e874c859-cdfb-4f87-aff7-889fc9608f81",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6ce03c-e158-45da-b89b-ef7f8ebd1cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1878bbf3-9ebb-47ff-8217-0db8e705d531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8856435-f287-43e8-b24a-4048e1e5c2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113606ba-e3f3-4d86-a013-38b14be3ec24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50a4975-4313-4ae3-903c-c07ef6278509",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b3b17c-3242-4a57-bf3b-33ca89d65a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f755ac-2b80-42a5-a18a-9c4200210a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da30cd45-59de-410d-a771-e07715d6489d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b60631f-0e05-476f-a6c8-0a0e9edb17ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89700aa1-cb62-44fb-8f3f-da2848e0af14",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ad15a8-f729-47b8-98d1-150cbd0fa19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367a8136-b768-4e3f-a2d5-bbc8b8d34250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eae1304-1855-4c5e-88ab-3db06c45641b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e787f2-abe2-42ab-b75b-8d0e57147e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb0dfa7-973f-4acc-8903-f2d444a77f98",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c51103-2eed-49df-b4e2-244dbffbae92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49acd68c-e831-437d-96d9-ad209c9cc8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8874a9e-b376-47a1-b99a-92fff6348a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99713f7-f192-40a0-9f49-8891cda68c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f477847b-335a-4001-873b-f05154d87d15",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcb8350-8524-4489-a48a-41a70833efdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c430b1-1f82-42c5-a18e-a1beac6f1f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff55bf-6052-4e53-95d1-e8b581df66bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f9c543-fe35-41c2-b619-ad86389e872d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977041ef-2a25-4189-837d-7366c495598a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1ad611-9075-4450-a546-8624cb6dfc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656b489a-74c8-4723-915f-e9b66b7b4879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d158a7-4799-4dc4-a94d-4a724586aa6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b8f859-a7b9-4e60-ad93-01d3299a4299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9906c5-5ae3-40ef-a45a-cf890f04f8f0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8f37f9-327e-4aa4-8ea1-6e9b7d420e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673e1952-1107-4df2-9094-aeef027a83f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de47e84c-8330-4a86-ae08-c6ea32a8f9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef98f385-fd51-4ea2-a9a1-e40317185c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329da2e-3613-4fdf-88cb-c1b9cf3d09de",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776d3939-3419-4dcd-81c2-dbea2d3af91e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0633731-3210-4d20-bb7a-9da3561575cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b142d3b8-6c96-4d95-93e4-b3eba6580713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c6f3fd-90c5-446a-9772-9b8b99fda236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bc411a-2298-49b8-a94e-5c9771db61ad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef6a27a-600f-4d06-9077-fcd37af0a763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a76de4-c70f-474e-a21a-e0e101d0d082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06285c10-315a-4499-bf4e-dbd566841227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5097d1b0-53ed-4cd9-b844-c1498e9a791a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b288d7-fa01-4edd-864a-c5bfd16ae54b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f14f53e-77a9-428e-a1b0-9c0b0c81f4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d1e478-c5e7-4f26-89bd-0bf7284d41fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bd973c-1462-41c2-b0d7-de3f1ff6527d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b150c0-a52c-4843-851e-cc57be031259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e113f0f-056a-4880-beb2-486599e0e289",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4184bec5-ceae-4e4e-80e9-63c0f712b731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27213f61-ad13-47b2-848b-2e3a8f9021b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54961f1-1a4c-4d04-814c-8874c44c1738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb82aaf-79fe-4675-86c5-de9dc5b988cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe45b42e-15ac-4a50-a94d-51dd504dfe7f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb20fd3-7755-4760-9162-e853ee4b46ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af76e08-d0d5-44f5-a671-d972b1d6ebfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf61194-7229-4879-a44f-da2f34ff6f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca12630-13ee-4856-acd1-9e595a2c56a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e572c8a3-aa5f-4aac-80f1-f009f0df0599",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9456fa8c-86b2-4053-80fc-61a5d581e0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eedb926-25ea-4d8a-ac5f-960a165e7e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddafd299-b803-435c-ae89-4de395a39c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c34855-3c4f-4026-ad69-da6355242524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e33755-06fe-4f38-9877-07fa73241f5c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac6dd49-f8be-4a3e-9989-71570242b973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11da976-6e66-4300-b49b-4cf067874698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2dc52-ccf8-4720-9be5-d53465b7222b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fde91e-0ae1-4a30-bf06-5307f5a7fa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73a69ba-654e-401b-8d4c-67f2b9043c76",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6b8641-bc26-45e2-9ec5-fc6386cca360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716c397b-d2a5-4357-b1f0-9e4c570bf718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56521d39-6a55-41e6-b861-c9310a65ff2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452da2f9-a4e9-4b21-ad22-b4de4ed20c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75042a1-ee58-46a9-a805-41c5f3497762",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a33ab12-3671-4d4b-8699-17bdbcbf5f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502ff1b7-635f-4e95-ac53-9c750c714d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dcd815-6594-418a-aa90-3bb6ee383b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d378a16c-b1d9-49e5-97bf-58bbbfa0b48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5476f953-6f49-41c7-87ac-bc891f4abe99",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4d3e45-8e55-4321-986d-b1d4094aa6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ac2126-0b88-4854-95a5-fe97db6a35dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8737ea3-d345-4cf0-b903-da12af177651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532102f3-93dd-4d40-9fb2-4d2324f3fd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34d09bc-58bf-4290-a15d-b7977d26dd97",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b052bd-8495-4e64-941c-e14313ba551a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273040c8-5142-4f46-8116-7b74ac837ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21fd1d1-c6f3-4af5-9f0a-8055a397372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e875290-0d4e-49b0-a77c-24f5d1973672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920dc3d8-f7bd-4ab7-b4cc-0d717a337d5f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00decf6c-d3bc-4929-be90-842281cd0d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c21846d-9a8f-4cac-8a7c-1a59743dbf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ebcaab-3935-4d71-95ed-6ec1592cee35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa8e503-0c80-4a51-82c5-7b2effb57810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca2d0f5-4db8-40d2-b228-ad96c745a7c8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9cf8c3-3e2f-4ac8-bbe8-c7d85023724c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af661c98-7ca4-49c3-b63e-d2a84bdb9a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada24237-5cf6-4c72-8b06-650c10194088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de92eac-8abd-4a36-b422-153fc93da6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428cb9ec-4a7c-48e2-b2b1-d6a46a3335e8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b142ceb-f570-45e9-8505-0632159b5e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a60d692-3ceb-4593-89ff-aea44d417077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96552b9-fc34-4b57-b6f6-ff5d3c6ad8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cec16e-c960-43bd-9c28-07477ded6697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a86b82-7223-4d0b-bc96-bb6badf3579c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7732abbb-3fd3-41d8-b47c-ac78c14b63d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e809f3a8-2505-42a2-9cd2-79173a5d3467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528d6b7f-df6e-45ae-928c-144741e19d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22aae8bf-9696-4100-9059-6bb2e6c3ad9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e43fc3-ec1f-42ea-bb55-5f60a29e8084",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b614ba3-8545-4e95-b26f-baa57b09c34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c584fd-b47a-4580-b7da-6f31764efece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c843de73-8067-4cfa-8574-8aefc91c3847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5b5ff4-23a6-4b40-8de9-535e13407dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a21888b-4339-4a5d-b349-5b2d7693343c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c43b1-e243-4ba6-be41-02d4c178f52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78bc4aa-ccce-4424-8d97-f30d830d1c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3572388-6921-4ddc-b2ff-7e866b99affc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3db250-9cfd-4cd5-b162-91bce69f36b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfacb3aa-d514-4735-9d6e-17e92a440c7a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f810453e-efb9-49f1-b784-0ef37cad4aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967ef3ef-0ff8-49e5-9e2e-5fb4bb6ab0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f6365-abfa-4620-8f31-2350ee0a1688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30255694-14f0-44f5-8acd-f5deefb0d032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b8c07a-b73e-4bf9-9dba-a29d9622148f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe59c09f-7571-4770-b008-4e277be6b186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26e237e-2e25-4df0-a859-3c5ccedfaaee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048bbca0-560b-4126-8937-c1b050ae954c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1391b803-b0f3-46f2-9ee5-fc03e6243129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7e5007-2683-43bd-b4c6-8783669751ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d553baf6-5616-4b1d-8a3f-0814e4de3f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057d19a0-0882-450c-a466-e2625d4ab4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dd0686-99b4-484b-8789-bfd530ebee0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354c72c7-0a6c-44d0-abfb-5efec485d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3e689d-38a8-4d9b-8c44-3b5f75497175",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5390dc7-e3a8-40d1-b877-6c93d34a5060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e03c32-fb17-4f37-a5c9-1493724ccc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f1944e-1ecb-41bc-b543-554bc8b6ae9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d3e598-fe4b-467c-bad8-4e5911f167a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1383cbc-50cc-4b10-93b2-99592b8b52f1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb0564b-4775-4c71-a934-7dbf1f2c95e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b8e460-e5fa-4e8a-916f-36cbfbb197eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396dd0b9-c7e1-475e-9486-5011b997f1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2561e443-a88f-42b2-9efa-977a80c962f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b29101-cc75-4e39-8d64-eeaffe335870",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf4538a-b725-4f01-aa60-3afb1eacd1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d43fdd-ad1e-4317-8419-7e5d30906837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92129df-7372-4f27-9240-53886ac633d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2449ad-afa4-4322-9103-9f8e16e68f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc65c20-90e9-41f2-b57d-7700113ad9af",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029104af-4f37-44db-ab9d-ea3c6f2192bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61195d2-af33-462a-a3a6-24121df5330c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6791fecc-e63d-4def-9408-7099c55e7eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3b6a31-8423-431b-9bf8-a9f04755d1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1ee9f2-633a-4ce7-ab00-dd228ef7ed8b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f9bb57-b2e2-46b8-98a3-71bb50fa42b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46ac7fb-2bb3-4c18-962c-b1dc1cdbf5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fbe72e-fc83-44a9-9bfa-13d7e03dfbd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57959305-705d-4285-9006-673ae61f99e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eb265b-2962-4236-9bc4-3384ddbe84b8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78363e86-ad65-4d83-8af6-ea3205492ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2161a3a-89eb-4d6f-a640-23071245fc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e87fb8a-2647-4269-a988-0e42515fbc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7cc7ae-54d0-4012-84ae-a9aa519637e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d736b803-9dfc-4ba8-a398-d8c671cca3e6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4d2df7-d58f-4789-90bc-df01743004b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d63d6a0-075e-424a-b1f7-8dd2d1a769ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739853fe-5891-44c2-9e73-de2ebfe21945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac4160e-4106-4fc8-aa0b-5456bb0f0136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6847f1f7-f9d1-4b75-af56-ae09ab4b6e50",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad330ab-34a9-4007-be62-24c68f081f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ede6b6-57fc-405e-b97f-eb2396a5cc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e653ade8-0f00-4d08-aff7-f51d8739b5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d067100-fc93-4ce0-9df8-eb3dbb10eb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caeea54-08c2-4d20-b29b-bf8f403a5337",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432ae78d-3fe9-4be6-a362-aa4a8982f231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202aeecb-b724-4376-ba99-c823d4ba2caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc38675a-511c-4653-9657-2eb5e5ce8121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daad63f-8f0d-4e6f-8536-6c88174ff5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef8bb92-cd0d-4345-a393-2efdd841ca1a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9113459-2259-425a-bf6e-8d7760b6f518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f17f98-e446-457d-bb04-76109c968327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd38f9c3-d674-494e-ada5-9d53ffdda248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355d2833-ad21-4420-a9ae-0297483f5302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbcde8f-f325-4264-85b9-9210289b1d0a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052c3b6d-0808-4dd6-b99d-862796f46b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c2c223-14d6-4e27-bc2e-6509e9bca4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd89e283-d431-41da-b755-2bdc9b68fed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80486fc-3a2f-4164-9ee3-dd25b4aaf5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b3a8e8-7c52-4447-ba59-975d3238970c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aad62c-9858-4083-9787-a1449dc3783d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd83ca2-fa84-48f0-b3ed-74085d76e22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a8ce77-1959-4ae7-bb48-8831e36e22d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b75c724-2720-4044-9fa6-80982c75a27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2589b7c-502b-4f6d-9cdb-7fe06fb83378",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c8200-c015-418b-8803-3444605f7e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c4e8c9-f9f6-4cd4-a5f1-ea9ed3f3e4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7aacd3-7817-4aa6-b5bd-ecfafd3cec2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ecf16a-0648-4c05-82ca-bbfedc64984e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103f7ed6-0f77-4e72-9d67-22336edbc643",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab3c44a-f69a-44b2-9a89-293a21c3960b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6924ee2c-bf41-44c6-b076-8179f56ce85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f799d4-2e7c-4908-97d3-70af373e909c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34863f73-da54-4584-9432-50aedc777c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8797184-1960-4d7c-97a6-cb8ed42bca50",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350bdf90-f9f7-4012-bb96-8efe5329ee4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7358e9-498e-41a0-9aa0-40603dd48e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf22bfb1-87f5-44b5-ad3b-a34a8f91b12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6830ca3-616d-468e-b8cb-948593b15a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96ad2d6-fdbf-4a2f-8c40-d010ff1cadde",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44346835-7619-4fe4-ae1c-bfc84f220676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766e8f19-1691-4a2b-8159-c02be0b3dad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119e3a9d-21f4-4b95-87f2-a95ec87b8200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8291567-bb22-4506-8e76-8d1c1e6d86f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305d6905-d46b-41d2-9742-896a82620909",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eee37a-930f-4efb-b229-fb81c94b4544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eeba226-cfbe-486c-b6de-0cfc109a3a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30f49b2-dc09-4d26-91b9-37f926853dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f84c9a-6871-43d6-af0b-bc47164baea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c20629-d5d9-416a-aae6-4f706a40b99c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f734e06-dc99-4dd8-a389-5df8d87273ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f96e10-aa60-470a-8927-59d9965db1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182abdd5-95bd-4cc5-a2e4-4d30f021039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a755436e-6a1c-421b-a897-c5ccf1f3ff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0a5578-dc71-4c55-8e12-badf1f80baff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6191fa11-f240-4beb-a2dd-9d158233cef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725ed280-0b31-43aa-a691-81ad5a429249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d25e2a-7c26-4457-9a7e-21203d977477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb43886-dcef-4e4f-89b0-4add083a4ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b9361d-7b33-4d64-843e-00df0a8010f3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82426ba5-6aa6-4e6f-8854-c84ac9e42c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1638fcd3-0823-4d6c-80a5-872f4c17836e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7d7d6-820a-49f6-a269-2d7a988f3845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7e5d3c-157b-4e95-b78f-905c0cd46bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a4bbc-d6bb-413b-a5df-3dcbefb6a92b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e57a26a-8072-4d51-9cad-135794f2340c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd596eb-ca21-4224-8d4e-f97425238b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e702c3f-b3b1-4941-8438-9ddcdcbfa082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1fa6cc-2b0e-4c59-a545-994b86088c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e23483a-60e1-4b00-9414-7453e3560e8a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabeff81-ecbb-4dae-ac7b-94dae4587fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cf94ef-583d-476c-b79d-601cd99b9a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c7d559-07c6-48be-a932-e5b22ed5340f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa3b04a-9253-4d25-be74-8bba335cfaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199e14e7-c88a-4837-8272-57d68a5e820f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf68f9b-b6c3-4f4e-be0f-06d390dd64dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d194c710-5200-4533-8e61-607678d94934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812037cf-ac61-40a0-9ca3-a50ccb7734bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1405cffc-670f-48c4-ac6a-ca874e0dc4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668aedd8-3d04-43f9-8baa-c471d4f79d9a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd31c30e-e4ab-4a2d-a6ff-79f61568f4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af2d6cb-8340-4377-a611-dee482c69e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e466ae10-5c3a-4a3c-b985-6c779bad6783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6770f3a1-c076-4dbd-b9ba-94d7693e13c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e236ee-4714-41ad-bdfd-106822e51b7d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d865db3-853a-42f9-9842-a571eeb38769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9b22a9-c97b-4baa-915f-5892f11ba5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25fbed3-53b6-455b-be8f-e167b8296407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bff16fc-b0b5-4172-b349-102722c05454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6352c3d9-5b5e-4d91-a2c3-ab07216246d3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db8693f-11ca-4bd8-91e8-3346b5baae47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd70c72d-010c-43b9-8a1c-36cf070eecde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1163e541-e98b-4a86-befa-b545106ac009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d5b52d-2dac-45ff-a488-1983d1fd64df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6505843-48c0-4637-84e4-64287592ed60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a9f41d-b3e5-4557-9609-3dea0206eef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa750217-cb54-40fc-8f0e-9a5ff0a3de05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535180ba-845e-4a44-84c3-cc697a39189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6553ba87-dee4-4e30-b6de-a562977cefdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85733ba-ca8a-4f95-a21a-263d0296ab93",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32da6d6-1e25-4a38-ae25-9b5290ae760e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725de651-0cc1-497b-8fa7-7e8bcd412b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c291ccb5-184b-45ca-acd8-47dd3c7ccf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9b77e6-99af-46ff-b3c7-5606656e0852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434c16b2-2726-49a7-ac22-092f9c824603",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1ebd3e-e838-47e9-855f-e997929f83e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bd7f2d-85e6-4836-b7e0-5f8b30c89985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c9e83-87da-451a-b195-07effc568752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587e5ebd-fcd9-4e78-abb4-441fd1fd4cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6d66d3-efcc-4426-a747-38a00f6a0947",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40996323-ecca-4d74-930d-2bd0e54ca79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3dc987-3239-4431-8768-17e5426a604d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9dd6db-de9e-490d-aaf9-86c66b9ed539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3673a9d6-ea3b-467f-8390-7f843c8c3803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065209e-07aa-463e-9475-600566c3fbf1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b563ce62-6463-4f2a-bf57-16fdcc0010e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef03b330-93c2-4554-9ca7-6e8ab1eeed79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afec2fad-3251-449f-9df5-f0a4eea7cf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b166d323-6ee5-4c77-a5ff-9465c519b812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425deb3c-b79e-41f5-a2d0-6a9026cea284",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a5cd5-7e80-4d2f-bf07-ea5a43358c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0638b242-1160-40b1-a57f-a77c0fbcd419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00411ddf-99cd-4993-b848-a08f6536ec7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725c59f4-a761-4c2a-a016-1d9be2fb2fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d63078c-366d-42d4-897a-6b754bb87dc0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b40918-19a5-4d0e-8d25-a5202e644f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b5e7de-efc3-414e-b955-1c19ff4808a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746df846-fce1-4e3b-b5b9-9dab0aa98cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1737e0-6052-498b-a836-b5a41e4ea330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2125d140-1dd5-4dc0-8914-2f29738d1e1e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2226c68-cf91-4df7-8959-bb02ef2fcc6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6915ff-ce7a-4e9a-9d61-8a2ce3e9663a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5619b966-e12d-4c78-82a1-b044dd245aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e547dd-6cc4-465c-a225-060f406a388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc632b9e-f12b-49ec-9825-f5a13f9402a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce300f0-f635-4912-8970-7b9f5f9fb19a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f7325b2-97f6-46f3-be0e-a16f6bd551cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eecfcc-fb93-418b-99f2-69aff1df069a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72df513c-7407-4c01-830e-16251dd6d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fb65f6-c7e5-4f54-b11b-0e4ab9a90e24",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d5ebf-fd1f-416d-8734-126302025f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5838b33e-fc6d-4858-aaff-6707dd17886a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1fb2a9-f759-4aeb-b9a8-e5f0162a6502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61250e63-be79-4cfe-bd33-37f0c0f2c5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a38ff28-0f2d-4465-8f45-fd95e3979a32",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafaa740-9a67-41d2-b055-87caef35912f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc2d0c4c-ea07-4c85-86e3-7b3d3dcd721e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631970be-1993-489e-a995-23b66743cd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd38eab7-b4d8-462c-9a1c-588652b43652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5556fc9e-2a7a-4663-a898-b1a51b97ece8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f63d2e-97e7-48c3-91a6-bed9f7856f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6343cf4-314c-443b-aa55-31db856365fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a87efa-0ef4-49eb-9b9f-aab8d4c15315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdd2b16-2bbd-454e-9f12-caaf2050416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ace733a-75b4-4005-a13c-cc0ed9a2d689",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e70b45d-c74d-4988-b98a-d71295d05cb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e23d7a3-39f0-4b77-9f37-8edcc6f955c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe304c45-591d-4b00-9880-e05ee230b0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0747210c-8941-4fd4-9e21-c73c398e3e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e27836-2dbd-47d1-92aa-174802f3b2c3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091391e7-6e4f-4bdb-a3cc-d94ef7dff035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296395e1-5acd-4363-a0bc-565ba7d5e805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447946c-2045-4988-847b-4b3a33307ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5dc1525-a363-4bd0-a8ab-2baab920933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c79cc0-aa1b-4d2b-8756-9e93ae255dc3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7d3067-754d-47e1-a6d0-badc29622f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc2145e-1f4f-4acb-a937-1e7b4fabd8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbc755f-711c-4ad7-8c66-6ed3baee8e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c11843e-57fe-4a8a-9830-e65ed235caf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c447b4d0-3bcb-4713-8cad-672d534852e7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d0e2de-8624-4548-8ada-563b3450ff89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b66c4228-63a5-4cec-af58-5327595715f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11ff882-bbd7-4b47-9259-2f09e138cd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3765c4f-7f44-460d-8b93-02ef33a4220a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd73544-c1f8-47d0-8f05-45c6f4668e5b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3cb646-4397-465c-8b4a-a213dc085ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9bb2a7-b3d6-490a-ad8d-2553cc9f89c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8752f788-ff51-44bc-8857-7cb6cbbaf889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3b3f42-b053-4b9c-83b9-6c52bcc89d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff92d270-34eb-4ea6-a57a-b0694bd75033",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe41770-40c9-41ea-978d-544e97ca04d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0714d3a-a49c-4106-b60f-69e92e8fe73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf8bd25-7a72-401a-9427-2a6735ff6c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ac0a9f-4740-4aaa-883f-ea5ae8775524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10257323-ffa8-4c6d-96fc-0785039af2b8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f43aa1-78ea-4ee1-93e4-25b26b0a9342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772c3e87-46f6-4193-aa97-657474434b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b39b28-78ea-496c-be50-f01da2b31f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468bb339-d4af-4682-b9f9-7b862cbf6591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b091687-956c-4dd4-ba22-00a8852a6537",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dc5afb-824d-4405-9642-49b233b54752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0134ba-3136-439a-a240-3868d11cbf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b9dcf6-d38f-41eb-8d80-6e2dba74fc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7570cf26-530e-495b-92d1-dbf44b913302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704533bb-1339-4253-9590-c49857a280d1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8802a180-08b2-4a64-9bb6-96482c6f7a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5b7ed8-030e-4a7e-a110-0d3b6aa095a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9897517-e442-4aaf-a645-05e541294106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98e85f6-e4b5-4af3-b22f-fff8088e7b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77c3a2d-7110-4394-a25b-153f189454f8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c4dfaa-2c95-4cba-952e-5cb284f17ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8ac46e-5183-4d09-8b5a-a843b5f23054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e7d539-4305-4ffa-975f-4225d8916e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4c01dd-2aa5-40e3-b95d-bb683cc95736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c05c89-5dfe-4f6a-85e6-cb523cf87c68",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb83e41-0dd3-4aa3-9719-f3c42018652d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d694c33f-a62f-4969-b47d-39b21e268b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fc2e3a-64d9-4915-a5b0-59a772ed3c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ae29e2-9564-4d4d-b2b2-09ce39ec8def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0ad897-fa17-4996-b2d0-dfd26868ed8a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361e64d7-78ef-47cb-ab7d-720e63918c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2461e459-1558-472c-a870-7654c4112660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477e201a-9c63-4f1d-bbec-be5043218e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dbfa0a-8b97-4f52-bb13-5880c0c85d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d2522d-45d3-46d7-989d-191770429b1b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc71e43-445c-4370-a913-214e3e7bf898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631a2a6e-94d9-46ea-b5d3-3e9ba149b7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d2c272-0c50-4b47-862b-dc8c7231dc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d85e5c2-ca46-4713-abf0-ace8ab4dc58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe95bca-cca7-4612-9e3e-79fbfebb6fa0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c76c10c-215d-4e68-bdd0-949fb9aaa324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ae8668-6770-477b-8694-3c6a1e77c0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783f4bcd-f72d-4d3e-8a77-b6ff78f6196f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38422621-3cb9-4852-8f82-5d78e646be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9360d5e5-5222-43ef-963d-e99f37e28c5a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f8bd52-c415-4d53-8b35-f7f19a9b7c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee13a8a-0e65-4c0a-a689-b04f8a545621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39497679-38aa-4d75-80fb-0c12ee57a775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0e7bbe-4880-42f4-b6d5-985493721b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dc00ff-1242-4878-94c1-1d37e7580aa7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd8cc37-3a56-4c06-87cb-c17b28eb7ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11600cc-d1a0-4081-b107-199fd8d28340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967a784-1269-433d-a71d-2940c0613859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3892d37a-6e4e-46a4-a5fa-d4238801c1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fe12c9-7188-4748-b326-927e98841390",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadb9f90-578d-4139-89d4-a0859e16987b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a783ff9-3ba8-480e-91a6-9ad022efa6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e3af99-2f8c-4815-999e-ed907e019cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5478f0d2-fdeb-4e60-aa90-12ee2682c198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b70b5f-87bd-4c1c-8741-668886401e22",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12be53c7-fb9d-4066-a3bc-3831cc533fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4780ca61-712c-4766-8c47-ac3700d402d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255bd0f0-ff43-4fe8-8817-1c54a7af03a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6691155-b2a2-4680-a1fe-f28bbe06c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265feff7-8cd2-4c43-902d-9b2a44edca5a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be97ab9-8a81-4b2b-b062-f912b87216b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cae653-5bac-45e2-a503-000621703427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e04106c-a771-4d4a-ae43-7cea562f653f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6263d629-46f5-49d2-811f-df3ca2518b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f63e1f-48d1-4856-a29f-7537acf62124",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f999cfda-0dce-4570-a474-f46afa48755e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331f4b4f-0e5f-45a6-ae48-26fe03f62edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4006cd4-4d60-4b32-9e85-81916458445f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30ff543-1d1a-4a0e-80f6-b117c5b98990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5ba577-0340-4597-a085-fb343ce6a786",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f429f32-a9e5-4d8c-ae1a-60faa7726b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58339e20-8295-4c52-8303-7679a3af5dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e6f00-1e09-4c50-a7f9-fda63661d8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52990214-7ba7-40f9-b303-546ee7b5c4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46477682-03d7-4214-bfa5-e76cc75e911d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e23c7a-a794-49ab-88ae-79058e8d379f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4731dcf3-17ff-468d-ac7c-2031d1a5fab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d1451d-0a0d-47c0-9eb3-158eda4d36ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c9470e-f6f2-40f2-b508-19c7a633c99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60efc25b-3a9b-4850-b87f-9492d5b02e8d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4862053c-10c7-4035-bb7c-b46f53cef58d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69489b8-62d3-4178-803b-474b6315b729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47794877-f6e4-4f84-92ce-07ca67453272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c93fec-6dc8-41f2-bee5-99b5c3a44ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c5d60b-9d3c-4e7d-be29-086ec90947db",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eca6e9a-4dca-4e03-a9e0-a1a78c3b7296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77ce6f8-9d3e-40b2-91c8-652150c435e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d52bba-1a21-4d07-ad98-bb439e8cc3d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701cc1cd-bcfa-4257-91d2-977c832040a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeaf90e-c82f-4a42-a34c-2e9970746f43",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aae9a00-454c-45d7-819e-d8ba78f9a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b747d3dc-3c1b-4627-a5b8-dbdebfe30576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f203a9-aa24-4d1f-a685-649f548e2358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23dd874-d0f8-4ab2-b077-a2584ff7d17c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "244751e6-8341-43f9-8ba7-aa4080e51776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54fbda4d-1d24-4d0b-9f7b-e10035501cba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52eb3de6-aabb-4e5d-8f2a-2fd502e964d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3af15d19-9443-473c-a5cf-393045b62508"
                    }
                  }
                ]
              },
              {
                "id": "9be7f4f7-4a8d-4570-981f-07c810664e29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e5dff43-3733-4f84-af74-60120af234f5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23391780-6e47-45c5-b230-d80d38126ac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2201ea6f-ebfc-4d71-b9bc-30f03c33d24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19571520-e501-4b06-8d8e-9e0e610745d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c84f4048-b4b7-4d6f-bec2-65c8871b393f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0bf5079-9ff9-4828-a17a-791cc6cf5252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db263879-8a31-447e-a6f2-3a4b2b620a1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db004375-c296-44ed-9a44-91024fec0c99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fec2a125-5f1c-4e91-853c-568a00c2ec0e"
                    }
                  }
                ]
              },
              {
                "id": "b65f58cd-8ba5-4424-815a-78e73255fefa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "93940771-ab4a-4006-8777-6316c99e7e69",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a5f5f9-bff6-428c-98b9-68f8f07bb82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "76c41541-f1b3-45a6-9a69-fe480a94b4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c1edfb-c6ef-4c3f-86f5-dbf5e282650b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2247170b-9278-4f96-a3d0-5a69466c63ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e82b492e-552e-4407-8e10-0a5c2621e2c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d88673d-11b4-4a94-8a94-cb907c969790",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5c256f4-e8bc-4a05-92ac-4355ddc45bb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ddfa727d-1d0e-48eb-b779-4b5e2b2e1fe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a90c8d5b-a4eb-4ff2-bfab-2eef4811352c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46cbf731-326a-49b2-aa30-3c9185e7d2a0"
                    }
                  }
                ]
              },
              {
                "id": "7f4364d2-84f4-4854-81be-b940673d2a49",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ba5155-3e46-417b-ad56-4fc6d11130a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb13033e-2c69-40a4-a588-2112f486b59c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "883f361a-5a92-4860-b029-0dba9cefac9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a18333cf-41b7-46fe-a936-2c261b29462a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "807e35a3-a1fc-4ecc-a873-656b0549f3a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fd7bffdf-97f7-4c3d-8d93-6814103db01e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b64f526-fed5-4e6f-8e8c-c36b5531380c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33ad23bc-eb74-451d-bf17-0f25549cfa56"
            }
          }
        ]
      },
      {
        "id": "502ba3b6-6600-4dea-acac-2aeb92ca181a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "65feda37-93df-46aa-b986-4fc596208ab6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60e03ef6-ad80-4f78-8aea-4eee7fa07277",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256310d5-85aa-4bea-b57a-a404f9c6ef66",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a787a397-93e3-42a9-a471-42124544cdfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "deca7408-fe1e-4c63-a891-ec2fc5dacba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034f57a9-8274-4925-bf6b-d3be719762c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "450109fc-8aeb-4ec5-9edf-5329ecc5eda2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "391835c8-e347-409d-8799-425116696756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93e1b5e1-9608-4115-a6ce-381871908afc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d23f5a87-54b0-4592-a17d-9e6a3abe8a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "373b7213-afef-464c-9f8f-3f0d9cc1a4bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bac65cf-b113-4edf-83bd-4be2320f9352",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ac7d28d-ba49-4a36-83d3-4f00a7c634bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9372ff1-dc70-4347-a9c0-1eeccc3902cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f9319da-9590-442f-a974-cebee138ac9b"
            }
          }
        ]
      },
      {
        "id": "5be80fdb-948a-49a8-b207-9ef177136b9b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "753c4130-a935-4454-8cdd-842d7876e2a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "701a6975-1267-487a-b26f-4540d6f098cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43222e47-deb5-4979-ae63-7e9fdb1c5547",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6672a0ea-3bd0-4f5a-a44f-ca15c8573d89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5320ae4-e9a3-43b2-b6b5-1bcb8b55f77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3651dc-225b-4446-a7b5-2469c35cf24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b01c70ce-bd6f-4e96-aa3b-5597a7c8fa65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fc84765-d2d6-4e6c-9616-712a080a032f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2025687-db92-4e07-bd03-73fef629f63e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ca82d53-adea-448f-8ebe-13fd16bbc518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "211b2219-ddee-4412-965b-2530f0bd386b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d56a4349-4d2f-4c29-96ac-0ac2f1a48e8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a131270-2724-4313-aae0-804879c0e4c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "637d00e5-c49a-470f-97ee-f359bad46853",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e30fa6d2-fcba-4aa1-89ad-d51d10e42567"
            }
          }
        ]
      },
      {
        "id": "9fcd5fc9-8ddf-4e0b-8aea-1dc01e95790e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b6bc3449-1275-4f35-875c-c40387f25032",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c412ff81-6f85-4432-8447-23595ebc44b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec01a99c-b5de-42c8-9140-3054fa825c28",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0d11ea-1cf4-4379-af49-cf2dc202541e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32a19e2c-3ded-4976-9458-92af96b9c564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3e6a3-47fe-4763-8275-5cf7cf1619cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0422178f-aea4-44bb-a6d6-84c1c5ef05cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77e13ccd-72a2-4d5e-9b17-fe4361ce40e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7f21fb1-3811-4ac4-a0e5-77283fdf07d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f22d1f42-7a46-49cc-adfd-fdb9043c6037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf47ee15-820f-4922-9147-216870b84f6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f849485-f2c7-4dc8-a8d9-807b1cf97861",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbeff4c1-e1ee-4547-a223-97ec92a7dfbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b74d3a7-d621-4d5e-a202-510b8c6487f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bc9d198-80a8-44b1-8a0c-b4c3ef5c1a5a"
            }
          }
        ]
      },
      {
        "id": "9ccb2e81-b1e5-4c7a-b4d2-8d526089c031",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71ffbc6f-a9d3-4c8f-86aa-5ee7305541e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23a0234e-6a62-4234-9f79-849b9cb20d59",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f936e528-6e7f-4236-b9da-3f5aba32238a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4226b20-201f-4db8-a42e-292f759eecfe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a1acb88-37da-40de-b7af-034bfb9aa7c0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 162.19444444444431,
      "responseMin": 6,
      "responseMax": 10878,
      "responseSd": 766.3362162382397,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718584799030,
      "completed": 1718584848462
    },
    "executions": [
      {
        "id": "6cb7c9cd-869f-47f2-8b74-9291d6069d48",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5e6d4842-6a06-45be-8370-da57ceb91e8c",
          "httpRequestId": "1f569d86-19b6-4a66-99f4-9907c4fcf50a"
        },
        "item": {
          "id": "6cb7c9cd-869f-47f2-8b74-9291d6069d48",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6b51b6d1-0e8f-4c08-af2a-59ac6c90b4ca",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "a042b88e-c3c6-4a51-aa9e-c03ffe37abc0",
        "cursor": {
          "ref": "c2944366-727f-492a-9be3-9803c6c5066a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff280cd2-fe75-4eef-beba-5967f18bb757"
        },
        "item": {
          "id": "a042b88e-c3c6-4a51-aa9e-c03ffe37abc0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "52d5c6bd-98bc-4480-b30b-65fd3b5c041e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c32d0fd8-4f10-4f72-bcbd-f0811cf953c3",
        "cursor": {
          "ref": "a423438d-0a76-446c-aa27-9824fa7bc2e4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "670bf70f-f4db-40fc-a2fa-5e225200103d"
        },
        "item": {
          "id": "c32d0fd8-4f10-4f72-bcbd-f0811cf953c3",
          "name": "did_json"
        },
        "response": {
          "id": "8bc900d3-3928-41cd-a2ab-2737ea8353a1",
          "status": "OK",
          "code": 200,
          "responseTime": 265,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e35ff-46b4-4868-a80b-33d649f62ec8",
        "cursor": {
          "ref": "bca1ca68-a4e2-42b7-b2e0-d45614ede97f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "365be9b8-b68c-4096-a88f-ec99456666e3"
        },
        "item": {
          "id": "d33e35ff-46b4-4868-a80b-33d649f62ec8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f40549d1-8229-4aa5-ad66-a17fd49f5d2b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1512,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e35ff-46b4-4868-a80b-33d649f62ec8",
        "cursor": {
          "ref": "bca1ca68-a4e2-42b7-b2e0-d45614ede97f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "365be9b8-b68c-4096-a88f-ec99456666e3"
        },
        "item": {
          "id": "d33e35ff-46b4-4868-a80b-33d649f62ec8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f40549d1-8229-4aa5-ad66-a17fd49f5d2b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1512,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a071285-2014-4cfb-ad39-5fcf289d1213",
        "cursor": {
          "ref": "ee6c21c9-1aae-4a74-b043-8307efe4b774",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "070c49cc-e3e6-457a-be57-09fc354bce5a"
        },
        "item": {
          "id": "9a071285-2014-4cfb-ad39-5fcf289d1213",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3514ef77-a44a-4178-a021-6be2a93994a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f390e83a-10cd-40f0-bc42-bd085c389fb8",
        "cursor": {
          "ref": "64bedf10-a8c4-4788-b086-2b5995df0463",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8ac2e823-f18d-4082-ad8f-45da12a1ee92"
        },
        "item": {
          "id": "f390e83a-10cd-40f0-bc42-bd085c389fb8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "81f54592-fb2d-456a-bd9a-9d4641d46f74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710d0796-4196-4d59-8dfc-4e6ae49c567b",
        "cursor": {
          "ref": "6f5ccc09-78b5-4232-a399-1469b409853f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9e1b0ee0-23be-4229-b9ac-85498667b600"
        },
        "item": {
          "id": "710d0796-4196-4d59-8dfc-4e6ae49c567b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f9663cf2-385d-4dd6-9197-5eba0aa73282",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab63481-f5bd-46c9-8354-5846b39b876a",
        "cursor": {
          "ref": "7a05c66c-be20-4d73-b87d-d9609955889b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5675b74f-2b32-4d80-8616-e8e3ef485390"
        },
        "item": {
          "id": "8ab63481-f5bd-46c9-8354-5846b39b876a",
          "name": "identifiers"
        },
        "response": {
          "id": "cbc2aa92-7c56-482a-8c6c-73d0875bb4cb",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad490381-8e02-4a63-bc63-9786cd4f8a64",
        "cursor": {
          "ref": "074b3e9a-310b-453c-9047-041a30616a17",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff301190-7d1f-411f-928d-4fdd79c40f71"
        },
        "item": {
          "id": "ad490381-8e02-4a63-bc63-9786cd4f8a64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9f86dc90-db63-40d2-813a-e59be598ec50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7336486f-56d6-427c-bfd5-8987e31ebbb4",
        "cursor": {
          "ref": "140035b7-070b-4f1c-9c8b-c1bc30c0bd91",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bd70dc94-e809-4eb0-89bb-8cceebda0e2b"
        },
        "item": {
          "id": "7336486f-56d6-427c-bfd5-8987e31ebbb4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "137336c4-c243-4fdc-a9ba-5333a3a91e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202e0848-2ebe-475b-88a0-152d1781c806",
        "cursor": {
          "ref": "eb5c96af-d9e3-425f-a3bf-f0ac99d862fb",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "db4b99f8-3bd8-48fe-a68f-fb83f054c5f1"
        },
        "item": {
          "id": "202e0848-2ebe-475b-88a0-152d1781c806",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5a19157b-6159-42de-bc5d-efdf93106e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1492ce-fad6-4bb7-bb35-d6b7ed7832c1",
        "cursor": {
          "ref": "a6f18952-298e-4d57-9fe7-04983a90977b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "22ed8442-2c14-4dfb-a37f-985cd1dac6ea"
        },
        "item": {
          "id": "5d1492ce-fad6-4bb7-bb35-d6b7ed7832c1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0d46e514-93d7-4cb8-813d-0d46475796bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f15f87-6de2-47d6-9b79-2d77505996f0",
        "cursor": {
          "ref": "189189e2-009b-4459-9a9f-931ca3a913c6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "21793e8c-dade-44a5-8959-3c5cae5c5377"
        },
        "item": {
          "id": "d7f15f87-6de2-47d6-9b79-2d77505996f0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0f01dadb-cb01-468b-9356-6e6e93a57add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7a3ec-c20f-4da1-8ac7-b7e02c5ab38e",
        "cursor": {
          "ref": "725ca89f-c37d-4105-aaa6-8ecc9b1fa754",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d301328a-f925-4f1b-9081-6b0e802d6ed7"
        },
        "item": {
          "id": "a1d7a3ec-c20f-4da1-8ac7-b7e02c5ab38e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ab976178-5c83-427f-b748-5f95b7ee3aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc174059-06b9-4d8e-b958-b7da5f8e5af7",
        "cursor": {
          "ref": "60c98f6d-522d-4740-9afa-5af3f4e80af8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "70bdd8cd-cf55-445a-933d-1ee12f1cae27"
        },
        "item": {
          "id": "bc174059-06b9-4d8e-b958-b7da5f8e5af7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2abab6af-473f-4c2f-ae0b-f03454131e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76755002-2c26-4695-9764-fd9af0f31279",
        "cursor": {
          "ref": "a56f56e5-d862-4bb6-a692-cd8bd81e6915",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bccbc2eb-182f-438a-81db-11b82b2ca368"
        },
        "item": {
          "id": "76755002-2c26-4695-9764-fd9af0f31279",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e0b1a20a-1241-4b54-8aa6-a5d5394da6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48f707b-7a43-4cef-8d8d-497f7228b850",
        "cursor": {
          "ref": "e9e5d1ec-9ff3-4e4b-8471-391053f4902d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6126f203-04bc-4b42-970c-2f9ce97b587c"
        },
        "item": {
          "id": "d48f707b-7a43-4cef-8d8d-497f7228b850",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "951bb5c6-2f3a-4083-b13e-a3660cba2443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd47100b-c156-44fe-843d-a07f79bfe7f7",
        "cursor": {
          "ref": "2c82d0f9-9db3-467b-adcd-2163e8835df3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f04a27b0-0cea-4038-b30f-d6cd2c3ec178"
        },
        "item": {
          "id": "bd47100b-c156-44fe-843d-a07f79bfe7f7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b2daaacb-537f-4037-abde-ea4c4afe6e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93762a6e-e31f-4c2f-bb86-92bf1cfaf4ee",
        "cursor": {
          "ref": "2dca905d-bb9e-4ef8-bb02-bb2f0d83faa1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8ca65c88-c249-4ba9-a3de-7f7b4ac14398"
        },
        "item": {
          "id": "93762a6e-e31f-4c2f-bb86-92bf1cfaf4ee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d19a3fb2-c76e-4725-8618-8347aceba821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317339bd-f95a-4b2f-980d-b3695b30f8f9",
        "cursor": {
          "ref": "3fe62b92-bd03-4384-ab4e-66028804db12",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "139d0611-4b50-40ef-b617-3810babaeb97"
        },
        "item": {
          "id": "317339bd-f95a-4b2f-980d-b3695b30f8f9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "977f5d56-58bc-439a-99b6-780ad20549c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800e7e5a-d219-4fe2-806f-74b1e1b88763",
        "cursor": {
          "ref": "7fe9a848-e866-4c82-ba0b-e8398c8f475d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "04d1ebe3-74c4-4156-b641-b7679440141d"
        },
        "item": {
          "id": "800e7e5a-d219-4fe2-806f-74b1e1b88763",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b808c1d7-afd5-45fa-9e21-ca6f10e4e85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd4f2ee-cb7c-4803-809e-0feb53995302",
        "cursor": {
          "ref": "096b86d0-8ce3-4804-bc79-e5d10a265804",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eec5c742-2d09-4aab-a5a1-11c382e2a8d9"
        },
        "item": {
          "id": "4dd4f2ee-cb7c-4803-809e-0feb53995302",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0dd52fe3-6fd7-4bc9-b9db-eb5ea7d11d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792152a-2a46-4bb4-be6f-1e4163070ffd",
        "cursor": {
          "ref": "e1ad30a7-9b6a-4784-b283-58f0e5b2673b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e3ff60b9-5451-4d53-977d-a6fbc82ad243"
        },
        "item": {
          "id": "1792152a-2a46-4bb4-be6f-1e4163070ffd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d5d70aff-34c0-4350-bca5-5b1a511b8664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca62b1c-cd74-438d-ac69-8bcefc137f67",
        "cursor": {
          "ref": "eecaff18-6536-4cd0-83b1-91096257ce92",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8ad1531d-f2b5-4ca6-a324-da2f4c987d4f"
        },
        "item": {
          "id": "4ca62b1c-cd74-438d-ac69-8bcefc137f67",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c0a89fb7-0526-4560-82f9-71e131b0bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69f636d-7493-4868-8586-cb165d349c5c",
        "cursor": {
          "ref": "b1bed53b-2e6b-4393-b908-21418fd308d5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58a68e2c-d875-4f6f-9047-f1a0108b4943"
        },
        "item": {
          "id": "c69f636d-7493-4868-8586-cb165d349c5c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57c2ca03-d391-422b-91e7-3effb2530b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcfd311-0bb7-49b4-9ec2-e0d4b83fa04c",
        "cursor": {
          "ref": "0d7abd50-dc05-4fa5-91ef-b450b2887bc4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9cff6d07-d030-4046-9cd8-d9b4864cab4e"
        },
        "item": {
          "id": "1dcfd311-0bb7-49b4-9ec2-e0d4b83fa04c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "12c4cac2-fa51-4728-b4f5-5c76090f185f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579a9574-85a3-440b-95c0-e315069b1afa",
        "cursor": {
          "ref": "415411e4-2f27-4f43-a69c-3d6ddd2816ab",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a0616336-db9d-4f5a-a910-0476fac86930"
        },
        "item": {
          "id": "579a9574-85a3-440b-95c0-e315069b1afa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f76e5a67-b51b-4fd1-a2a8-60339ff60f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8e32c2-8616-4f15-82c7-76f82e2c58b4",
        "cursor": {
          "ref": "c8575f2a-2885-41b1-86e2-c5431f3d786d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aeb66678-5ce0-4d85-aff1-6325d7bb29ce"
        },
        "item": {
          "id": "6d8e32c2-8616-4f15-82c7-76f82e2c58b4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "90963df8-ad7c-45b8-b799-1c61b2b2efe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a1f624-3b02-40a4-8dd9-d74d65956660",
        "cursor": {
          "ref": "6c7c92f9-5697-46f0-9456-726f4ec8a24c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "01827c8c-536c-4e16-add2-e7b903b5d617"
        },
        "item": {
          "id": "b2a1f624-3b02-40a4-8dd9-d74d65956660",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fcf98a2c-92ae-4419-b636-7465d9b2ea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38675e5-cd1e-4c0f-b9b5-6413a6bcdb1e",
        "cursor": {
          "ref": "cfa2dfca-732c-4666-ac35-09e4cbe5749c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "046c448b-01e1-4e5f-b9c7-0f7216f47264"
        },
        "item": {
          "id": "a38675e5-cd1e-4c0f-b9b5-6413a6bcdb1e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6060f11a-18c7-41b9-a4c2-a63f3caf8051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3044108f-680a-46f1-8cff-cde89a3cc46b",
        "cursor": {
          "ref": "8e5aa1d5-2d95-4c12-9017-399357e8a327",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e1281d2c-0fa5-4611-a7ee-d252478357c8"
        },
        "item": {
          "id": "3044108f-680a-46f1-8cff-cde89a3cc46b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f87b5282-3d0a-450e-9c60-36156fa92ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ae24c0-c537-453e-a5d4-4b8388361d44",
        "cursor": {
          "ref": "ef4d0005-2c7b-4c4e-8fa2-89a457c6922b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5b27d122-e235-447c-904f-e232f428e231"
        },
        "item": {
          "id": "77ae24c0-c537-453e-a5d4-4b8388361d44",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a95f8240-f126-4b16-a313-939b9827b686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8203727b-ae94-47d2-ade6-24cb22e1bae5",
        "cursor": {
          "ref": "048c921b-b3bb-4503-9d29-6709f4fb2fcc",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1793ac6e-fb0e-4f8c-816a-2e36e5c0ee0c"
        },
        "item": {
          "id": "8203727b-ae94-47d2-ade6-24cb22e1bae5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "68bea107-7304-495f-ac5a-47a469b91dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472cfa50-7a81-448a-94df-aac095e2a81b",
        "cursor": {
          "ref": "8e43c9f7-0456-4899-8c05-34923a48cf87",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d4c30b29-8d1f-43d5-9d51-da3c788cd464"
        },
        "item": {
          "id": "472cfa50-7a81-448a-94df-aac095e2a81b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9b998cbe-f3ce-46ae-864d-f17c783f2021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cb4647-f3de-448d-a198-67432d761b94",
        "cursor": {
          "ref": "2cfdf6d6-67ae-4ee1-8f68-22e5b316576f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2700f2e2-5952-4e86-bea0-07f472cfb334"
        },
        "item": {
          "id": "b3cb4647-f3de-448d-a198-67432d761b94",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "93acacb0-5413-4815-b929-465dc5c74448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0b653c-37ba-403a-9649-1b00f32b7912",
        "cursor": {
          "ref": "7d024efc-182b-4f9e-bbfc-2526b03416ad",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e07595a-a80f-420a-acf5-14d04c3b849f"
        },
        "item": {
          "id": "6f0b653c-37ba-403a-9649-1b00f32b7912",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c2372cf5-d473-4fa0-bee2-4fcbc826f3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f22deef-7c1e-4628-b6ab-22b92ea0d39f",
        "cursor": {
          "ref": "6fb4ef58-2be5-46f1-a5a7-98b7610b06cc",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "16ab59bd-d254-42fa-83d4-8df24ece1513"
        },
        "item": {
          "id": "8f22deef-7c1e-4628-b6ab-22b92ea0d39f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4c4f8cc0-d606-49a1-adb6-478df68ae94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce32da38-82f0-4629-9b52-92d9eb818f99",
        "cursor": {
          "ref": "ff835f01-1e31-4d9a-9840-a1caf8c9e5af",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "915a18b2-743b-4b2a-95b1-a2e47ce86ec0"
        },
        "item": {
          "id": "ce32da38-82f0-4629-9b52-92d9eb818f99",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "322f5163-d26c-4ac4-9770-5ddd3b33e0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc5b25-cf1d-41e1-8038-66834ecc0ebf",
        "cursor": {
          "ref": "a3fbe75f-0c10-47ec-b09a-aa9c562b66e3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "33c8957c-28a2-4788-82f8-e318145e3561"
        },
        "item": {
          "id": "14bc5b25-cf1d-41e1-8038-66834ecc0ebf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1754b018-769c-4bc5-b1ed-bbfcb51703f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f68b524-3640-4f8b-92b1-fb2a3393a6e8",
        "cursor": {
          "ref": "99020c3c-6c5a-4a65-8600-47b6bde09dda",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "80755d34-4bbe-467a-9b43-b554b2592fad"
        },
        "item": {
          "id": "0f68b524-3640-4f8b-92b1-fb2a3393a6e8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a30d711f-e2b3-43ef-9fe4-dbd5807462fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f09e73-31c5-4c53-a1fd-32c835bd31be",
        "cursor": {
          "ref": "e3cc7331-f9d3-46c3-8e75-76c528e48bfc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "477ca9f0-89f3-4bf3-b066-ee2f4ab6fca2"
        },
        "item": {
          "id": "33f09e73-31c5-4c53-a1fd-32c835bd31be",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4fcc11bf-8c40-4218-951d-c6cf28656f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c53328-8e2b-44cb-b06b-528d339f2946",
        "cursor": {
          "ref": "66e6938e-96b2-42c0-8a86-36741ac64fe4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c022543e-6af3-46a8-9f09-daba41d0f52a"
        },
        "item": {
          "id": "70c53328-8e2b-44cb-b06b-528d339f2946",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1eadf150-1f01-4fad-914d-e6c065db46ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4799e21b-0923-459a-89c4-752d38beee87",
        "cursor": {
          "ref": "3024d770-b7f6-40b4-b6de-4e1749370f2e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "31db83a6-d52b-4b4e-bee6-3a49f3756f3d"
        },
        "item": {
          "id": "4799e21b-0923-459a-89c4-752d38beee87",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a4d32dad-e96d-4e7b-9b45-6c0574531b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08116b2c-af42-4ffe-802d-32afde369d47",
        "cursor": {
          "ref": "df4dfc4f-6bd7-48e7-97a5-aff08c3c39c4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "70044b02-3574-4a1b-86df-d87b5c539b63"
        },
        "item": {
          "id": "08116b2c-af42-4ffe-802d-32afde369d47",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8158b7ca-c0ba-482c-aba1-444ebf30d064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1f9b58-b48d-478c-9293-309ed5265490",
        "cursor": {
          "ref": "c911eb0b-9b55-4a0f-82d4-61f44c9423bc",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "464ffa5e-b5b8-4000-a134-8a5616a20a8c"
        },
        "item": {
          "id": "dd1f9b58-b48d-478c-9293-309ed5265490",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "aa355d00-910c-4ddb-a8b5-c2fa2ec64eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcce4631-38d0-422f-b63b-4e9dbf81804f",
        "cursor": {
          "ref": "572d8d70-a9a9-4079-b2f2-b0567dfc5184",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "479d5571-9bd1-4df7-ab56-acd09cb55ca3"
        },
        "item": {
          "id": "dcce4631-38d0-422f-b63b-4e9dbf81804f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "faaa713b-4a9c-4e9f-abe0-6db6d7465982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d13cb58-84e0-401e-9b63-5fefd2a8d738",
        "cursor": {
          "ref": "56f91474-c8c2-44b5-80a0-0873b68577d5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "50767f21-34a7-49e6-ab8c-369bdd495ccc"
        },
        "item": {
          "id": "9d13cb58-84e0-401e-9b63-5fefd2a8d738",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "782aab7b-13e3-41ef-b630-d428b198826f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ed01d-a405-472b-a07f-c79b06000391",
        "cursor": {
          "ref": "0c986f69-0963-4ecf-9c48-42be9ee468e2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f43d9be4-cad3-444e-91ad-180de9aa428d"
        },
        "item": {
          "id": "790ed01d-a405-472b-a07f-c79b06000391",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4b68dc75-a156-432a-b0ab-7c6822ee2ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a85779-1fdf-4603-aa83-d8e58bfdc795",
        "cursor": {
          "ref": "bd7ae486-efc6-4a79-b095-0a2fa075acc5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9bea0295-b077-441a-8a7a-51388a8411e2"
        },
        "item": {
          "id": "69a85779-1fdf-4603-aa83-d8e58bfdc795",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "988d8734-f2ea-46c2-ba2f-83502a22ab97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5800d7b0-4cb9-48bf-b3bd-9d324a358407",
        "cursor": {
          "ref": "adfaa9b5-718b-4b65-9acc-e3010bd3200a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21227eef-4130-4158-b0a8-02301739e66a"
        },
        "item": {
          "id": "5800d7b0-4cb9-48bf-b3bd-9d324a358407",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a7f06f1c-562c-4fc7-900c-b525a8b628f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cb3cf9-9dd8-49e9-9166-02237a36c0ee",
        "cursor": {
          "ref": "27c57688-7a99-41f3-a499-c6d4a773bd02",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "da44bfd9-22a9-4b69-a230-19533d7047fb"
        },
        "item": {
          "id": "38cb3cf9-9dd8-49e9-9166-02237a36c0ee",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ab77a754-6237-4918-bf9b-75e951e38ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81297c2c-0833-4e75-a319-df5e752ec96f",
        "cursor": {
          "ref": "838cc95c-7877-4d22-8850-d1303fc5730a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3fe49f10-2b99-4483-8801-b33990dbdf1e"
        },
        "item": {
          "id": "81297c2c-0833-4e75-a319-df5e752ec96f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2de12974-efd9-41c4-8272-51c1bb1d9abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc14a70-5e2c-4b47-8734-4b70e9d6c5b0",
        "cursor": {
          "ref": "818716e3-33a1-4f4b-9b6f-7c71c93fe8bf",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "afde9eff-de49-42e2-965c-8fdb37b9d514"
        },
        "item": {
          "id": "2fc14a70-5e2c-4b47-8734-4b70e9d6c5b0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22d8e407-470a-4679-aa34-7c3109cc7bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c66953-4b98-4580-bfac-265655640b79",
        "cursor": {
          "ref": "a2e5ec28-f523-4f18-b58e-12ac74fff730",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ba41bbe7-fadb-4597-afb6-3de8011f0dc1"
        },
        "item": {
          "id": "88c66953-4b98-4580-bfac-265655640b79",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c565b70f-5464-4758-bcc6-e96f6e73ac6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c8ce76-94f5-4057-9a78-863e1d55cf2e",
        "cursor": {
          "ref": "7aa4d99e-932c-401c-ac26-5efaab76b790",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cbbb0402-07a3-4168-9db9-31d13ac67404"
        },
        "item": {
          "id": "94c8ce76-94f5-4057-9a78-863e1d55cf2e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "828720c8-9f33-447e-b412-e8a79cce8c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b61806-14c7-4afb-9bc3-9fc0ea5510b0",
        "cursor": {
          "ref": "dc668023-6ac0-4a7e-b096-209a4c6932bf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2aadd4a4-abf5-4730-b729-7652b00c7737"
        },
        "item": {
          "id": "a8b61806-14c7-4afb-9bc3-9fc0ea5510b0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dbb1dd24-7efd-463b-8ea7-f95d71bf13dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb7f8dd-708d-447c-8e98-c51c97460f79",
        "cursor": {
          "ref": "fa5f5ae6-8a6e-44da-a192-5a0188973e05",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fbd959a7-747d-4564-8827-1f609113eb34"
        },
        "item": {
          "id": "efb7f8dd-708d-447c-8e98-c51c97460f79",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6bf3c96d-30d8-4852-aadf-f6f65b467f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e83fdb-5e46-46d0-86d4-5b53704f4a43",
        "cursor": {
          "ref": "7c5f219c-1b3a-4a23-9f60-c7b4760c8949",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d0371a8d-723c-4d28-afad-bd4f03dcf707"
        },
        "item": {
          "id": "19e83fdb-5e46-46d0-86d4-5b53704f4a43",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cd420a37-8e6e-4569-8f08-603f09cb6aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d127c26d-3161-44c7-aa39-31f6c2bbe9d6",
        "cursor": {
          "ref": "c4681c85-c070-4ef1-9703-e63bab0d2365",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8f5478b4-4512-4691-a86b-bec73aa17a0a"
        },
        "item": {
          "id": "d127c26d-3161-44c7-aa39-31f6c2bbe9d6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c872bcf2-ec00-4aeb-826b-1761b66921ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f337c57f-fcb4-4454-8c63-4be045db9dfa",
        "cursor": {
          "ref": "db0e1e7e-0563-48b0-be6a-8783a56f10aa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ba719f69-d586-49d7-93c1-3372f9b1daef"
        },
        "item": {
          "id": "f337c57f-fcb4-4454-8c63-4be045db9dfa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ec2dad62-8782-4215-b29d-b542f61d4d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7552307-df26-4ba1-b6dd-49558ecc277d",
        "cursor": {
          "ref": "9c64e021-1869-4d0c-8a0a-66eb53dfe509",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "657a44c9-c982-4f7d-90ab-6a3eff320518"
        },
        "item": {
          "id": "c7552307-df26-4ba1-b6dd-49558ecc277d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97df00fe-2fcf-4ac2-ae43-1cf7ec2ca445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a25f72e-03c1-45e5-bf85-5f4a8e85085f",
        "cursor": {
          "ref": "736fca86-7e63-48d0-bcef-c1b2ed522b14",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "036f0502-8269-4941-9c8c-ee6b42d85cfe"
        },
        "item": {
          "id": "4a25f72e-03c1-45e5-bf85-5f4a8e85085f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "435db835-19c0-46aa-a165-00e9ce981024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6e5c36-7629-4972-9e9b-4c0f3f9d8bf1",
        "cursor": {
          "ref": "e1c36ab5-eecb-4113-9764-bc35b433e482",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d69a7593-3405-4dd1-95af-61d8b488a6be"
        },
        "item": {
          "id": "dd6e5c36-7629-4972-9e9b-4c0f3f9d8bf1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "862f7ed9-90a0-4f32-89b4-ad9123490db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b86be85-ca49-480b-bb5f-a5088df05266",
        "cursor": {
          "ref": "998dcf10-8a52-4051-9cb9-fe43010f5c70",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "769c65cb-bc32-4349-bfed-6b91d887a538"
        },
        "item": {
          "id": "8b86be85-ca49-480b-bb5f-a5088df05266",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c52b18c2-6326-4d04-8c5d-8a4787d34815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf89112-a090-4767-84e5-8d071c961971",
        "cursor": {
          "ref": "af2aba82-fc9b-4199-9162-072251589a3b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d031ff42-a819-48ac-b5f1-874152dd9e01"
        },
        "item": {
          "id": "faf89112-a090-4767-84e5-8d071c961971",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "673c3180-f065-4193-9bc9-ed57ae04e7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9836580-d09d-49c5-a826-34bf8f646ea2",
        "cursor": {
          "ref": "86d947bb-5b6b-4ee9-910f-23fb33cd6d7d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ec93f8e3-4433-463c-b1a7-4d96f14a3fc3"
        },
        "item": {
          "id": "c9836580-d09d-49c5-a826-34bf8f646ea2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e526d0a3-8ebf-4034-80dd-130bccc4d5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0656aa-bad4-408a-a9da-f94db7547881",
        "cursor": {
          "ref": "5c677006-22d5-446c-8f31-b2f835931c93",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5643fcae-5e77-44ff-aa51-b773c80e3f5f"
        },
        "item": {
          "id": "3a0656aa-bad4-408a-a9da-f94db7547881",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "26aabba8-3d11-4a1e-a89c-c76074d5357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8373d44-30eb-41e2-a756-64654ca4b07b",
        "cursor": {
          "ref": "00dabfb8-5e26-4b00-8f2e-62df34e9e542",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "98165cc4-fc49-4501-94ba-f9ad4c40257f"
        },
        "item": {
          "id": "e8373d44-30eb-41e2-a756-64654ca4b07b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "14ede76c-d10d-498e-86c7-76f18df8462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08b7dd0-4b75-41c8-9457-811b90aaf424",
        "cursor": {
          "ref": "7435cc4b-27b8-4f1b-a919-2a461141f3e3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6b93e201-3f95-4876-89d8-a9cf09fe7579"
        },
        "item": {
          "id": "f08b7dd0-4b75-41c8-9457-811b90aaf424",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1acd79df-49c3-436c-9f51-aa469f4fc538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352ed5dc-8b76-4fe4-9da9-90356baf8314",
        "cursor": {
          "ref": "58e7a2e8-52a5-4a4c-a30f-56a37b8da7e4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3785c14d-33b7-4a70-9544-2067e0252fb2"
        },
        "item": {
          "id": "352ed5dc-8b76-4fe4-9da9-90356baf8314",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a1b1609-09aa-481d-8dc8-0a14c0b6b582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf9d662-0ee9-42ba-aee2-197344c7b657",
        "cursor": {
          "ref": "5ec8d803-098f-4516-831e-c375c7ba8d3e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9e013356-83b6-4693-9b0c-074e92ff9124"
        },
        "item": {
          "id": "0bf9d662-0ee9-42ba-aee2-197344c7b657",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6eb38dd1-0117-4695-9778-868f4f44ca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55712f1a-613c-4eff-8abb-ca1ba62a14dc",
        "cursor": {
          "ref": "80c698f0-1d8b-41ae-b9c9-adf5dd78948f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "79caf742-1532-45d1-ab64-5be443462cd2"
        },
        "item": {
          "id": "55712f1a-613c-4eff-8abb-ca1ba62a14dc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ba5f7a3-26b8-430c-a154-ca269fef43d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14879260-65bd-4588-a007-befad622d368",
        "cursor": {
          "ref": "ef825d5c-b6ba-4378-bea3-15417f162b98",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5618d50d-e3ee-4632-931b-8d375e832907"
        },
        "item": {
          "id": "14879260-65bd-4588-a007-befad622d368",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "35490b50-e64e-4ccf-87cc-418a2703b0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b14af06-7f70-4d76-94fa-9605c5a5cac1",
        "cursor": {
          "ref": "94905fef-7a41-42bb-b75a-75e2fd173259",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7fd1c318-824a-4b06-8b68-d7560c2c3c05"
        },
        "item": {
          "id": "0b14af06-7f70-4d76-94fa-9605c5a5cac1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "33232027-b241-417e-a374-c246cfcad81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7601be07-0dc5-459e-b50e-8142afba8983",
        "cursor": {
          "ref": "739611eb-71ab-4f44-ab7b-f30b671f2a5e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5dc27ae7-959a-4521-be56-6a767dfd0230"
        },
        "item": {
          "id": "7601be07-0dc5-459e-b50e-8142afba8983",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "975932e1-8f78-46e0-a6f6-69244bb0f6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73e2de7-7451-474f-a3ab-4b5371cc49ec",
        "cursor": {
          "ref": "3744bfbb-21e5-4a15-ae06-a52748df1d1d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "af18ae2b-e2e5-42a5-95e2-86aba1dcfc8c"
        },
        "item": {
          "id": "a73e2de7-7451-474f-a3ab-4b5371cc49ec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eb2cc13b-763a-454b-983e-a4db2aa4a331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c499991-de41-4825-b8d0-3fbbd39fa89d",
        "cursor": {
          "ref": "a2312b75-82a6-41db-b4d2-1a64ed5dc684",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "72f5dbdd-3660-4dd8-a102-adb4c0df9920"
        },
        "item": {
          "id": "1c499991-de41-4825-b8d0-3fbbd39fa89d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "16554be2-9a25-496a-8bc2-c1a496509059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23fafce-dd2e-4092-a341-3df04a536b9e",
        "cursor": {
          "ref": "d4d19767-82a2-4f36-b7b3-3453f9d1ef0d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "59db6068-e750-4ef8-8413-856295736ba3"
        },
        "item": {
          "id": "c23fafce-dd2e-4092-a341-3df04a536b9e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9cfe5854-6a77-4552-8b0a-3a1cb8fff938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80273b6d-fe1b-4b72-87c7-3809f0066283",
        "cursor": {
          "ref": "1453a6b7-a8c8-441b-9eca-5ed1cccb7931",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "af8965fb-2f2b-4e59-aa93-5f9fbbe81b82"
        },
        "item": {
          "id": "80273b6d-fe1b-4b72-87c7-3809f0066283",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5d3c91fc-7440-484b-92c2-59e6d698ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c35182-7a8e-49ef-aa24-b8f378881ed4",
        "cursor": {
          "ref": "24a5f58c-db53-48d5-8f77-1e286dd30112",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "641cc402-0771-4b14-a0c9-889ab86544a3"
        },
        "item": {
          "id": "34c35182-7a8e-49ef-aa24-b8f378881ed4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e45de265-a82f-4c0b-87a1-e51bae94aab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5079749-323b-4386-b6e7-b7463afa8f54",
        "cursor": {
          "ref": "4de6f696-532e-4515-a693-dee45fdda021",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c73a0769-790f-45c6-a36e-96fad919f490"
        },
        "item": {
          "id": "e5079749-323b-4386-b6e7-b7463afa8f54",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ef8bdd70-0667-4609-a2fc-ae2389c8bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9ab19e-9255-4b7c-991b-b278021c6a04",
        "cursor": {
          "ref": "e738f152-a5cd-4b6a-a92e-1a1a8b48c27d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "86bed220-8359-4820-8d91-f104cff0cb5d"
        },
        "item": {
          "id": "ee9ab19e-9255-4b7c-991b-b278021c6a04",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0268c48b-0321-4266-a9a4-354157feb392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a6e4fb-f6ff-4b51-9409-533ae498b9e2",
        "cursor": {
          "ref": "49b673fc-e6ad-443b-a165-a472c880f4c3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8836b048-0336-471e-a287-56a3f8a7f6d7"
        },
        "item": {
          "id": "70a6e4fb-f6ff-4b51-9409-533ae498b9e2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4a79588a-1f15-4ea6-a12b-512ddffbb17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5dc269-0b0a-4eb5-9153-611aaceaf783",
        "cursor": {
          "ref": "8440307f-c627-47f5-9255-5cf6ae2ae73d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "57b9533a-3b23-4acc-9c6d-3c44d61f7dab"
        },
        "item": {
          "id": "4c5dc269-0b0a-4eb5-9153-611aaceaf783",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d6167416-eb5d-40e5-90b0-5b5d901760cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01edd36c-ad30-4dc8-8c85-3b754c7663d4",
        "cursor": {
          "ref": "0e324307-b82b-44b0-ba7e-9828d7d2407e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e99b6673-4ef1-4f45-aabe-280a840de54e"
        },
        "item": {
          "id": "01edd36c-ad30-4dc8-8c85-3b754c7663d4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c01c5cca-0a91-4fe8-b906-4e9a17990c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd752e50-32ff-4355-bd7f-26249868a901",
        "cursor": {
          "ref": "8c6c6d4d-ccf7-40f4-a904-8b11f6dcd36e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "53d0ef38-255b-4abc-8ec8-d088e6ca904b"
        },
        "item": {
          "id": "dd752e50-32ff-4355-bd7f-26249868a901",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cec24fff-d61e-4a87-b3e3-597a2d332138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b261b0-f505-4656-ac33-f7bf5b3cb5f5",
        "cursor": {
          "ref": "51d4ba97-d1a6-4a65-832c-02919004e800",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "288e4b5c-1a08-4b58-98b9-2d9ef4197e03"
        },
        "item": {
          "id": "35b261b0-f505-4656-ac33-f7bf5b3cb5f5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52427663-b0b4-4a3f-901d-e45913f76e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca6561c-abae-4843-aede-ceda058a1045",
        "cursor": {
          "ref": "c38e898d-8a40-461f-9cff-0eaa0a7d7328",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "467745dd-ca79-4ad1-a53d-25ab76fa6e28"
        },
        "item": {
          "id": "fca6561c-abae-4843-aede-ceda058a1045",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fe1db483-3b8e-4a48-a0ea-95fd9b6ed0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90c9ff0-923e-4a41-89bc-9a9600b7ac3d",
        "cursor": {
          "ref": "487da15c-6cbd-4eb3-90f6-091dd8c76989",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "50c0c54d-a9a3-4b17-9be1-cc2d291c5f32"
        },
        "item": {
          "id": "c90c9ff0-923e-4a41-89bc-9a9600b7ac3d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "68067640-1e52-4d26-b07f-0f0a027a4d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92916c1a-5185-437a-97d1-fabf88f9f8df",
        "cursor": {
          "ref": "39760719-a661-49be-8b74-63af81f05681",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "29edf2f3-4252-427b-9d82-5e761328a26a"
        },
        "item": {
          "id": "92916c1a-5185-437a-97d1-fabf88f9f8df",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6c0e097d-462d-42da-8e67-1704b3d2c321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ca338c-2179-41b1-a011-0050eaba2276",
        "cursor": {
          "ref": "5f415f37-b7b7-49b3-b5fb-d006b64af942",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "907d3bac-3717-40e5-ad0d-c40d635cbc0b"
        },
        "item": {
          "id": "61ca338c-2179-41b1-a011-0050eaba2276",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6124b9f5-8da7-4839-abaa-71cc5b764363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08bc7ea-9d6f-4adb-b01f-4dcadbc5cfbc",
        "cursor": {
          "ref": "897860a8-7ef8-4c34-80ea-6c49b3a452b7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a4e2aa42-3094-4a0b-ac26-d1095fcffb1a"
        },
        "item": {
          "id": "f08bc7ea-9d6f-4adb-b01f-4dcadbc5cfbc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a6a216bd-2945-44ec-84c2-46159207d6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb20b8fc-e59c-4d87-a275-bc3e2410c312",
        "cursor": {
          "ref": "196d1c0a-04cc-4f99-a3fc-9a45429a0689",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0adb9fe9-ee8a-49cc-a0b5-39259807c35c"
        },
        "item": {
          "id": "fb20b8fc-e59c-4d87-a275-bc3e2410c312",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fe7dee6e-9dbb-4510-bfed-73282d34b040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd962e04-2b82-47f5-8a02-6db032bfc314",
        "cursor": {
          "ref": "ce7d1d73-7766-4097-8e91-4baf3c109c90",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ac713e4-49f4-4739-8ee6-951f295ff29d"
        },
        "item": {
          "id": "bd962e04-2b82-47f5-8a02-6db032bfc314",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f97833f1-b783-4b33-97da-8baa8f288559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4e649-4938-4d67-8607-472c6bf35aba",
        "cursor": {
          "ref": "d349b8cc-c432-44c2-aeac-fa1776d34103",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d0bd2d69-8bcf-4c5e-ba5c-693ff75faa3c"
        },
        "item": {
          "id": "d1d4e649-4938-4d67-8607-472c6bf35aba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5fca4aa1-873e-4ebc-9c69-972d29dea1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d3ce48-05f9-40c1-a5f4-7ec1c53326b3",
        "cursor": {
          "ref": "0c61c8d3-c870-4581-86d1-27c4263e19a5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "760391e0-befb-4b01-955b-92f35c9a9a63"
        },
        "item": {
          "id": "91d3ce48-05f9-40c1-a5f4-7ec1c53326b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "faecf86c-05dd-4735-82c8-c2351eda250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5986d6c-6b42-42e2-8724-47b5bd3c3549",
        "cursor": {
          "ref": "b69159bf-8346-4adb-a882-6cf755b6fbdf",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8ddc92e0-fdc3-478c-8eac-f2ecae8f08a8"
        },
        "item": {
          "id": "c5986d6c-6b42-42e2-8724-47b5bd3c3549",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6f0253c5-38a1-4964-b1f9-9109c319acba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e81251-05f0-4971-836c-a5a497690d87",
        "cursor": {
          "ref": "7f57881a-9e3e-4c83-8d5f-e80336e65fd0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b02297eb-cc36-48df-b378-c882c9e23af5"
        },
        "item": {
          "id": "b9e81251-05f0-4971-836c-a5a497690d87",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "70e6f32b-b37e-4a57-be49-aeddadbd3462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454815e7-b4f1-447a-92c3-a02f329e5737",
        "cursor": {
          "ref": "d140ada3-0274-4c39-a25b-0db7d216211b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "517948e1-6c72-4ef1-ace7-24a4f0070129"
        },
        "item": {
          "id": "454815e7-b4f1-447a-92c3-a02f329e5737",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "71980e18-9bc2-4cec-860b-5b00ec63bd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82d2a8b-f4ce-4d53-ad4e-45f642051f33",
        "cursor": {
          "ref": "9a50b4b9-618b-4634-b159-45bc12d09d17",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a3519709-e1ce-4ae5-bb08-b696b20b2df6"
        },
        "item": {
          "id": "f82d2a8b-f4ce-4d53-ad4e-45f642051f33",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f527f047-f5ff-491d-8264-e27bd11db4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7921ebe5-e2ed-43cf-b105-52f4347deccf",
        "cursor": {
          "ref": "68d0c0c6-4b0d-4ec3-93f6-54abbac4c3cc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "903362ea-2ffc-49fa-bd66-c1b42e032da0"
        },
        "item": {
          "id": "7921ebe5-e2ed-43cf-b105-52f4347deccf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ca5d4fd1-2418-44f0-ad41-46774744d44f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ccbb4e-0c66-4e5d-acb9-bd7ea334311f",
        "cursor": {
          "ref": "43e66ef6-64cd-4038-b201-9e634b227fe6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1c01ee7d-eaee-4029-9e0f-b20e105dbdf3"
        },
        "item": {
          "id": "04ccbb4e-0c66-4e5d-acb9-bd7ea334311f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c6f6506-08c6-4aca-afce-733d124041b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6445173f-4b33-4b2e-aea7-2332101ba332",
        "cursor": {
          "ref": "10e5275f-d553-43d4-a2eb-a975aba162a6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d83bc98-20db-4b89-bd56-4416e9d15e79"
        },
        "item": {
          "id": "6445173f-4b33-4b2e-aea7-2332101ba332",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ff5edfc4-7450-4196-be10-d7ef6b4033e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "17b00324-ad91-418a-82b2-c04cd8653474",
        "cursor": {
          "ref": "a1df4826-02aa-4efe-8872-4c241fe85923",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bc486432-15b2-4b29-bd89-4f98667da9b7"
        },
        "item": {
          "id": "17b00324-ad91-418a-82b2-c04cd8653474",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eef138c4-bf06-4b75-be4b-104011ea9731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d22a65f6-ab8b-43f6-a492-044e4049071a",
        "cursor": {
          "ref": "725591e5-1269-4c94-8419-f64ccfd609a7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "29caf5da-71d9-4c33-b8c6-2cb668b50de8"
        },
        "item": {
          "id": "d22a65f6-ab8b-43f6-a492-044e4049071a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fad41d3a-0e66-44cf-8a4f-507626c24d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b4f3ad02-c875-4cbc-ad15-d752fdf9a9ad",
        "cursor": {
          "ref": "b471350e-602a-4ed5-84c4-7480e8a069f6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "95797429-eb15-4b8d-8633-ebb83ae6a35d"
        },
        "item": {
          "id": "b4f3ad02-c875-4cbc-ad15-d752fdf9a9ad",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6e07433a-4e1d-4a9b-bcdd-05d881ed0e67",
          "status": "Created",
          "code": 201,
          "responseTime": 10878,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fbd8cb-527c-401a-89a2-72dce4a4c54a",
        "cursor": {
          "ref": "ca10d96b-71de-493c-8075-dc3ba7300d2c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4a4f8b8b-27af-465c-bc57-6e560da44dd1"
        },
        "item": {
          "id": "e6fbd8cb-527c-401a-89a2-72dce4a4c54a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "405101af-340d-4cc2-93ea-478a2bc8a3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ab453063-75c2-4d16-af10-32e451f08b5d",
        "cursor": {
          "ref": "f4120548-c8e4-47d3-bbdd-e92dc1f46c4b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca44fce9-e40e-4a33-84d1-a7e618d972d1"
        },
        "item": {
          "id": "ab453063-75c2-4d16-af10-32e451f08b5d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c19e1588-02fb-49d2-9ffa-9ac2bea67e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "93c076e4-3929-46bc-905d-a463eefe5da0",
        "cursor": {
          "ref": "6b7fe411-581c-45ec-9f88-b282e4877bce",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "985ba11c-524c-4608-b285-8931c32ef334"
        },
        "item": {
          "id": "93c076e4-3929-46bc-905d-a463eefe5da0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8fd5e312-785e-49e9-aaf4-590d992f208e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdd0184-f965-4dbd-b8df-d7ca8212bf42",
        "cursor": {
          "ref": "f376a541-d597-49a5-8446-53512a7bd94c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "137048cf-6958-4c66-8bee-f2a073c2d3d0"
        },
        "item": {
          "id": "1cdd0184-f965-4dbd-b8df-d7ca8212bf42",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3dc76eaf-93aa-4fae-83fc-9da5baeabc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563a38ba-2395-47ba-b5e0-cf581f8dd9a8",
        "cursor": {
          "ref": "5225c825-e46c-469e-8fef-1170dccfbdc9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "00ae66d4-18fb-40cc-bdaf-bf17b0351c28"
        },
        "item": {
          "id": "563a38ba-2395-47ba-b5e0-cf581f8dd9a8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "76d394ae-9685-4cb2-848b-02969b6a1fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c858a5e-a255-4ff3-818c-94197ec0f236",
        "cursor": {
          "ref": "95befef1-98f9-4796-8681-20d1b3d060d6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "490a6f14-13a7-4e1a-8304-e07f490ed1ad"
        },
        "item": {
          "id": "7c858a5e-a255-4ff3-818c-94197ec0f236",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e9737054-d08e-4109-af6a-2141b3fa1292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb30b722-f3ac-46f9-a9fb-429d06f171bc",
        "cursor": {
          "ref": "ce752a70-2145-48a2-93bc-3ec5ba1e8aae",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9b89e8a9-3017-4294-aab0-afb0cc0a3d44"
        },
        "item": {
          "id": "bb30b722-f3ac-46f9-a9fb-429d06f171bc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2bd7a018-f815-47c6-af85-658d152400a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d77e8ba-039d-49da-ab20-54b16acc6156",
        "cursor": {
          "ref": "d069ebea-b5c0-4692-9092-9cef0af5d124",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d829b94f-de4f-4baa-ac65-5077c4f8c451"
        },
        "item": {
          "id": "0d77e8ba-039d-49da-ab20-54b16acc6156",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d9ef174c-c841-4f0d-9c77-6d6bba22be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174326b7-2709-49b2-b662-55481778d37e",
        "cursor": {
          "ref": "da769cb8-0a04-49be-8af4-f4ad32108627",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c1c35744-bf5b-4d2b-8c1a-647c37859e3a"
        },
        "item": {
          "id": "174326b7-2709-49b2-b662-55481778d37e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a2a0bb06-1686-47b0-b33f-39a4bfac8e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c1aba1-7b44-4589-b118-8acf336e6665",
        "cursor": {
          "ref": "437bca86-d678-4af4-b1a4-0f56f5d6f9f4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "55276b4e-84a0-4989-9051-325d2e36c870"
        },
        "item": {
          "id": "e4c1aba1-7b44-4589-b118-8acf336e6665",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b891445-3726-4a5c-be0a-d037b722a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7266bedf-e989-467d-bf7a-581d0702105c",
        "cursor": {
          "ref": "e21e1873-29e0-43c4-9329-d23fdcd52382",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0a7f3d4b-289c-4f64-9e51-e00a72aecd65"
        },
        "item": {
          "id": "7266bedf-e989-467d-bf7a-581d0702105c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e76da499-eec5-4768-b6a4-0f8dcd5e787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37479d12-0ef9-4b91-a34e-1bcdbc2f10be",
        "cursor": {
          "ref": "884be81f-8e3d-4c9d-b4a7-8760f898b160",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bc7e0a35-fc0f-4b3c-9997-ff755936461e"
        },
        "item": {
          "id": "37479d12-0ef9-4b91-a34e-1bcdbc2f10be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1fdf71b6-6617-48a9-910b-52ffb04f5cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e213e62d-0dc3-4997-95c3-2a7903e58a86",
        "cursor": {
          "ref": "4cc6dc0d-c579-4b7b-a8bd-78dc345a1654",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f0d9a50c-bf7d-44e8-ae46-018514cd4462"
        },
        "item": {
          "id": "e213e62d-0dc3-4997-95c3-2a7903e58a86",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acf89e90-6a5d-4845-be35-16dbb7b0c660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbb4a6e-00d0-4b5f-8694-9e16f976d91c",
        "cursor": {
          "ref": "b4625100-5647-43a5-ab02-dda2db9eb11f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "208f4262-3c6e-41eb-bffc-ebc4e4883a71"
        },
        "item": {
          "id": "fbbb4a6e-00d0-4b5f-8694-9e16f976d91c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de729b10-3d0c-4869-8804-5cf7c1eea6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3007bbd-8db4-442a-800a-442646abe6f6",
        "cursor": {
          "ref": "1ec86404-2437-408c-b1ce-ecb375217d6b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7f152983-a0ca-4983-9b5b-add466cac637"
        },
        "item": {
          "id": "d3007bbd-8db4-442a-800a-442646abe6f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed2131c5-35e4-4d43-914f-1a857d1a1e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b59f48d-53ab-484d-977a-d46e5353be9a",
        "cursor": {
          "ref": "df7bb1e8-eadb-432d-b6fa-c9baa38febc4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5fcc164c-f16a-4499-9561-1305909f13be"
        },
        "item": {
          "id": "1b59f48d-53ab-484d-977a-d46e5353be9a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9581d7c3-c289-468a-9033-9455b0b523f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44b54e1-385d-40b6-8896-af6cd513209e",
        "cursor": {
          "ref": "7f23e3ce-b508-400c-a9c2-c03d13f870d2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d087a89b-4cce-4a9d-8fdd-3f4443a8b872"
        },
        "item": {
          "id": "e44b54e1-385d-40b6-8896-af6cd513209e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eae868de-e4d1-4336-b7ef-cd2d6664cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e401656-f751-4087-9f14-04420e403d42",
        "cursor": {
          "ref": "19ed9d2b-6b4c-4e03-9519-338bd35e8bc2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bd8ae51-0b00-4da4-a7b7-6758fc85277b"
        },
        "item": {
          "id": "8e401656-f751-4087-9f14-04420e403d42",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "953219c7-bee3-497b-bceb-55889a517686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06eec28-ada5-446f-a88e-a7f271ccb80e",
        "cursor": {
          "ref": "b2e38002-e51b-4b1a-bb0a-b4fe591e2d05",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ad61d10b-1c9f-48c7-863f-327e26b96f56"
        },
        "item": {
          "id": "d06eec28-ada5-446f-a88e-a7f271ccb80e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "104802f0-8045-4e52-bf42-8004a2b92e18",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "60953afb-b131-4cd5-b07c-f37949cabf87",
        "cursor": {
          "ref": "fbf9f84f-2675-465a-8e5e-a12240c3abe8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "683af5a7-bb04-4735-9f0e-759bf4ac03dc"
        },
        "item": {
          "id": "60953afb-b131-4cd5-b07c-f37949cabf87",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "64beffb3-eba1-402a-9191-37f46103ba7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1946dce6-b900-43e9-9cd1-f7daf7cee117",
        "cursor": {
          "ref": "17c66c55-184d-4cc9-8820-6b9934d778c1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4eb32d75-44da-443d-8a55-c46ad554194d"
        },
        "item": {
          "id": "1946dce6-b900-43e9-9cd1-f7daf7cee117",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e9632937-1897-4375-8ad2-356d09b829da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cc46a2-d04f-42ea-a483-3d0ce9c1e2c6",
        "cursor": {
          "ref": "4007f600-323a-4f53-ab32-4fd03d4d95a3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e94801e2-ca86-4f9f-bd95-bb0445afb7e4"
        },
        "item": {
          "id": "c5cc46a2-d04f-42ea-a483-3d0ce9c1e2c6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e9fdb67b-8095-45b2-9c79-af00ee4cb79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ee748-1b2f-40b0-b906-0afbf51dbcbb",
        "cursor": {
          "ref": "456f830e-ec1e-457f-99a0-af2a36f8b596",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dd354252-f527-4b84-8bf6-30308ef5b156"
        },
        "item": {
          "id": "319ee748-1b2f-40b0-b906-0afbf51dbcbb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a24c0d5f-6642-42b3-b99b-c01c2dc3f49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c27a9fe-ae0e-477e-a6a0-165a2210b016",
        "cursor": {
          "ref": "ef4431f0-c52f-455a-9e30-3efab3bab293",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "718d9418-c951-46fd-9a68-5e127f74ce32"
        },
        "item": {
          "id": "8c27a9fe-ae0e-477e-a6a0-165a2210b016",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "69d517d1-a999-4c4e-9435-3025a64acc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a905cf-a8fb-42d4-9831-9d8a2829c310",
        "cursor": {
          "ref": "41f3260c-526d-4878-a1f3-4741a176f2b1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "522eeaeb-0d64-4751-82f6-a3e4dc7ee032"
        },
        "item": {
          "id": "c5a905cf-a8fb-42d4-9831-9d8a2829c310",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1171b7b-9e8e-41a8-9ec2-ab7b30b8a99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c239bdf3-f8d0-43ca-a467-e3a9463af931",
        "cursor": {
          "ref": "8443440f-8046-4791-9a55-7aa41523efc1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4e229657-ab00-4cc4-9692-56b89b239682"
        },
        "item": {
          "id": "c239bdf3-f8d0-43ca-a467-e3a9463af931",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "009ce4d2-165a-4630-8f71-b482fbb3fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9197a6ca-9c0d-4061-8dff-fa626e143434",
        "cursor": {
          "ref": "7c4e5ed2-4ccd-4857-bf77-4bcd3bdc9f1c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69dd5d0b-85d5-4d4a-bfd8-732835b4dfd4"
        },
        "item": {
          "id": "9197a6ca-9c0d-4061-8dff-fa626e143434",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7609ef12-c1b0-46b1-b7e8-9a821f05593a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "594c379b-e5de-4edb-b6d3-b5f68432100c",
        "cursor": {
          "ref": "6217604c-01ef-4e3e-8956-3e0784854f21",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "026c241d-3c78-435e-95f2-5f5ef9aafa4d"
        },
        "item": {
          "id": "594c379b-e5de-4edb-b6d3-b5f68432100c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c44ae04f-be8a-4901-a89d-091c8f225c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d832d7e-c76d-40f5-9a97-24438319d9e5",
        "cursor": {
          "ref": "76f93893-ea9d-444c-9dff-59bdca1e54b9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8819efbe-a776-4c02-b256-4a4d6b641119"
        },
        "item": {
          "id": "4d832d7e-c76d-40f5-9a97-24438319d9e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80103ded-429e-471e-8c9a-48b5d2030467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78836f92-2927-4244-b9fb-bfdb032eb382",
        "cursor": {
          "ref": "52c22e92-032a-4ef8-9926-4a6cb9e225b6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "09f8646a-eac1-44c3-a3a7-e5bad40f306a"
        },
        "item": {
          "id": "78836f92-2927-4244-b9fb-bfdb032eb382",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa4b1a76-bb7f-4235-aa3b-282931bfa280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09719a19-e1f4-4e29-9220-79568898cda8",
        "cursor": {
          "ref": "6d8865a4-07f9-423d-b3c1-230ef29138d9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "65bd68b4-d583-4f81-b392-74ff7dd5afee"
        },
        "item": {
          "id": "09719a19-e1f4-4e29-9220-79568898cda8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5f8ea883-f440-4856-b6de-a4946a34f9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f9d8eb-e677-4ab8-b917-a0229d1afaa6",
        "cursor": {
          "ref": "0f8d3fcc-0620-442b-897b-54c603c58f75",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a5627288-9a08-4179-9dd1-525b19922c24"
        },
        "item": {
          "id": "79f9d8eb-e677-4ab8-b917-a0229d1afaa6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b05b83a2-4ac8-4363-85d7-bc0d0f7c160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3102c226-e70e-4830-96b9-c465acc773dc",
        "cursor": {
          "ref": "f5d1e6ca-cc04-4faf-9e5b-b9cd01b113f8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "070237f6-a9ca-407c-8387-71449c2e510a"
        },
        "item": {
          "id": "3102c226-e70e-4830-96b9-c465acc773dc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b3cdcc56-74ba-44eb-8655-443093c6ea91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d6c558-42f7-4f3b-b7c6-64279103e4bd",
        "cursor": {
          "ref": "d3c73784-7fbd-4497-aed3-738c725bad72",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "804d4076-cd78-4701-8da5-bcb8b339ae4c"
        },
        "item": {
          "id": "28d6c558-42f7-4f3b-b7c6-64279103e4bd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6e78d5d1-92f6-417d-b5c4-bd172e709564",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6db166a7-fb4e-42c2-9852-40c8eeaaf6e6",
        "cursor": {
          "ref": "958e328f-83c3-4ac6-8b98-3fb0b38fb205",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "482d419c-e996-47f2-b126-a2bf73cce291"
        },
        "item": {
          "id": "6db166a7-fb4e-42c2-9852-40c8eeaaf6e6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4f82740a-daba-4e19-b125-81f4d0feb320",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "7077ba40-5dbb-4cc8-b29b-d42ef02f4084",
        "cursor": {
          "ref": "aae67fb3-cb8f-4533-9be2-399b3bab4402",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "35daaf09-4f07-48ae-b180-a72b4425b87e"
        },
        "item": {
          "id": "7077ba40-5dbb-4cc8-b29b-d42ef02f4084",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f0b34a7a-4ada-48ea-9052-16d1c2fe088d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "89d95e20-8b21-46b7-af4e-9bcfe2b19f16",
        "cursor": {
          "ref": "d16a6aa9-2f5c-4212-bd16-24d8cffee060",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0f9fba90-873c-4cba-8d67-78cd4c02ca63"
        },
        "item": {
          "id": "89d95e20-8b21-46b7-af4e-9bcfe2b19f16",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "afc55bc8-e4d5-4280-9ed4-593824f0a9bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a1535514-49b3-4485-9524-95fec7cccbbc",
        "cursor": {
          "ref": "c9521930-e2c9-4fd6-b5b8-9b7dd4055020",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "40aa64bc-daf9-4700-a7f8-99e6e8499a20"
        },
        "item": {
          "id": "a1535514-49b3-4485-9524-95fec7cccbbc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "da2621ce-4c3d-4cca-921b-6f5fb87ed799",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ee5cd54d-b59d-4343-83d8-8df80d9f8636",
        "cursor": {
          "ref": "fae2347e-19ce-434c-b6f6-4d1e7ee5ed24",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "64ee51a4-4d7e-4001-ba15-92e45f62309a"
        },
        "item": {
          "id": "ee5cd54d-b59d-4343-83d8-8df80d9f8636",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b74f18ec-b7a9-4ed8-89e4-5eb01e443b50",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5dfcdd19-93d2-487d-96a5-51981f792214",
        "cursor": {
          "ref": "e40d1dee-5dbd-4d04-82ce-eccb89cfd477",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cb671316-cab3-4fff-826a-b3dc5a5d82b3"
        },
        "item": {
          "id": "5dfcdd19-93d2-487d-96a5-51981f792214",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03b5a208-0122-425a-8008-df54c302e613",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cd2b02-c97d-49a5-a18a-919072d2e679",
        "cursor": {
          "ref": "3a50c625-cdcb-4936-8769-50e631d0f1c9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "01e96c0f-933e-43c3-bf97-b43dff7ede24"
        },
        "item": {
          "id": "19cd2b02-c97d-49a5-a18a-919072d2e679",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b1230837-54de-4905-a962-54abd8ac7876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093cb5f-b9cf-41b0-ad58-4daa8c45b74e",
        "cursor": {
          "ref": "d2d5e730-7a4a-4fd3-8aeb-51820f1e0c9b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7441d5a4-df32-4734-8aa4-b605e681c62f"
        },
        "item": {
          "id": "1093cb5f-b9cf-41b0-ad58-4daa8c45b74e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9a3b3e22-f023-4b8c-8a97-8747afc81410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418f7e7-0f28-43d8-a132-4a7c4aa25bd5",
        "cursor": {
          "ref": "ae5232fc-6f89-4b7f-9b76-dbfea247f7c8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d7f6fc35-fd93-4831-8a21-bd84198ffa21"
        },
        "item": {
          "id": "d418f7e7-0f28-43d8-a132-4a7c4aa25bd5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14954efb-5420-4b8d-9341-c622e687985f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec03a7b4-ab53-4257-b11a-db9b9819ac97",
        "cursor": {
          "ref": "7fd5dbd2-a3b4-4eb0-bb60-92944185d5a8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "47ed6223-d645-4654-9b88-fbc09e087173"
        },
        "item": {
          "id": "ec03a7b4-ab53-4257-b11a-db9b9819ac97",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0de6b18e-59ce-4880-b971-6898b8afd7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3add3720-9cfc-4bc9-a240-f2ef9ffa3250",
        "cursor": {
          "ref": "617ec499-bbd9-4547-aac2-2db328bca1c7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ca1d6f49-ffc7-40a3-a13a-5147484ba739"
        },
        "item": {
          "id": "3add3720-9cfc-4bc9-a240-f2ef9ffa3250",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6cc3ecd0-107b-462a-ba97-77bcffac791c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abb5e61-58cc-4ff8-9216-5196949f6a29",
        "cursor": {
          "ref": "d9412e0d-72b7-4bb4-b90d-d8f41befd0e0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eff7a48a-523a-49d6-afff-58e7df225a72"
        },
        "item": {
          "id": "0abb5e61-58cc-4ff8-9216-5196949f6a29",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "64107d78-8b41-4588-b338-6aa3e2bd4059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec21a6-b30a-4b5a-85ed-6d14496442ca",
        "cursor": {
          "ref": "1704cfe4-a04b-405e-a5c6-7830812bef39",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "99b16f1d-426c-46b6-bd62-073ef6e3d27c"
        },
        "item": {
          "id": "bcec21a6-b30a-4b5a-85ed-6d14496442ca",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8fa2c551-78c9-41de-9912-d06ed7bd7939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e874c859-cdfb-4f87-aff7-889fc9608f81",
        "cursor": {
          "ref": "9c6312d2-9f66-4b04-a649-a15d4e020530",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4159cd7a-7301-48da-8da9-e67d108ac28a"
        },
        "item": {
          "id": "e874c859-cdfb-4f87-aff7-889fc9608f81",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e6a0eff0-0548-44a4-929e-5d280291206a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50a4975-4313-4ae3-903c-c07ef6278509",
        "cursor": {
          "ref": "9069add3-2500-402d-bbc1-24c16baa22e6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "27660b89-0557-4374-88b3-8a2147ef8bb3"
        },
        "item": {
          "id": "a50a4975-4313-4ae3-903c-c07ef6278509",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "29b70716-b45c-4cf3-984d-999b34d3c25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89700aa1-cb62-44fb-8f3f-da2848e0af14",
        "cursor": {
          "ref": "5f17d4a2-8066-4c1e-b436-810e0d43abb1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fb3c17de-b0ae-49b5-a198-9608a16f1551"
        },
        "item": {
          "id": "89700aa1-cb62-44fb-8f3f-da2848e0af14",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "896a8122-1fe4-4afd-b521-694fc38bd3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb0dfa7-973f-4acc-8903-f2d444a77f98",
        "cursor": {
          "ref": "004b19cf-5ea1-41d4-b6c8-497fbe860776",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c866ebe3-1959-4f2c-9e82-f46676792035"
        },
        "item": {
          "id": "beb0dfa7-973f-4acc-8903-f2d444a77f98",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "028421cc-49c0-47a5-bf9b-0ec3b4fe9704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f477847b-335a-4001-873b-f05154d87d15",
        "cursor": {
          "ref": "3bbac8a5-2a87-4973-a4c2-14411bfba4c5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "812464df-2bed-4d63-9935-1ea0a62c87e1"
        },
        "item": {
          "id": "f477847b-335a-4001-873b-f05154d87d15",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0ecf0c02-22e1-445a-bb68-ff6b08f95d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977041ef-2a25-4189-837d-7366c495598a",
        "cursor": {
          "ref": "8eae9dbd-3cff-4408-999a-e00f01da4888",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9f749bf4-5ce5-47fe-aa1d-a72387f10eab"
        },
        "item": {
          "id": "977041ef-2a25-4189-837d-7366c495598a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7022fcdb-5494-4dea-8d3c-6315bacbbf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9906c5-5ae3-40ef-a45a-cf890f04f8f0",
        "cursor": {
          "ref": "6824ed9b-dbbd-41ab-a272-4840a390f642",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d25e108a-5cd5-4f2e-bd49-fa45511fa13d"
        },
        "item": {
          "id": "af9906c5-5ae3-40ef-a45a-cf890f04f8f0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2fbdb44a-98f3-454b-828a-6358318cd4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329da2e-3613-4fdf-88cb-c1b9cf3d09de",
        "cursor": {
          "ref": "95526b62-a8c2-46e6-b1bb-5b23f8f3f9d0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f2f3edd7-61dd-4614-b400-2a6c65166110"
        },
        "item": {
          "id": "c329da2e-3613-4fdf-88cb-c1b9cf3d09de",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1cad43a4-ebe5-4c1b-9209-d53c29b846c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bc411a-2298-49b8-a94e-5c9771db61ad",
        "cursor": {
          "ref": "e810cff5-4b19-49ec-9088-7dc38aa2e11e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e242b52-6831-4bc3-b97f-f22a8c3a02f5"
        },
        "item": {
          "id": "96bc411a-2298-49b8-a94e-5c9771db61ad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "67f2a18f-7c73-40bc-88eb-0245c8de2168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b288d7-fa01-4edd-864a-c5bfd16ae54b",
        "cursor": {
          "ref": "3db44f8c-8ab3-4a13-9242-52411642ce44",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01774b68-a79b-40b4-9f09-83be011b79c4"
        },
        "item": {
          "id": "b5b288d7-fa01-4edd-864a-c5bfd16ae54b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d014ea1-a2fa-48a7-8659-8c8d2cb47770",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4e113f0f-056a-4880-beb2-486599e0e289",
        "cursor": {
          "ref": "ec1c60ed-05ec-4c0b-824a-148b91dbf7c3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b3a16e05-d355-4b4e-8e38-f82b62434824"
        },
        "item": {
          "id": "4e113f0f-056a-4880-beb2-486599e0e289",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3c85782b-95a1-4086-885d-5d89c9dee230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe45b42e-15ac-4a50-a94d-51dd504dfe7f",
        "cursor": {
          "ref": "33e6dfc1-7b4d-492e-be13-d881cbe54ea9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "73550a15-eb51-4290-9e2b-cdc697d93c98"
        },
        "item": {
          "id": "fe45b42e-15ac-4a50-a94d-51dd504dfe7f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "06cb8882-1109-4653-a2ed-278fa2426db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e572c8a3-aa5f-4aac-80f1-f009f0df0599",
        "cursor": {
          "ref": "18778f01-cd61-468f-be53-45da96fc3a9f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "93e2cfed-c754-41b7-8890-47a0aa251e5a"
        },
        "item": {
          "id": "e572c8a3-aa5f-4aac-80f1-f009f0df0599",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6f7aedbf-2096-4957-af58-180583a481af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e33755-06fe-4f38-9877-07fa73241f5c",
        "cursor": {
          "ref": "0f74398f-71a5-4241-8bc4-5f253e40628b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "96efbfb5-a52c-4d23-97e1-ab9e6512a411"
        },
        "item": {
          "id": "e7e33755-06fe-4f38-9877-07fa73241f5c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "886f46ca-fc50-46af-ad7b-aa8e594bb875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73a69ba-654e-401b-8d4c-67f2b9043c76",
        "cursor": {
          "ref": "4a5cd924-da44-4fa5-9ee7-ca6c83971782",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "497d91c1-6df6-4414-9bfb-553c78ac72bc"
        },
        "item": {
          "id": "c73a69ba-654e-401b-8d4c-67f2b9043c76",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "44d0a69a-6c21-4622-9ff6-2e4d3e49e9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75042a1-ee58-46a9-a805-41c5f3497762",
        "cursor": {
          "ref": "4175185e-a942-4249-8f3d-a727bddbdd0b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "df2765b7-9583-42fa-aa26-3603f736507b"
        },
        "item": {
          "id": "b75042a1-ee58-46a9-a805-41c5f3497762",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "58f99ab8-8ae8-4d41-9fda-885d39e12fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5476f953-6f49-41c7-87ac-bc891f4abe99",
        "cursor": {
          "ref": "9f8fd566-d68e-43d7-bb10-bbf6a1325de7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f67f0152-374a-40d2-ba72-1a0d29ac7a82"
        },
        "item": {
          "id": "5476f953-6f49-41c7-87ac-bc891f4abe99",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8395d334-4e28-403c-88d9-8fcbfb410fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34d09bc-58bf-4290-a15d-b7977d26dd97",
        "cursor": {
          "ref": "e5efa925-336c-46ba-8dac-7f89f56185be",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "17a04dbc-fa1c-4da7-9572-35b70b7a8efd"
        },
        "item": {
          "id": "f34d09bc-58bf-4290-a15d-b7977d26dd97",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f2956f9a-fb78-4535-86f2-06f815a4e075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920dc3d8-f7bd-4ab7-b4cc-0d717a337d5f",
        "cursor": {
          "ref": "08da7605-d3d4-4d8e-af3a-4e7ed8026b9b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e975b4cf-18bf-4a3f-aace-ff49e9d49ac3"
        },
        "item": {
          "id": "920dc3d8-f7bd-4ab7-b4cc-0d717a337d5f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6098e62d-343c-47a0-b9ff-d4eeb36cd4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca2d0f5-4db8-40d2-b228-ad96c745a7c8",
        "cursor": {
          "ref": "b4b83be9-ab5b-43ca-9ec2-e1d4572607d3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "53e02464-6f04-4dbd-a828-10ce2c836abc"
        },
        "item": {
          "id": "0ca2d0f5-4db8-40d2-b228-ad96c745a7c8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3ab9fb5f-9185-48eb-88e0-226446f8efae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428cb9ec-4a7c-48e2-b2b1-d6a46a3335e8",
        "cursor": {
          "ref": "b83b7aab-5f0f-451f-8e8a-0c025b2f92db",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d74c81b3-a514-4f61-bd63-30523ceafc6f"
        },
        "item": {
          "id": "428cb9ec-4a7c-48e2-b2b1-d6a46a3335e8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "483b32cc-8c2d-4774-9ee6-6ae414b2e346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a86b82-7223-4d0b-bc96-bb6badf3579c",
        "cursor": {
          "ref": "d107610a-fe08-48dc-8a43-365ef432a950",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "98da9eee-d8ab-42ac-8434-4f78bcbe764b"
        },
        "item": {
          "id": "d4a86b82-7223-4d0b-bc96-bb6badf3579c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d636ce63-da96-4b47-a15b-b0e3a9b8cd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e43fc3-ec1f-42ea-bb55-5f60a29e8084",
        "cursor": {
          "ref": "723ef24d-19ef-40b7-af4f-1f74c189e052",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90de3ce6-a0e6-401d-8253-d173decb64f3"
        },
        "item": {
          "id": "30e43fc3-ec1f-42ea-bb55-5f60a29e8084",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7ba2e74c-5320-4b03-ae7d-c89338576774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a21888b-4339-4a5d-b349-5b2d7693343c",
        "cursor": {
          "ref": "c54c04b5-b846-4f8e-a369-735c5ab06ccd",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c9989344-8379-4c6e-aefc-0a6bb6d609e3"
        },
        "item": {
          "id": "1a21888b-4339-4a5d-b349-5b2d7693343c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "05efa6c9-edfe-4be1-97fd-3daa53a1a2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfacb3aa-d514-4735-9d6e-17e92a440c7a",
        "cursor": {
          "ref": "80305fab-8bec-4338-9553-a3f9b16658ff",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4346339c-7860-4835-94de-ab2e3c1f4d89"
        },
        "item": {
          "id": "dfacb3aa-d514-4735-9d6e-17e92a440c7a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "087640bd-f207-4f47-a429-6373d6fbf7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b8c07a-b73e-4bf9-9dba-a29d9622148f",
        "cursor": {
          "ref": "f4dac853-49d6-4f5e-a74f-5ace998211cf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6e6f8dcc-8891-49d6-a3cc-4a6484f22a96"
        },
        "item": {
          "id": "42b8c07a-b73e-4bf9-9dba-a29d9622148f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7aecb4bf-6f20-420c-bd06-90e78b4b8fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7e5007-2683-43bd-b4c6-8783669751ac",
        "cursor": {
          "ref": "9e50016b-c724-4f8f-bec4-281513ce48b7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "95d5d955-ce89-4f2b-af63-0107924c8404"
        },
        "item": {
          "id": "fe7e5007-2683-43bd-b4c6-8783669751ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0fd2777c-95fb-41e9-ad59-3658df362837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3e689d-38a8-4d9b-8c44-3b5f75497175",
        "cursor": {
          "ref": "e1928397-819d-415f-81bb-074efda9ff52",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5625d9d4-0ae1-4c35-9dc6-73a3383c596c"
        },
        "item": {
          "id": "9f3e689d-38a8-4d9b-8c44-3b5f75497175",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5fc2c70f-8abd-4446-96ba-0b36d82c61e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1383cbc-50cc-4b10-93b2-99592b8b52f1",
        "cursor": {
          "ref": "8e0aa71a-8a9f-4e75-af9a-66365c7b802f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "73af0817-59ad-4dac-9891-dab945abf929"
        },
        "item": {
          "id": "c1383cbc-50cc-4b10-93b2-99592b8b52f1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "222cbf0b-e502-4974-b3c7-7cb2eea0393d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b29101-cc75-4e39-8d64-eeaffe335870",
        "cursor": {
          "ref": "27ac9bd4-3d49-4187-80e3-5caf1aa33fdb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e5fc452b-ddd8-4711-ac0b-b11c989a6ff8"
        },
        "item": {
          "id": "46b29101-cc75-4e39-8d64-eeaffe335870",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15b05aba-5a04-4424-ab4d-818fdd2a2cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc65c20-90e9-41f2-b57d-7700113ad9af",
        "cursor": {
          "ref": "40f55988-a6e9-4ee5-9d43-088e77540aa8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8afd6805-ccbb-4f3d-95f5-6e8ea0d0d9b4"
        },
        "item": {
          "id": "7dc65c20-90e9-41f2-b57d-7700113ad9af",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "485486d0-5e38-4935-8c54-432e68c1d935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1ee9f2-633a-4ce7-ab00-dd228ef7ed8b",
        "cursor": {
          "ref": "771389a6-e4f6-453d-b3b7-4d2080f9f6b1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "76a4632a-0d91-4c13-addb-5bf1e7b10973"
        },
        "item": {
          "id": "cc1ee9f2-633a-4ce7-ab00-dd228ef7ed8b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7ca780e8-6c37-4e36-99a8-a012017ec0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eb265b-2962-4236-9bc4-3384ddbe84b8",
        "cursor": {
          "ref": "5c43e909-c701-4e5d-8153-12108e0b5773",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "23ce13e0-fdc7-42aa-b666-38fb825f8d52"
        },
        "item": {
          "id": "a6eb265b-2962-4236-9bc4-3384ddbe84b8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c6b14d3-7731-4a2d-ab7b-086ebcb88d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d736b803-9dfc-4ba8-a398-d8c671cca3e6",
        "cursor": {
          "ref": "4419103b-e0ce-4e6b-80fd-a05fb20a2eaf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "80b77c83-ccf0-4566-9df9-6552ac8da5f0"
        },
        "item": {
          "id": "d736b803-9dfc-4ba8-a398-d8c671cca3e6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "baf7a688-7b48-4fb5-801d-097d2c5477bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6847f1f7-f9d1-4b75-af56-ae09ab4b6e50",
        "cursor": {
          "ref": "e4e6cf4d-d16a-4f2e-89a4-78f1f0d0f8e8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f9367f75-8210-4801-8719-227e699d283b"
        },
        "item": {
          "id": "6847f1f7-f9d1-4b75-af56-ae09ab4b6e50",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e09956ab-51f1-412f-bee2-4763ab1fe7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caeea54-08c2-4d20-b29b-bf8f403a5337",
        "cursor": {
          "ref": "a08095d7-3a27-4da0-bf95-ee50e857bf79",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2efb50c8-7b01-40fe-8f8e-338386000a1d"
        },
        "item": {
          "id": "8caeea54-08c2-4d20-b29b-bf8f403a5337",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e87e08d7-fe34-4ccc-a896-cfbd45d54af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef8bb92-cd0d-4345-a393-2efdd841ca1a",
        "cursor": {
          "ref": "0d5d53ab-8568-4a77-b979-207d170ea351",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0b3d4bf5-42c7-4017-9863-6e087698437c"
        },
        "item": {
          "id": "cef8bb92-cd0d-4345-a393-2efdd841ca1a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d3c60731-a55d-4d56-a6c4-d7fc71187c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbcde8f-f325-4264-85b9-9210289b1d0a",
        "cursor": {
          "ref": "0370c6f1-cc71-444f-836b-482a3cec6454",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d14ea116-d395-45f2-8b28-a1dcd37bf2c9"
        },
        "item": {
          "id": "bfbcde8f-f325-4264-85b9-9210289b1d0a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e3bfb04a-cdb8-4cc6-9491-0c6ecf126e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b3a8e8-7c52-4447-ba59-975d3238970c",
        "cursor": {
          "ref": "ba773a4d-fe8a-4737-87c1-f65458cb0320",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f7558cbb-18a0-4374-aed1-e0da462485ce"
        },
        "item": {
          "id": "90b3a8e8-7c52-4447-ba59-975d3238970c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e189b3be-b807-484d-a063-c3b9d56107bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2589b7c-502b-4f6d-9cdb-7fe06fb83378",
        "cursor": {
          "ref": "e0785f10-d734-4314-af0f-280bfd26a69a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "110a7909-c582-41fa-b664-899ea0c2b8c3"
        },
        "item": {
          "id": "b2589b7c-502b-4f6d-9cdb-7fe06fb83378",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7a9df078-9aa3-4fe5-aa34-879be93c4e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103f7ed6-0f77-4e72-9d67-22336edbc643",
        "cursor": {
          "ref": "eca3d038-a9f3-4a31-99be-2687ce1901f4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a55fb6b0-c675-49be-8577-646897b5c1c4"
        },
        "item": {
          "id": "103f7ed6-0f77-4e72-9d67-22336edbc643",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "871f9c94-f516-4778-a3a4-8fbcb186bbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8797184-1960-4d7c-97a6-cb8ed42bca50",
        "cursor": {
          "ref": "5e8f4f0e-9c39-4a10-a696-d2eb243115c5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e4b58407-e821-4086-a4d3-44562b83e1f2"
        },
        "item": {
          "id": "b8797184-1960-4d7c-97a6-cb8ed42bca50",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5593a496-1289-4f6c-aa4d-4b12e030631b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96ad2d6-fdbf-4a2f-8c40-d010ff1cadde",
        "cursor": {
          "ref": "6fe8c2df-70d8-4000-aa18-57e3151f20e1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "de71aeea-680d-4810-9c5d-dcc7941ef3cc"
        },
        "item": {
          "id": "b96ad2d6-fdbf-4a2f-8c40-d010ff1cadde",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8d7ade5e-4061-44fb-957f-409b5b7d4c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305d6905-d46b-41d2-9742-896a82620909",
        "cursor": {
          "ref": "5987954e-be8e-47f0-9e1f-9da0a4df01b3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8d788387-2177-4992-be3e-d3623590f8d9"
        },
        "item": {
          "id": "305d6905-d46b-41d2-9742-896a82620909",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9527a304-fc6e-4d87-b106-6218ca5ef837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c20629-d5d9-416a-aae6-4f706a40b99c",
        "cursor": {
          "ref": "b0383ab1-c1b7-49dc-9bbf-83b306f65241",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0b041a9a-0898-4c11-a979-bd4de49e94eb"
        },
        "item": {
          "id": "e0c20629-d5d9-416a-aae6-4f706a40b99c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b741d09e-ce95-4006-8922-98ced5ac020b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0a5578-dc71-4c55-8e12-badf1f80baff",
        "cursor": {
          "ref": "7bfb58d7-c07a-4415-b522-ddf9b5292dab",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ea0e9a61-12dc-4824-ad35-938a0b8b8e53"
        },
        "item": {
          "id": "8c0a5578-dc71-4c55-8e12-badf1f80baff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "997543af-3ad9-4f24-bbae-8a82caca27d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b9361d-7b33-4d64-843e-00df0a8010f3",
        "cursor": {
          "ref": "50134f0f-9cfa-496c-b3eb-136dcae5c92a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a6c58ba3-2275-4496-971f-7230391452b3"
        },
        "item": {
          "id": "d5b9361d-7b33-4d64-843e-00df0a8010f3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1f80f3d5-bd5e-4eed-9f61-94df6cb828b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a4bbc-d6bb-413b-a5df-3dcbefb6a92b",
        "cursor": {
          "ref": "4326587f-5845-445a-9e89-b86e65f88f7d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4798e2f7-1b6a-4ec1-99d5-ecd2993463b9"
        },
        "item": {
          "id": "711a4bbc-d6bb-413b-a5df-3dcbefb6a92b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42cc15d3-e6c5-449b-b3d1-f8f8748b9da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e23483a-60e1-4b00-9414-7453e3560e8a",
        "cursor": {
          "ref": "08d00780-da9e-4ffc-985f-3942711d3c03",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a33a6a3d-dbf0-4fa8-ac33-cb71a302b665"
        },
        "item": {
          "id": "0e23483a-60e1-4b00-9414-7453e3560e8a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b51417d2-5540-45e0-bc85-762fd65975df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199e14e7-c88a-4837-8272-57d68a5e820f",
        "cursor": {
          "ref": "1b5f8950-67f1-4c42-8320-02841a720231",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "30470e0b-1dd7-4165-b33b-9619e94e8245"
        },
        "item": {
          "id": "199e14e7-c88a-4837-8272-57d68a5e820f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8f547696-ae70-4254-b371-a7fb9fc1f412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668aedd8-3d04-43f9-8baa-c471d4f79d9a",
        "cursor": {
          "ref": "687ba62a-6d03-4290-b726-0995e952f57e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6af22109-9823-4d87-b5db-f470401fd776"
        },
        "item": {
          "id": "668aedd8-3d04-43f9-8baa-c471d4f79d9a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "044f0c8b-aa81-46c4-837a-932330299805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e236ee-4714-41ad-bdfd-106822e51b7d",
        "cursor": {
          "ref": "15c37b35-0b6f-45a9-8765-6a1c8cb9c342",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "047cbd71-ba67-45d3-8bb0-d368be871a77"
        },
        "item": {
          "id": "f9e236ee-4714-41ad-bdfd-106822e51b7d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a68c2bfe-16cc-403c-9c40-775d5c78fe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6352c3d9-5b5e-4d91-a2c3-ab07216246d3",
        "cursor": {
          "ref": "2936974b-8134-4ea8-9ad0-c73be6c2e6fd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "17020648-b623-4a42-b51e-372f61c05a99"
        },
        "item": {
          "id": "6352c3d9-5b5e-4d91-a2c3-ab07216246d3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc117c1c-4666-4887-a96f-b7c3c88594d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6505843-48c0-4637-84e4-64287592ed60",
        "cursor": {
          "ref": "165656ca-3e43-47f1-a86a-1ec9cf2d74ca",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3b7eb9d2-8669-46e7-ad2e-268e863fe15d"
        },
        "item": {
          "id": "c6505843-48c0-4637-84e4-64287592ed60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "845cc256-123a-4d52-b0b7-e21281e50eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85733ba-ca8a-4f95-a21a-263d0296ab93",
        "cursor": {
          "ref": "df11888d-2ff7-4af5-8287-60722f256858",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a2de1888-2cc0-40a1-aa97-6cee3ba2c21f"
        },
        "item": {
          "id": "f85733ba-ca8a-4f95-a21a-263d0296ab93",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "63ead59e-5c35-4ce9-ac5d-db92d62f549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434c16b2-2726-49a7-ac22-092f9c824603",
        "cursor": {
          "ref": "42847072-6e97-4ce0-a999-209b226dac94",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "514555f4-54b0-448f-96c1-9b1b4a76e8bd"
        },
        "item": {
          "id": "434c16b2-2726-49a7-ac22-092f9c824603",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2a8b2a41-71b9-45cb-86d5-99e130b8f119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6d66d3-efcc-4426-a747-38a00f6a0947",
        "cursor": {
          "ref": "07e99f53-2206-4b11-aada-1f4649ea0a39",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "679e1d73-3b8d-47ef-8f5d-060daf02c0c6"
        },
        "item": {
          "id": "ce6d66d3-efcc-4426-a747-38a00f6a0947",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eeb0a8b5-b047-4e83-8970-4f7ed14bfbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065209e-07aa-463e-9475-600566c3fbf1",
        "cursor": {
          "ref": "ef4f239f-9b53-426d-8868-7e71a38809e2",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "41150033-1b69-4f31-8c44-3436ff9858bc"
        },
        "item": {
          "id": "2065209e-07aa-463e-9475-600566c3fbf1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b9e6e8fe-46dc-4379-a305-653e77b64a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425deb3c-b79e-41f5-a2d0-6a9026cea284",
        "cursor": {
          "ref": "314f38a4-0a85-42b5-85e5-9e5ac1c49ca8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "23fa3e9c-4965-4498-9d35-212dc8fa1f7d"
        },
        "item": {
          "id": "425deb3c-b79e-41f5-a2d0-6a9026cea284",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5cc6dd88-610d-441a-9c37-3028b0d9ee99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d63078c-366d-42d4-897a-6b754bb87dc0",
        "cursor": {
          "ref": "16db0bf0-e863-492f-8a14-d1aaf978aa64",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1bd990c0-e958-45bf-a99f-bc7b799cb9c3"
        },
        "item": {
          "id": "1d63078c-366d-42d4-897a-6b754bb87dc0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "54ecd20c-3adf-46af-b3af-2f3838a095d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2125d140-1dd5-4dc0-8914-2f29738d1e1e",
        "cursor": {
          "ref": "53d988dd-a0f4-4798-b196-d4805bf91a84",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "59cec261-40cf-4b04-a40f-d764aaf97cad"
        },
        "item": {
          "id": "2125d140-1dd5-4dc0-8914-2f29738d1e1e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3dcdb1e0-b750-4aee-a856-6dad3fb32f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc632b9e-f12b-49ec-9825-f5a13f9402a2",
        "cursor": {
          "ref": "bee4e3aa-7c03-4e0f-8df6-c859caae64e8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b028eb28-fd4b-45e2-a48e-b409a654fb14"
        },
        "item": {
          "id": "bc632b9e-f12b-49ec-9825-f5a13f9402a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6746fc34-6b99-40d1-94c4-334412e3d654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fb65f6-c7e5-4f54-b11b-0e4ab9a90e24",
        "cursor": {
          "ref": "bf785c4d-c6ca-47bc-a612-d77b61228f0c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ea8aebb2-4947-44af-b75f-00743892e166"
        },
        "item": {
          "id": "b9fb65f6-c7e5-4f54-b11b-0e4ab9a90e24",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "74cd3e57-75e0-46d5-bcef-e3bde28f5a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a38ff28-0f2d-4465-8f45-fd95e3979a32",
        "cursor": {
          "ref": "528df996-d8d3-4ff0-90d1-50bc23203ad7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "519d3064-0a6b-4eac-85b5-e513f6cdb407"
        },
        "item": {
          "id": "9a38ff28-0f2d-4465-8f45-fd95e3979a32",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2781b4da-06ac-4cd4-866b-af5810cada0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5556fc9e-2a7a-4663-a898-b1a51b97ece8",
        "cursor": {
          "ref": "ec610ab1-e4fb-4f1e-85b1-d964ce57f47a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e90914e-c122-44ff-862d-915fba1eabcd"
        },
        "item": {
          "id": "5556fc9e-2a7a-4663-a898-b1a51b97ece8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "799b78a9-01d1-40c1-bd39-a1e7e412a220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ace733a-75b4-4005-a13c-cc0ed9a2d689",
        "cursor": {
          "ref": "03b5669f-8e63-4d15-833a-98022d9ed7b1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1860a8f3-38c0-4f7b-a62e-7ffdc3a295f5"
        },
        "item": {
          "id": "2ace733a-75b4-4005-a13c-cc0ed9a2d689",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "40619476-61fc-4135-b3fb-865dc1705ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e27836-2dbd-47d1-92aa-174802f3b2c3",
        "cursor": {
          "ref": "a9ab342a-2a9a-496d-a310-c9afafcf0ead",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f50f9e58-f0cc-48d3-b3f1-7659182c4e75"
        },
        "item": {
          "id": "c2e27836-2dbd-47d1-92aa-174802f3b2c3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d7768faa-1f2c-49f9-97f0-ab6aaa0102d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c79cc0-aa1b-4d2b-8756-9e93ae255dc3",
        "cursor": {
          "ref": "396c90d9-b629-42c6-b1ef-aca6a9356df6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4681a23a-2cc7-4aaa-a21b-f71542d322ce"
        },
        "item": {
          "id": "38c79cc0-aa1b-4d2b-8756-9e93ae255dc3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d3778d43-4f62-4f98-8b46-be420407e367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c447b4d0-3bcb-4713-8cad-672d534852e7",
        "cursor": {
          "ref": "d53cca71-6cb1-4cd1-bf4c-d63537fa946c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e9e6ff2e-ad27-434c-9301-ee9133521806"
        },
        "item": {
          "id": "c447b4d0-3bcb-4713-8cad-672d534852e7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cd8bea49-4c6d-47f4-8856-2e39b6038125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd73544-c1f8-47d0-8f05-45c6f4668e5b",
        "cursor": {
          "ref": "37292379-71de-4a20-b4de-c3c5db49ba83",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "05d5ef28-702c-4f54-9154-f0a6e9712f76"
        },
        "item": {
          "id": "cbd73544-c1f8-47d0-8f05-45c6f4668e5b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "209789b7-995c-41b3-9e11-ff6b36c23fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff92d270-34eb-4ea6-a57a-b0694bd75033",
        "cursor": {
          "ref": "ddcd9719-cad0-4e02-af17-19724658c3fa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "96bad48a-bc94-43e5-b1fb-2107b09adc9c"
        },
        "item": {
          "id": "ff92d270-34eb-4ea6-a57a-b0694bd75033",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e261cbbc-144e-46ea-99ec-bd47998ec1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10257323-ffa8-4c6d-96fc-0785039af2b8",
        "cursor": {
          "ref": "a458c01b-3de4-4f2f-bac4-6b5ca442c321",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ec0bfa7e-9ee1-4c85-92d6-b0cf6fc5d38d"
        },
        "item": {
          "id": "10257323-ffa8-4c6d-96fc-0785039af2b8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c1cc733b-e51b-4cf4-84ee-8ce110ca79a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b091687-956c-4dd4-ba22-00a8852a6537",
        "cursor": {
          "ref": "d0da04cf-8a56-4d94-bb66-a161143a9ac2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2fa2870a-9dbf-4cb2-9826-e0f78ed73cf4"
        },
        "item": {
          "id": "9b091687-956c-4dd4-ba22-00a8852a6537",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3ffe72b5-d24b-4976-b1d9-ffd70fc8b92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704533bb-1339-4253-9590-c49857a280d1",
        "cursor": {
          "ref": "0c455269-4f45-48de-98dc-707fcc1a93c6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d094edcf-32f8-4c54-9246-ccc317b870f8"
        },
        "item": {
          "id": "704533bb-1339-4253-9590-c49857a280d1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a99f1547-1ddb-41e5-9b2a-e2a20d0a63fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77c3a2d-7110-4394-a25b-153f189454f8",
        "cursor": {
          "ref": "6242868f-f299-40c8-93ae-21e959231c00",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "87d1d294-1b98-431d-a0f4-a1a59b017c41"
        },
        "item": {
          "id": "a77c3a2d-7110-4394-a25b-153f189454f8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "76aaf925-3e37-4287-9be8-579c32862b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c05c89-5dfe-4f6a-85e6-cb523cf87c68",
        "cursor": {
          "ref": "346bbcd1-a864-4faa-bb2a-36b9a1c41bd8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f94fc6b1-e3b1-4668-8b7d-a78c19a34ab7"
        },
        "item": {
          "id": "c0c05c89-5dfe-4f6a-85e6-cb523cf87c68",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b580444e-9bae-4599-9f52-1233b1e85cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0ad897-fa17-4996-b2d0-dfd26868ed8a",
        "cursor": {
          "ref": "0e0a9ffe-d239-4df2-a454-da08be40a455",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b6515f09-70b3-4adc-8d36-a776a3b0b14f"
        },
        "item": {
          "id": "3f0ad897-fa17-4996-b2d0-dfd26868ed8a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1a8f711a-ebf7-4c1c-a200-36a1d41612ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d2522d-45d3-46d7-989d-191770429b1b",
        "cursor": {
          "ref": "175d02fd-762a-408a-8732-28a704bb5e32",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dbe26308-f761-4b78-af7e-a83b038dfced"
        },
        "item": {
          "id": "31d2522d-45d3-46d7-989d-191770429b1b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c5d87e2e-b878-4092-b3f9-155df28877db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe95bca-cca7-4612-9e3e-79fbfebb6fa0",
        "cursor": {
          "ref": "c5cf60a1-e1f6-41c9-8b20-468f0ece3851",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "37c97e74-7e61-4948-8366-58534143ab0a"
        },
        "item": {
          "id": "dbe95bca-cca7-4612-9e3e-79fbfebb6fa0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c40ee2a0-cef7-451a-810e-44771b75ae7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9360d5e5-5222-43ef-963d-e99f37e28c5a",
        "cursor": {
          "ref": "4a113043-eb1b-4d18-a4cd-0b2b0c719c31",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b44df2a4-81e0-4c83-b2ba-2be1946647b0"
        },
        "item": {
          "id": "9360d5e5-5222-43ef-963d-e99f37e28c5a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4b15d72d-3a6f-488b-be63-a9a84db3ee12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dc00ff-1242-4878-94c1-1d37e7580aa7",
        "cursor": {
          "ref": "2625c905-c324-4876-b772-cd63fc707d0b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "97e303ce-03b2-4da8-8aba-844e0efd6c99"
        },
        "item": {
          "id": "77dc00ff-1242-4878-94c1-1d37e7580aa7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "11c6da17-d8da-4a82-8190-db8757c7793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fe12c9-7188-4748-b326-927e98841390",
        "cursor": {
          "ref": "e59ac5c9-cc48-4eee-b223-ffaa6e639f8a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6032470d-066f-4c09-be1c-984c9fb03609"
        },
        "item": {
          "id": "d9fe12c9-7188-4748-b326-927e98841390",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1b2b0670-2f88-427a-952d-f2f151859a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b70b5f-87bd-4c1c-8741-668886401e22",
        "cursor": {
          "ref": "777fd450-909a-463c-9ef3-a3f47a9db2b0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "75431202-9ee7-42c3-9885-7e5346715983"
        },
        "item": {
          "id": "77b70b5f-87bd-4c1c-8741-668886401e22",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44694342-4dae-4bde-bc85-7ecfa2c4fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265feff7-8cd2-4c43-902d-9b2a44edca5a",
        "cursor": {
          "ref": "0d0d7b62-eaf0-4c99-a090-9d5e496f2cfc",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6a64f32b-9243-4e81-b88a-6e6601b8dd8c"
        },
        "item": {
          "id": "265feff7-8cd2-4c43-902d-9b2a44edca5a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4b444fc8-da60-41c1-b05e-01cb538a3bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f63e1f-48d1-4856-a29f-7537acf62124",
        "cursor": {
          "ref": "be70cc54-22fd-4f41-a46e-492aa55e3934",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2cf2093a-8902-4266-b831-dbceae89ab66"
        },
        "item": {
          "id": "02f63e1f-48d1-4856-a29f-7537acf62124",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f4de3fb-1803-441d-a9a2-ea0d8d81cf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5ba577-0340-4597-a085-fb343ce6a786",
        "cursor": {
          "ref": "fb03999a-8a1b-42d2-bbe2-0918c2c5ab0c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eeaf7a3e-8c51-4b2d-8102-1b1a308ffb66"
        },
        "item": {
          "id": "9d5ba577-0340-4597-a085-fb343ce6a786",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "95006015-aef4-4aa7-a114-c35e5f220293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46477682-03d7-4214-bfa5-e76cc75e911d",
        "cursor": {
          "ref": "7996be7f-167f-4f73-89da-1a88e901ee2b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "91ceae0f-e23d-4367-be57-971c02c91198"
        },
        "item": {
          "id": "46477682-03d7-4214-bfa5-e76cc75e911d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "73581564-2966-451f-9527-46c293a9fbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60efc25b-3a9b-4850-b87f-9492d5b02e8d",
        "cursor": {
          "ref": "07aefec9-bfd7-4fdd-af5e-468b1477de62",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1e0aca0e-8488-4b58-bca6-ea3196ee4bcd"
        },
        "item": {
          "id": "60efc25b-3a9b-4850-b87f-9492d5b02e8d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3deecca4-584f-4168-9139-70bbf8cb486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c5d60b-9d3c-4e7d-be29-086ec90947db",
        "cursor": {
          "ref": "53118cc9-09ba-4d19-ae18-770cd12af47a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e036beb0-317c-4281-a7cd-88e010bae76e"
        },
        "item": {
          "id": "11c5d60b-9d3c-4e7d-be29-086ec90947db",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "61e2ae58-a9e1-40d8-a6e5-38e07b03921c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeaf90e-c82f-4a42-a34c-2e9970746f43",
        "cursor": {
          "ref": "5569742f-9ce4-4faf-9fdc-79697d260787",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "91ff3808-a387-49a1-90af-b97286ae34dd"
        },
        "item": {
          "id": "cfeaf90e-c82f-4a42-a34c-2e9970746f43",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "21023620-dcff-4127-b383-fb359e26781b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5dff43-3733-4f84-af74-60120af234f5",
        "cursor": {
          "ref": "ed4dc49d-28a8-437b-a921-c2014587cf53",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b67c17b8-de6c-461f-94a7-b1e957eec4cf"
        },
        "item": {
          "id": "6e5dff43-3733-4f84-af74-60120af234f5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d2dc68df-9e37-4b82-bcf5-4188821ce150",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93940771-ab4a-4006-8777-6316c99e7e69",
        "cursor": {
          "ref": "078f6c45-63a5-45ac-8350-3aa2b0d0fad8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "158a7968-74bf-48a4-bad5-7b44740cbf61"
        },
        "item": {
          "id": "93940771-ab4a-4006-8777-6316c99e7e69",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c312162b-84f6-45d8-ad9e-16a2a4171424",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d88673d-11b4-4a94-8a94-cb907c969790",
        "cursor": {
          "ref": "38113bd7-d202-4ed1-b7df-f671a7ef5c10",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "da5bd3cc-b324-416e-9c8d-9283d4cf56fa"
        },
        "item": {
          "id": "7d88673d-11b4-4a94-8a94-cb907c969790",
          "name": "credentials_verify"
        },
        "response": {
          "id": "046230ab-b7ab-4e74-83a7-6c79175e91d7",
          "status": "OK",
          "code": 200,
          "responseTime": 2740,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4364d2-84f4-4854-81be-b940673d2a49",
        "cursor": {
          "ref": "97bf8a56-c66a-4210-beaa-984e3de8133e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0bb63c74-45a1-4e9c-a59d-8b683e0dbaea"
        },
        "item": {
          "id": "7f4364d2-84f4-4854-81be-b940673d2a49",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e4197c9-b127-4fbf-ae46-bc21287229d0",
          "status": "OK",
          "code": 200,
          "responseTime": 3386,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "256310d5-85aa-4bea-b57a-a404f9c6ef66",
        "cursor": {
          "ref": "ea1a00fc-7566-4839-8237-c1da46e00c97",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2f531634-0d33-4b69-a3ce-91c1143e2635"
        },
        "item": {
          "id": "256310d5-85aa-4bea-b57a-a404f9c6ef66",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5268259f-a776-4d6b-baba-4528f348f1d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256310d5-85aa-4bea-b57a-a404f9c6ef66",
        "cursor": {
          "ref": "ea1a00fc-7566-4839-8237-c1da46e00c97",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2f531634-0d33-4b69-a3ce-91c1143e2635"
        },
        "item": {
          "id": "256310d5-85aa-4bea-b57a-a404f9c6ef66",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5268259f-a776-4d6b-baba-4528f348f1d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43222e47-deb5-4979-ae63-7e9fdb1c5547",
        "cursor": {
          "ref": "bc37d40a-09fc-4dd5-aaf7-701fc6efe74f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7e8c44ea-f220-4b4d-aba0-17da01644225"
        },
        "item": {
          "id": "43222e47-deb5-4979-ae63-7e9fdb1c5547",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a1cd9f58-e183-4f4e-b772-199094bf1650",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec01a99c-b5de-42c8-9140-3054fa825c28",
        "cursor": {
          "ref": "0659f561-4580-4273-898e-e0980bf1a4e7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f6e48343-ad89-4833-9f13-6a0faefd1400"
        },
        "item": {
          "id": "ec01a99c-b5de-42c8-9140-3054fa825c28",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "290b1a88-0e4c-48a4-95a3-03405ba1302c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}